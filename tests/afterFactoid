============================= test session starts ==============================
platform darwin -- Python 2.7.8, pytest-2.9.1, py-1.4.31, pluggy-0.3.1
rootdir: /Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests, inifile: 
collected 208 items

test_compute.py EEFF..FFFF.....FF........FF....FFFFFFFFF....FF..FF......FF....FF......FF....FF.............FFF....FFFF..FFFFFFF..........FF....FFFFFFFF......F..............FF...FFFF..FFF......FFFFFFFF..FFFF..............FF..

==================================== ERRORS ====================================
_________________________ ERROR at setup of test_yesno _________________________
file /Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py, line 23
  def test_yesno(param):
        fixture 'param' not found
        available fixtures: tmpdir_factory, pytestconfig, cache, recwarn, monkeypatch, record_xml_property, capfd, capsys, tmpdir
        use 'py.test --fixtures [testpath]' for help on them.

/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py:23
_____________________ ERROR at setup of test_yesno_helper ______________________
file /Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py, line 27
  def test_yesno_helper(yesno_param):
        fixture 'yesno_param' not found
        available fixtures: tmpdir_factory, pytestconfig, cache, recwarn, monkeypatch, record_xml_property, capfd, capsys, tmpdir
        use 'py.test --fixtures [testpath]' for help on them.

/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py:27
=================================== FAILURES ===================================
_________________________ test_factoid[param_factoid0] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd4248>, <src.tfidf.TF_IDF object at 0x112684b50>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684b50>
No. of sentences=10
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  Lincoln 's formal education consisted of about 18 months of schooling .
[u'PERSON', u'O', u'O', u'O', u'O', u'O', u'DURATION', u'DURATION', u'DURATION', u'O', u'O', u'O']
[]
Ref Answer  18 months

How many long was Lincoln's formal education?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = 18 months
Difficulty = medium
Article_Title = Abraham_Lincoln
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a4.txt

NER stats: 0 out of 0
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
_________________________ test_factoid[param_factoid1] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd4320>, <src.tfidf.TF_IDF object at 0x112684b50>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684b50>
No. of sentences=10
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  Lincoln 's formal education consisted of about 18 months of schooling .
[u'PERSON', u'O', u'O', u'O', u'O', u'O', u'DURATION', u'DURATION', u'DURATION', u'O', u'O', u'O']
[]
Ref Answer  18 months.

How many long was Lincoln's formal education?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = 18 months.
Difficulty = medium
Article_Title = Abraham_Lincoln
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a4.txt

NER stats: 0 out of 0
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
_________________________ test_factoid[param_factoid4] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd4b00>, <src.tfidf.TF_IDF object at 0x112684b50>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684b50>
No. of sentences=10
set(['DATE', 'TIME'])
Candidate sentence  Gabor S. Boritt , '' ` And the War Came ' ?
[u'PERSON', u'PERSON', u'PERSON', u'O', u'O', u'O', u'O', u'O', u'MISC', u'MISC', u'O', u'O']
[]
Ref Answer  March 4, 1861

When did Lincoln first serve as President?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = March 4, 1861
Difficulty = medium
Article_Title = Abraham_Lincoln
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a4.txt

NER stats: 2 out of 2
----------------------------- Captured stderr call -----------------------------
INFO:CoreNLP_JavaServer: INPUT: 400 documents, 17353 characters, 3427 tokens, 43.4 char/doc, 8.6 tok/doc RATES: 25.355 doc/sec, 217.2 tok/sec

Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
_________________________ test_factoid[param_factoid5] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd4d40>, <src.tfidf.TF_IDF object at 0x112684b50>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684b50>
No. of sentences=10
set(['DATE', 'TIME'])
Candidate sentence  Gabor S. Boritt , '' ` And the War Came ' ?
[u'PERSON', u'PERSON', u'PERSON', u'O', u'O', u'O', u'O', u'O', u'MISC', u'MISC', u'O', u'O']
[]
Ref Answer  March 4, 1861

When did Lincoln first serve as President?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = March 4, 1861
Difficulty = medium
Article_Title = Abraham_Lincoln
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a4.txt

NER stats: 2 out of 2
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
_________________________ test_factoid[param_factoid6] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd4ef0>, <src.tfidf.TF_IDF object at 0x112684b50>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684b50>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  List of assassinated American politicians .
[u'O', u'O', u'O', u'MISC', u'O', u'O']
[]
Ref Answer  John Wilkes Booth

Who assassinated Lincoln?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = John Wilkes Booth
Difficulty = medium
Article_Title = Abraham_Lincoln
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a4.txt

NER stats: 2 out of 2
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
_________________________ test_factoid[param_factoid7] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd50e0>, <src.tfidf.TF_IDF object at 0x112684b50>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684b50>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  List of assassinated American politicians .
[u'O', u'O', u'O', u'MISC', u'O', u'O']
[]
Ref Answer  John Wilkes Booth

Who assassinated Lincoln?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = John Wilkes Booth
Difficulty = medium
Article_Title = Abraham_Lincoln
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a4.txt

NER stats: 2 out of 2
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid13] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115904e60>, <src.tfidf.TF_IDF object at 0x110780250>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780250>
No. of sentences=10
set(['DATE', 'TIME'])
Candidate sentence  During pairing sperm cells are transferred to the female to fertilise the egg .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  during pairing

When are sperm cells transferred to the female?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = during pairing
Difficulty = medium
Article_Title = beetle
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a8.txt

NER stats: 4 out of 7
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid14] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115be2f38>, <src.tfidf.TF_IDF object at 0x110780250>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780250>
No. of sentences=10
set(['DATE', 'TIME'])
Candidate sentence  During pairing sperm cells are transferred to the female to fertilise the egg .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  During pairing

When are sperm cells transferred to the female?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = During pairing
Difficulty = medium
Article_Title = beetle
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a8.txt

NER stats: 4 out of 7
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid23] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115be65f0>, <src.tfidf.TF_IDF object at 0x114429d50>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429d50>
No. of sentences=10
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  Provinces and territories of Canada .
[u'O', u'O', u'O', u'O', u'LOCATION', u'O']
[]
Ref Answer  A federation now comprising ten provinces and three territories

How many provinces and territories does Canada have?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = A federation now comprising ten provinces and three territories
Difficulty = medium
Article_Title = Canada
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a8.txt

NER stats: 8 out of 15
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid24] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115be62d8>, <src.tfidf.TF_IDF object at 0x114429d50>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429d50>
No. of sentences=10
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  Provinces and territories of Canada .
[u'O', u'O', u'O', u'O', u'LOCATION', u'O']
[]
Ref Answer  Ten provinces and three territories

How many provinces and territories does Canada have?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = Ten provinces and three territories
Difficulty = medium
Article_Title = Canada
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a8.txt

NER stats: 8 out of 15
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid29] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd6170>, <src.tfidf.TF_IDF object at 0x110780f50>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780f50>
No. of sentences=10
set(['DATE', 'TIME'])
Candidate sentence  The Great Sphinx and the Pyramids of Giza , built during the Old Kingdom , are modern national icons that are at the heart of Egypt 's thriving tourism industry .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'LOCATION', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'LOCATION', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  During the Old Kingdom.

When were the Great Sphinx and the Pyramids of Giza built?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = During the Old Kingdom.
Difficulty = medium
Article_Title = Egypt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a6.txt

NER stats: 12 out of 19
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid30] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd6440>, <src.tfidf.TF_IDF object at 0x110780f50>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780f50>
No. of sentences=10
set(['DATE', 'TIME'])
Candidate sentence  The Great Sphinx and the Pyramids of Giza , built during the Old Kingdom , are modern national icons that are at the heart of Egypt 's thriving tourism industry .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'LOCATION', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'LOCATION', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  During the Old Kingdom

When were the Great Sphinx and the Pyramids of Giza built?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = During the Old Kingdom
Difficulty = medium
Article_Title = Egypt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a6.txt

NER stats: 12 out of 19
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid31] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd67e8>, <src.tfidf.TF_IDF object at 0x112684490>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684490>
No. of sentences=9
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  Though this research is still in its infancy , it is helping to solve many mysteries , such as how elephants can find distant potential mates , and how social groups are able to coordinate their movements over extensive range .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  2

How many living species of African Elephants are there?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = 2
Difficulty = medium
Article_Title = elephant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a5.txt

NER stats: 12 out of 19
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid32] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd6830>, <src.tfidf.TF_IDF object at 0x112684490>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684490>
No. of sentences=9
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  Though this research is still in its infancy , it is helping to solve many mysteries , such as how elephants can find distant potential mates , and how social groups are able to coordinate their movements over extensive range .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  The African Elephant genus contains two (or, arguably, three) living species.

How many living species of African Elephants are there?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = The African Elephant genus contains two (or, arguably, three) living species.
Difficulty = medium
Article_Title = elephant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a5.txt

NER stats: 12 out of 19
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid33] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd6998>, <src.tfidf.TF_IDF object at 0x112684490>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684490>
No. of sentences=9
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  An elephant may live as long as 70 years , sometimes longer .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'DURATION', u'DURATION', u'O', u'O', u'O', u'O']
[]
Ref Answer  70 years

How long may elephants live?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = 70 years
Difficulty = medium
Article_Title = elephant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a5.txt

NER stats: 12 out of 19
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid34] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd6878>, <src.tfidf.TF_IDF object at 0x112684490>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684490>
No. of sentences=9
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  An elephant may live as long as 70 years , sometimes longer .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'DURATION', u'DURATION', u'O', u'O', u'O', u'O']
[]
Ref Answer  As long as 70 years, sometimes longer.

How long may elephants live?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = As long as 70 years, sometimes longer.
Difficulty = medium
Article_Title = elephant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a5.txt

NER stats: 12 out of 19
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid35] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd68c0>, <src.tfidf.TF_IDF object at 0x112684490>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684490>
No. of sentences=9
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  Elephants communicate over long distances by producing and receiving low-frequency sound ( infrasound ) , a sub-sonic rumbling , which can travel through the ground farther than sound travels through the air .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  by producing and receiving low frequency sound

How do elephants communicate over long distances?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = by producing and receiving low frequency sound
Difficulty = medium
Article_Title = elephant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a5.txt

NER stats: 12 out of 19
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid36] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd6950>, <src.tfidf.TF_IDF object at 0x112684490>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684490>
No. of sentences=9
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  Elephants communicate over long distances by producing and receiving low-frequency sound ( infrasound ) , a sub-sonic rumbling , which can travel through the ground farther than sound travels through the air .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  By producing and receiving low-frequency sound (infrasound)

How do elephants communicate over long distances?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = By producing and receiving low-frequency sound (infrasound)
Difficulty = medium
Article_Title = elephant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a5.txt

NER stats: 12 out of 19
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid37] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cd6908>, <src.tfidf.TF_IDF object at 0x112684490>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684490>
No. of sentences=9
set(['DATE', 'TIME'])
Candidate sentence  Indian elephants , in contrast , lie down frequently .
[u'MISC', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  when they are sick or wounded

When do African elephants lie down?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = when they are sick or wounded
Difficulty = medium
Article_Title = elephant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a5.txt

NER stats: 12 out of 19
----------------------------- Captured stderr call -----------------------------
INFO:CoreNLP_JavaServer: INPUT: 500 documents, 23683 characters, 4633 tokens, 47.4 char/doc, 9.3 tok/doc RATES: 18.148 doc/sec, 168.2 tok/sec

Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid42] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cdaa70>, <src.tfidf.TF_IDF object at 0x110780b10>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780b10>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  Arguably one of Finland 's most domestically popular rock groups is CMX .
[u'O', u'NUMBER', u'O', u'LOCATION', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  CMX

Who is the most popular rock group in Finland?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = CMX
Difficulty = medium
Article_Title = Finland
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a4.txt

NER stats: 14 out of 23
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid43] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cdabd8>, <src.tfidf.TF_IDF object at 0x110780b10>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780b10>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  Arguably one of Finland 's most domestically popular rock groups is CMX .
[u'O', u'NUMBER', u'O', u'LOCATION', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  CMX

Who is the most popular rock group in Finland?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = CMX
Difficulty = medium
Article_Title = Finland
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a4.txt

NER stats: 14 out of 23
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid46] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cdacb0>, <src.tfidf.TF_IDF object at 0x112684d90>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684d90>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  Vice President of the United States .
[u'O', u'O', u'O', u'O', u'LOCATION', u'LOCATION', u'O']
[]
Ref Answer  Bob Dole

Who did Ford nominate for Vice President?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = Bob Dole
Difficulty = medium
Article_Title = Gerald_Ford
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a10.txt

NER stats: 16 out of 25
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid47] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cdacf8>, <src.tfidf.TF_IDF object at 0x112684d90>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684d90>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  Vice President of the United States .
[u'O', u'O', u'O', u'O', u'LOCATION', u'LOCATION', u'O']
[]
Ref Answer  Nelson Rockefeller

Who did Ford nominate for Vice President?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = Nelson Rockefeller
Difficulty = medium
Article_Title = Gerald_Ford
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a10.txt

NER stats: 16 out of 25
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid54] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cdaef0>, <src.tfidf.TF_IDF object at 0x1126849d0>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x1126849d0>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  Heads of state of Ghana .
[u'O', u'O', u'O', u'O', u'LOCATION', u'O']
[]
Ref Answer  President John Agyekum Kofuor

Who is the head of state of Ghana?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = President John Agyekum Kofuor
Difficulty = medium
Article_Title = Ghana
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a5.txt

NER stats: 22 out of 31
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid55] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cdaf38>, <src.tfidf.TF_IDF object at 0x1126849d0>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x1126849d0>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  Heads of state of Ghana .
[u'O', u'O', u'O', u'O', u'LOCATION', u'O']
[]
Ref Answer  John Agyekum Kufuor

Who is the head of state of Ghana?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = John Agyekum Kufuor
Difficulty = medium
Article_Title = Ghana
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a5.txt

NER stats: 22 out of 31
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid60] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce20e0>, <src.tfidf.TF_IDF object at 0x112684e90>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684e90>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  Alpha wolves scent mark the most often , with males doing so more than females .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  Helping the woldf to effectively navigate over large expanses while concurrently keeping others informed of its whereabouts.

Where do wolves have scent glands?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = Helping the woldf to effectively navigate over large expanses while concurrently keeping others informed of its whereabouts.
Difficulty = medium
Article_Title = Gray_Wolf
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a6.txt

NER stats: 22 out of 35
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid61] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2128>, <src.tfidf.TF_IDF object at 0x112684e90>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684e90>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  Alpha wolves scent mark the most often , with males doing so more than females .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  between a wolf's toes

Where do wolves have scent glands?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = between a wolf's toes
Difficulty = medium
Article_Title = Gray_Wolf
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a6.txt

NER stats: 22 out of 35
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid68] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2320>, <src.tfidf.TF_IDF object at 0x114429350>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429350>
No. of sentences=8
set(['LOCATION'])
Candidate sentence  Grover Cleveland was the second President married in office , and the only President married in the White House itself .
[u'PERSON', u'PERSON', u'O', u'O', u'ORDINAL', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  In the White House

Where was Grover Cleveland married?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = In the White House
Difficulty = medium
Article_Title = Grover_Cleveland
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a6.txt

NER stats: 26 out of 41
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid69] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2368>, <src.tfidf.TF_IDF object at 0x114429350>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429350>
No. of sentences=8
set(['LOCATION'])
Candidate sentence  Grover Cleveland was the second President married in office , and the only President married in the White House itself .
[u'PERSON', u'PERSON', u'O', u'O', u'ORDINAL', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  in the Blue Room in the White House

Where was Grover Cleveland married?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = in the Blue Room in the White House
Difficulty = medium
Article_Title = Grover_Cleveland
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a6.txt

NER stats: 26 out of 41
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid74] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce24d0>, <src.tfidf.TF_IDF object at 0x114429350>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429350>
No. of sentences=10
set(['DATE', 'TIME'])
Candidate sentence  List of leaders who died in office .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  June 24 1908

When did he die?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = June 24 1908
Difficulty = medium
Article_Title = Grover_Cleveland
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a6.txt

NER stats: 26 out of 45
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid75] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2518>, <src.tfidf.TF_IDF object at 0x114429350>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429350>
No. of sentences=10
set(['DATE', 'TIME'])
Candidate sentence  List of leaders who died in office .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  1908 

When did he die?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = 1908 
Difficulty = medium
Article_Title = Grover_Cleveland
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a6.txt

NER stats: 26 out of 45
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid89] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2950>, <src.tfidf.TF_IDF object at 0x112684d10>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684d10>
No. of sentences=9
set(['DATE', 'TIME'])
Candidate sentence  * Monroe Doctrine and related resources at the Library of Congress .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'ORGANIZATION', u'O']
[]
Ref Answer  December 2, 1823

When did James Monroe introduce the Monroe Doctrine?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = December 2, 1823
Difficulty = medium
Article_Title = James_Monroe
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a2.txt

NER stats: 30 out of 56
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid90] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2908>, <src.tfidf.TF_IDF object at 0x112684690>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684690>
No. of sentences=10
set(['DATE', 'TIME'])
Candidate sentence  Depressed when he left office , he did not attend Jefferson 's inauguration .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'PERSON', u'O', u'O', u'O']
[]
Ref Answer  1755.

When did Adams graduate from college?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = 1755.
Difficulty = medium
Article_Title = John_Adams
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a1.txt

NER stats: 30 out of 56
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid91] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2998>, <src.tfidf.TF_IDF object at 0x112684690>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684690>
No. of sentences=10
set(['DATE', 'TIME'])
Candidate sentence  Depressed when he left office , he did not attend Jefferson 's inauguration .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'PERSON', u'O', u'O', u'O']
[]
Ref Answer  1755

When did Adams graduate from college?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = 1755
Difficulty = medium
Article_Title = John_Adams
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a1.txt

NER stats: 30 out of 56
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid96] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2b00>, <src.tfidf.TF_IDF object at 0x112684690>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684690>
No. of sentences=9
set(['LOCATION'])
Candidate sentence  May we not even say that the form of government is best which provides most effectually for a pure selection of these natural aristoi into the offices of government ? ''
[u'DATE', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  United First Parish Church

Where is Adams buried?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = United First Parish Church
Difficulty = medium
Article_Title = John_Adams
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a1.txt

NER stats: 32 out of 60
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid97] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2b48>, <src.tfidf.TF_IDF object at 0x112684690>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684690>
No. of sentences=9
set(['LOCATION'])
Candidate sentence  May we not even say that the form of government is best which provides most effectually for a pure selection of these natural aristoi into the offices of government ? ''
[u'DATE', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  United First Parish Church

Where is Adams buried?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = United First Parish Church
Difficulty = medium
Article_Title = John_Adams
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a1.txt

NER stats: 32 out of 60
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid98] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2b90>, <src.tfidf.TF_IDF object at 0x10ff47390>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x10ff47390>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  Like all marsupials , female kangaroos have a pouch called a marsupium in which joeys complete postnatal development .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  marsupium

Where do joeys complete postnatal development?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = marsupium
Difficulty = medium
Article_Title = kangaroo
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a1.txt

NER stats: 32 out of 60
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid99] _________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2bd8>, <src.tfidf.TF_IDF object at 0x10ff47390>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x10ff47390>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  Like all marsupials , female kangaroos have a pouch called a marsupium in which joeys complete postnatal development .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  A pouch called a marsupium

Where do joeys complete postnatal development?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = A pouch called a marsupium
Difficulty = medium
Article_Title = kangaroo
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a1.txt

NER stats: 32 out of 60
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid102] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2cf8>, <src.tfidf.TF_IDF object at 0x112684250>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684250>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  Leopards often hide their kills in dense vegetation or take them up trees , and are capable of carrying animals up to three times their own weight this way .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'NUMBER', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  in dense vegetation

Where do leopards often hide their kills?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = in dense vegetation
Difficulty = medium
Article_Title = leopard
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a2.txt

NER stats: 34 out of 62
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid103] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2cb0>, <src.tfidf.TF_IDF object at 0x112684250>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684250>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  Leopards often hide their kills in dense vegetation or take them up trees , and are capable of carrying animals up to three times their own weight this way .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'NUMBER', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  in dense vegetation or in trees

Where do leopards often hide their kills?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = in dense vegetation or in trees
Difficulty = medium
Article_Title = leopard
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a2.txt

NER stats: 34 out of 62
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid104] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2d40>, <src.tfidf.TF_IDF object at 0x112684250>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684250>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  The victims ' flesh would be cut from their bodies and distributed to members of the society .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  southern Eurasia and Africa

Where is the leopard distributed?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = southern Eurasia and Africa
Difficulty = medium
Article_Title = leopard
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a2.txt

NER stats: 34 out of 62
----------------------------- Captured stderr call -----------------------------
INFO:CoreNLP_JavaServer: INPUT: 700 documents, 37245 characters, 7192 tokens, 53.2 char/doc, 10.3 tok/doc RATES: 17.428 doc/sec, 179.1 tok/sec

Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid105] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2d88>, <src.tfidf.TF_IDF object at 0x112684250>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684250>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  The victims ' flesh would be cut from their bodies and distributed to members of the society .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  southern Eurasia and Africa, from Korea to South Africa and Spain

Where is the leopard distributed?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = southern Eurasia and Africa, from Korea to South Africa and Spain
Difficulty = medium
Article_Title = leopard
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a2.txt

NER stats: 34 out of 62
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid106] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2dd0>, <src.tfidf.TF_IDF object at 0x112684250>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684250>
No. of sentences=10
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  Note the white spot on the tail used for communicating with cubs while hunting or in long grass .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  60 to 110cm

How long is a leopard's tail?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = 60 to 110cm
Difficulty = medium
Article_Title = leopard
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a2.txt

NER stats: 34 out of 62
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid107] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2e18>, <src.tfidf.TF_IDF object at 0x112684250>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684250>
No. of sentences=10
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  Note the white spot on the tail used for communicating with cubs while hunting or in long grass .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  60-110cm

How long is a leopard's tail?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = 60-110cm
Difficulty = medium
Article_Title = leopard
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a2.txt

NER stats: 34 out of 62
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid108] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ce2e60>, <src.tfidf.TF_IDF object at 0x112684250>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684250>
No. of sentences=10
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  Most did not reach adulthood .
[u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  Males are considerably larger than females and weigh 37 to 90 kg compared to 28 to 60 kg for females. 

How much does a leopard weigh?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = Males are considerably larger than females and weigh 37 to 90 kg compared to 28 to 60 kg for females. 
Difficulty = medium
Article_Title = leopard
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a2.txt

NER stats: 34 out of 62
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid119] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cea1b8>, <src.tfidf.TF_IDF object at 0x112684790>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684790>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  Another important legacy of Fillmore 's administration was the sending of Commodore Matthew C. Perry to open Japan to Western trade , though Perry did not reach Japan until Franklin Pierce had replaced Fillmore as president .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'ORGANIZATION', u'ORGANIZATION', u'ORGANIZATION', u'ORGANIZATION', u'O', u'O', u'LOCATION', u'O', u'MISC', u'O', u'O', u'O', u'PERSON', u'O', u'O', u'O', u'LOCATION', u'O', u'PERSON', u'PERSON', u'O', u'O', u'PERSON', u'O', u'O', u'O']
Japan
Japan
[]
Ref Answer  Japan

Where was Commodore Matthew C. Perry sent to open Japan to Western trade?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = Japan
Difficulty = medium
Article_Title = Millard_Fillmore
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a3.txt

NER stats: 37 out of 70
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid120] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cea200>, <src.tfidf.TF_IDF object at 0x112684790>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x112684790>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  Another important legacy of Fillmore 's administration was the sending of Commodore Matthew C. Perry to open Japan to Western trade , though Perry did not reach Japan until Franklin Pierce had replaced Fillmore as president .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'ORGANIZATION', u'ORGANIZATION', u'ORGANIZATION', u'ORGANIZATION', u'O', u'O', u'LOCATION', u'O', u'MISC', u'O', u'O', u'O', u'PERSON', u'O', u'O', u'O', u'LOCATION', u'O', u'PERSON', u'PERSON', u'O', u'O', u'PERSON', u'O', u'O', u'O']
Japan
Japan
[]
Ref Answer  Commodore Matthew C. Perry send to Japan

Where was Commodore Matthew C. Perry sent to open Japan to Western trade?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = Commodore Matthew C. Perry send to Japan
Difficulty = medium
Article_Title = Millard_Fillmore
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a3.txt

NER stats: 37 out of 70
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid125] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cea368>, <src.tfidf.TF_IDF object at 0x110780f10>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780f10>
No. of sentences=10
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  See for an explanation of how to generate footnotes using the and tags , and the template below .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  13

How many species of otter are there?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = 13
Difficulty = medium
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

NER stats: 39 out of 74
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid126] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cea3b0>, <src.tfidf.TF_IDF object at 0x110780f10>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780f10>
No. of sentences=10
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  See for an explanation of how to generate footnotes using the and tags , and the template below .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  13

How many species of otter are there?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = 13
Difficulty = medium
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

NER stats: 39 out of 74
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid127] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cea3f8>, <src.tfidf.TF_IDF object at 0x110780f10>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780f10>
No. of sentences=10
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  The sea otter lives actually in the sea .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  30 kg (about 65 pounds)

How much do sea otters weigh?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = 30 kg (about 65 pounds)
Difficulty = medium
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

NER stats: 39 out of 74
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid128] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cea440>, <src.tfidf.TF_IDF object at 0x110780f10>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780f10>
No. of sentences=10
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  The sea otter lives actually in the sea .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  30 kg (about 65 pounds)

How much do sea otters weigh?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = 30 kg (about 65 pounds)
Difficulty = medium
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

NER stats: 39 out of 74
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid129] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cea488>, <src.tfidf.TF_IDF object at 0x110780f10>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780f10>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  The sea otter lives actually in the sea .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  Sea otters (Enhydra lutris) live along the Pacific coast of North America. 

Where do sea otters live?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = Sea otters (Enhydra lutris) live along the Pacific coast of North America. 
Difficulty = medium
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

NER stats: 39 out of 74
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid130] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cea4d0>, <src.tfidf.TF_IDF object at 0x110780f10>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780f10>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  The sea otter lives actually in the sea .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  The sea otter lives actually in the sea. 

Where do sea otters live?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = The sea otter lives actually in the sea. 
Difficulty = medium
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

NER stats: 39 out of 74
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid131] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cea518>, <src.tfidf.TF_IDF object at 0x110780f10>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780f10>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  The word `` otter '' derives from the Old English word otr , otor or oter .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'MISC', u'MISC', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  The word "otter" derives from the Old English word otr, otor or oter. 

Where does the word "otter" derive from?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = The word "otter" derives from the Old English word otr, otor or oter. 
Difficulty = medium
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

NER stats: 39 out of 74
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid132] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cea560>, <src.tfidf.TF_IDF object at 0x110780f10>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780f10>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  The word `` otter '' derives from the Old English word otr , otor or oter .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'MISC', u'MISC', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  The word "otter" derives from the Old English word otr, otor or oter. This and cognate words in other Indo-European languages ultimately stem from a root which also gave rise to the English words "water", "wet" and "winter". 

Where does the word "otter" derive from?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = The word "otter" derives from the Old English word otr, otor or oter. This and cognate words in other Indo-European languages ultimately stem from a root which also gave rise to the English words "water", "wet" and "winter". 
Difficulty = medium
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

NER stats: 39 out of 74
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid139] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cea758>, <src.tfidf.TF_IDF object at 0x114429850>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429850>
No. of sentences=10
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  Sometimes excess heavy metals have been observed , as well as ethylene glycol ( antifreeze ) poisoning .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  300-600 kg (660-1320 lb)

How heavy is a male polar bear?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = 300-600 kg (660-1320 lb)
Difficulty = medium
Article_Title = polar_bear
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a4.txt

NER stats: 42 out of 78
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid154] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ceab90>, <src.tfidf.TF_IDF object at 0x114429810>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429810>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  Several hundred indigenous Orang Laut people also lived around the coast , rivers and smaller islands .
[u'O', u'NUMBER', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  Orang Laut people lived around the coast, rivers and smaller islands.

Where did Orang Laut people live?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = Orang Laut people lived around the coast, rivers and smaller islands.
Difficulty = medium
Article_Title = Singapore
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a2.txt

NER stats: 53 out of 92
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid155] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ceabd8>, <src.tfidf.TF_IDF object at 0x114429810>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429810>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  Several hundred indigenous Orang Laut people also lived around the coast , rivers and smaller islands .
[u'O', u'NUMBER', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  Several hundred indigenous Orang Laut people also lived around the coast, rivers and smaller islands.

Where did Orang Laut people live?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = Several hundred indigenous Orang Laut people also lived around the coast, rivers and smaller islands.
Difficulty = medium
Article_Title = Singapore
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a2.txt

NER stats: 53 out of 92
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid159] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ceacf8>, <src.tfidf.TF_IDF object at 0x110051dd0>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110051dd0>
No. of sentences=8
set(['LOCATION'])
Candidate sentence  Bears and later bear cubs became closely associated with Roosevelt in political cartoons thereafter .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  28 East 20th Street in the modern-day Gramercy section of New York City

Where was Theodore Roosevelt born?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = 28 East 20th Street in the modern-day Gramercy section of New York City
Difficulty = medium
Article_Title = Theodore_Roosevelt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a7.txt

NER stats: 56 out of 95
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid160] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cead40>, <src.tfidf.TF_IDF object at 0x110051dd0>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110051dd0>
No. of sentences=8
set(['LOCATION'])
Candidate sentence  Bears and later bear cubs became closely associated with Roosevelt in political cartoons thereafter .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  a four-story brownstone at 28 East 20th Street, in the modern-day Gramercy section of New York City

Where was Theodore Roosevelt born?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = a four-story brownstone at 28 East 20th Street, in the modern-day Gramercy section of New York City
Difficulty = medium
Article_Title = Theodore_Roosevelt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a7.txt

NER stats: 56 out of 95
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid161] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115cead88>, <src.tfidf.TF_IDF object at 0x110051dd0>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110051dd0>
No. of sentences=8
set(['LOCATION'])
Candidate sentence  Do you know that the one word as to which I thought the new spelling was wrong thru was more responsible than anything else for our discomfiture ? ''
[u'O', u'O', u'O', u'O', u'O', u'NUMBER', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  Gramercy section of New York City

Where was Theodore Roosevelt from?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = Gramercy section of New York City
Difficulty = medium
Article_Title = Theodore_Roosevelt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a7.txt

NER stats: 56 out of 95
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid162] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ceadd0>, <src.tfidf.TF_IDF object at 0x110051dd0>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110051dd0>
No. of sentences=8
set(['LOCATION'])
Candidate sentence  Do you know that the one word as to which I thought the new spelling was wrong thru was more responsible than anything else for our discomfiture ? ''
[u'O', u'O', u'O', u'O', u'O', u'NUMBER', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  New York City

Where was Theodore Roosevelt from?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = New York City
Difficulty = medium
Article_Title = Theodore_Roosevelt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a7.txt

NER stats: 56 out of 95
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid165] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ceaea8>, <src.tfidf.TF_IDF object at 0x110051dd0>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110051dd0>
No. of sentences=10
set(['DATE', 'TIME'])
Candidate sentence  Do you know that the one word as to which I thought the new spelling was wrong thru was more responsible than anything else for our discomfiture ? ''
[u'O', u'O', u'O', u'O', u'O', u'NUMBER', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  On January 6, 1919, Roosevelt died in his sleep.

When did Roosevelt die?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = On January 6, 1919, Roosevelt died in his sleep.
Difficulty = medium
Article_Title = Theodore_Roosevelt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a7.txt

NER stats: 58 out of 97
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid166] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ceaef0>, <src.tfidf.TF_IDF object at 0x110051dd0>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110051dd0>
No. of sentences=10
set(['DATE', 'TIME'])
Candidate sentence  Do you know that the one word as to which I thought the new spelling was wrong thru was more responsible than anything else for our discomfiture ? ''
[u'O', u'O', u'O', u'O', u'O', u'NUMBER', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  On January 6, 1919, Roosevelt died in his sleep.

When did Roosevelt die?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'TIME'])
Answer = On January 6, 1919, Roosevelt died in his sleep.
Difficulty = medium
Article_Title = Theodore_Roosevelt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a7.txt

NER stats: 58 out of 97
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid167] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115ceaf38>, <src.tfidf.TF_IDF object at 0x110780090>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780090>
No. of sentences=10
set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Candidate sentence  Often turtles only breed every few years or more .
[u'O', u'O', u'O', u'O', u'SET', u'SET', u'SET', u'O', u'O', u'O']
[]
Ref Answer  Every few years or more

How often do turtles breed?
Validity= True
Question Type = Factoid
Answer Type = set(['DATE', 'MONEY', 'PERCENT', 'NUMBER', 'TIME'])
Answer = Every few years or more
Difficulty = medium
Article_Title = turtle
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a9.txt

NER stats: 58 out of 97
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid174] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d531b8>, <src.tfidf.TF_IDF object at 0x110780090>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780090>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  Sea turtles lay their eggs on dry sandy beaches .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  Holes Dug into the Mud or Sand

Where do sea turtles lay their eggs?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = Holes Dug into the Mud or Sand
Difficulty = medium
Article_Title = turtle
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a9.txt

NER stats: 59 out of 99
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid175] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d53170>, <src.tfidf.TF_IDF object at 0x110780090>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780090>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  Sea turtles lay their eggs on dry sandy beaches .
[u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  holes dug into mud or sand

Where do sea turtles lay their eggs?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = holes dug into mud or sand
Difficulty = medium
Article_Title = turtle
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a9.txt

NER stats: 59 out of 99
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid176] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d53200>, <src.tfidf.TF_IDF object at 0x110780650>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780650>
No. of sentences=9
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  's name ?
[u'O', u'O', u'O']
[]
Ref Answer  Fred Dent

Who was Grant's brother in law?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = Fred Dent
Difficulty = medium
Article_Title = Ulysses_S._Grant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a5.txt

NER stats: 59 out of 99
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid177] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d53248>, <src.tfidf.TF_IDF object at 0x110780650>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780650>
No. of sentences=9
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  's name ?
[u'O', u'O', u'O']
[]
Ref Answer  Fred Dent

Who was Grant's brother in law?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = Fred Dent
Difficulty = medium
Article_Title = Ulysses_S._Grant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a5.txt

NER stats: 59 out of 99
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid178] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d53290>, <src.tfidf.TF_IDF object at 0x110780650>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780650>
No. of sentences=9
set(['LOCATION'])
Candidate sentence  's name ?
[u'O', u'O', u'O']
[]
Ref Answer  Point Pleasant, Ohio

Where was Grant born?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = Point Pleasant, Ohio
Difficulty = medium
Article_Title = Ulysses_S._Grant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a5.txt

NER stats: 59 out of 99
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid179] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d532d8>, <src.tfidf.TF_IDF object at 0x110780650>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780650>
No. of sentences=9
set(['LOCATION'])
Candidate sentence  's name ?
[u'O', u'O', u'O']
[]
Ref Answer  A log cabin in Point Pleasant, Clermont County, Ohio

Where was Grant born?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = A log cabin in Point Pleasant, Clermont County, Ohio
Difficulty = medium
Article_Title = Ulysses_S._Grant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a5.txt

NER stats: 59 out of 99
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid180] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d53320>, <src.tfidf.TF_IDF object at 0x114429410>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429410>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  Montevideo was founded by the Spanish in the early 18th century as a military stronghold .
[u'LOCATION', u'O', u'O', u'O', u'O', u'MISC', u'O', u'DATE', u'DATE', u'DATE', u'DATE', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  The Spanish.

Who founded Montevideo?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = The Spanish.
Difficulty = medium
Article_Title = Uruguay
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a9.txt

NER stats: 59 out of 99
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid181] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d53368>, <src.tfidf.TF_IDF object at 0x114429410>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429410>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  Montevideo was founded by the Spanish in the early 18th century as a military stronghold .
[u'LOCATION', u'O', u'O', u'O', u'O', u'MISC', u'O', u'DATE', u'DATE', u'DATE', u'DATE', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  the Spanish

Who founded Montevideo?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = the Spanish
Difficulty = medium
Article_Title = Uruguay
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a9.txt

NER stats: 59 out of 99
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid184] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d53440>, <src.tfidf.TF_IDF object at 0x114429410>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429410>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  Many of the European immigrants arrived in Uruguay in the late 1800s and have heavily influenced the architecture and culture of Montevideo and other major cities .
[u'O', u'O', u'O', u'LOCATION', u'O', u'O', u'O', u'LOCATION', u'O', u'O', u'O', u'SET', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'LOCATION', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  European immigrants.

Who heavily influenced the architecture and culture of Montevideo?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = European immigrants.
Difficulty = medium
Article_Title = Uruguay
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a9.txt

NER stats: 59 out of 101
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid185] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d53488>, <src.tfidf.TF_IDF object at 0x114429410>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429410>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  Many of the European immigrants arrived in Uruguay in the late 1800s and have heavily influenced the architecture and culture of Montevideo and other major cities .
[u'O', u'O', u'O', u'LOCATION', u'O', u'O', u'O', u'LOCATION', u'O', u'O', u'O', u'SET', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'O', u'LOCATION', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  European immigrants

Who heavily influenced the architecture and culture of Montevideo?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = European immigrants
Difficulty = medium
Article_Title = Uruguay
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a9.txt

NER stats: 59 out of 101
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid186] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d534d0>, <src.tfidf.TF_IDF object at 0x114429410>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429410>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  Montevideo was founded by the Spanish in the early 18th century as a military stronghold .
[u'LOCATION', u'O', u'O', u'O', u'O', u'MISC', u'O', u'DATE', u'DATE', u'DATE', u'DATE', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  By the Spanish, in the early 18th century

Who founded Montevideo?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = By the Spanish, in the early 18th century
Difficulty = medium
Article_Title = Uruguay
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a9.txt

NER stats: 59 out of 101
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid187] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d53518>, <src.tfidf.TF_IDF object at 0x114429410>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x114429410>
No. of sentences=10
set(['PERSON', 'ORGANIZATION'])
Candidate sentence  Montevideo was founded by the Spanish in the early 18th century as a military stronghold .
[u'LOCATION', u'O', u'O', u'O', u'O', u'MISC', u'O', u'DATE', u'DATE', u'DATE', u'DATE', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  Montevideo was founded by the Spanish in the early 18th century as a military stronghold.

Who founded Montevideo?
Validity= True
Question Type = Factoid
Answer Type = set(['PERSON', 'ORGANIZATION'])
Answer = Montevideo was founded by the Spanish in the early 18th century as a military stronghold.
Difficulty = medium
Article_Title = Uruguay
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a9.txt

NER stats: 59 out of 101
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid202] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d53950>, <src.tfidf.TF_IDF object at 0x110780550>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780550>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  In 1879 , Wilson attended law school at University of Virginia for one year but he never graduated .
[u'O', u'DATE', u'O', u'PERSON', u'O', u'O', u'O', u'O', u'ORGANIZATION', u'ORGANIZATION', u'ORGANIZATION', u'O', u'DURATION', u'DURATION', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  Wilson attended law school at University of Virginia

Where did Wilson attend law school?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = Wilson attended law school at University of Virginia
Difficulty = medium
Article_Title = Woodrow_Wilson
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a8.txt

NER stats: 68 out of 115
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
________________________ test_factoid[param_factoid203] ________________________

param_factoid = (<src.question_processing.Question_parser instance at 0x115d53998>, <src.tfidf.TF_IDF object at 0x110780550>)

    def test_factoid(param_factoid):
        qpobj = param_factoid[0]
        objTfidf = param_factoid[1]
        print objTfidf
        questionProcess = Question_parser(qpobj.question)
        if questionProcess.valid: #questionProcess.difficulty == "easy" :
            try:
                interestingText = objTfidf.getInterestingText(qpobj.question)
                ans = answerFactoid(qpobj.question, interestingText, questionProcess)
                #assert True == str2bool(qpobj.answer)
                #assertIsNotNone(ans)
                #assert ans != None
                #assert False == True
                if qpobj.answer_type != set(['UNKNOWN']) and qpobj.qtype == 'Factoid':
                    ref_answer = qpobj.answer.lower()
                    gen_answer = ans[0].lower()
                    condition1 = gen_answer in ref_answer
                    condition2 = (ref_answer in gen_answer) and (len(gen_answer.split()) - len(ref_answer.split()) <=5)
                    condition = condition1 or condition2
                    ner_stats(condition)
                    print "evaluated condition: ", condition
                    print "Genereated answer ", gen_answer
                    assert True == True
    
            except Exception, e:
                traceback.print_exc()
                print "Ref Answer " , qpobj.answer
                print qpobj
                ner_stats_disp()
>               raise e
E               AttributeError: 'list' object has no attribute 'lower'

test_compute.py:89: AttributeError
----------------------------- Captured stdout call -----------------------------
<src.tfidf.TF_IDF object at 0x110780550>
No. of sentences=10
set(['LOCATION'])
Candidate sentence  In 1879 , Wilson attended law school at University of Virginia for one year but he never graduated .
[u'O', u'DATE', u'O', u'PERSON', u'O', u'O', u'O', u'O', u'ORGANIZATION', u'ORGANIZATION', u'ORGANIZATION', u'O', u'DURATION', u'DURATION', u'O', u'O', u'O', u'O', u'O']
[]
Ref Answer  University of Virginia

Where did Wilson attend law school?
Validity= True
Question Type = Factoid
Answer Type = set(['LOCATION'])
Answer = University of Virginia
Difficulty = medium
Article_Title = Woodrow_Wilson
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a8.txt

NER stats: 68 out of 115
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py", line 75, in test_factoid
    gen_answer = ans[0].lower()
AttributeError: 'list' object has no attribute 'lower'
=============== 79 failed, 127 passed, 2 error in 68.57 seconds ================
