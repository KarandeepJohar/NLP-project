============================= test session starts ==============================
platform darwin -- Python 2.7.8, pytest-2.9.1, py-1.4.31, pluggy-0.3.1
rootdir: /Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests, inifile: 
collected 342 items

test_compute.py F.................................F................................FF....FF.........FFF.F...FFF.................................FF........FF..FF....F..........FF....FF.......FF..........F....FFF......F.F.....FF...........F.F............FF...............FFFF....FFFF....FFFF.......F..FF.................................FFF.....FF............EE

==================================== ERRORS ====================================
_____________________ ERROR at setup of test_yesno_helper ______________________
file /Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py, line 27
  def test_yesno_helper(yesno_param):
        fixture 'yesno_param' not found
        available fixtures: tmpdir_factory, pytestconfig, cache, recwarn, monkeypatch, record_xml_property, capfd, capsys, tmpdir
        use 'py.test --fixtures [testpath]' for help on them.

/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py:27
________________________ ERROR at setup of test_factoid ________________________
file /Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py, line 47
  def test_factoid(param_factoid):
        fixture 'param_factoid' not found
        available fixtures: tmpdir_factory, pytestconfig, cache, recwarn, monkeypatch, record_xml_property, capfd, capsys, tmpdir
        use 'py.test --fixtures [testpath]' for help on them.

/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py:47
=================================== FAILURES ===================================
______________________________ test_yesno[param0] ______________________________

param = (<src.question_processing.Question_parser instance at 0x10cabf248>, (<src.tfidf.TF_IDF object at 0x109b86dd0>, set(['alessandro', 'alessandro_volta', 'volta'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Alessandro Volta was not a professor of chemistry.')
E            +    where 'Alessandro Volta was not a professor of chemistry.' = <src.question_processing.Question_parser instance at 0x10cabf248>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.19342687726020813, {u'tokens': [u',', u'p.', u'73', u'In', u'1776-77', u'Volta', u'studied', u'the', u'chemistry', u'of', u'gases', u',', u'he', u'discovered', u'methane', u'by', u'collecting', u'the', u'gas', u'from', u'marshes', u'.'], u'lemmas': [u',', u'p.', u'73', u'in', u'1776-77', u'volta', u'study', u'the', u'chemistry', u'of', u'gas', u',', u'he', u'discover', u'methane', u'by', u'collect', u'the', u'gas', u'from', u'marsh', u'.'], u'pos': [u',', u'NN', u'CD', u'IN', u'CD', u'NN', u'VBD', u'DT', u'NN', u'IN', u'NNS', u',', u'PRP', u'VBD', u'NN', u'IN', u'VBG', u'DT', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[824, 825], [826, 828], [828, 830], [831, 833], [834, 841], [842, 847], [848, 855], [856, 859], [860, 869], [870, 872], [873, 878], [878, 879], [880, 882], [883, 893], [894, 901], [902, 904], [905, 915], [916, 919], [920, 923], [924, 928], [929, 936], [936, 937]]}) 
answer: set([u'professor'])
candidate Sentence: (0.1529090404510498, {u'tokens': [u'In', u'1774', u'he', u'became', u'a', u'professor', u'of', u'physics', u'at', u'the', u'Royal', u'School', u'in', u'Como', u'.'], u'lemmas': [u'in', u'1774', u'he', u'become', u'a', u'professor', u'of', u'physics', u'at', u'the', u'Royal', u'School', u'in', u'Como', u'.'], u'pos': [u'IN', u'CD', u'PRP', u'VBD', u'DT', u'NN', u'IN', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[448, 450], [451, 455], [456, 458], [459, 465], [466, 467], [468, 477], [478, 480], [481, 488], [489, 491], [492, 495], [496, 501], [502, 508], [509, 511], [512, 516], [516, 517]]}) 
answer: set([u'chemistri'])
candidate Sentence: (0.12473277747631073, {u'tokens': [u'Count', u'Alessandro', u'Giuseppe', u'Antonio', u'Anastasio', u'Volta', u'-LRB-', u'February', u'18', u',', u'1745', u'March', u'5', u',', u'1827', u'-RRB-', u'was', u'an', u'Italian', u'Giuliano', u'Pancaldi', u',', u'``', u'Volta', u':', u'Science', u'and', u'culture', u'in', u'the', u'age', u'of', u'enlightenment', u"''", u',', u'Princeton', u'University', u'Press', u',', u'2003', u'.'], u'lemmas': [u'count', u'Alessandro', u'Giuseppe', u'Antonio', u'Anastasio', u'Volta', u'-lrb-', u'February', u'18', u',', u'1745', u'March', u'5', u',', u'1827', u'-rrb-', u'be', u'a', u'italian', u'Giuliano', u'Pancaldi', u',', u'``', u'Volta', u':', u'Science', u'and', u'culture', u'in', u'the', u'age', u'of', u'enlightenment', u"''", u',', u'Princeton', u'University', u'Press', u',', u'2003', u'.'], u'pos': [u'VB', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'-LRB-', u'NNP', u'CD', u',', u'CD', u'NNP', u'CD', u',', u'CD', u'-RRB-', u'VBD', u'DT', u'JJ', u'NNP', u'NNP', u',', u'``', u'NNP', u':', u'NNP', u'CC', u'NN', u'IN', u'DT', u'NN', u'IN', u'NN', u"''", u',', u'NNP', u'NNP', u'NNP', u',', u'CD', u'.'], u'char_offsets': [[0, 5], [6, 16], [17, 25], [26, 33], [34, 43], [44, 49], [50, 51], [51, 59], [60, 62], [62, 63], [64, 68], [70, 75], [76, 77], [77, 78], [79, 83], [83, 84], [85, 88], [89, 91], [92, 99], [100, 108], [109, 117], [117, 118], [119, 120], [120, 125], [125, 126], [127, 134], [135, 138], [139, 146], [147, 149], [150, 153], [154, 157], [158, 160], [161, 174], [174, 175], [175, 176], [177, 186], [187, 197], [198, 203], [203, 204], [205, 209], [209, 210]]}) 
answer: set([u'professor', u'chemistri'])
candidate Sentence: (0.11684958636760712, {u'tokens': [u'In', u'1779', u'he', u'became', u'professor', u'of', u'experimental', u'physics', u'at', u'the', u'University', u'of', u'Pavia', u',', u'a', u'chair', u'he', u'occupied', u'for', u'almost', u'25', u'years', u'.'], u'lemmas': [u'in', u'1779', u'he', u'become', u'professor', u'of', u'experimental', u'physics', u'at', u'the', u'University', u'of', u'Pavia', u',', u'a', u'chair', u'he', u'occupy', u'for', u'almost', u'25', u'year', u'.'], u'pos': [u'IN', u'CD', u'PRP', u'VBD', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'IN', u'NNP', u',', u'DT', u'NN', u'PRP', u'VBD', u'IN', u'RB', u'CD', u'NNS', u'.'], u'char_offsets': [[1369, 1371], [1372, 1376], [1377, 1379], [1380, 1386], [1387, 1396], [1397, 1399], [1400, 1412], [1413, 1420], [1421, 1423], [1424, 1427], [1428, 1438], [1439, 1441], [1442, 1447], [1447, 1448], [1449, 1450], [1451, 1456], [1457, 1459], [1460, 1468], [1469, 1472], [1473, 1479], [1480, 1482], [1483, 1488], [1488, 1489]]}) 
answer: set([u'chemistri'])
candidate Sentence: (0.10624152421951294, {u'tokens': [u'*', u'History', u'of', u'the', u'battery', u'*', u'History', u'of', u'the', u'internal', u'combustion', u'engine', u'*', u'Volta', u'and', u'the', u'``', u'Pile', u"''", u'*', u'Count', u'Alessandro', u'Giuseppe', u'Antonio', u'Anastasio', u'Volta', u':', u'A', u'Pioneer', u'in', u'Electrochemistry'], u'lemmas': [u'*', u'history', u'of', u'the', u'battery', u'*', u'history', u'of', u'the', u'internal', u'combustion', u'engine', u'*', u'Volta', u'and', u'the', u'``', u'pile', u"''", u'*', u'count', u'Alessandro', u'Giuseppe', u'Antonio', u'Anastasio', u'Volta', u':', u'A', u'Pioneer', u'in', u'Electrochemistry'], u'pos': [u'SYM', u'NN', u'IN', u'DT', u'NN', u'SYM', u'NN', u'IN', u'DT', u'JJ', u'NN', u'NN', u'SYM', u'NNP', u'CC', u'DT', u'``', u'VB', u"''", u'SYM', u'VB', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u':', u'NNP', u'NNP', u'IN', u'NNP'], u'char_offsets': [[5830, 5831], [5832, 5839], [5840, 5842], [5843, 5846], [5847, 5854], [5855, 5856], [5857, 5864], [5865, 5867], [5868, 5871], [5872, 5880], [5881, 5891], [5892, 5898], [5899, 5900], [5902, 5907], [5908, 5911], [5912, 5915], [5916, 5917], [5917, 5921], [5921, 5922], [5923, 5924], [5926, 5931], [5932, 5942], [5943, 5951], [5952, 5959], [5960, 5969], [5970, 5975], [5975, 5976], [5977, 5978], [5979, 5986], [5987, 5989], [5990, 6006]]}) 
answer: set([u'professor', u'chemistri'])
candidate Sentence: (0.10093693435192108, {u'tokens': [u'His', u'promotion', u'of', u'it', u'was', u'so', u'extensive', u'that', u'he', u'is', u'often', u'credited', u'with', u'its', u'invention', u',', u'even', u'though', u'a', u'machine', u'operating', u'in', u'the', u'same', u'principle', u'was', u'described', u'in', u'1762', u'by', u'Swedish', u'professor', u'Johan', u'Wilcke', u'.'], u'lemmas': [u'he', u'promotion', u'of', u'it', u'be', u'so', u'extensive', u'that', u'he', u'be', u'often', u'credit', u'with', u'its', u'invention', u',', u'even', u'though', u'a', u'machine', u'operating', u'in', u'the', u'same', u'principle', u'be', u'describe', u'in', u'1762', u'by', u'swedish', u'professor', u'Johan', u'Wilcke', u'.'], u'pos': [u'PRP$', u'NN', u'IN', u'PRP', u'VBD', u'RB', u'JJ', u'IN', u'PRP', u'VBZ', u'RB', u'VBN', u'IN', u'PRP$', u'NN', u',', u'RB', u'IN', u'DT', u'NN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'VBD', u'VBN', u'IN', u'CD', u'IN', u'JJ', u'NN', u'NNP', u'NNP', u'.'], u'char_offsets': [[629, 632], [633, 642], [643, 645], [646, 648], [649, 652], [653, 655], [656, 665], [666, 670], [671, 673], [674, 676], [677, 682], [683, 691], [692, 696], [697, 700], [701, 710], [710, 711], [712, 716], [717, 723], [724, 725], [726, 733], [734, 743], [744, 746], [747, 750], [751, 755], [756, 765], [766, 769], [770, 779], [780, 782], [783, 787], [788, 790], [791, 798], [799, 808], [809, 814], [815, 821], [821, 822]]}) 
answer: set([u'chemistri'])
candidate Sentence: (0.050426900386810303, {u'tokens': [u'For', u'a', u'photograph', u'of', u'his', u'gravesite', u',', u'and', u'other', u'Volta', u'locales', u',', u'see', u'Volta', u"'s", u'legacy', u'is', u'celebrated', u'by', u'a', u'Temple', u'on', u'the', u'shore', u'of', u'Lake', u'Como', u'in', u'the', u'centre', u'of', u'the', u'town', u'.'], u'lemmas': [u'for', u'a', u'photograph', u'of', u'he', u'gravesite', u',', u'and', u'other', u'Volta', u'locale', u',', u'see', u'Volta', u"'s", u'legacy', u'be', u'celebrate', u'by', u'a', u'Temple', u'on', u'the', u'shore', u'of', u'Lake', u'Como', u'in', u'the', u'centre', u'of', u'the', u'town', u'.'], u'pos': [u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u',', u'CC', u'JJ', u'NNP', u'NNS', u',', u'VBP', u'NNP', u'POS', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'NNP', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[5318, 5321], [5322, 5323], [5324, 5334], [5335, 5337], [5338, 5341], [5342, 5351], [5351, 5352], [5353, 5356], [5357, 5362], [5363, 5368], [5369, 5376], [5376, 5377], [5378, 5381], [5382, 5387], [5387, 5389], [5390, 5396], [5397, 5399], [5400, 5410], [5411, 5413], [5414, 5415], [5416, 5422], [5423, 5425], [5426, 5429], [5430, 5435], [5436, 5438], [5439, 5443], [5444, 5448], [5449, 5451], [5452, 5455], [5456, 5462], [5463, 5465], [5466, 5469], [5470, 5474], [5474, 5475]]}) 
answer: set([u'professor', u'chemistri'])
candidate Sentence: (0.044068329036235809, {u'tokens': [u'In', u'honor', u'of', u'his', u'work', u',', u'Volta', u'was', u'made', u'a', u'count', u'by', u'Napoleon', u'in', u'1810', u'.'], u'lemmas': [u'in', u'honor', u'of', u'he', u'work', u',', u'Volta', u'be', u'make', u'a', u'count', u'by', u'Napoleon', u'in', u'1810', u'.'], u'pos': [u'IN', u'NN', u'IN', u'PRP$', u'NN', u',', u'NNP', u'VBD', u'VBN', u'DT', u'NN', u'IN', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[5082, 5084], [5085, 5090], [5091, 5093], [5094, 5097], [5098, 5102], [5102, 5103], [5104, 5109], [5110, 5113], [5114, 5118], [5119, 5120], [5121, 5126], [5127, 5129], [5130, 5138], [5139, 5141], [5142, 5146], [5146, 5147]]}) 
answer: set([u'professor', u'chemistri'])
candidate Sentence: (0.04293503612279892, {u'tokens': [u'He', u'is', u'buried', u'in', u'Camnago', u'Volta', u'.'], u'lemmas': [u'he', u'be', u'bury', u'in', u'Camnago', u'Volta', u'.'], u'pos': [u'PRP', u'VBZ', u'VBN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[5287, 5289], [5290, 5292], [5293, 5299], [5300, 5302], [5303, 5310], [5311, 5316], [5316, 5317]]}) 
answer: set([u'professor', u'chemistri'])
candidate Sentence: (0.042925402522087097, {u'tokens': [u'This', u'may', u'be', u'called', u'Volta', u"'s", u'Law', u'of', u'the', u'electrochemical', u'series', u'.'], u'lemmas': [u'this', u'may', u'be', u'call', u'Volta', u"'s", u'law', u'of', u'the', u'electrochemical', u'series', u'.'], u'pos': [u'DT', u'MD', u'VB', u'VBN', u'NNP', u'POS', u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[2388, 2392], [2393, 2396], [2397, 2399], [2400, 2406], [2407, 2412], [2412, 2414], [2415, 2418], [2419, 2421], [2422, 2425], [2426, 2441], [2442, 2448], [2448, 2449]]}) 
answer: set([u'professor', u'chemistri'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Was Alessandro Volta a professor of chemistry?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Alessandro Volta was not a professor of chemistry.
Difficulty = easy
Article_Title = Alessandro_Volta
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set4/a10.txt

No
----------------------------- Captured stderr call -----------------------------
INFO:CoreNLP_JavaServer: INPUT: 1 documents, 46 characters, 8 tokens, 46.0 char/doc, 8.0 tok/doc RATES: 0.362 doc/sec, 2.9 tok/sec

INFO:CoreNLP_JavaServer: INPUT: 2 documents, 92 characters, 16 tokens, 46.0 char/doc, 8.0 tok/doc RATES: 0.634 doc/sec, 5.1 tok/sec

_____________________________ test_yesno[param34] ______________________________

param = (<src.question_processing.Question_parser instance at 0x10cab1098>, (<src.tfidf.TF_IDF object at 0x109b86d50>, set(['antwerp'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cab1098>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.37896206974983215, {u'tokens': [u'The', u'municipality', u'comprises', u'the', u'city', u'of', u'Antwerp', u'proper', u'and', u'several', u'towns', u'.'], u'lemmas': [u'the', u'municipality', u'comprise', u'the', u'city', u'of', u'Antwerp', u'proper', u'and', u'several', u'town', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'DT', u'NN', u'IN', u'NNP', u'JJ', u'CC', u'JJ', u'NNS', u'.'], u'char_offsets': [[10313, 10316], [10317, 10329], [10330, 10339], [10340, 10343], [10344, 10348], [10349, 10351], [10352, 10359], [10360, 10366], [10367, 10370], [10371, 10378], [10379, 10384], [10384, 10385]]}) 
answer: set([])
candidate Sentence: (0.32088583707809448, {u'tokens': [u'This', u'is', u'the', u'population', u'of', u'the', u'city', u'of', u'Antwerp', u'only', u',', u'not', u'of', u'the', u'larger', u'current', u'municipality', u'of', u'the', u'same', u'name', u'.'], u'lemmas': [u'this', u'be', u'the', u'population', u'of', u'the', u'city', u'of', u'Antwerp', u'only', u',', u'not', u'of', u'the', u'larger', u'current', u'municipality', u'of', u'the', u'same', u'name', u'.'], u'pos': [u'DT', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u'RB', u',', u'RB', u'IN', u'DT', u'JJR', u'JJ', u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[10204, 10208], [10209, 10211], [10212, 10215], [10216, 10226], [10227, 10229], [10230, 10233], [10234, 10238], [10239, 10241], [10242, 10249], [10250, 10254], [10254, 10255], [10256, 10259], [10260, 10262], [10263, 10266], [10267, 10273], [10274, 10281], [10282, 10294], [10295, 10297], [10298, 10301], [10302, 10306], [10307, 10311], [10311, 10312]]}) 
answer: set([])
candidate Sentence: (0.29252937436103821, {u'tokens': [u'Antwerp', u'-LRB-', u',', u'Dutch', u':', u',', u'-RRB-', u'is', u'a', u'city', u'and', u'municipality', u'in', u'Belgium', u'and', u'the', u'capital', u'of', u'the', u'Antwerp', u'province', u'in', u'Flanders', u',', u'one', u'of', u'Belgium', u"'s", u'three', u'regions', u'.'], u'lemmas': [u'Antwerp', u'-lrb-', u',', u'Dutch', u':', u',', u'-rrb-', u'be', u'a', u'city', u'and', u'municipality', u'in', u'Belgium', u'and', u'the', u'capital', u'of', u'the', u'Antwerp', u'province', u'in', u'Flanders', u',', u'one', u'of', u'Belgium', u"'s", u'three', u'region', u'.'], u'pos': [u'NNP', u'-LRB-', u',', u'NNPS', u':', u',', u'-RRB-', u'VBZ', u'DT', u'NN', u'CC', u'NN', u'IN', u'NNP', u'CC', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NN', u'IN', u'NNP', u',', u'CD', u'IN', u'NNP', u'POS', u'CD', u'NNS', u'.'], u'char_offsets': [[179, 186], [187, 188], [189, 190], [191, 196], [196, 197], [199, 200], [202, 203], [204, 206], [207, 208], [209, 213], [214, 217], [218, 230], [231, 233], [234, 241], [242, 245], [246, 249], [250, 257], [258, 260], [261, 264], [265, 272], [273, 281], [282, 284], [285, 293], [293, 294], [295, 298], [299, 301], [302, 309], [309, 311], [312, 317], [318, 325], [325, 326]]}) 
answer: set([])
candidate Sentence: (0.12764178216457367, {u'tokens': [u'Antwerp', u"'s", u'total', u'population', u'is', u'472,071', u'-LRB-', u'as', u'of', u'1', u'January', u'2008', u'-RRB-', u'Statistics', u'Belgium', u';', u'Population', u'de', u'droit', u'par', u'commune', u'au', u'1', u'janvier', u'2008', u'-LRB-', u'excel-file', u'-RRB-', u'Population', u'of', u'all', u'municipalities', u'in', u'Belgium', u',', u'as', u'of', u'1', u'January', u'2008', u'.'], u'lemmas': [u'Antwerp', u"'s", u'total', u'population', u'be', u'472,071', u'-lrb-', u'as', u'of', u'1', u'January', u'2008', u'-rrb-', u'Statistics', u'Belgium', u';', u'Population', u'de', u'droit', u'par', u'commune', u'au', u'1', u'janvier', u'2008', u'-lrb-', u'excel-file', u'-rrb-', u'Population', u'of', u'all', u'municipality', u'in', u'Belgium', u',', u'as', u'of', u'1', u'January', u'2008', u'.'], u'pos': [u'NNP', u'POS', u'JJ', u'NN', u'VBZ', u'CD', u'-LRB-', u'IN', u'IN', u'CD', u'NNP', u'CD', u'-RRB-', u'NNPS', u'NNP', u':', u'NNP', u'NNP', u'JJ', u'NN', u'NN', u'NN', u'CD', u'NN', u'CD', u'-LRB-', u'NN', u'-RRB-', u'NNP', u'IN', u'DT', u'NNS', u'IN', u'NNP', u',', u'IN', u'IN', u'CD', u'NNP', u'CD', u'.'], u'char_offsets': [[327, 334], [334, 336], [337, 342], [343, 353], [354, 356], [357, 364], [365, 366], [366, 368], [369, 371], [372, 373], [374, 381], [382, 386], [386, 387], [390, 400], [401, 408], [408, 409], [410, 420], [421, 423], [424, 429], [430, 433], [434, 441], [442, 444], [445, 446], [447, 454], [455, 459], [460, 461], [461, 471], [471, 472], [473, 483], [484, 486], [487, 490], [491, 505], [506, 508], [509, 516], [516, 517], [518, 520], [521, 523], [524, 525], [526, 533], [534, 538], [538, 539]]}) 
answer: set([])
candidate Sentence: (0.059413038194179535, {u'tokens': [u'Antwerp', u'is', u'a', u'rising', u'fashion', u'city', u',', u'and', u'has', u'produced', u'designers', u'such', u'as', u'the', u'Antwerp', u'Six', u'.'], u'lemmas': [u'Antwerp', u'be', u'a', u'rise', u'fashion', u'city', u',', u'and', u'have', u'produce', u'designer', u'such', u'as', u'the', u'Antwerp', u'six', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'VBG', u'NN', u'NN', u',', u'CC', u'VBZ', u'VBN', u'NNS', u'JJ', u'IN', u'DT', u'NNP', u'CD', u'.'], u'char_offsets': [[19724, 19731], [19732, 19734], [19735, 19736], [19737, 19743], [19744, 19751], [19752, 19756], [19756, 19757], [19758, 19761], [19762, 19765], [19766, 19774], [19775, 19784], [19785, 19789], [19790, 19792], [19793, 19796], [19797, 19804], [19805, 19808], [19808, 19809]]}) 
answer: set([u'municip'])
candidate Sentence: (0.049288515001535416, {u'tokens': [u'Antwerp', u'became', u'a', u'margraviate', u',', u'a', u'border', u'province', u'facing', u'the', u'County', u'of', u'Flanders', u'.'], u'lemmas': [u'Antwerp', u'become', u'a', u'margraviate', u',', u'a', u'border', u'province', u'face', u'the', u'County', u'of', u'Flanders', u'.'], u'pos': [u'NNP', u'VBD', u'DT', u'NN', u',', u'DT', u'NN', u'NN', u'VBG', u'DT', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[4019, 4026], [4027, 4033], [4034, 4035], [4036, 4047], [4047, 4048], [4049, 4050], [4051, 4057], [4058, 4066], [4067, 4073], [4074, 4077], [4078, 4084], [4085, 4087], [4088, 4096], [4096, 4097]]}) 
answer: set([u'municip'])
candidate Sentence: (0.047040171921253204, {u'tokens': [u'Antwerp', u'had', u'a', u'policy', u'of', u'toleration', u',', u'which', u'attracted', u'a', u'large', u'orthodox', u'Jewish', u'community', u'.'], u'lemmas': [u'Antwerp', u'have', u'a', u'policy', u'of', u'toleration', u',', u'which', u'attract', u'a', u'large', u'orthodox', u'jewish', u'community', u'.'], u'pos': [u'NNP', u'VBD', u'DT', u'NN', u'IN', u'NN', u',', u'WDT', u'VBD', u'DT', u'JJ', u'NN', u'JJ', u'NN', u'.'], u'char_offsets': [[5774, 5781], [5782, 5785], [5786, 5787], [5788, 5794], [5795, 5797], [5798, 5808], [5808, 5809], [5810, 5815], [5816, 5825], [5826, 5827], [5828, 5833], [5834, 5842], [5843, 5849], [5850, 5859], [5859, 5860]]}) 
answer: set([u'municip'])
candidate Sentence: (0.046874769032001495, {u'tokens': [u'Antwerp', u'was', u'transformed', u'into', u'a', u'fortified', u'position', u'by', u'constructing', u'an', u'outer', u'line', u'of', u'forts', u'and', u'batteries', u'6', u'to', u'from', u'the', u'enceinte', u'.'], u'lemmas': [u'Antwerp', u'be', u'transform', u'into', u'a', u'fortified', u'position', u'by', u'construct', u'a', u'outer', u'line', u'of', u'fort', u'and', u'battery', u'6', u'to', u'from', u'the', u'enceinte', u'.'], u'pos': [u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'VBG', u'DT', u'JJ', u'NN', u'IN', u'NNS', u'CC', u'NNS', u'CD', u'TO', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[15045, 15052], [15053, 15056], [15057, 15068], [15069, 15073], [15074, 15075], [15076, 15085], [15086, 15094], [15095, 15097], [15098, 15110], [15111, 15113], [15114, 15119], [15120, 15124], [15125, 15127], [15128, 15133], [15134, 15137], [15138, 15147], [15148, 15149], [15150, 15152], [15155, 15159], [15160, 15163], [15164, 15172], [15172, 15173]]}) 
answer: set([u'municip'])
candidate Sentence: (0.046100780367851257, {u'tokens': [u'It', u'is', u'now', u'a', u'museum', u'.'], u'lemmas': [u'it', u'be', u'now', u'a', u'museum', u'.'], u'pos': [u'PRP', u'VBZ', u'RB', u'DT', u'NN', u'.'], u'char_offsets': [[12607, 12609], [12610, 12612], [12613, 12616], [12617, 12618], [12619, 12625], [12625, 12626]]}) 
answer: set([u'municip'])
candidate Sentence: (0.044632039964199066, {u'tokens': [u'*', u'Den', u'Dam', u'an', u'area', u'in', u'northern', u'Antwerp', u'*', u'Linkeroever', u'-', u'an', u'area', u'on', u'the', u'left', u'bank', u'of', u'the', u'Scheldt', u'with', u'a', u'lot', u'of', u'apartment', u'buildings', u'*', u'Meir', u'Antwerp', u"'s", u'largest', u'shopping', u'street', u'*', u'Seefhoek', u'-', u'an', u'area', u'in', u'north-east', u'Antwerp', u',', u'situated', u'around', u'the', u'Stuyvenbergplein', u'*', u'Van', u'Wesenbekestraat', u'the', u'Chinatown', u'of', u'Antwerp', u'*', u'Zuid', u'the', u'south', u'of', u'Antwerp', u'*', u'Antwerp', u'Water', u'Works', u'-LRB-', u'AWW', u'-RRB-', u'*', u'Archief', u'en', u'Museum', u'voor', u'het', u'Vlaams', u'Cultuurleven', u'*', u'Jewish', u'Community', u'of', u'Antwerp', u'*', u'List', u'of', u'mayors', u'of', u'Antwerp', u'*', u'Pshevorsk', u'Hassidic', u'Jewish', u'movement', u'based', u'in', u'Antwerp', u'*', u'Carolus', u'Scribani', u',', u'Origines', u'Antwerpiensium', u',', u'1610', u'*', u'Gens', u',', u'Histoire', u'de', u'la', u'ville', u"d'Anvers", u'*', u'F.H.', u'Mertens', u',', u'K.L.', u'Torfs', u',', u'Geschiedenis', u'van', u'Antwerpen', u'sedert', u'de', u'stichting', u'der', u'.'], u'lemmas': [u'*', u'Den', u'dam', u'a', u'area', u'in', u'northern', u'Antwerp', u'*', u'linkeroever', u'-', u'a', u'area', u'on', u'the', u'left', u'bank', u'of', u'the', u'scheldt', u'with', u'a', u'lot', u'of', u'apartment', u'building', u'*', u'Meir', u'Antwerp', u"'s", u'largest', u'shopping', u'street', u'*', u'Seefhoek', u'-', u'a', u'area', u'in', u'north-east', u'Antwerp', u',', u'situate', u'around', u'the', u'Stuyvenbergplein', u'*', u'Van', u'Wesenbekestraat', u'the', u'Chinatown', u'of', u'Antwerp', u'*', u'zuid', u'the', u'south', u'of', u'Antwerp', u'*', u'Antwerp', u'Water', u'Works', u'-lrb-', u'AWW', u'-rrb-', u'*', u'archief', u'en', u'museum', u'voor', u'het', u'Vlaams', u'Cultuurleven', u'*', u'Jewish', u'Community', u'of', u'Antwerp', u'*', u'list', u'of', u'mayor', u'of', u'Antwerp', u'*', u'Pshevorsk', u'Hassidic', u'Jewish', u'movement', u'base', u'in', u'Antwerp', u'*', u'Carolus', u'Scribani', u',', u'Origines', u'Antwerpiensium', u',', u'1610', u'*', u'gen', u',', u'histoire', u'de', u'la', u'ville', u"d'anver", u'*', u'F.H.', u'Mertens', u',', u'K.L.', u'Torfs', u',', u'Geschiedenis', u'van', u'Antwerpen', u'sedert', u'de', u'stichting', u'der', u'.'], u'pos': [u'SYM', u'NNP', u'NN', u'DT', u'NN', u'IN', u'JJ', u'NNP', u'SYM', u'SYM', u':', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'NN', u'NNS', u'SYM', u'NNP', u'NNP', u'POS', u'JJS', u'NN', u'NN', u'SYM', u'NNP', u':', u'DT', u'NN', u'IN', u'NN', u'NNP', u',', u'VBN', u'IN', u'DT', u'NNP', u'SYM', u'NNP', u'NNP', u'DT', u'NNP', u'IN', u'NNP', u'SYM', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u'SYM', u'FW', u'FW', u'NN', u'NN', u'NN', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'IN', u'NNP', u'SYM', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'NN', u'VBN', u'IN', u'NNP', u'SYM', u'NNPS', u'NNP', u',', u'NNP', u'NNP', u',', u'CD', u'SYM', u'NNS', u',', u'FW', u'FW', u'FW', u'FW', u'NNS', u'SYM', u'NNP', u'NNP', u',', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'NNP', u'FW', u'FW', u'NN', u'NN', u'.'], u'char_offsets': [[26404, 26405], [26406, 26409], [26410, 26413], [26415, 26417], [26418, 26422], [26423, 26425], [26426, 26434], [26435, 26442], [26443, 26444], [26445, 26456], [26457, 26458], [26459, 26461], [26462, 26466], [26467, 26469], [26470, 26473], [26474, 26478], [26479, 26483], [26484, 26486], [26487, 26490], [26491, 26498], [26499, 26503], [26504, 26505], [26506, 26509], [26510, 26512], [26513, 26522], [26523, 26532], [26533, 26534], [26535, 26539], [26541, 26548], [26548, 26550], [26551, 26558], [26559, 26567], [26568, 26574], [26575, 26576], [26577, 26585], [26586, 26587], [26588, 26590], [26591, 26595], [26596, 26598], [26599, 26609], [26610, 26617], [26617, 26618], [26619, 26627], [26628, 26634], [26635, 26638], [26639, 26655], [26656, 26657], [26658, 26661], [26662, 26677], [26679, 26682], [26683, 26692], [26693, 26695], [26696, 26703], [26704, 26705], [26706, 26710], [26713, 26716], [26717, 26722], [26723, 26725], [26726, 26733], [26734, 26735], [26736, 26743], [26744, 26749], [26750, 26755], [26756, 26757], [26757, 26760], [26760, 26761], [26762, 26763], [26764, 26771], [26772, 26774], [26775, 26781], [26782, 26786], [26787, 26790], [26791, 26797], [26798, 26810], [26811, 26812], [26813, 26819], [26820, 26829], [26830, 26832], [26833, 26840], [26841, 26842], [26843, 26847], [26848, 26850], [26851, 26857], [26858, 26860], [26861, 26868], [26869, 26870], [26871, 26880], [26882, 26890], [26891, 26897], [26898, 26906], [26907, 26912], [26913, 26915], [26916, 26923], [26924, 26925], [26926, 26933], [26934, 26942], [26942, 26943], [26944, 26952], [26953, 26967], [26967, 26968], [26969, 26973], [26974, 26975], [26976, 26980], [26980, 26981], [26982, 26990], [26991, 26993], [26994, 26996], [26997, 27002], [27003, 27011], [27012, 27013], [27014, 27018], [27019, 27026], [27026, 27027], [27028, 27032], [27033, 27038], [27038, 27039], [27040, 27052], [27053, 27056], [27057, 27066], [27067, 27073], [27074, 27076], [27077, 27086], [27087, 27090], [27090, 27091]]}) 
answer: set([u'municip'])
['Yes', 'No Sure', 'Yes', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No']

Is Antwerp a municipality?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Antwerp
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set3/a4.txt

No
_____________________________ test_yesno[param67] ______________________________

param = (<src.question_processing.Question_parser instance at 0x10cab1a28>, (<src.tfidf.TF_IDF object at 0x10b195490>, set(['charles-augustin', 'charles-augustin_de_coulomb', 'coulomb', 'de'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x10cab1a28>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.45635640621185303, {u'tokens': [u'Upon', u'his', u'return', u'to', u'France', u',', u'with', u'the', u'rank', u'of', u'Captain', u',', u'he', u'was', u'employed', u'at', u'La', u'Rochelle', u',', u'the', u'Isle', u'of', u'Aix', u'and', u'Cherbourg', u'.'], u'lemmas': [u'upon', u'he', u'return', u'to', u'France', u',', u'with', u'the', u'rank', u'of', u'Captain', u',', u'he', u'be', u'employ', u'at', u'La', u'Rochelle', u',', u'the', u'Isle', u'of', u'Aix', u'and', u'Cherbourg', u'.'], u'pos': [u'IN', u'PRP$', u'NN', u'TO', u'NNP', u',', u'IN', u'DT', u'NN', u'IN', u'NNP', u',', u'PRP', u'VBD', u'VBN', u'IN', u'NNP', u'NNP', u',', u'DT', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'.'], u'char_offsets': [[1720, 1724], [1725, 1728], [1729, 1735], [1736, 1738], [1739, 1745], [1745, 1746], [1747, 1751], [1752, 1755], [1756, 1760], [1761, 1763], [1764, 1771], [1771, 1772], [1773, 1775], [1776, 1779], [1780, 1788], [1789, 1791], [1792, 1794], [1795, 1803], [1803, 1804], [1805, 1808], [1809, 1813], [1814, 1816], [1817, 1820], [1821, 1824], [1825, 1834], [1834, 1835]]}) 
answer: set([u'ever'])
candidate Sentence: (0.20719459652900696, {u'tokens': [u'Charles-Augustin', u'de', u'Coulomb', u'-LRB-', u'14', u'June', u'1736', u'23', u'August', u'1806', u'-RRB-', u'was', u'a', u'French', u'physicist', u'.'], u'lemmas': [u'Charles-Augustin', u'de', u'Coulomb', u'-lrb-', u'14', u'June', u'1736', u'23', u'August', u'1806', u'-rrb-', u'be', u'a', u'french', u'physicist', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'-LRB-', u'CD', u'NNP', u'CD', u'CD', u'NNP', u'CD', u'-RRB-', u'VBD', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[0, 16], [17, 19], [20, 27], [28, 29], [29, 31], [32, 36], [37, 41], [43, 45], [46, 52], [53, 57], [57, 58], [59, 62], [63, 64], [65, 71], [72, 81], [81, 82]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.07401999831199646, {u'tokens': [u'In', u'1781', u',', u'he', u'was', u'stationed', u'permanently', u'at', u'Paris', u'.'], u'lemmas': [u'in', u'1781', u',', u'he', u'be', u'station', u'permanently', u'at', u'Paris', u'.'], u'pos': [u'IN', u'CD', u',', u'PRP', u'VBD', u'VBN', u'RB', u'IN', u'NNP', u'.'], u'char_offsets': [[1984, 1986], [1987, 1991], [1991, 1992], [1993, 1995], [1996, 1999], [2000, 2009], [2010, 2021], [2022, 2024], [2025, 2030], [2030, 2031]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.068351730704307556, {u'tokens': [u'When', u'Coulomb', u'was', u'a', u'boy', u',', u'the', u'family', u'moved', u'to', u'Paris', u'and', u'there', u'Coulomb', u'studied', u'at', u'the', u'prestigious', u'Collge', u'des', u'Quatre-Nations', u'.'], u'lemmas': [u'when', u'Coulomb', u'be', u'a', u'boy', u',', u'the', u'family', u'move', u'to', u'Paris', u'and', u'there', u'Coulomb', u'study', u'at', u'the', u'prestigious', u'Collge', u'des', u'Quatre-Nations', u'.'], u'pos': [u'WRB', u'NNP', u'VBD', u'DT', u'NN', u',', u'DT', u'NN', u'VBD', u'TO', u'NNP', u'CC', u'EX', u'NNP', u'VBN', u'IN', u'DT', u'JJ', u'NNP', u'FW', u'NNP', u'.'], u'char_offsets': [[472, 476], [477, 484], [485, 488], [489, 490], [491, 494], [494, 495], [496, 499], [500, 506], [507, 512], [513, 515], [516, 521], [522, 525], [526, 531], [532, 539], [540, 547], [548, 550], [551, 554], [555, 566], [567, 573], [574, 577], [578, 592], [592, 593]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.066889733076095581, {u'tokens': [u'In', u'1784', u',', u'his', u'Recherches', u'thoriques', u'et', u'exprimentales', u'sur', u'la', u'force', u'de', u'torsion', u'et', u'sur', u"l'lasticit", u'des', u'fils', u'de', u'metal', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'229-269', u',', u'1784', u'-LRB-', u'Theoretical', u'research', u'and', u'experimentation', u'on', u'torsion', u'and', u'the', u'elasticity', u'of', u'metal', u'wire', u'-RRB-', u'appeared', u'.'], u'lemmas': [u'in', u'1784', u',', u'he', u'recherch', u'thorique', u'et', u'exprimentales', u'sur', u'la', u'force', u'de', u'torsion', u'et', u'sur', u"l'lasticit", u'des', u'fils', u'de', u'metal', u'histoire', u'de', u'lacadmie', u'royale', u'des', u'Sciences', u',', u'229-269', u',', u'1784', u'-lrb-', u'theoretical', u'research', u'and', u'experimentation', u'on', u'torsion', u'and', u'the', u'elasticity', u'of', u'metal', u'wire', u'-rrb-', u'appear', u'.'], u'pos': [u'IN', u'CD', u',', u'PRP$', u'NNS', u'NNS', u'FW', u'FW', u'FW', u'FW', u'NN', u'IN', u'NN', u'FW', u'FW', u'FW', u'FW', u'FW', u'FW', u'NN', u'FW', u'FW', u'FW', u'FW', u'FW', u'NNPS', u',', u'CD', u',', u'CD', u'-LRB-', u'JJ', u'NN', u'CC', u'NN', u'IN', u'NN', u'CC', u'DT', u'NN', u'IN', u'NN', u'NN', u'-RRB-', u'VBD', u'.'], u'char_offsets': [[2680, 2682], [2683, 2687], [2687, 2688], [2689, 2692], [2693, 2703], [2704, 2713], [2714, 2716], [2717, 2730], [2731, 2734], [2735, 2737], [2738, 2743], [2744, 2746], [2747, 2754], [2755, 2757], [2758, 2761], [2762, 2772], [2773, 2776], [2777, 2781], [2782, 2784], [2785, 2790], [2791, 2799], [2800, 2802], [2803, 2811], [2812, 2818], [2819, 2822], [2823, 2831], [2831, 2832], [2833, 2840], [2840, 2841], [2842, 2846], [2848, 2849], [2849, 2860], [2861, 2869], [2870, 2873], [2874, 2889], [2890, 2892], [2893, 2900], [2901, 2904], [2905, 2908], [2909, 2919], [2920, 2922], [2923, 2928], [2929, 2933], [2933, 2934], [2935, 2943], [2943, 2944]]}) 
answer: set([u'employ', u'ever', u'rochel'])
candidate Sentence: (0.052426088601350784, {u'tokens': [u'Determination', u'of', u'electric', u'density', u'at', u'different', u'points', u'on', u'the', u'surface', u'of', u'these', u'bodies', u'.', u"''"], u'lemmas': [u'determination', u'of', u'electric', u'density', u'at', u'different', u'point', u'on', u'the', u'surface', u'of', u'these', u'body', u'.', u"''"], u'pos': [u'NN', u'IN', u'JJ', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNS', u'.', u"''"], u'char_offsets': [[5531, 5544], [5545, 5547], [5548, 5556], [5557, 5564], [5565, 5567], [5568, 5577], [5578, 5584], [5585, 5587], [5588, 5591], [5592, 5599], [5600, 5602], [5603, 5608], [5609, 5615], [5615, 5616], [5616, 5617]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.052361883223056793, {u'tokens': [u'With', u'his', u'father', u"'s", u'approval', u',', u'Coulomb', u'returned', u'to', u'Paris', u'in', u'1759', u'where', u'he', u'was', u'successful', u'in', u'the', u'entrance', u'examination', u'for', u'the', u'military', u'school', u'at', u'Mzires', u'.'], u'lemmas': [u'with', u'he', u'father', u"'s", u'approval', u',', u'Coulomb', u'return', u'to', u'Paris', u'in', u'1759', u'where', u'he', u'be', u'successful', u'in', u'the', u'entrance', u'examination', u'for', u'the', u'military', u'school', u'at', u'Mzires', u'.'], u'pos': [u'IN', u'PRP$', u'NN', u'POS', u'NN', u',', u'NNP', u'VBD', u'TO', u'NNP', u'IN', u'CD', u'WRB', u'PRP', u'VBD', u'JJ', u'IN', u'DT', u'NN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[909, 913], [914, 917], [918, 924], [924, 926], [927, 935], [935, 936], [937, 944], [945, 953], [954, 956], [957, 962], [963, 965], [966, 970], [971, 976], [977, 979], [980, 983], [984, 994], [995, 997], [998, 1001], [1002, 1010], [1011, 1022], [1023, 1026], [1027, 1030], [1031, 1039], [1040, 1046], [1047, 1049], [1050, 1056], [1056, 1057]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.043754499405622482, {u'tokens': [u'-', u'Deuxieme', u'Mmoire', u'sur', u'lElectricit', u'et', u'le', u'Magntisme', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'578-611', u',', u'1785', u'.'], u'lemmas': [u'-', u'Deuxieme', u'Mmoire', u'sur', u'lElectricit', u'et', u'le', u'Magntisme', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'578-611', u',', u'1785', u'.'], u'pos': [u':', u'NNP', u'NNP', u'NN', u'NNP', u'FW', u'FW', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNPS', u',', u'CD', u',', u'CD', u'.'], u'char_offsets': [[4118, 4119], [4120, 4128], [4129, 4135], [4136, 4139], [4140, 4151], [4152, 4154], [4155, 4157], [4158, 4167], [4169, 4177], [4178, 4180], [4181, 4189], [4190, 4196], [4197, 4200], [4201, 4209], [4209, 4210], [4211, 4218], [4218, 4219], [4220, 4224], [4225, 4226]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.040964975953102112, {u'tokens': [u'-', u'Troisime', u'Mmoire', u'sur', u'lElectricit', u'et', u'le', u'Magntisme', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'612-638', u',', u'1785', u'.'], u'lemmas': [u'-', u'troisime', u'mmoire', u'sur', u'lelectricit', u'et', u'le', u'Magntisme', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'612-638', u',', u'1785', u'.'], u'pos': [u':', u'FW', u'FW', u'FW', u'NN', u'FW', u'FW', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNPS', u',', u'CD', u',', u'CD', u'.'], u'char_offsets': [[4397, 4398], [4399, 4407], [4408, 4414], [4415, 4418], [4419, 4430], [4431, 4433], [4434, 4436], [4437, 4446], [4448, 4456], [4457, 4459], [4460, 4468], [4469, 4475], [4476, 4479], [4480, 4488], [4488, 4489], [4490, 4497], [4497, 4498], [4499, 4503], [4504, 4505]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.040780395269393921, {u'tokens': [u'In', u'1785', u',', u'Coulomb', u'presented', u'his', u'three', u'reports', u'on', u'Electricity', u'and', u'Magnetism', u':', u'-', u'Premier', u'Mmoire', u'sur', u'lElectricit', u'et', u'le', u'Magntisme', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'569-577', u',', u'1785', u'.'], u'lemmas': [u'in', u'1785', u',', u'Coulomb', u'present', u'he', u'three', u'report', u'on', u'Electricity', u'and', u'Magnetism', u':', u'-', u'Premier', u'Mmoire', u'sur', u'lElectricit', u'et', u'le', u'Magntisme', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'569-577', u',', u'1785', u'.'], u'pos': [u'IN', u'CD', u',', u'NNP', u'VBD', u'PRP$', u'CD', u'NNS', u'IN', u'NNP', u'CC', u'NNP', u':', u':', u'NNP', u'NNP', u'NN', u'NNP', u'FW', u'FW', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNPS', u',', u'CD', u',', u'CD', u'.'], u'char_offsets': [[3576, 3578], [3579, 3583], [3583, 3584], [3585, 3592], [3593, 3602], [3603, 3606], [3607, 3612], [3613, 3620], [3621, 3623], [3624, 3635], [3636, 3639], [3640, 3649], [3649, 3650], [3651, 3652], [3653, 3660], [3661, 3667], [3668, 3671], [3672, 3683], [3684, 3686], [3687, 3689], [3690, 3699], [3701, 3709], [3710, 3712], [3713, 3721], [3722, 3728], [3729, 3732], [3733, 3741], [3741, 3742], [3743, 3750], [3750, 3751], [3752, 3756], [3757, 3758]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Was Charles-Augustin de Coulomb ever employed at La Rochelle?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Charles-Augustin_de_Coulomb
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set4/a6.txt

No
----------------------------- Captured stderr call -----------------------------
INFO:CoreNLP_JavaServer: INPUT: 500 documents, 1401903 characters, 263022 tokens, 2803.8 char/doc, 526.0 tok/doc RATES: 19.454 doc/sec, 10233.5 tok/sec

_____________________________ test_yesno[param68] ______________________________

param = (<src.question_processing.Question_parser instance at 0x10cab1a70>, (<src.tfidf.TF_IDF object at 0x10b195490>, set(['charles-augustin', 'charles-augustin_de_coulomb', 'coulomb', 'de'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes, upon his return to France, with the rank of Captain, he was employed at La Rochelle.')
E            +    where 'Yes, upon his return to France, with the rank of Captain, he was employed at La Rochelle.' = <src.question_processing.Question_parser instance at 0x10cab1a70>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.45635640621185303, {u'tokens': [u'Upon', u'his', u'return', u'to', u'France', u',', u'with', u'the', u'rank', u'of', u'Captain', u',', u'he', u'was', u'employed', u'at', u'La', u'Rochelle', u',', u'the', u'Isle', u'of', u'Aix', u'and', u'Cherbourg', u'.'], u'lemmas': [u'upon', u'he', u'return', u'to', u'France', u',', u'with', u'the', u'rank', u'of', u'Captain', u',', u'he', u'be', u'employ', u'at', u'La', u'Rochelle', u',', u'the', u'Isle', u'of', u'Aix', u'and', u'Cherbourg', u'.'], u'pos': [u'IN', u'PRP$', u'NN', u'TO', u'NNP', u',', u'IN', u'DT', u'NN', u'IN', u'NNP', u',', u'PRP', u'VBD', u'VBN', u'IN', u'NNP', u'NNP', u',', u'DT', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'.'], u'char_offsets': [[1720, 1724], [1725, 1728], [1729, 1735], [1736, 1738], [1739, 1745], [1745, 1746], [1747, 1751], [1752, 1755], [1756, 1760], [1761, 1763], [1764, 1771], [1771, 1772], [1773, 1775], [1776, 1779], [1780, 1788], [1789, 1791], [1792, 1794], [1795, 1803], [1803, 1804], [1805, 1808], [1809, 1813], [1814, 1816], [1817, 1820], [1821, 1824], [1825, 1834], [1834, 1835]]}) 
answer: set([u'ever'])
candidate Sentence: (0.20719459652900696, {u'tokens': [u'Charles-Augustin', u'de', u'Coulomb', u'-LRB-', u'14', u'June', u'1736', u'23', u'August', u'1806', u'-RRB-', u'was', u'a', u'French', u'physicist', u'.'], u'lemmas': [u'Charles-Augustin', u'de', u'Coulomb', u'-lrb-', u'14', u'June', u'1736', u'23', u'August', u'1806', u'-rrb-', u'be', u'a', u'french', u'physicist', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'-LRB-', u'CD', u'NNP', u'CD', u'CD', u'NNP', u'CD', u'-RRB-', u'VBD', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[0, 16], [17, 19], [20, 27], [28, 29], [29, 31], [32, 36], [37, 41], [43, 45], [46, 52], [53, 57], [57, 58], [59, 62], [63, 64], [65, 71], [72, 81], [81, 82]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.07401999831199646, {u'tokens': [u'In', u'1781', u',', u'he', u'was', u'stationed', u'permanently', u'at', u'Paris', u'.'], u'lemmas': [u'in', u'1781', u',', u'he', u'be', u'station', u'permanently', u'at', u'Paris', u'.'], u'pos': [u'IN', u'CD', u',', u'PRP', u'VBD', u'VBN', u'RB', u'IN', u'NNP', u'.'], u'char_offsets': [[1984, 1986], [1987, 1991], [1991, 1992], [1993, 1995], [1996, 1999], [2000, 2009], [2010, 2021], [2022, 2024], [2025, 2030], [2030, 2031]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.068351730704307556, {u'tokens': [u'When', u'Coulomb', u'was', u'a', u'boy', u',', u'the', u'family', u'moved', u'to', u'Paris', u'and', u'there', u'Coulomb', u'studied', u'at', u'the', u'prestigious', u'Collge', u'des', u'Quatre-Nations', u'.'], u'lemmas': [u'when', u'Coulomb', u'be', u'a', u'boy', u',', u'the', u'family', u'move', u'to', u'Paris', u'and', u'there', u'Coulomb', u'study', u'at', u'the', u'prestigious', u'Collge', u'des', u'Quatre-Nations', u'.'], u'pos': [u'WRB', u'NNP', u'VBD', u'DT', u'NN', u',', u'DT', u'NN', u'VBD', u'TO', u'NNP', u'CC', u'EX', u'NNP', u'VBN', u'IN', u'DT', u'JJ', u'NNP', u'FW', u'NNP', u'.'], u'char_offsets': [[472, 476], [477, 484], [485, 488], [489, 490], [491, 494], [494, 495], [496, 499], [500, 506], [507, 512], [513, 515], [516, 521], [522, 525], [526, 531], [532, 539], [540, 547], [548, 550], [551, 554], [555, 566], [567, 573], [574, 577], [578, 592], [592, 593]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.066889733076095581, {u'tokens': [u'In', u'1784', u',', u'his', u'Recherches', u'thoriques', u'et', u'exprimentales', u'sur', u'la', u'force', u'de', u'torsion', u'et', u'sur', u"l'lasticit", u'des', u'fils', u'de', u'metal', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'229-269', u',', u'1784', u'-LRB-', u'Theoretical', u'research', u'and', u'experimentation', u'on', u'torsion', u'and', u'the', u'elasticity', u'of', u'metal', u'wire', u'-RRB-', u'appeared', u'.'], u'lemmas': [u'in', u'1784', u',', u'he', u'recherch', u'thorique', u'et', u'exprimentales', u'sur', u'la', u'force', u'de', u'torsion', u'et', u'sur', u"l'lasticit", u'des', u'fils', u'de', u'metal', u'histoire', u'de', u'lacadmie', u'royale', u'des', u'Sciences', u',', u'229-269', u',', u'1784', u'-lrb-', u'theoretical', u'research', u'and', u'experimentation', u'on', u'torsion', u'and', u'the', u'elasticity', u'of', u'metal', u'wire', u'-rrb-', u'appear', u'.'], u'pos': [u'IN', u'CD', u',', u'PRP$', u'NNS', u'NNS', u'FW', u'FW', u'FW', u'FW', u'NN', u'IN', u'NN', u'FW', u'FW', u'FW', u'FW', u'FW', u'FW', u'NN', u'FW', u'FW', u'FW', u'FW', u'FW', u'NNPS', u',', u'CD', u',', u'CD', u'-LRB-', u'JJ', u'NN', u'CC', u'NN', u'IN', u'NN', u'CC', u'DT', u'NN', u'IN', u'NN', u'NN', u'-RRB-', u'VBD', u'.'], u'char_offsets': [[2680, 2682], [2683, 2687], [2687, 2688], [2689, 2692], [2693, 2703], [2704, 2713], [2714, 2716], [2717, 2730], [2731, 2734], [2735, 2737], [2738, 2743], [2744, 2746], [2747, 2754], [2755, 2757], [2758, 2761], [2762, 2772], [2773, 2776], [2777, 2781], [2782, 2784], [2785, 2790], [2791, 2799], [2800, 2802], [2803, 2811], [2812, 2818], [2819, 2822], [2823, 2831], [2831, 2832], [2833, 2840], [2840, 2841], [2842, 2846], [2848, 2849], [2849, 2860], [2861, 2869], [2870, 2873], [2874, 2889], [2890, 2892], [2893, 2900], [2901, 2904], [2905, 2908], [2909, 2919], [2920, 2922], [2923, 2928], [2929, 2933], [2933, 2934], [2935, 2943], [2943, 2944]]}) 
answer: set([u'employ', u'ever', u'rochel'])
candidate Sentence: (0.052426088601350784, {u'tokens': [u'Determination', u'of', u'electric', u'density', u'at', u'different', u'points', u'on', u'the', u'surface', u'of', u'these', u'bodies', u'.', u"''"], u'lemmas': [u'determination', u'of', u'electric', u'density', u'at', u'different', u'point', u'on', u'the', u'surface', u'of', u'these', u'body', u'.', u"''"], u'pos': [u'NN', u'IN', u'JJ', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNS', u'.', u"''"], u'char_offsets': [[5531, 5544], [5545, 5547], [5548, 5556], [5557, 5564], [5565, 5567], [5568, 5577], [5578, 5584], [5585, 5587], [5588, 5591], [5592, 5599], [5600, 5602], [5603, 5608], [5609, 5615], [5615, 5616], [5616, 5617]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.052361883223056793, {u'tokens': [u'With', u'his', u'father', u"'s", u'approval', u',', u'Coulomb', u'returned', u'to', u'Paris', u'in', u'1759', u'where', u'he', u'was', u'successful', u'in', u'the', u'entrance', u'examination', u'for', u'the', u'military', u'school', u'at', u'Mzires', u'.'], u'lemmas': [u'with', u'he', u'father', u"'s", u'approval', u',', u'Coulomb', u'return', u'to', u'Paris', u'in', u'1759', u'where', u'he', u'be', u'successful', u'in', u'the', u'entrance', u'examination', u'for', u'the', u'military', u'school', u'at', u'Mzires', u'.'], u'pos': [u'IN', u'PRP$', u'NN', u'POS', u'NN', u',', u'NNP', u'VBD', u'TO', u'NNP', u'IN', u'CD', u'WRB', u'PRP', u'VBD', u'JJ', u'IN', u'DT', u'NN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[909, 913], [914, 917], [918, 924], [924, 926], [927, 935], [935, 936], [937, 944], [945, 953], [954, 956], [957, 962], [963, 965], [966, 970], [971, 976], [977, 979], [980, 983], [984, 994], [995, 997], [998, 1001], [1002, 1010], [1011, 1022], [1023, 1026], [1027, 1030], [1031, 1039], [1040, 1046], [1047, 1049], [1050, 1056], [1056, 1057]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.043754499405622482, {u'tokens': [u'-', u'Deuxieme', u'Mmoire', u'sur', u'lElectricit', u'et', u'le', u'Magntisme', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'578-611', u',', u'1785', u'.'], u'lemmas': [u'-', u'Deuxieme', u'Mmoire', u'sur', u'lElectricit', u'et', u'le', u'Magntisme', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'578-611', u',', u'1785', u'.'], u'pos': [u':', u'NNP', u'NNP', u'NN', u'NNP', u'FW', u'FW', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNPS', u',', u'CD', u',', u'CD', u'.'], u'char_offsets': [[4118, 4119], [4120, 4128], [4129, 4135], [4136, 4139], [4140, 4151], [4152, 4154], [4155, 4157], [4158, 4167], [4169, 4177], [4178, 4180], [4181, 4189], [4190, 4196], [4197, 4200], [4201, 4209], [4209, 4210], [4211, 4218], [4218, 4219], [4220, 4224], [4225, 4226]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.040964975953102112, {u'tokens': [u'-', u'Troisime', u'Mmoire', u'sur', u'lElectricit', u'et', u'le', u'Magntisme', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'612-638', u',', u'1785', u'.'], u'lemmas': [u'-', u'troisime', u'mmoire', u'sur', u'lelectricit', u'et', u'le', u'Magntisme', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'612-638', u',', u'1785', u'.'], u'pos': [u':', u'FW', u'FW', u'FW', u'NN', u'FW', u'FW', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNPS', u',', u'CD', u',', u'CD', u'.'], u'char_offsets': [[4397, 4398], [4399, 4407], [4408, 4414], [4415, 4418], [4419, 4430], [4431, 4433], [4434, 4436], [4437, 4446], [4448, 4456], [4457, 4459], [4460, 4468], [4469, 4475], [4476, 4479], [4480, 4488], [4488, 4489], [4490, 4497], [4497, 4498], [4499, 4503], [4504, 4505]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
candidate Sentence: (0.040780395269393921, {u'tokens': [u'In', u'1785', u',', u'Coulomb', u'presented', u'his', u'three', u'reports', u'on', u'Electricity', u'and', u'Magnetism', u':', u'-', u'Premier', u'Mmoire', u'sur', u'lElectricit', u'et', u'le', u'Magntisme', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'569-577', u',', u'1785', u'.'], u'lemmas': [u'in', u'1785', u',', u'Coulomb', u'present', u'he', u'three', u'report', u'on', u'Electricity', u'and', u'Magnetism', u':', u'-', u'Premier', u'Mmoire', u'sur', u'lElectricit', u'et', u'le', u'Magntisme', u'Histoire', u'de', u'lAcadmie', u'Royale', u'des', u'Sciences', u',', u'569-577', u',', u'1785', u'.'], u'pos': [u'IN', u'CD', u',', u'NNP', u'VBD', u'PRP$', u'CD', u'NNS', u'IN', u'NNP', u'CC', u'NNP', u':', u':', u'NNP', u'NNP', u'NN', u'NNP', u'FW', u'FW', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNPS', u',', u'CD', u',', u'CD', u'.'], u'char_offsets': [[3576, 3578], [3579, 3583], [3583, 3584], [3585, 3592], [3593, 3602], [3603, 3606], [3607, 3612], [3613, 3620], [3621, 3623], [3624, 3635], [3636, 3639], [3640, 3649], [3649, 3650], [3651, 3652], [3653, 3660], [3661, 3667], [3668, 3671], [3672, 3683], [3684, 3686], [3687, 3689], [3690, 3699], [3701, 3709], [3710, 3712], [3713, 3721], [3722, 3728], [3729, 3732], [3733, 3741], [3741, 3742], [3743, 3750], [3750, 3751], [3752, 3756], [3757, 3758]]}) 
answer: set([u'employ', u'ever', u'rochel', u'la'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Was Charles-Augustin de Coulomb ever employed at La Rochelle?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes, upon his return to France, with the rank of Captain, he was employed at La Rochelle.
Difficulty = easy
Article_Title = Charles-Augustin_de_Coulomb
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set4/a6.txt

No
_____________________________ test_yesno[param73] ______________________________

param = (<src.question_processing.Question_parser instance at 0x10cab1b90>, (<src.tfidf.TF_IDF object at 0x108044b10>, set(['chinese', 'chinese_language', 'language'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cab1b90>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.58732402324676514, {u'tokens': [u'Examples', u'of', u'such', u'words', u'are', u'``', u'tea', u"''", u'from', u'the', u'Minnan', u'pronunciation', u'of', u'-LRB-', u'POJ', u':', u't', u'-RRB-', u',', u'``', u'ketchup', u"''", u'from', u'the', u'Minnan', u'pronunciation', u'of', u'-LRB-', u'koe-tsiap', u'-RRB-', u',', u'and', u'``', u'kumquat', u"''", u'from', u'the', u'Cantonese', u'pronunciation', u'of', u'-LRB-', u'kam', u'kuat', u'-RRB-', u'.'], u'lemmas': [u'example', u'of', u'such', u'word', u'be', u'``', u'tea', u"''", u'from', u'the', u'minnan', u'pronunciation', u'of', u'-lrb-', u'poj', u':', u't', u'-rrb-', u',', u'``', u'ketchup', u"''", u'from', u'the', u'minnan', u'pronunciation', u'of', u'-lrb-', u'koe-tsiap', u'-rrb-', u',', u'and', u'``', u'kumquat', u"''", u'from', u'the', u'cantonese', u'pronunciation', u'of', u'-lrb-', u'kam', u'kuat', u'-rrb-', u'.'], u'pos': [u'NNS', u'IN', u'JJ', u'NNS', u'VBP', u'``', u'NN', u"''", u'IN', u'DT', u'JJ', u'NN', u'IN', u'-LRB-', u'NN', u':', u'NN', u'-RRB-', u',', u'``', u'NN', u"''", u'IN', u'DT', u'JJ', u'NN', u'IN', u'-LRB-', u'NN', u'-RRB-', u',', u'CC', u'``', u'NN', u"''", u'IN', u'DT', u'JJ', u'NN', u'IN', u'-LRB-', u'FW', u'FW', u'-RRB-', u'.'], u'char_offsets': [[22750, 22758], [22759, 22761], [22762, 22766], [22767, 22772], [22773, 22776], [22777, 22778], [22778, 22781], [22781, 22782], [22783, 22787], [22788, 22791], [22792, 22798], [22799, 22812], [22813, 22815], [22817, 22818], [22818, 22821], [22821, 22822], [22823, 22824], [22824, 22825], [22825, 22826], [22827, 22828], [22828, 22835], [22835, 22836], [22837, 22841], [22842, 22845], [22846, 22852], [22853, 22866], [22867, 22869], [22871, 22872], [22872, 22881], [22881, 22882], [22882, 22883], [22884, 22887], [22888, 22889], [22889, 22896], [22896, 22897], [22898, 22902], [22903, 22906], [22907, 22916], [22917, 22930], [22931, 22933], [22935, 22936], [22936, 22939], [22940, 22944], [22944, 22945], [22945, 22946]]}) 
answer: set([u'&#27713;', u'come', u'&#39853;'])
candidate Sentence: (0.20266631245613098, {u'tokens': [u'From', u'French', u'came', u'-LRB-', u'bli', u',', u'``', u'ballet', u"''", u'-RRB-', u',', u'-LRB-', u'xingbn', u',', u'``', u'champagne', u"''", u'-RRB-', u',', u'via', u'Italian', u'-LRB-', u'kfi', u',', u'``', u'caff', u"''", u'-RRB-', u'.'], u'lemmas': [u'from', u'French', u'come', u'-lrb-', u'blus', u',', u'``', u'ballet', u"''", u'-rrb-', u',', u'-lrb-', u'xingbn', u',', u'``', u'champagne', u"''", u'-rrb-', u',', u'via', u'italian', u'-lrb-', u'kfus', u',', u'``', u'caff', u"''", u'-rrb-', u'.'], u'pos': [u'IN', u'NNP', u'VBD', u'-LRB-', u'NN', u',', u'``', u'JJ', u"''", u'-RRB-', u',', u'-LRB-', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u',', u'IN', u'JJ', u'-LRB-', u'NN', u',', u'``', u'FW', u"''", u'-RRB-', u'.'], u'char_offsets': [[36204, 36208], [36209, 36215], [36216, 36220], [36222, 36223], [36223, 36226], [36226, 36227], [36228, 36229], [36229, 36235], [36235, 36236], [36236, 36237], [36237, 36238], [36240, 36241], [36241, 36247], [36247, 36248], [36249, 36250], [36250, 36259], [36259, 36260], [36260, 36261], [36261, 36262], [36263, 36266], [36267, 36274], [36276, 36277], [36277, 36280], [36280, 36281], [36282, 36283], [36283, 36287], [36287, 36288], [36288, 36289], [36289, 36290]]}) 
answer: set([u'minnan', u'&#39853;', u'pronunci', u'&#27713;', u'ketchup', u'koe-tsiap'])
candidate Sentence: (0.19806136190891266, {u'tokens': [u'Other', u'words', u'came', u'from', u'nomadic', u'peoples', u'to', u'the', u'north', u',', u'such', u'as', u'``', u'hutong', u'.', u"''"], u'lemmas': [u'other', u'word', u'come', u'from', u'nomadic', u'people', u'to', u'the', u'north', u',', u'such', u'as', u'``', u'hutong', u'.', u"''"], u'pos': [u'JJ', u'NNS', u'VBD', u'IN', u'JJ', u'NNS', u'TO', u'DT', u'NN', u',', u'JJ', u'IN', u'``', u'JJ', u'.', u"''"], u'char_offsets': [[34776, 34781], [34782, 34787], [34788, 34792], [34793, 34797], [34798, 34805], [34806, 34813], [34814, 34816], [34817, 34820], [34821, 34826], [34826, 34827], [34828, 34832], [34833, 34835], [34837, 34838], [34838, 34844], [34844, 34845], [34845, 34846]]}) 
answer: set([u'-rrb-', u'ketchup', u'&#39853;', u'pronunci', u'-lrb-', u'&#27713;', u'minnan', u'koe-tsiap'])
candidate Sentence: (0.16410157084465027, {u'tokens': [u'This', u'is', u'done', u'by', u'employing', u'Chinese', u'characters', u'with', u'similar', u'pronunciations', u'.'], u'lemmas': [u'this', u'be', u'do', u'by', u'employ', u'chinese', u'character', u'with', u'similar', u'pronunciation', u'.'], u'pos': [u'DT', u'VBZ', u'VBN', u'IN', u'VBG', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[35427, 35431], [35432, 35434], [35435, 35439], [35440, 35442], [35443, 35452], [35453, 35460], [35461, 35471], [35472, 35476], [35477, 35484], [35485, 35499], [35499, 35500]]}) 
answer: set([u'-rrb-', u'ketchup', u'&#39853;', u'-lrb-', u'&#27713;', u'come', u'minnan', u'koe-tsiap'])
candidate Sentence: (0.13332490622997284, {u'tokens': [u'The', u'evidence', u'for', u'the', u'pronunciation', u'of', u'Middle', u'Chinese', u'comes', u'from', u'several', u'sources', u':', u'modern', u'dialect', u'variations', u',', u'rhyming', u'dictionaries', u',', u'foreign', u'transliterations', u',', u'``', u'rhyming', u'tables', u"''", u'constructed', u'by', u'ancient', u'Chinese', u'philologists', u'to', u'summarize', u'the', u'phonetic', u'system', u',', u'and', u'Chinese', u'phonetic', u'translations', u'of', u'foreign', u'words', u'.'], u'lemmas': [u'the', u'evidence', u'for', u'the', u'pronunciation', u'of', u'Middle', u'Chinese', u'come', u'from', u'several', u'source', u':', u'modern', u'dialect', u'variation', u',', u'rhyme', u'dictionary', u',', u'foreign', u'transliteration', u',', u'``', u'rhyming', u'table', u"''", u'construct', u'by', u'ancient', u'chinese', u'philologist', u'to', u'summarize', u'the', u'phonetic', u'system', u',', u'and', u'chinese', u'phonetic', u'translation', u'of', u'foreign', u'word', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'VBZ', u'IN', u'JJ', u'NNS', u':', u'JJ', u'NN', u'NNS', u',', u'VBG', u'NNS', u',', u'JJ', u'NNS', u',', u'``', u'JJ', u'NNS', u"''", u'VBN', u'IN', u'JJ', u'JJ', u'NNS', u'TO', u'VB', u'DT', u'JJ', u'NN', u',', u'CC', u'JJ', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[17875, 17878], [17879, 17887], [17888, 17891], [17892, 17895], [17896, 17909], [17910, 17912], [17913, 17919], [17920, 17927], [17928, 17933], [17934, 17938], [17939, 17946], [17947, 17954], [17954, 17955], [17956, 17962], [17963, 17970], [17971, 17981], [17981, 17982], [17983, 17990], [17991, 18003], [18003, 18004], [18005, 18012], [18013, 18029], [18029, 18030], [18031, 18032], [18032, 18039], [18040, 18046], [18046, 18047], [18048, 18059], [18060, 18062], [18063, 18070], [18071, 18078], [18079, 18091], [18092, 18094], [18095, 18104], [18105, 18108], [18109, 18117], [18118, 18124], [18124, 18125], [18126, 18129], [18130, 18137], [18138, 18146], [18147, 18159], [18160, 18162], [18163, 18170], [18171, 18176], [18176, 18177]]}) 
answer: set([u'-rrb-', u'minnan', u'&#39853;', u'-lrb-', u'&#27713;', u'ketchup', u'koe-tsiap'])
candidate Sentence: (0.13224391639232635, {u'tokens': [u'the', u'above-mentioned', u'-LRB-', u'shf', u'``', u'sofa', u"''", u'-RRB-', u',', u'-LRB-', u'yum', u'``', u'humour', u"''", u'-RRB-', u',', u'and', u'-LRB-', u'gorf', u',', u'``', u'golf', u"''", u'-RRB-', u'.'], u'lemmas': [u'the', u'above-mentioned', u'-lrb-', u'shf', u'``', u'sofa', u"''", u'-rrb-', u',', u'-lrb-', u'yum', u'``', u'humour', u"''", u'-rrb-', u',', u'and', u'-lrb-', u'gorf', u',', u'``', u'golf', u"''", u'-rrb-', u'.'], u'pos': [u'DT', u'JJ', u'-LRB-', u'NN', u'``', u'NN', u"''", u'-RRB-', u',', u'-LRB-', u'NN', u'``', u'NN', u"''", u'-RRB-', u',', u'CC', u'-LRB-', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u'.'], u'char_offsets': [[36416, 36419], [36420, 36435], [36437, 36438], [36438, 36441], [36442, 36443], [36443, 36447], [36447, 36448], [36448, 36449], [36449, 36450], [36452, 36453], [36453, 36456], [36457, 36458], [36458, 36464], [36464, 36465], [36465, 36466], [36466, 36467], [36468, 36471], [36473, 36474], [36474, 36478], [36478, 36479], [36480, 36481], [36481, 36485], [36485, 36486], [36486, 36487], [36487, 36488]]}) 
answer: set([u'ketchup', u'&#39853;', u'pronunci', u'&#27713;', u'come', u'minnan', u'koe-tsiap'])
candidate Sentence: (0.12329269200563431, {u'tokens': [u'Examples', u'include', u'dinhu', u'-LRB-', u'/', u',', u'denwa', u',', u'``', u'telephone', u"''", u'-RRB-', u',', u'shhu', u'-LRB-', u',', u'shakai', u',', u'``', u'society', u"''", u'-RRB-', u',', u'kxu', u'-LRB-', u'/', u',', u'kagaku', u',', u'``', u'science', u"''", u'-RRB-', u'and', u'chuxing', u'-LRB-', u',', u'chsh', u',', u'``', u'abstract', u"''", u'-RRB-', u'.'], u'lemmas': [u'example', u'include', u'dinhu', u'-lrb-', u'/', u',', u'denwa', u',', u'``', u'telephone', u"''", u'-rrb-', u',', u'shhu', u'-lrb-', u',', u'shakaus', u',', u'``', u'society', u"''", u'-rrb-', u',', u'kxu', u'-lrb-', u'/', u',', u'kagaku', u',', u'``', u'science', u"''", u'-rrb-', u'and', u'chuxing', u'-lrb-', u',', u'chsh', u',', u'``', u'abstract', u"''", u'-rrb-', u'.'], u'pos': [u'NNS', u'VBP', u'NN', u'-LRB-', u':', u',', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u',', u'NN', u'-LRB-', u',', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u',', u'NN', u'-LRB-', u':', u',', u'FW', u',', u'``', u'NN', u"''", u'-RRB-', u'CC', u'NN', u'-LRB-', u',', u'NN', u',', u'``', u'JJ', u"''", u'-RRB-', u'.'], u'char_offsets': [[38566, 38574], [38575, 38582], [38583, 38588], [38589, 38590], [38590, 38591], [38591, 38592], [38593, 38598], [38598, 38599], [38600, 38601], [38601, 38610], [38610, 38611], [38611, 38612], [38612, 38613], [38614, 38618], [38619, 38620], [38620, 38621], [38622, 38628], [38628, 38629], [38630, 38631], [38631, 38638], [38638, 38639], [38639, 38640], [38640, 38641], [38642, 38645], [38646, 38647], [38647, 38648], [38648, 38649], [38650, 38656], [38656, 38657], [38658, 38659], [38659, 38666], [38666, 38667], [38667, 38668], [38669, 38672], [38673, 38680], [38681, 38682], [38682, 38683], [38684, 38688], [38688, 38689], [38690, 38691], [38691, 38699], [38699, 38700], [38700, 38701], [38701, 38702]]}) 
answer: set([u'ketchup', u'&#39853;', u'pronunci', u'&#27713;', u'come', u'minnan', u'koe-tsiap'])
candidate Sentence: (0.11467646807432175, {u'tokens': [u'Later', u'United', u'States', u'soft', u'influences', u'gave', u'rise', u'to', u'-LRB-', u'dsk', u',', u'``', u'disco', u"''", u'-RRB-', u',', u'-LRB-', u'kl', u',', u'``', u'cola', u"''", u'-RRB-', u'and', u'-LRB-', u'mn', u',', u'``', u'mini', u'-LRB-', u'skirt', u'-RRB-', u"''", u'-RRB-', u'.'], u'lemmas': [u'later', u'United', u'States', u'soft', u'influence', u'give', u'rise', u'to', u'-lrb-', u'dsk', u',', u'``', u'disco', u"''", u'-rrb-', u',', u'-lrb-', u'kl', u',', u'``', u'cola', u"''", u'-rrb-', u'and', u'-lrb-', u'mn', u',', u'``', u'minus', u'-lrb-', u'skirt', u'-rrb-', u"''", u'-rrb-', u'.'], u'pos': [u'RB', u'NNP', u'NNPS', u'JJ', u'NNS', u'VBD', u'NN', u'TO', u'-LRB-', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u',', u'-LRB-', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u'CC', u'-LRB-', u'NN', u',', u'``', u'NNS', u'-LRB-', u'NN', u'-RRB-', u"''", u'-RRB-', u'.'], u'char_offsets': [[36489, 36494], [36495, 36501], [36502, 36508], [36509, 36513], [36514, 36524], [36525, 36529], [36530, 36534], [36535, 36537], [36539, 36540], [36540, 36543], [36543, 36544], [36545, 36546], [36546, 36551], [36551, 36552], [36552, 36553], [36553, 36554], [36556, 36557], [36557, 36559], [36559, 36560], [36561, 36562], [36562, 36566], [36566, 36567], [36567, 36568], [36569, 36572], [36574, 36575], [36575, 36577], [36577, 36578], [36579, 36580], [36580, 36584], [36584, 36585], [36585, 36590], [36590, 36591], [36591, 36592], [36592, 36593], [36593, 36594]]}) 
answer: set([u'ketchup', u'&#39853;', u'pronunci', u'&#27713;', u'come', u'minnan', u'koe-tsiap'])
candidate Sentence: (0.11079610884189606, {u'tokens': [u'The', u'previous', u'examples', u'of', u'j', u',', u'for', u'instance', u',', u'for', u'``', u'stimulated', u"''", u',', u'``', u'chicken', u"''", u',', u'and', u'``', u'machine', u"''", u',', u'have', u'distinct', u'pronunciations', u'in', u'Cantonese', u'-LRB-', u'romanized', u'using', u'jyutping', u'-RRB-', u':', u'gik1', u',', u'gai1', u',', u'and', u'gei1', u',', u'respectively', u'.'], u'lemmas': [u'the', u'previous', u'example', u'of', u'j', u',', u'for', u'instance', u',', u'for', u'``', u'stimulate', u"''", u',', u'``', u'chicken', u"''", u',', u'and', u'``', u'machine', u"''", u',', u'have', u'distinct', u'pronunciation', u'in', u'cantonese', u'-lrb-', u'romanize', u'use', u'jyutping', u'-rrb-', u':', u'gik1', u',', u'gai1', u',', u'and', u'gei1', u',', u'respectively', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u'IN', u'NN', u',', u'IN', u'NN', u',', u'IN', u'``', u'VBN', u"''", u',', u'``', u'NN', u"''", u',', u'CC', u'``', u'NN', u"''", u',', u'VBP', u'JJ', u'NNS', u'IN', u'NN', u'-LRB-', u'VBN', u'VBG', u'NN', u'-RRB-', u':', u'NN', u',', u'NN', u',', u'CC', u'NN', u',', u'RB', u'.'], u'char_offsets': [[32590, 32593], [32594, 32602], [32603, 32611], [32612, 32614], [32615, 32616], [32616, 32617], [32618, 32621], [32622, 32630], [32630, 32631], [32632, 32635], [32636, 32637], [32637, 32647], [32647, 32648], [32648, 32649], [32650, 32651], [32651, 32658], [32658, 32659], [32659, 32660], [32661, 32664], [32665, 32666], [32666, 32673], [32673, 32674], [32674, 32675], [32676, 32680], [32681, 32689], [32690, 32704], [32705, 32707], [32708, 32717], [32718, 32719], [32719, 32728], [32729, 32734], [32735, 32743], [32743, 32744], [32744, 32745], [32746, 32750], [32750, 32751], [32752, 32756], [32756, 32757], [32758, 32761], [32762, 32766], [32766, 32767], [32768, 32780], [32780, 32781]]}) 
answer: set([u'minnan', u'&#39853;', u'&#27713;', u'come', u'ketchup', u'koe-tsiap'])
candidate Sentence: (0.10853917151689529, {u'tokens': [u'-LRB-', u'fns', u',', u'``', u'fans', u"''", u'-RRB-', u',', u'-LRB-', u'hik', u',', u'``', u'hacker', u"''", u'-RRB-', u',', u'-LRB-', u'blug', u',', u'blog', u'-RRB-', u'in', u'Taiwanese', u'Mandarin', u'.'], u'lemmas': [u'-lrb-', u'fn', u',', u'``', u'fan', u"''", u'-rrb-', u',', u'-lrb-', u'hik', u',', u'``', u'hacker', u"''", u'-rrb-', u',', u'-lrb-', u'blug', u',', u'blog', u'-rrb-', u'in', u'taiwanese', u'Mandarin', u'.'], u'pos': [u'-LRB-', u'NNS', u',', u'``', u'NNS', u"''", u'-RRB-', u',', u'-LRB-', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u',', u'-LRB-', u'NN', u',', u'NN', u'-RRB-', u'IN', u'JJ', u'NNP', u'.'], u'char_offsets': [[36843, 36844], [36844, 36847], [36847, 36848], [36849, 36850], [36850, 36854], [36854, 36855], [36855, 36856], [36856, 36857], [36859, 36860], [36860, 36863], [36863, 36864], [36865, 36866], [36866, 36872], [36872, 36873], [36873, 36874], [36874, 36875], [36876, 36877], [36877, 36881], [36881, 36882], [36882, 36886], [36886, 36887], [36888, 36890], [36891, 36900], [36901, 36909], [36909, 36910]]}) 
answer: set([u'ketchup', u'&#39853;', u'pronunci', u'&#27713;', u'come', u'minnan', u'koe-tsiap'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Does "ketchup" come from the Minnan pronunciation of &#39853;&#27713; (koe-tsiap)?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Chinese_language
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set5/a7.txt

No
_____________________________ test_yesno[param74] ______________________________

param = (<src.question_processing.Question_parser instance at 0x10cab1bd8>, (<src.tfidf.TF_IDF object at 0x108044b10>, set(['chinese', 'chinese_language', 'language'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cab1bd8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.58732402324676514, {u'tokens': [u'Examples', u'of', u'such', u'words', u'are', u'``', u'tea', u"''", u'from', u'the', u'Minnan', u'pronunciation', u'of', u'-LRB-', u'POJ', u':', u't', u'-RRB-', u',', u'``', u'ketchup', u"''", u'from', u'the', u'Minnan', u'pronunciation', u'of', u'-LRB-', u'koe-tsiap', u'-RRB-', u',', u'and', u'``', u'kumquat', u"''", u'from', u'the', u'Cantonese', u'pronunciation', u'of', u'-LRB-', u'kam', u'kuat', u'-RRB-', u'.'], u'lemmas': [u'example', u'of', u'such', u'word', u'be', u'``', u'tea', u"''", u'from', u'the', u'minnan', u'pronunciation', u'of', u'-lrb-', u'poj', u':', u't', u'-rrb-', u',', u'``', u'ketchup', u"''", u'from', u'the', u'minnan', u'pronunciation', u'of', u'-lrb-', u'koe-tsiap', u'-rrb-', u',', u'and', u'``', u'kumquat', u"''", u'from', u'the', u'cantonese', u'pronunciation', u'of', u'-lrb-', u'kam', u'kuat', u'-rrb-', u'.'], u'pos': [u'NNS', u'IN', u'JJ', u'NNS', u'VBP', u'``', u'NN', u"''", u'IN', u'DT', u'JJ', u'NN', u'IN', u'-LRB-', u'NN', u':', u'NN', u'-RRB-', u',', u'``', u'NN', u"''", u'IN', u'DT', u'JJ', u'NN', u'IN', u'-LRB-', u'NN', u'-RRB-', u',', u'CC', u'``', u'NN', u"''", u'IN', u'DT', u'JJ', u'NN', u'IN', u'-LRB-', u'FW', u'FW', u'-RRB-', u'.'], u'char_offsets': [[22750, 22758], [22759, 22761], [22762, 22766], [22767, 22772], [22773, 22776], [22777, 22778], [22778, 22781], [22781, 22782], [22783, 22787], [22788, 22791], [22792, 22798], [22799, 22812], [22813, 22815], [22817, 22818], [22818, 22821], [22821, 22822], [22823, 22824], [22824, 22825], [22825, 22826], [22827, 22828], [22828, 22835], [22835, 22836], [22837, 22841], [22842, 22845], [22846, 22852], [22853, 22866], [22867, 22869], [22871, 22872], [22872, 22881], [22881, 22882], [22882, 22883], [22884, 22887], [22888, 22889], [22889, 22896], [22896, 22897], [22898, 22902], [22903, 22906], [22907, 22916], [22917, 22930], [22931, 22933], [22935, 22936], [22936, 22939], [22940, 22944], [22944, 22945], [22945, 22946]]}) 
answer: set([u'&#27713;', u'come', u'&#39853;'])
candidate Sentence: (0.20266631245613098, {u'tokens': [u'From', u'French', u'came', u'-LRB-', u'bli', u',', u'``', u'ballet', u"''", u'-RRB-', u',', u'-LRB-', u'xingbn', u',', u'``', u'champagne', u"''", u'-RRB-', u',', u'via', u'Italian', u'-LRB-', u'kfi', u',', u'``', u'caff', u"''", u'-RRB-', u'.'], u'lemmas': [u'from', u'French', u'come', u'-lrb-', u'blus', u',', u'``', u'ballet', u"''", u'-rrb-', u',', u'-lrb-', u'xingbn', u',', u'``', u'champagne', u"''", u'-rrb-', u',', u'via', u'italian', u'-lrb-', u'kfus', u',', u'``', u'caff', u"''", u'-rrb-', u'.'], u'pos': [u'IN', u'NNP', u'VBD', u'-LRB-', u'NN', u',', u'``', u'JJ', u"''", u'-RRB-', u',', u'-LRB-', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u',', u'IN', u'JJ', u'-LRB-', u'NN', u',', u'``', u'FW', u"''", u'-RRB-', u'.'], u'char_offsets': [[36204, 36208], [36209, 36215], [36216, 36220], [36222, 36223], [36223, 36226], [36226, 36227], [36228, 36229], [36229, 36235], [36235, 36236], [36236, 36237], [36237, 36238], [36240, 36241], [36241, 36247], [36247, 36248], [36249, 36250], [36250, 36259], [36259, 36260], [36260, 36261], [36261, 36262], [36263, 36266], [36267, 36274], [36276, 36277], [36277, 36280], [36280, 36281], [36282, 36283], [36283, 36287], [36287, 36288], [36288, 36289], [36289, 36290]]}) 
answer: set([u'minnan', u'&#39853;', u'pronunci', u'&#27713;', u'ketchup', u'koe-tsiap'])
candidate Sentence: (0.19806136190891266, {u'tokens': [u'Other', u'words', u'came', u'from', u'nomadic', u'peoples', u'to', u'the', u'north', u',', u'such', u'as', u'``', u'hutong', u'.', u"''"], u'lemmas': [u'other', u'word', u'come', u'from', u'nomadic', u'people', u'to', u'the', u'north', u',', u'such', u'as', u'``', u'hutong', u'.', u"''"], u'pos': [u'JJ', u'NNS', u'VBD', u'IN', u'JJ', u'NNS', u'TO', u'DT', u'NN', u',', u'JJ', u'IN', u'``', u'JJ', u'.', u"''"], u'char_offsets': [[34776, 34781], [34782, 34787], [34788, 34792], [34793, 34797], [34798, 34805], [34806, 34813], [34814, 34816], [34817, 34820], [34821, 34826], [34826, 34827], [34828, 34832], [34833, 34835], [34837, 34838], [34838, 34844], [34844, 34845], [34845, 34846]]}) 
answer: set([u'-rrb-', u'ketchup', u'&#39853;', u'pronunci', u'-lrb-', u'&#27713;', u'minnan', u'koe-tsiap'])
candidate Sentence: (0.16410157084465027, {u'tokens': [u'This', u'is', u'done', u'by', u'employing', u'Chinese', u'characters', u'with', u'similar', u'pronunciations', u'.'], u'lemmas': [u'this', u'be', u'do', u'by', u'employ', u'chinese', u'character', u'with', u'similar', u'pronunciation', u'.'], u'pos': [u'DT', u'VBZ', u'VBN', u'IN', u'VBG', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[35427, 35431], [35432, 35434], [35435, 35439], [35440, 35442], [35443, 35452], [35453, 35460], [35461, 35471], [35472, 35476], [35477, 35484], [35485, 35499], [35499, 35500]]}) 
answer: set([u'-rrb-', u'ketchup', u'&#39853;', u'-lrb-', u'&#27713;', u'come', u'minnan', u'koe-tsiap'])
candidate Sentence: (0.13332490622997284, {u'tokens': [u'The', u'evidence', u'for', u'the', u'pronunciation', u'of', u'Middle', u'Chinese', u'comes', u'from', u'several', u'sources', u':', u'modern', u'dialect', u'variations', u',', u'rhyming', u'dictionaries', u',', u'foreign', u'transliterations', u',', u'``', u'rhyming', u'tables', u"''", u'constructed', u'by', u'ancient', u'Chinese', u'philologists', u'to', u'summarize', u'the', u'phonetic', u'system', u',', u'and', u'Chinese', u'phonetic', u'translations', u'of', u'foreign', u'words', u'.'], u'lemmas': [u'the', u'evidence', u'for', u'the', u'pronunciation', u'of', u'Middle', u'Chinese', u'come', u'from', u'several', u'source', u':', u'modern', u'dialect', u'variation', u',', u'rhyme', u'dictionary', u',', u'foreign', u'transliteration', u',', u'``', u'rhyming', u'table', u"''", u'construct', u'by', u'ancient', u'chinese', u'philologist', u'to', u'summarize', u'the', u'phonetic', u'system', u',', u'and', u'chinese', u'phonetic', u'translation', u'of', u'foreign', u'word', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'VBZ', u'IN', u'JJ', u'NNS', u':', u'JJ', u'NN', u'NNS', u',', u'VBG', u'NNS', u',', u'JJ', u'NNS', u',', u'``', u'JJ', u'NNS', u"''", u'VBN', u'IN', u'JJ', u'JJ', u'NNS', u'TO', u'VB', u'DT', u'JJ', u'NN', u',', u'CC', u'JJ', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[17875, 17878], [17879, 17887], [17888, 17891], [17892, 17895], [17896, 17909], [17910, 17912], [17913, 17919], [17920, 17927], [17928, 17933], [17934, 17938], [17939, 17946], [17947, 17954], [17954, 17955], [17956, 17962], [17963, 17970], [17971, 17981], [17981, 17982], [17983, 17990], [17991, 18003], [18003, 18004], [18005, 18012], [18013, 18029], [18029, 18030], [18031, 18032], [18032, 18039], [18040, 18046], [18046, 18047], [18048, 18059], [18060, 18062], [18063, 18070], [18071, 18078], [18079, 18091], [18092, 18094], [18095, 18104], [18105, 18108], [18109, 18117], [18118, 18124], [18124, 18125], [18126, 18129], [18130, 18137], [18138, 18146], [18147, 18159], [18160, 18162], [18163, 18170], [18171, 18176], [18176, 18177]]}) 
answer: set([u'-rrb-', u'minnan', u'&#39853;', u'-lrb-', u'&#27713;', u'ketchup', u'koe-tsiap'])
candidate Sentence: (0.13224391639232635, {u'tokens': [u'the', u'above-mentioned', u'-LRB-', u'shf', u'``', u'sofa', u"''", u'-RRB-', u',', u'-LRB-', u'yum', u'``', u'humour', u"''", u'-RRB-', u',', u'and', u'-LRB-', u'gorf', u',', u'``', u'golf', u"''", u'-RRB-', u'.'], u'lemmas': [u'the', u'above-mentioned', u'-lrb-', u'shf', u'``', u'sofa', u"''", u'-rrb-', u',', u'-lrb-', u'yum', u'``', u'humour', u"''", u'-rrb-', u',', u'and', u'-lrb-', u'gorf', u',', u'``', u'golf', u"''", u'-rrb-', u'.'], u'pos': [u'DT', u'JJ', u'-LRB-', u'NN', u'``', u'NN', u"''", u'-RRB-', u',', u'-LRB-', u'NN', u'``', u'NN', u"''", u'-RRB-', u',', u'CC', u'-LRB-', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u'.'], u'char_offsets': [[36416, 36419], [36420, 36435], [36437, 36438], [36438, 36441], [36442, 36443], [36443, 36447], [36447, 36448], [36448, 36449], [36449, 36450], [36452, 36453], [36453, 36456], [36457, 36458], [36458, 36464], [36464, 36465], [36465, 36466], [36466, 36467], [36468, 36471], [36473, 36474], [36474, 36478], [36478, 36479], [36480, 36481], [36481, 36485], [36485, 36486], [36486, 36487], [36487, 36488]]}) 
answer: set([u'ketchup', u'&#39853;', u'pronunci', u'&#27713;', u'come', u'minnan', u'koe-tsiap'])
candidate Sentence: (0.12329269200563431, {u'tokens': [u'Examples', u'include', u'dinhu', u'-LRB-', u'/', u',', u'denwa', u',', u'``', u'telephone', u"''", u'-RRB-', u',', u'shhu', u'-LRB-', u',', u'shakai', u',', u'``', u'society', u"''", u'-RRB-', u',', u'kxu', u'-LRB-', u'/', u',', u'kagaku', u',', u'``', u'science', u"''", u'-RRB-', u'and', u'chuxing', u'-LRB-', u',', u'chsh', u',', u'``', u'abstract', u"''", u'-RRB-', u'.'], u'lemmas': [u'example', u'include', u'dinhu', u'-lrb-', u'/', u',', u'denwa', u',', u'``', u'telephone', u"''", u'-rrb-', u',', u'shhu', u'-lrb-', u',', u'shakaus', u',', u'``', u'society', u"''", u'-rrb-', u',', u'kxu', u'-lrb-', u'/', u',', u'kagaku', u',', u'``', u'science', u"''", u'-rrb-', u'and', u'chuxing', u'-lrb-', u',', u'chsh', u',', u'``', u'abstract', u"''", u'-rrb-', u'.'], u'pos': [u'NNS', u'VBP', u'NN', u'-LRB-', u':', u',', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u',', u'NN', u'-LRB-', u',', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u',', u'NN', u'-LRB-', u':', u',', u'FW', u',', u'``', u'NN', u"''", u'-RRB-', u'CC', u'NN', u'-LRB-', u',', u'NN', u',', u'``', u'JJ', u"''", u'-RRB-', u'.'], u'char_offsets': [[38566, 38574], [38575, 38582], [38583, 38588], [38589, 38590], [38590, 38591], [38591, 38592], [38593, 38598], [38598, 38599], [38600, 38601], [38601, 38610], [38610, 38611], [38611, 38612], [38612, 38613], [38614, 38618], [38619, 38620], [38620, 38621], [38622, 38628], [38628, 38629], [38630, 38631], [38631, 38638], [38638, 38639], [38639, 38640], [38640, 38641], [38642, 38645], [38646, 38647], [38647, 38648], [38648, 38649], [38650, 38656], [38656, 38657], [38658, 38659], [38659, 38666], [38666, 38667], [38667, 38668], [38669, 38672], [38673, 38680], [38681, 38682], [38682, 38683], [38684, 38688], [38688, 38689], [38690, 38691], [38691, 38699], [38699, 38700], [38700, 38701], [38701, 38702]]}) 
answer: set([u'ketchup', u'&#39853;', u'pronunci', u'&#27713;', u'come', u'minnan', u'koe-tsiap'])
candidate Sentence: (0.11467646807432175, {u'tokens': [u'Later', u'United', u'States', u'soft', u'influences', u'gave', u'rise', u'to', u'-LRB-', u'dsk', u',', u'``', u'disco', u"''", u'-RRB-', u',', u'-LRB-', u'kl', u',', u'``', u'cola', u"''", u'-RRB-', u'and', u'-LRB-', u'mn', u',', u'``', u'mini', u'-LRB-', u'skirt', u'-RRB-', u"''", u'-RRB-', u'.'], u'lemmas': [u'later', u'United', u'States', u'soft', u'influence', u'give', u'rise', u'to', u'-lrb-', u'dsk', u',', u'``', u'disco', u"''", u'-rrb-', u',', u'-lrb-', u'kl', u',', u'``', u'cola', u"''", u'-rrb-', u'and', u'-lrb-', u'mn', u',', u'``', u'minus', u'-lrb-', u'skirt', u'-rrb-', u"''", u'-rrb-', u'.'], u'pos': [u'RB', u'NNP', u'NNPS', u'JJ', u'NNS', u'VBD', u'NN', u'TO', u'-LRB-', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u',', u'-LRB-', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u'CC', u'-LRB-', u'NN', u',', u'``', u'NNS', u'-LRB-', u'NN', u'-RRB-', u"''", u'-RRB-', u'.'], u'char_offsets': [[36489, 36494], [36495, 36501], [36502, 36508], [36509, 36513], [36514, 36524], [36525, 36529], [36530, 36534], [36535, 36537], [36539, 36540], [36540, 36543], [36543, 36544], [36545, 36546], [36546, 36551], [36551, 36552], [36552, 36553], [36553, 36554], [36556, 36557], [36557, 36559], [36559, 36560], [36561, 36562], [36562, 36566], [36566, 36567], [36567, 36568], [36569, 36572], [36574, 36575], [36575, 36577], [36577, 36578], [36579, 36580], [36580, 36584], [36584, 36585], [36585, 36590], [36590, 36591], [36591, 36592], [36592, 36593], [36593, 36594]]}) 
answer: set([u'ketchup', u'&#39853;', u'pronunci', u'&#27713;', u'come', u'minnan', u'koe-tsiap'])
candidate Sentence: (0.11079610884189606, {u'tokens': [u'The', u'previous', u'examples', u'of', u'j', u',', u'for', u'instance', u',', u'for', u'``', u'stimulated', u"''", u',', u'``', u'chicken', u"''", u',', u'and', u'``', u'machine', u"''", u',', u'have', u'distinct', u'pronunciations', u'in', u'Cantonese', u'-LRB-', u'romanized', u'using', u'jyutping', u'-RRB-', u':', u'gik1', u',', u'gai1', u',', u'and', u'gei1', u',', u'respectively', u'.'], u'lemmas': [u'the', u'previous', u'example', u'of', u'j', u',', u'for', u'instance', u',', u'for', u'``', u'stimulate', u"''", u',', u'``', u'chicken', u"''", u',', u'and', u'``', u'machine', u"''", u',', u'have', u'distinct', u'pronunciation', u'in', u'cantonese', u'-lrb-', u'romanize', u'use', u'jyutping', u'-rrb-', u':', u'gik1', u',', u'gai1', u',', u'and', u'gei1', u',', u'respectively', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u'IN', u'NN', u',', u'IN', u'NN', u',', u'IN', u'``', u'VBN', u"''", u',', u'``', u'NN', u"''", u',', u'CC', u'``', u'NN', u"''", u',', u'VBP', u'JJ', u'NNS', u'IN', u'NN', u'-LRB-', u'VBN', u'VBG', u'NN', u'-RRB-', u':', u'NN', u',', u'NN', u',', u'CC', u'NN', u',', u'RB', u'.'], u'char_offsets': [[32590, 32593], [32594, 32602], [32603, 32611], [32612, 32614], [32615, 32616], [32616, 32617], [32618, 32621], [32622, 32630], [32630, 32631], [32632, 32635], [32636, 32637], [32637, 32647], [32647, 32648], [32648, 32649], [32650, 32651], [32651, 32658], [32658, 32659], [32659, 32660], [32661, 32664], [32665, 32666], [32666, 32673], [32673, 32674], [32674, 32675], [32676, 32680], [32681, 32689], [32690, 32704], [32705, 32707], [32708, 32717], [32718, 32719], [32719, 32728], [32729, 32734], [32735, 32743], [32743, 32744], [32744, 32745], [32746, 32750], [32750, 32751], [32752, 32756], [32756, 32757], [32758, 32761], [32762, 32766], [32766, 32767], [32768, 32780], [32780, 32781]]}) 
answer: set([u'minnan', u'&#39853;', u'&#27713;', u'come', u'ketchup', u'koe-tsiap'])
candidate Sentence: (0.10853917151689529, {u'tokens': [u'-LRB-', u'fns', u',', u'``', u'fans', u"''", u'-RRB-', u',', u'-LRB-', u'hik', u',', u'``', u'hacker', u"''", u'-RRB-', u',', u'-LRB-', u'blug', u',', u'blog', u'-RRB-', u'in', u'Taiwanese', u'Mandarin', u'.'], u'lemmas': [u'-lrb-', u'fn', u',', u'``', u'fan', u"''", u'-rrb-', u',', u'-lrb-', u'hik', u',', u'``', u'hacker', u"''", u'-rrb-', u',', u'-lrb-', u'blug', u',', u'blog', u'-rrb-', u'in', u'taiwanese', u'Mandarin', u'.'], u'pos': [u'-LRB-', u'NNS', u',', u'``', u'NNS', u"''", u'-RRB-', u',', u'-LRB-', u'NN', u',', u'``', u'NN', u"''", u'-RRB-', u',', u'-LRB-', u'NN', u',', u'NN', u'-RRB-', u'IN', u'JJ', u'NNP', u'.'], u'char_offsets': [[36843, 36844], [36844, 36847], [36847, 36848], [36849, 36850], [36850, 36854], [36854, 36855], [36855, 36856], [36856, 36857], [36859, 36860], [36860, 36863], [36863, 36864], [36865, 36866], [36866, 36872], [36872, 36873], [36873, 36874], [36874, 36875], [36876, 36877], [36877, 36881], [36881, 36882], [36882, 36886], [36886, 36887], [36888, 36890], [36891, 36900], [36901, 36909], [36909, 36910]]}) 
answer: set([u'ketchup', u'&#39853;', u'pronunci', u'&#27713;', u'come', u'minnan', u'koe-tsiap'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Does "ketchup" come from the Minnan pronunciation of &#39853;&#27713; (koe-tsiap)?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Chinese_language
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set5/a7.txt

No
_____________________________ test_yesno[param84] ______________________________

param = (<src.question_processing.Question_parser instance at 0x10cab1ea8>, (<src.tfidf.TF_IDF object at 0x10b195cd0>, set(['cougar'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('no') == True
E            +  where 'no' = <src.question_processing.Question_parser instance at 0x10cab1ea8>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.3245537281036377, {u'tokens': [u'In', u'the', u'south', u',', u'the', u'cougar', u'must', u'compete', u'with', u'the', u'larger', u'jaguar', u'.'], u'lemmas': [u'in', u'the', u'south', u',', u'the', u'cougar', u'must', u'compete', u'with', u'the', u'larger', u'jaguar', u'.'], u'pos': [u'IN', u'DT', u'NN', u',', u'DT', u'NN', u'MD', u'VB', u'IN', u'DT', u'JJR', u'NN', u'.'], u'char_offsets': [[21313, 21315], [21316, 21319], [21320, 21325], [21325, 21326], [21327, 21330], [21331, 21337], [21338, 21342], [21343, 21350], [21351, 21355], [21356, 21359], [21360, 21366], [21367, 21373], [21373, 21374]]}) 
answer: set([])
candidate Sentence: (0.28964966535568237, {u'tokens': [u'Competition', u'with', u'the', u'larger', u'jaguar', u'has', u'been', u'suggested', u'for', u'the', u'decline', u'in', u'the', u'size', u'of', u'prey', u'items', u'.'], u'lemmas': [u'competition', u'with', u'the', u'larger', u'jaguar', u'have', u'be', u'suggest', u'for', u'the', u'decline', u'in', u'the', u'size', u'of', u'prey', u'item', u'.'], u'pos': [u'NN', u'IN', u'DT', u'JJR', u'NN', u'VBZ', u'VBN', u'VBN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'NN', u'NNS', u'.'], u'char_offsets': [[11973, 11984], [11985, 11989], [11990, 11993], [11994, 12000], [12001, 12007], [12008, 12011], [12012, 12016], [12017, 12026], [12027, 12030], [12031, 12034], [12035, 12042], [12043, 12045], [12046, 12049], [12050, 12054], [12055, 12057], [12058, 12062], [12063, 12068], [12068, 12069]]}) 
answer: set([])
candidate Sentence: (0.26006105542182922, {u'tokens': [u'The', u'jaguar', u'tends', u'to', u'take', u'larger', u'prey', u'and', u'the', u'cougar', u'smaller', u'where', u'they', u'overlap', u',', u'reducing', u'the', u'cougar', u"'s", u'size', u'.'], u'lemmas': [u'the', u'jaguar', u'tend', u'to', u'take', u'larger', u'prey', u'and', u'the', u'cougar', u'smaller', u'where', u'they', u'overlap', u',', u'reduce', u'the', u'cougar', u"'s", u'size', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'TO', u'VB', u'JJR', u'NN', u'CC', u'DT', u'NN', u'JJR', u'WRB', u'PRP', u'VBP', u',', u'VBG', u'DT', u'NN', u'POS', u'NN', u'.'], u'char_offsets': [[23114, 23117], [23118, 23124], [23125, 23130], [23131, 23133], [23134, 23138], [23139, 23145], [23146, 23150], [23151, 23154], [23155, 23158], [23159, 23165], [23166, 23173], [23174, 23179], [23180, 23184], [23185, 23192], [23192, 23193], [23194, 23202], [23203, 23206], [23207, 23213], [23213, 23215], [23216, 23220], [23220, 23221]]}) 
answer: set([])
candidate Sentence: (0.1794896125793457, {u'tokens': [u'*', u'Description', u'of', u'a', u'Cougar', u'attack', u'*', u'Cougar', u'Facts', u'and', u'Photos', u'NatureMapping', u'Program', u'*', u'No', u'Place', u'for', u'Predators', u'?'], u'lemmas': [u'*', u'description', u'of', u'a', u'Cougar', u'attack', u'*', u'Cougar', u'Facts', u'and', u'Photos', u'NatureMapping', u'Program', u'*', u'no', u'place', u'for', u'predator', u'?'], u'pos': [u'SYM', u'NN', u'IN', u'DT', u'NNP', u'NN', u'SYM', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'SYM', u'DT', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[33425, 33426], [33428, 33439], [33440, 33442], [33443, 33444], [33445, 33451], [33452, 33458], [33459, 33460], [33462, 33468], [33469, 33474], [33475, 33478], [33479, 33485], [33487, 33500], [33501, 33508], [33509, 33510], [33512, 33514], [33515, 33520], [33521, 33524], [33525, 33534], [33534, 33535]]}) 
answer: set([u'larger', u'jaguar'])
candidate Sentence: (0.17801910638809204, {u'tokens': [u'Cougars', u'can', u'be', u'almost', u'as', u'large', u'as', u'jaguars', u',', u'but', u'are', u'less', u'muscular', u'and', u'not', u'as', u'powerful', u';', u'where', u'their', u'ranges', u'overlap', u',', u'the', u'cougar', u'tends', u'to', u'be', u'smaller', u'than', u'average', u'.'], u'lemmas': [u'Cougars', u'can', u'be', u'almost', u'as', u'large', u'as', u'jaguar', u',', u'but', u'be', u'less', u'muscular', u'and', u'not', u'as', u'powerful', u';', u'where', u'they', u'range', u'overlap', u',', u'the', u'cougar', u'tend', u'to', u'be', u'smaller', u'than', u'average', u'.'], u'pos': [u'NNPS', u'MD', u'VB', u'RB', u'RB', u'JJ', u'IN', u'NNS', u',', u'CC', u'VBP', u'RBR', u'JJ', u'CC', u'RB', u'IN', u'JJ', u':', u'WRB', u'PRP$', u'NNS', u'VBP', u',', u'DT', u'NN', u'VBZ', u'TO', u'VB', u'JJR', u'IN', u'NN', u'.'], u'char_offsets': [[8269, 8276], [8277, 8280], [8281, 8283], [8284, 8290], [8291, 8293], [8294, 8299], [8300, 8302], [8303, 8310], [8310, 8311], [8312, 8315], [8316, 8319], [8320, 8324], [8325, 8333], [8334, 8337], [8338, 8341], [8342, 8344], [8345, 8353], [8353, 8354], [8355, 8360], [8361, 8366], [8367, 8373], [8374, 8381], [8381, 8382], [8383, 8386], [8387, 8393], [8394, 8399], [8400, 8402], [8403, 8405], [8406, 8413], [8414, 8418], [8419, 8426], [8426, 8427]]}) 
answer: set([u'larger'])
candidate Sentence: (0.14501677453517914, {u'tokens': [u'It', u'is', u'the', u'second', u'heaviest', u'cat', u'in', u'the', u'American', u'continents', u'after', u'the', u'jaguar', u',', u'and', u'the', u'fourth', u'heaviest', u'in', u'the', u'world', u',', u'after', u'the', u'tiger', u',', u'lion', u',', u'and', u'jaguar', u'.'], u'lemmas': [u'it', u'be', u'the', u'second', u'heaviest', u'cat', u'in', u'the', u'american', u'continent', u'after', u'the', u'jaguar', u',', u'and', u'the', u'fourth', u'heaviest', u'in', u'the', u'world', u',', u'after', u'the', u'tiger', u',', u'lion', u',', u'and', u'jaguar', u'.'], u'pos': [u'PRP', u'VBZ', u'DT', u'JJ', u'JJS', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'IN', u'DT', u'NN', u',', u'CC', u'DT', u'JJ', u'JJS', u'IN', u'DT', u'NN', u',', u'IN', u'DT', u'NN', u',', u'NN', u',', u'CC', u'NN', u'.'], u'char_offsets': [[459, 461], [462, 464], [465, 468], [469, 475], [476, 484], [485, 488], [489, 491], [492, 495], [496, 504], [505, 515], [516, 521], [522, 525], [526, 532], [532, 533], [534, 537], [538, 541], [542, 548], [549, 557], [558, 560], [561, 564], [565, 570], [570, 571], [572, 577], [578, 581], [582, 587], [587, 588], [589, 593], [593, 594], [595, 598], [599, 605], [605, 606]]}) 
answer: set([u'larger'])
candidate Sentence: (0.14410597085952759, {u'tokens': [u'In', u'the', u'southern', u'portion', u'of', u'its', u'range', u',', u'the', u'cougar', u'and', u'jaguar', u'share', u'overlapping', u'territory', u'.'], u'lemmas': [u'in', u'the', u'southern', u'portion', u'of', u'its', u'range', u',', u'the', u'cougar', u'and', u'jaguar', u'share', u'overlap', u'territory', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'NN', u'IN', u'PRP$', u'NN', u',', u'DT', u'NN', u'CC', u'NN', u'NN', u'VBG', u'NN', u'.'], u'char_offsets': [[23022, 23024], [23025, 23028], [23029, 23037], [23038, 23045], [23046, 23048], [23049, 23052], [23053, 23058], [23058, 23059], [23060, 23063], [23064, 23070], [23071, 23074], [23075, 23081], [23082, 23087], [23088, 23099], [23100, 23109], [23109, 23110]]}) 
answer: set([u'larger'])
candidate Sentence: (0.13611210882663727, {u'tokens': [u'The', u'larger', u'front', u'feet', u'and', u'claws', u'are', u'adaptations', u'to', u'clutching', u'prey', u'.'], u'lemmas': [u'the', u'larger', u'front', u'foot', u'and', u'claw', u'be', u'adaptation', u'to', u'clutch', u'prey', u'.'], u'pos': [u'DT', u'JJR', u'JJ', u'NNS', u'CC', u'NNS', u'VBP', u'NNS', u'TO', u'VBG', u'NN', u'.'], u'char_offsets': [[8202, 8205], [8206, 8212], [8213, 8218], [8219, 8223], [8224, 8227], [8228, 8233], [8234, 8237], [8238, 8249], [8250, 8252], [8253, 8262], [8263, 8267], [8267, 8268]]}) 
answer: set([u'jaguar'])
candidate Sentence: (0.10517857223749161, {u'tokens': [u'Between', u'1890', u'and', u'1990', u',', u'in', u'North', u'America', u'there', u'were', u'53', u'reported', u',', u'confirmed', u'attacks', u'on', u'humans', u',', u'resulting', u'in', u'48', u'nonfatal', u'injuries', u'and', u'10', u'deaths', u'of', u'humans', u'-LRB-', u'the', u'total', u'is', u'greater', u'than', u'53', u'because', u'some', u'attacks', u'had', u'more', u'than', u'one', u'victim', u'-RRB-', u'.'], u'lemmas': [u'between', u'1890', u'and', u'1990', u',', u'in', u'North', u'America', u'there', u'be', u'53', u'report', u',', u'confirm', u'attack', u'on', u'human', u',', u'result', u'in', u'48', u'nonfatal', u'injury', u'and', u'10', u'death', u'of', u'human', u'-lrb-', u'the', u'total', u'be', u'greater', u'than', u'53', u'because', u'some', u'attack', u'have', u'more', u'than', u'one', u'victim', u'-rrb-', u'.'], u'pos': [u'IN', u'CD', u'CC', u'CD', u',', u'IN', u'NNP', u'NNP', u'EX', u'VBD', u'CD', u'VBN', u',', u'VBD', u'NNS', u'IN', u'NNS', u',', u'VBG', u'IN', u'CD', u'JJ', u'NNS', u'CC', u'CD', u'NNS', u'IN', u'NNS', u'-LRB-', u'DT', u'NN', u'VBZ', u'JJR', u'IN', u'CD', u'IN', u'DT', u'NNS', u'VBD', u'RBR', u'IN', u'CD', u'NN', u'-RRB-', u'.'], u'char_offsets': [[31027, 31034], [31035, 31039], [31040, 31043], [31044, 31048], [31048, 31049], [31050, 31052], [31053, 31058], [31059, 31066], [31067, 31072], [31073, 31077], [31078, 31080], [31081, 31089], [31089, 31090], [31091, 31100], [31101, 31108], [31109, 31111], [31112, 31118], [31118, 31119], [31120, 31129], [31130, 31132], [31133, 31135], [31136, 31144], [31145, 31153], [31154, 31157], [31158, 31160], [31161, 31167], [31168, 31170], [31171, 31177], [31178, 31179], [31179, 31182], [31183, 31188], [31189, 31191], [31192, 31199], [31200, 31204], [31205, 31207], [31208, 31215], [31216, 31220], [31221, 31228], [31229, 31232], [31233, 31237], [31238, 31242], [31243, 31246], [31247, 31253], [31253, 31254], [31254, 31255]]}) 
answer: set([u'larger', u'jaguar'])
candidate Sentence: (0.09393002837896347, {u'tokens': [u'The', u'term', u'``', u'black', u'panther', u"''", u'is', u'used', u'colloquially', u'to', u'refer', u'to', u'melanistic', u'individuals', u'of', u'other', u'species', u',', u'particularly', u'jaguars', u'and', u'leopards', u'.'], u'lemmas': [u'the', u'term', u'``', u'black', u'panther', u"''", u'be', u'use', u'colloquially', u'to', u'refer', u'to', u'melanistic', u'individual', u'of', u'other', u'species', u',', u'particularly', u'jaguar', u'and', u'leopard', u'.'], u'pos': [u'DT', u'NN', u'``', u'JJ', u'NN', u"''", u'VBZ', u'VBN', u'RB', u'TO', u'VB', u'TO', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u',', u'RB', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[9432, 9435], [9436, 9440], [9441, 9442], [9442, 9447], [9448, 9455], [9455, 9456], [9457, 9459], [9460, 9464], [9465, 9477], [9478, 9480], [9481, 9486], [9487, 9489], [9490, 9500], [9501, 9512], [9513, 9515], [9516, 9521], [9522, 9529], [9529, 9530], [9531, 9543], [9544, 9551], [9552, 9555], [9556, 9564], [9564, 9565]]}) 
answer: set([u'larger'])
['Yes', 'Yes', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Are cougars larger than jaguars?
Validity= False
Question Type = NA
Answer Type = NA
Answer = no
Difficulty = easy
Article_Title = Cougar
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set1/a2.txt

Yes
_____________________________ test_yesno[param85] ______________________________

param = (<src.question_processing.Question_parser instance at 0x10cab1ef0>, (<src.tfidf.TF_IDF object at 0x10b195cd0>, set(['cougar'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('The World Conservation Union (IUCN) currently lists the cougar as a "least concern" species.')
E            +    where 'The World Conservation Union (IUCN) currently lists the cougar as a "least concern" species.' = <src.question_processing.Question_parser instance at 0x10cab1ef0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.65966939926147461, {u'tokens': [u'The', u'World', u'Conservation', u'Union', u'-LRB-', u'IUCN', u'-RRB-', u'currently', u'lists', u'the', u'cougar', u'as', u'a', u'``', u'least', u'concern', u"''", u'species', u'.'], u'lemmas': [u'the', u'World', u'Conservation', u'Union', u'-lrb-', u'IUCN', u'-rrb-', u'currently', u'list', u'the', u'cougar', u'as', u'a', u'``', u'least', u'concern', u"''", u'species', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u'RB', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'``', u'JJS', u'NN', u"''", u'NNS', u'.'], u'char_offsets': [[25020, 25023], [25024, 25029], [25030, 25042], [25043, 25048], [25049, 25050], [25050, 25054], [25054, 25055], [25056, 25065], [25066, 25071], [25072, 25075], [25076, 25082], [25083, 25085], [25086, 25087], [25088, 25089], [25089, 25094], [25095, 25102], [25102, 25103], [25104, 25111], [25111, 25112]]}) 
answer: set([u'consid'])
candidate Sentence: (0.13396963477134705, {u'tokens': [u'South', u'of', u'the', u'Rio', u'Grande', u',', u'the', u'International', u'Union', u'for', u'the', u'Conservation', u'of', u'Nature', u'and', u'Natural', u'Resources', u'-LRB-', u'IUCN', u'-RRB-', u'lists', u'the', u'cat', u'in', u'every', u'Central', u'and', u'South', u'American', u'country', u'except', u'Costa', u'Rica', u'and', u'Panama', u'.'], u'lemmas': [u'South', u'of', u'the', u'Rio', u'Grande', u',', u'the', u'International', u'Union', u'for', u'the', u'Conservation', u'of', u'Nature', u'and', u'Natural', u'Resources', u'-lrb-', u'IUCN', u'-rrb-', u'list', u'the', u'cat', u'in', u'every', u'Central', u'and', u'South', u'American', u'country', u'except', u'Costa', u'Rica', u'and', u'Panama', u'.'], u'pos': [u'NNP', u'IN', u'DT', u'NNP', u'NNP', u',', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NNP', u'CC', u'NNP', u'NNP', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'NNP', u'.'], u'char_offsets': [[20287, 20292], [20293, 20295], [20296, 20299], [20300, 20303], [20304, 20310], [20310, 20311], [20312, 20315], [20316, 20329], [20330, 20335], [20336, 20339], [20340, 20343], [20344, 20356], [20357, 20359], [20360, 20366], [20367, 20370], [20371, 20378], [20379, 20388], [20389, 20390], [20390, 20394], [20394, 20395], [20396, 20401], [20402, 20405], [20406, 20409], [20410, 20412], [20413, 20418], [20419, 20426], [20427, 20430], [20431, 20436], [20437, 20445], [20446, 20453], [20454, 20460], [20461, 20466], [20467, 20471], [20472, 20475], [20476, 20482], [20482, 20483]]}) 
answer: set([u'world', u'concern', u'consid', u'least', u'speci'])
candidate Sentence: (0.13258689641952515, {u'tokens': [u'Most', u'did', u'not', u'reach', u'adulthood', u'.'], u'lemmas': [u'most', u'do', u'not', u'reach', u'adulthood', u'.'], u'pos': [u'JJS', u'VBD', u'RB', u'VB', u'NN', u'.'], u'char_offsets': [[24276, 24280], [24281, 24284], [24285, 24288], [24289, 24294], [24295, 24304], [24304, 24305]]}) 
answer: set([u'speci', u'union', u'least', u'consid', u'conserv', u'world', u'concern'])
candidate Sentence: (0.12796863913536072, {u'tokens': [u'During', u'the', u'early', u'years', u'of', u'ranching', u',', u'cougars', u'were', u'considered', u'on', u'par', u'with', u'wolves', u'in', u'destructiveness', u'.'], u'lemmas': [u'during', u'the', u'early', u'year', u'of', u'ranching', u',', u'cougar', u'be', u'consider', u'on', u'par', u'with', u'wolf', u'in', u'destructiveness', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'NNS', u'IN', u'NN', u',', u'NNS', u'VBD', u'VBN', u'IN', u'NN', u'IN', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[29532, 29538], [29539, 29542], [29543, 29548], [29549, 29554], [29555, 29557], [29558, 29566], [29566, 29567], [29568, 29575], [29576, 29580], [29581, 29591], [29592, 29594], [29595, 29598], [29599, 29603], [29604, 29610], [29611, 29613], [29614, 29629], [29629, 29630]]}) 
answer: set([u'speci', u'union', u'least', u'conserv', u'world', u'concern'])
candidate Sentence: (0.11037647724151611, {u'tokens': [u'The', u'term', u'``', u'black', u'panther', u"''", u'is', u'used', u'colloquially', u'to', u'refer', u'to', u'melanistic', u'individuals', u'of', u'other', u'species', u',', u'particularly', u'jaguars', u'and', u'leopards', u'.'], u'lemmas': [u'the', u'term', u'``', u'black', u'panther', u"''", u'be', u'use', u'colloquially', u'to', u'refer', u'to', u'melanistic', u'individual', u'of', u'other', u'species', u',', u'particularly', u'jaguar', u'and', u'leopard', u'.'], u'pos': [u'DT', u'NN', u'``', u'JJ', u'NN', u"''", u'VBZ', u'VBN', u'RB', u'TO', u'VB', u'TO', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u',', u'RB', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[9432, 9435], [9436, 9440], [9441, 9442], [9442, 9447], [9448, 9455], [9455, 9456], [9457, 9459], [9460, 9464], [9465, 9477], [9478, 9480], [9481, 9486], [9487, 9489], [9490, 9500], [9501, 9512], [9513, 9515], [9516, 9521], [9522, 9529], [9529, 9530], [9531, 9543], [9544, 9551], [9552, 9555], [9556, 9564], [9564, 9565]]}) 
answer: set([u'union', u'least', u'consid', u'conserv', u'world', u'concern'])
candidate Sentence: (0.11007314920425415, {u'tokens': [u'In', u'North', u'America', u',', u'mythological', u'descriptions', u'of', u'the', u'cougar', u'have', u'appeared', u'in', u'the', u'stories', u'of', u'the', u'Hock', u'language', u'-LRB-', u'``', u'Ho-Chunk', u"''", u'or', u'``', u'Winnebago', u"''", u'-RRB-', u'of', u'Wisconsin', u'and', u'Illinois', u'Cougars', u',', u'The', u'Encyclopedia', u'of', u'Hok', u'-LRB-', u'Winnebago', u'-RRB-', u'Mythology', u'.'], u'lemmas': [u'in', u'North', u'America', u',', u'mythological', u'description', u'of', u'the', u'cougar', u'have', u'appear', u'in', u'the', u'story', u'of', u'the', u'Hock', u'language', u'-lrb-', u'``', u'ho-chunk', u"''", u'or', u'``', u'Winnebago', u"''", u'-rrb-', u'of', u'Wisconsin', u'and', u'Illinois', u'Cougars', u',', u'the', u'encyclopedia', u'of', u'Hok', u'-lrb-', u'Winnebago', u'-rrb-', u'Mythology', u'.'], u'pos': [u'IN', u'NNP', u'NNP', u',', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'VBP', u'VBN', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NNP', u'NN', u'-LRB-', u'``', u'JJ', u"''", u'CC', u'``', u'NNP', u"''", u'-RRB-', u'IN', u'NNP', u'CC', u'NNP', u'NNPS', u',', u'DT', u'NN', u'IN', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u'NNP', u'.'], u'char_offsets': [[29165, 29167], [29168, 29173], [29174, 29181], [29181, 29182], [29183, 29195], [29196, 29208], [29209, 29211], [29212, 29215], [29216, 29222], [29223, 29227], [29228, 29236], [29237, 29239], [29240, 29243], [29244, 29251], [29252, 29254], [29255, 29258], [29259, 29263], [29264, 29272], [29273, 29274], [29274, 29275], [29275, 29283], [29283, 29284], [29285, 29287], [29288, 29289], [29289, 29298], [29298, 29299], [29299, 29300], [29301, 29303], [29304, 29313], [29314, 29317], [29318, 29326], [29330, 29337], [29337, 29338], [29339, 29342], [29343, 29355], [29356, 29358], [29359, 29362], [29363, 29364], [29364, 29373], [29373, 29374], [29375, 29384], [29384, 29385]]}) 
answer: set([u'speci', u'union', u'least', u'consid', u'conserv', u'world', u'concern'])
candidate Sentence: (0.1086445152759552, {u'tokens': [u'*', u'Description', u'of', u'a', u'Cougar', u'attack', u'*', u'Cougar', u'Facts', u'and', u'Photos', u'NatureMapping', u'Program', u'*', u'No', u'Place', u'for', u'Predators', u'?'], u'lemmas': [u'*', u'description', u'of', u'a', u'Cougar', u'attack', u'*', u'Cougar', u'Facts', u'and', u'Photos', u'NatureMapping', u'Program', u'*', u'no', u'place', u'for', u'predator', u'?'], u'pos': [u'SYM', u'NN', u'IN', u'DT', u'NNP', u'NN', u'SYM', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'SYM', u'DT', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[33425, 33426], [33428, 33439], [33440, 33442], [33443, 33444], [33445, 33451], [33452, 33458], [33459, 33460], [33462, 33468], [33469, 33474], [33475, 33478], [33479, 33485], [33487, 33500], [33501, 33508], [33509, 33510], [33512, 33514], [33515, 33520], [33521, 33524], [33525, 33534], [33534, 33535]]}) 
answer: set([u'speci', u'union', u'least', u'consid', u'conserv', u'world', u'concern'])
candidate Sentence: (0.10467731952667236, {u'tokens': [u'The', u'Quebec', u'wildlife', u'services', u'-LRB-', u'known', u'locally', u'as', u'MRNF', u'-RRB-', u'also', u'considers', u'Cougar', u'to', u'be', u'present', u'in', u'the', u'province', u'as', u'a', u'threatened', u'species', u'after', u'multiple', u'DNA', u'tests', u'confirmed', u'cougar', u'hair', u'in', u'Lynx', u'mating', u'sites', u'.'], u'lemmas': [u'the', u'Quebec', u'wildlife', u'service', u'-lrb-', u'know', u'locally', u'as', u'mrnf', u'-rrb-', u'also', u'consider', u'Cougar', u'to', u'be', u'present', u'in', u'the', u'province', u'as', u'a', u'threaten', u'species', u'after', u'multiple', u'dna', u'test', u'confirm', u'cougar', u'hair', u'in', u'Lynx', u'mate', u'site', u'.'], u'pos': [u'DT', u'NNP', u'NN', u'NNS', u'-LRB-', u'VBN', u'RB', u'IN', u'NN', u'-RRB-', u'RB', u'VBZ', u'NNP', u'TO', u'VB', u'JJ', u'IN', u'DT', u'NN', u'IN', u'DT', u'VBN', u'NNS', u'IN', u'JJ', u'NN', u'NNS', u'VBD', u'NN', u'NN', u'IN', u'NNP', u'VBG', u'NNS', u'.'], u'char_offsets': [[18958, 18961], [18962, 18968], [18969, 18977], [18978, 18986], [18987, 18988], [18988, 18993], [18994, 19001], [19002, 19004], [19005, 19009], [19009, 19010], [19011, 19015], [19016, 19025], [19026, 19032], [19033, 19035], [19036, 19038], [19039, 19046], [19047, 19049], [19050, 19053], [19054, 19062], [19063, 19065], [19066, 19067], [19068, 19078], [19079, 19086], [19087, 19092], [19093, 19101], [19102, 19105], [19106, 19111], [19112, 19121], [19122, 19128], [19129, 19133], [19134, 19136], [19137, 19141], [19142, 19148], [19149, 19154], [19154, 19155]]}) 
answer: set([u'union', u'world', u'concern', u'least', u'conserv'])
candidate Sentence: (0.10351049900054932, {u'tokens': [u'Conservation', u'work', u'in', u'Texas', u'is', u'the', u'effort', u'of', u'a', u'non', u'profit', u'organization', u',', u'Balanced', u'Ecology', u'Inc.', u'-LRB-', u'BEI', u'-RRB-', u',', u'as', u'part', u'of', u'their', u'Texas', u'Mountain', u'Lion', u'Conservation', u'Project', u'.'], u'lemmas': [u'Conservation', u'work', u'in', u'Texas', u'be', u'the', u'effort', u'of', u'a', u'non', u'profit', u'organization', u',', u'balanced', u'Ecology', u'Inc.', u'-lrb-', u'BEI', u'-rrb-', u',', u'as', u'part', u'of', u'they', u'Texas', u'Mountain', u'Lion', u'Conservation', u'Project', u'.'], u'pos': [u'NNP', u'NN', u'IN', u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'NN', u',', u'JJ', u'NNP', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u',', u'IN', u'NN', u'IN', u'PRP$', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[27116, 27128], [27129, 27133], [27134, 27136], [27137, 27142], [27143, 27145], [27146, 27149], [27150, 27156], [27157, 27159], [27160, 27161], [27162, 27165], [27166, 27172], [27173, 27185], [27185, 27186], [27187, 27195], [27196, 27203], [27204, 27208], [27209, 27210], [27210, 27213], [27213, 27214], [27214, 27215], [27216, 27218], [27219, 27223], [27224, 27226], [27227, 27232], [27233, 27238], [27239, 27247], [27248, 27252], [27253, 27265], [27266, 27273], [27274, 27275]]}) 
answer: set([u'speci', u'union', u'least', u'consid', u'world', u'concern'])
candidate Sentence: (0.10274501144886017, {u'tokens': [u'Conservation', u'threats', u'to', u'the', u'species', u'include', u'persecution', u'as', u'a', u'pest', u'animal', u',', u'degradation', u'and', u'fragmentation', u'of', u'their', u'habitat', u',', u'and', u'depletion', u'of', u'their', u'prey', u'base', u'.'], u'lemmas': [u'Conservation', u'threat', u'to', u'the', u'species', u'include', u'persecution', u'as', u'a', u'pest', u'animal', u',', u'degradation', u'and', u'fragmentation', u'of', u'they', u'habitat', u',', u'and', u'depletion', u'of', u'they', u'prey', u'base', u'.'], u'pos': [u'NNP', u'NNS', u'TO', u'DT', u'NNS', u'VBP', u'NN', u'IN', u'DT', u'NN', u'NN', u',', u'NN', u'CC', u'NN', u'IN', u'PRP$', u'NN', u',', u'CC', u'NN', u'IN', u'PRP$', u'NN', u'NN', u'.'], u'char_offsets': [[28028, 28040], [28041, 28048], [28049, 28051], [28052, 28055], [28056, 28063], [28064, 28071], [28072, 28083], [28084, 28086], [28087, 28088], [28089, 28093], [28094, 28100], [28100, 28101], [28102, 28113], [28114, 28117], [28118, 28131], [28132, 28134], [28135, 28140], [28141, 28148], [28148, 28149], [28150, 28153], [28154, 28163], [28164, 28166], [28167, 28172], [28173, 28177], [28178, 28182], [28182, 28183]]}) 
answer: set([u'union', u'world', u'consid', u'least', u'concern'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Does the World Conservation Union consider the cougar a "least concern" species?
Validity= False
Question Type = NA
Answer Type = NA
Answer = The World Conservation Union (IUCN) currently lists the cougar as a "least concern" species.
Difficulty = easy
Article_Title = Cougar
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set1/a2.txt

No
_____________________________ test_yesno[param86] ______________________________

param = (<src.question_processing.Question_parser instance at 0x10cab1f38>, (<src.tfidf.TF_IDF object at 0x10b195cd0>, set(['cougar'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cab1f38>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.65966939926147461, {u'tokens': [u'The', u'World', u'Conservation', u'Union', u'-LRB-', u'IUCN', u'-RRB-', u'currently', u'lists', u'the', u'cougar', u'as', u'a', u'``', u'least', u'concern', u"''", u'species', u'.'], u'lemmas': [u'the', u'World', u'Conservation', u'Union', u'-lrb-', u'IUCN', u'-rrb-', u'currently', u'list', u'the', u'cougar', u'as', u'a', u'``', u'least', u'concern', u"''", u'species', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u'RB', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'``', u'JJS', u'NN', u"''", u'NNS', u'.'], u'char_offsets': [[25020, 25023], [25024, 25029], [25030, 25042], [25043, 25048], [25049, 25050], [25050, 25054], [25054, 25055], [25056, 25065], [25066, 25071], [25072, 25075], [25076, 25082], [25083, 25085], [25086, 25087], [25088, 25089], [25089, 25094], [25095, 25102], [25102, 25103], [25104, 25111], [25111, 25112]]}) 
answer: set([u'consid'])
candidate Sentence: (0.13396963477134705, {u'tokens': [u'South', u'of', u'the', u'Rio', u'Grande', u',', u'the', u'International', u'Union', u'for', u'the', u'Conservation', u'of', u'Nature', u'and', u'Natural', u'Resources', u'-LRB-', u'IUCN', u'-RRB-', u'lists', u'the', u'cat', u'in', u'every', u'Central', u'and', u'South', u'American', u'country', u'except', u'Costa', u'Rica', u'and', u'Panama', u'.'], u'lemmas': [u'South', u'of', u'the', u'Rio', u'Grande', u',', u'the', u'International', u'Union', u'for', u'the', u'Conservation', u'of', u'Nature', u'and', u'Natural', u'Resources', u'-lrb-', u'IUCN', u'-rrb-', u'list', u'the', u'cat', u'in', u'every', u'Central', u'and', u'South', u'American', u'country', u'except', u'Costa', u'Rica', u'and', u'Panama', u'.'], u'pos': [u'NNP', u'IN', u'DT', u'NNP', u'NNP', u',', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NNP', u'CC', u'NNP', u'NNP', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'NNP', u'.'], u'char_offsets': [[20287, 20292], [20293, 20295], [20296, 20299], [20300, 20303], [20304, 20310], [20310, 20311], [20312, 20315], [20316, 20329], [20330, 20335], [20336, 20339], [20340, 20343], [20344, 20356], [20357, 20359], [20360, 20366], [20367, 20370], [20371, 20378], [20379, 20388], [20389, 20390], [20390, 20394], [20394, 20395], [20396, 20401], [20402, 20405], [20406, 20409], [20410, 20412], [20413, 20418], [20419, 20426], [20427, 20430], [20431, 20436], [20437, 20445], [20446, 20453], [20454, 20460], [20461, 20466], [20467, 20471], [20472, 20475], [20476, 20482], [20482, 20483]]}) 
answer: set([u'world', u'concern', u'consid', u'least', u'speci'])
candidate Sentence: (0.13258689641952515, {u'tokens': [u'Most', u'did', u'not', u'reach', u'adulthood', u'.'], u'lemmas': [u'most', u'do', u'not', u'reach', u'adulthood', u'.'], u'pos': [u'JJS', u'VBD', u'RB', u'VB', u'NN', u'.'], u'char_offsets': [[24276, 24280], [24281, 24284], [24285, 24288], [24289, 24294], [24295, 24304], [24304, 24305]]}) 
answer: set([u'speci', u'union', u'least', u'consid', u'conserv', u'world', u'concern'])
candidate Sentence: (0.12796863913536072, {u'tokens': [u'During', u'the', u'early', u'years', u'of', u'ranching', u',', u'cougars', u'were', u'considered', u'on', u'par', u'with', u'wolves', u'in', u'destructiveness', u'.'], u'lemmas': [u'during', u'the', u'early', u'year', u'of', u'ranching', u',', u'cougar', u'be', u'consider', u'on', u'par', u'with', u'wolf', u'in', u'destructiveness', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'NNS', u'IN', u'NN', u',', u'NNS', u'VBD', u'VBN', u'IN', u'NN', u'IN', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[29532, 29538], [29539, 29542], [29543, 29548], [29549, 29554], [29555, 29557], [29558, 29566], [29566, 29567], [29568, 29575], [29576, 29580], [29581, 29591], [29592, 29594], [29595, 29598], [29599, 29603], [29604, 29610], [29611, 29613], [29614, 29629], [29629, 29630]]}) 
answer: set([u'speci', u'union', u'least', u'conserv', u'world', u'concern'])
candidate Sentence: (0.11037647724151611, {u'tokens': [u'The', u'term', u'``', u'black', u'panther', u"''", u'is', u'used', u'colloquially', u'to', u'refer', u'to', u'melanistic', u'individuals', u'of', u'other', u'species', u',', u'particularly', u'jaguars', u'and', u'leopards', u'.'], u'lemmas': [u'the', u'term', u'``', u'black', u'panther', u"''", u'be', u'use', u'colloquially', u'to', u'refer', u'to', u'melanistic', u'individual', u'of', u'other', u'species', u',', u'particularly', u'jaguar', u'and', u'leopard', u'.'], u'pos': [u'DT', u'NN', u'``', u'JJ', u'NN', u"''", u'VBZ', u'VBN', u'RB', u'TO', u'VB', u'TO', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u',', u'RB', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[9432, 9435], [9436, 9440], [9441, 9442], [9442, 9447], [9448, 9455], [9455, 9456], [9457, 9459], [9460, 9464], [9465, 9477], [9478, 9480], [9481, 9486], [9487, 9489], [9490, 9500], [9501, 9512], [9513, 9515], [9516, 9521], [9522, 9529], [9529, 9530], [9531, 9543], [9544, 9551], [9552, 9555], [9556, 9564], [9564, 9565]]}) 
answer: set([u'union', u'least', u'consid', u'conserv', u'world', u'concern'])
candidate Sentence: (0.11007314920425415, {u'tokens': [u'In', u'North', u'America', u',', u'mythological', u'descriptions', u'of', u'the', u'cougar', u'have', u'appeared', u'in', u'the', u'stories', u'of', u'the', u'Hock', u'language', u'-LRB-', u'``', u'Ho-Chunk', u"''", u'or', u'``', u'Winnebago', u"''", u'-RRB-', u'of', u'Wisconsin', u'and', u'Illinois', u'Cougars', u',', u'The', u'Encyclopedia', u'of', u'Hok', u'-LRB-', u'Winnebago', u'-RRB-', u'Mythology', u'.'], u'lemmas': [u'in', u'North', u'America', u',', u'mythological', u'description', u'of', u'the', u'cougar', u'have', u'appear', u'in', u'the', u'story', u'of', u'the', u'Hock', u'language', u'-lrb-', u'``', u'ho-chunk', u"''", u'or', u'``', u'Winnebago', u"''", u'-rrb-', u'of', u'Wisconsin', u'and', u'Illinois', u'Cougars', u',', u'the', u'encyclopedia', u'of', u'Hok', u'-lrb-', u'Winnebago', u'-rrb-', u'Mythology', u'.'], u'pos': [u'IN', u'NNP', u'NNP', u',', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'VBP', u'VBN', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NNP', u'NN', u'-LRB-', u'``', u'JJ', u"''", u'CC', u'``', u'NNP', u"''", u'-RRB-', u'IN', u'NNP', u'CC', u'NNP', u'NNPS', u',', u'DT', u'NN', u'IN', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u'NNP', u'.'], u'char_offsets': [[29165, 29167], [29168, 29173], [29174, 29181], [29181, 29182], [29183, 29195], [29196, 29208], [29209, 29211], [29212, 29215], [29216, 29222], [29223, 29227], [29228, 29236], [29237, 29239], [29240, 29243], [29244, 29251], [29252, 29254], [29255, 29258], [29259, 29263], [29264, 29272], [29273, 29274], [29274, 29275], [29275, 29283], [29283, 29284], [29285, 29287], [29288, 29289], [29289, 29298], [29298, 29299], [29299, 29300], [29301, 29303], [29304, 29313], [29314, 29317], [29318, 29326], [29330, 29337], [29337, 29338], [29339, 29342], [29343, 29355], [29356, 29358], [29359, 29362], [29363, 29364], [29364, 29373], [29373, 29374], [29375, 29384], [29384, 29385]]}) 
answer: set([u'speci', u'union', u'least', u'consid', u'conserv', u'world', u'concern'])
candidate Sentence: (0.1086445152759552, {u'tokens': [u'*', u'Description', u'of', u'a', u'Cougar', u'attack', u'*', u'Cougar', u'Facts', u'and', u'Photos', u'NatureMapping', u'Program', u'*', u'No', u'Place', u'for', u'Predators', u'?'], u'lemmas': [u'*', u'description', u'of', u'a', u'Cougar', u'attack', u'*', u'Cougar', u'Facts', u'and', u'Photos', u'NatureMapping', u'Program', u'*', u'no', u'place', u'for', u'predator', u'?'], u'pos': [u'SYM', u'NN', u'IN', u'DT', u'NNP', u'NN', u'SYM', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'SYM', u'DT', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[33425, 33426], [33428, 33439], [33440, 33442], [33443, 33444], [33445, 33451], [33452, 33458], [33459, 33460], [33462, 33468], [33469, 33474], [33475, 33478], [33479, 33485], [33487, 33500], [33501, 33508], [33509, 33510], [33512, 33514], [33515, 33520], [33521, 33524], [33525, 33534], [33534, 33535]]}) 
answer: set([u'speci', u'union', u'least', u'consid', u'conserv', u'world', u'concern'])
candidate Sentence: (0.10467731952667236, {u'tokens': [u'The', u'Quebec', u'wildlife', u'services', u'-LRB-', u'known', u'locally', u'as', u'MRNF', u'-RRB-', u'also', u'considers', u'Cougar', u'to', u'be', u'present', u'in', u'the', u'province', u'as', u'a', u'threatened', u'species', u'after', u'multiple', u'DNA', u'tests', u'confirmed', u'cougar', u'hair', u'in', u'Lynx', u'mating', u'sites', u'.'], u'lemmas': [u'the', u'Quebec', u'wildlife', u'service', u'-lrb-', u'know', u'locally', u'as', u'mrnf', u'-rrb-', u'also', u'consider', u'Cougar', u'to', u'be', u'present', u'in', u'the', u'province', u'as', u'a', u'threaten', u'species', u'after', u'multiple', u'dna', u'test', u'confirm', u'cougar', u'hair', u'in', u'Lynx', u'mate', u'site', u'.'], u'pos': [u'DT', u'NNP', u'NN', u'NNS', u'-LRB-', u'VBN', u'RB', u'IN', u'NN', u'-RRB-', u'RB', u'VBZ', u'NNP', u'TO', u'VB', u'JJ', u'IN', u'DT', u'NN', u'IN', u'DT', u'VBN', u'NNS', u'IN', u'JJ', u'NN', u'NNS', u'VBD', u'NN', u'NN', u'IN', u'NNP', u'VBG', u'NNS', u'.'], u'char_offsets': [[18958, 18961], [18962, 18968], [18969, 18977], [18978, 18986], [18987, 18988], [18988, 18993], [18994, 19001], [19002, 19004], [19005, 19009], [19009, 19010], [19011, 19015], [19016, 19025], [19026, 19032], [19033, 19035], [19036, 19038], [19039, 19046], [19047, 19049], [19050, 19053], [19054, 19062], [19063, 19065], [19066, 19067], [19068, 19078], [19079, 19086], [19087, 19092], [19093, 19101], [19102, 19105], [19106, 19111], [19112, 19121], [19122, 19128], [19129, 19133], [19134, 19136], [19137, 19141], [19142, 19148], [19149, 19154], [19154, 19155]]}) 
answer: set([u'union', u'world', u'concern', u'least', u'conserv'])
candidate Sentence: (0.10351049900054932, {u'tokens': [u'Conservation', u'work', u'in', u'Texas', u'is', u'the', u'effort', u'of', u'a', u'non', u'profit', u'organization', u',', u'Balanced', u'Ecology', u'Inc.', u'-LRB-', u'BEI', u'-RRB-', u',', u'as', u'part', u'of', u'their', u'Texas', u'Mountain', u'Lion', u'Conservation', u'Project', u'.'], u'lemmas': [u'Conservation', u'work', u'in', u'Texas', u'be', u'the', u'effort', u'of', u'a', u'non', u'profit', u'organization', u',', u'balanced', u'Ecology', u'Inc.', u'-lrb-', u'BEI', u'-rrb-', u',', u'as', u'part', u'of', u'they', u'Texas', u'Mountain', u'Lion', u'Conservation', u'Project', u'.'], u'pos': [u'NNP', u'NN', u'IN', u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'NN', u',', u'JJ', u'NNP', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u',', u'IN', u'NN', u'IN', u'PRP$', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[27116, 27128], [27129, 27133], [27134, 27136], [27137, 27142], [27143, 27145], [27146, 27149], [27150, 27156], [27157, 27159], [27160, 27161], [27162, 27165], [27166, 27172], [27173, 27185], [27185, 27186], [27187, 27195], [27196, 27203], [27204, 27208], [27209, 27210], [27210, 27213], [27213, 27214], [27214, 27215], [27216, 27218], [27219, 27223], [27224, 27226], [27227, 27232], [27233, 27238], [27239, 27247], [27248, 27252], [27253, 27265], [27266, 27273], [27274, 27275]]}) 
answer: set([u'speci', u'union', u'least', u'consid', u'world', u'concern'])
candidate Sentence: (0.10274501144886017, {u'tokens': [u'Conservation', u'threats', u'to', u'the', u'species', u'include', u'persecution', u'as', u'a', u'pest', u'animal', u',', u'degradation', u'and', u'fragmentation', u'of', u'their', u'habitat', u',', u'and', u'depletion', u'of', u'their', u'prey', u'base', u'.'], u'lemmas': [u'Conservation', u'threat', u'to', u'the', u'species', u'include', u'persecution', u'as', u'a', u'pest', u'animal', u',', u'degradation', u'and', u'fragmentation', u'of', u'they', u'habitat', u',', u'and', u'depletion', u'of', u'they', u'prey', u'base', u'.'], u'pos': [u'NNP', u'NNS', u'TO', u'DT', u'NNS', u'VBP', u'NN', u'IN', u'DT', u'NN', u'NN', u',', u'NN', u'CC', u'NN', u'IN', u'PRP$', u'NN', u',', u'CC', u'NN', u'IN', u'PRP$', u'NN', u'NN', u'.'], u'char_offsets': [[28028, 28040], [28041, 28048], [28049, 28051], [28052, 28055], [28056, 28063], [28064, 28071], [28072, 28083], [28084, 28086], [28087, 28088], [28089, 28093], [28094, 28100], [28100, 28101], [28102, 28113], [28114, 28117], [28118, 28131], [28132, 28134], [28135, 28140], [28141, 28148], [28148, 28149], [28150, 28153], [28154, 28163], [28164, 28166], [28167, 28172], [28173, 28177], [28178, 28182], [28182, 28183]]}) 
answer: set([u'union', u'world', u'consid', u'least', u'concern'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Does the World Conservation Union consider the cougar a "least concern" species?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Cougar
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set1/a2.txt

No
_____________________________ test_yesno[param88] ______________________________

param = (<src.question_processing.Question_parser instance at 0x10cab1fc8>, (<src.tfidf.TF_IDF object at 0x105d7e7d0>, set(['cymbal'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cab1fc8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.40803664922714233, {u'tokens': [u'The', u'most', u'common', u'Cymbals', u'are', u'the', u'Hi-Hats', u',', u'Crash', u',', u'Splash', u',', u'Ride', u',', u'and', u'China', u'.'], u'lemmas': [u'the', u'most', u'common', u'cymbal', u'be', u'the', u'Hi-Hats', u',', u'Crash', u',', u'Splash', u',', u'ride', u',', u'and', u'China', u'.'], u'pos': [u'DT', u'RBS', u'JJ', u'NNS', u'VBP', u'DT', u'NNPS', u',', u'NNP', u',', u'NNP', u',', u'NN', u',', u'CC', u'NNP', u'.'], u'char_offsets': [[1762, 1765], [1766, 1770], [1771, 1777], [1778, 1785], [1786, 1789], [1790, 1793], [1794, 1801], [1801, 1802], [1803, 1808], [1808, 1809], [1810, 1816], [1816, 1817], [1818, 1822], [1822, 1823], [1824, 1827], [1828, 1833], [1833, 1834]]}) 
answer: set([u'veri'])
candidate Sentence: (0.26500973105430603, {u'tokens': [u'This', u'combination', u',', u'played', u'loudly', u',', u'is', u'an', u'effective', u'way', u'to', u'accentuate', u'a', u'note', u'since', u'the', u'two', u'instruments', u'together', u'contribute', u'to', u'both', u'very', u'low', u'and', u'very', u'high', u'frequency', u'ranges', u'and', u'provide', u'a', u'satisfying', u'``', u'crash-bang-wallop', u"''", u'.'], u'lemmas': [u'this', u'combination', u',', u'play', u'loudly', u',', u'be', u'a', u'effective', u'way', u'to', u'accentuate', u'a', u'note', u'since', u'the', u'two', u'instrument', u'together', u'contribute', u'to', u'both', u'very', u'low', u'and', u'very', u'high', u'frequency', u'range', u'and', u'provide', u'a', u'satisfy', u'``', u'crash-bang-wallop', u"''", u'.'], u'pos': [u'DT', u'NN', u',', u'VBD', u'RB', u',', u'VBZ', u'DT', u'JJ', u'NN', u'TO', u'VB', u'DT', u'NN', u'IN', u'DT', u'CD', u'NNS', u'RB', u'VBP', u'TO', u'DT', u'RB', u'JJ', u'CC', u'RB', u'JJ', u'NN', u'NNS', u'CC', u'VB', u'DT', u'VBG', u'``', u'JJ', u"''", u'.'], u'char_offsets': [[3989, 3993], [3994, 4005], [4005, 4006], [4007, 4013], [4014, 4020], [4020, 4021], [4022, 4024], [4025, 4027], [4028, 4037], [4038, 4041], [4042, 4044], [4045, 4055], [4056, 4057], [4058, 4062], [4063, 4068], [4069, 4072], [4073, 4076], [4077, 4088], [4089, 4097], [4098, 4108], [4109, 4111], [4112, 4116], [4117, 4121], [4122, 4125], [4126, 4129], [4130, 4134], [4135, 4139], [4140, 4149], [4150, 4156], [4157, 4160], [4161, 4168], [4169, 4170], [4171, 4181], [4182, 4183], [4183, 4200], [4200, 4201], [4201, 4202]]}) 
answer: set([u'ride', u'common'])
candidate Sentence: (0.20698681473731995, {u'tokens': [u'However', u',', u'hi-hat', u'cymbals', u'tend', u'to', u'be', u'heavy', u'with', u'little', u'taper', u',', u'more', u'similar', u'to', u'a', u'ride', u'cymbal', u'than', u'to', u'a', u'crash', u'cymbal', u'as', u'found', u'in', u'a', u'drum', u'kit', u',', u'and', u'perform', u'a', u'ride', u'rather', u'than', u'a', u'crash', u'function', u'.'], u'lemmas': [u'however', u',', u'hi-hat', u'cymbal', u'tend', u'to', u'be', u'heavy', u'with', u'little', u'taper', u',', u'more', u'similar', u'to', u'a', u'ride', u'cymbal', u'than', u'to', u'a', u'crash', u'cymbal', u'as', u'find', u'in', u'a', u'drum', u'kit', u',', u'and', u'perform', u'a', u'ride', u'rather', u'than', u'a', u'crash', u'function', u'.'], u'pos': [u'RB', u',', u'JJ', u'NNS', u'VBP', u'TO', u'VB', u'JJ', u'IN', u'JJ', u'VBP', u',', u'RBR', u'JJ', u'TO', u'DT', u'NN', u'NN', u'IN', u'TO', u'DT', u'NN', u'NN', u'IN', u'VBN', u'IN', u'DT', u'VBP', u'NN', u',', u'CC', u'VB', u'DT', u'NN', u'RB', u'IN', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[4701, 4708], [4708, 4709], [4710, 4716], [4717, 4724], [4725, 4729], [4730, 4732], [4733, 4735], [4736, 4741], [4742, 4746], [4747, 4753], [4754, 4759], [4759, 4760], [4761, 4765], [4766, 4773], [4774, 4776], [4777, 4778], [4779, 4783], [4784, 4790], [4791, 4795], [4796, 4798], [4799, 4800], [4801, 4806], [4807, 4813], [4814, 4816], [4817, 4822], [4823, 4825], [4826, 4827], [4828, 4832], [4833, 4836], [4836, 4837], [4838, 4841], [4842, 4849], [4850, 4851], [4852, 4856], [4857, 4863], [4864, 4868], [4869, 4870], [4871, 4876], [4877, 4885], [4885, 4886]]}) 
answer: set([u'veri', u'common'])
candidate Sentence: (0.012056773528456688, {u'tokens': [u'Cymbals', u'are', u'a', u'modern', u'percussion', u'instrument', u'.'], u'lemmas': [u'cymbal', u'be', u'a', u'modern', u'percussion', u'instrument', u'.'], u'pos': [u'NNS', u'VBP', u'DT', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[0, 7], [8, 11], [12, 13], [14, 20], [21, 31], [32, 42], [42, 43]]}) 
answer: set([u'veri', u'ride', u'common'])
candidate Sentence: (0.011939030140638351, {u'tokens': [u'The', u'second', u'main', u'orchestral', u'use', u'of', u'cymbals', u'is', u'the', u'suspended', u'cymbal', u'.'], u'lemmas': [u'the', u'second', u'main', u'orchestral', u'use', u'of', u'cymbal', u'be', u'the', u'suspend', u'cymbal', u'.'], u'pos': [u'DT', u'JJ', u'JJ', u'JJ', u'NN', u'IN', u'NNS', u'VBZ', u'DT', u'VBN', u'NN', u'.'], u'char_offsets': [[4887, 4890], [4891, 4897], [4898, 4902], [4903, 4913], [4914, 4917], [4918, 4920], [4921, 4928], [4929, 4931], [4932, 4935], [4936, 4945], [4946, 4952], [4952, 4953]]}) 
answer: set([u'veri', u'ride', u'common'])
candidate Sentence: (0.011176573112607002, {u'tokens': [u'Orchestral', u'crash', u'cymbals', u'are', u'traditionally', u'used', u'in', u'pairs', u',', u'each', u'one', u'having', u'a', u'strap', u'set', u'in', u'the', u'bell', u'of', u'the', u'cymbal', u'by', u'which', u'they', u'are', u'held', u'.'], u'lemmas': [u'orchestral', u'crash', u'cymbal', u'be', u'traditionally', u'use', u'in', u'pair', u',', u'each', u'one', u'have', u'a', u'strap', u'set', u'in', u'the', u'bell', u'of', u'the', u'cymbal', u'by', u'which', u'they', u'be', u'hold', u'.'], u'pos': [u'JJ', u'NN', u'NNS', u'VBP', u'RB', u'VBN', u'IN', u'NNS', u',', u'DT', u'CD', u'VBG', u'DT', u'NN', u'VBN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'WDT', u'PRP', u'VBP', u'VBN', u'.'], u'char_offsets': [[2453, 2463], [2464, 2469], [2470, 2477], [2478, 2481], [2482, 2495], [2496, 2500], [2501, 2503], [2504, 2509], [2509, 2510], [2511, 2515], [2516, 2519], [2520, 2526], [2527, 2528], [2529, 2534], [2535, 2538], [2539, 2541], [2542, 2545], [2546, 2550], [2551, 2553], [2554, 2557], [2558, 2564], [2565, 2567], [2568, 2573], [2574, 2578], [2579, 2582], [2583, 2587], [2587, 2588]]}) 
answer: set([u'veri', u'ride', u'common'])
candidate Sentence: (0.011020506732165813, {u'tokens': [u'Ancient', u'cymbals', u'or', u'tuned', u'cymbals', u'are', u'much', u'more', u'rarely', u'called', u'for', u'.'], u'lemmas': [u'ancient', u'cymbal', u'or', u'tune', u'cymbal', u'be', u'much', u'more', u'rarely', u'call', u'for', u'.'], u'pos': [u'JJ', u'NNS', u'CC', u'VBN', u'NNS', u'VBP', u'RB', u'RBR', u'RB', u'VBN', u'IN', u'.'], u'char_offsets': [[6751, 6758], [6759, 6766], [6767, 6769], [6770, 6775], [6776, 6783], [6784, 6787], [6788, 6792], [6793, 6797], [6798, 6804], [6805, 6811], [6812, 6815], [6815, 6816]]}) 
answer: set([u'veri', u'ride', u'common'])
candidate Sentence: (0.010542184114456177, {u'tokens': [u'Such', u'a', u'pair', u'is', u'known', u'technically', u'as', u'a', u'pair', u'of', u'clash', u'cymbals', u',', u'although', u'this', u'term', u'is', u'rarely', u'used', u',', u'see', u'clash', u'cymbals', u'.'], u'lemmas': [u'such', u'a', u'pair', u'be', u'know', u'technically', u'as', u'a', u'pair', u'of', u'clash', u'cymbal', u',', u'although', u'this', u'term', u'be', u'rarely', u'use', u',', u'see', u'clash', u'cymbal', u'.'], u'pos': [u'PDT', u'DT', u'NN', u'VBZ', u'VBN', u'RB', u'IN', u'DT', u'NN', u'IN', u'NN', u'NNS', u',', u'IN', u'DT', u'NN', u'VBZ', u'RB', u'VBN', u',', u'VB', u'NN', u'NNS', u'.'], u'char_offsets': [[2589, 2593], [2594, 2595], [2596, 2600], [2601, 2603], [2604, 2609], [2610, 2621], [2622, 2624], [2625, 2626], [2627, 2631], [2632, 2634], [2635, 2640], [2641, 2648], [2648, 2649], [2650, 2658], [2659, 2663], [2664, 2668], [2669, 2671], [2672, 2678], [2679, 2683], [2683, 2684], [2685, 2688], [2689, 2694], [2695, 2702], [2702, 2703]]}) 
answer: set([u'veri', u'ride', u'common'])
candidate Sentence: (0.0089074056595563889, {u'tokens': [u'Most', u'modern', u'cymbals', u'are', u'of', u'indefinite', u'pitch', u'-LRB-', u'tuned', u'sets', u'have', u'been', u'manufactured', u'but', u'are', u'rare', u'-RRB-', u',', u'whereas', u'small', u'cup-shaped', u'cymbals', u'based', u'on', u'ancient', u'designs', u'sound', u'a', u'definite', u'note', u'-LRB-', u"''", u'see', u':', u'crotales', u'-RRB-', u'.'], u'lemmas': [u'most', u'modern', u'cymbal', u'be', u'of', u'indefinite', u'pitch', u'-lrb-', u'tune', u'set', u'have', u'be', u'manufacture', u'but', u'be', u'rare', u'-rrb-', u',', u'whereas', u'small', u'cup-shaped', u'cymbal', u'base', u'on', u'ancient', u'design', u'sound', u'a', u'definite', u'note', u'-lrb-', u"''", u'see', u':', u'crotale', u'-rrb-', u'.'], u'pos': [u'JJS', u'JJ', u'NNS', u'VBP', u'IN', u'JJ', u'NN', u'-LRB-', u'VBN', u'NNS', u'VBP', u'VBN', u'VBN', u'CC', u'VBP', u'JJ', u'-RRB-', u',', u'IN', u'JJ', u'JJ', u'NNS', u'VBN', u'IN', u'JJ', u'NNS', u'VBP', u'DT', u'JJ', u'NN', u'-LRB-', u"''", u'VB', u':', u'NNS', u'-RRB-', u'.'], u'char_offsets': [[174, 178], [179, 185], [186, 193], [194, 197], [198, 200], [201, 211], [212, 217], [218, 219], [219, 224], [225, 229], [230, 234], [235, 239], [240, 252], [253, 256], [257, 260], [261, 265], [265, 266], [266, 267], [268, 275], [276, 281], [282, 292], [293, 300], [301, 306], [307, 309], [310, 317], [318, 325], [326, 331], [332, 333], [334, 342], [343, 347], [348, 349], [349, 351], [351, 354], [354, 355], [356, 364], [364, 365], [365, 366]]}) 
answer: set([u'veri', u'ride', u'common'])
candidate Sentence: (0.0085215307772159576, {u'tokens': [u'The', u'bell', u'is', u'in', u'green', u'and', u'the', u'straps', u'are', u'in', u'red', u'.'], u'lemmas': [u'the', u'bell', u'be', u'in', u'green', u'and', u'the', u'strap', u'be', u'in', u'red', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'IN', u'JJ', u'CC', u'DT', u'NNS', u'VBP', u'IN', u'JJ', u'.'], u'char_offsets': [[2405, 2408], [2409, 2413], [2414, 2416], [2417, 2419], [2420, 2425], [2426, 2429], [2430, 2433], [2434, 2440], [2441, 2444], [2445, 2447], [2448, 2451], [2451, 2452]]}) 
answer: set([u'veri', u'ride', u'common'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Are ride cymbals very common?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Cymbal
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a6.txt

No
_____________________________ test_yesno[param92] ______________________________

param = (<src.question_processing.Question_parser instance at 0x10cac7128>, (<src.tfidf.TF_IDF object at 0x109b86850>, set(['drum'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cac7128>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.86695915460586548, {u'tokens': [u'Each', u'type', u'of', u'drumhead', u'serves', u'its', u'own', u'musical', u'purpose', u'and', u'has', u'its', u'own', u'unique', u'sound', u'.'], u'lemmas': [u'each', u'type', u'of', u'drumhead', u'serve', u'its', u'own', u'musical', u'purpose', u'and', u'have', u'its', u'own', u'unique', u'sound', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NN', u'VBZ', u'PRP$', u'JJ', u'JJ', u'NN', u'CC', u'VBZ', u'PRP$', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[3779, 3783], [3784, 3788], [3789, 3791], [3792, 3800], [3801, 3807], [3808, 3811], [3812, 3815], [3816, 3823], [3824, 3831], [3832, 3835], [3836, 3839], [3840, 3843], [3844, 3847], [3848, 3854], [3855, 3860], [3860, 3861]]}) 
answer: set([u'head'])
candidate Sentence: (0.15374471247196198, {u'tokens': [u'Drums', u'with', u'two', u'heads', u'can', u'also', u'have', u'a', u'set', u'of', u'wires', u',', u'called', u'snares', u',', u'held', u'across', u'the', u'bottom', u'head', u',', u'top', u'head', u',', u'or', u'both', u'heads', u',', u'hence', u'the', u'name', u'snare', u'drum', u'.'], u'lemmas': [u'drum', u'with', u'two', u'head', u'can', u'also', u'have', u'a', u'set', u'of', u'wire', u',', u'call', u'snare', u',', u'hold', u'across', u'the', u'bottom', u'head', u',', u'top', u'head', u',', u'or', u'both', u'head', u',', u'hence', u'the', u'name', u'snare', u'drum', u'.'], u'pos': [u'NNS', u'IN', u'CD', u'NNS', u'MD', u'RB', u'VB', u'DT', u'NN', u'IN', u'NNS', u',', u'VBN', u'NNS', u',', u'VBN', u'IN', u'DT', u'JJ', u'NN', u',', u'JJ', u'NN', u',', u'CC', u'DT', u'NNS', u',', u'RB', u'DT', u'NN', u'VB', u'VB', u'.'], u'char_offsets': [[1994, 1999], [2000, 2004], [2005, 2008], [2009, 2014], [2015, 2018], [2019, 2023], [2024, 2028], [2029, 2030], [2031, 2034], [2035, 2037], [2038, 2043], [2043, 2044], [2045, 2051], [2052, 2058], [2058, 2059], [2060, 2064], [2065, 2071], [2072, 2075], [2076, 2082], [2083, 2087], [2087, 2088], [2089, 2092], [2093, 2097], [2097, 2098], [2099, 2101], [2102, 2106], [2107, 2112], [2112, 2113], [2114, 2119], [2120, 2123], [2124, 2128], [2129, 2134], [2135, 2139], [2140, 2141]]}) 
answer: set([u'serv', u'music', u'purpos', u'type'])
candidate Sentence: (0.12231619656085968, {u'tokens': [u'The', u'type', u'of', u'shell', u'also', u'affects', u'the', u'sound', u'of', u'a', u'drum', u'.'], u'lemmas': [u'the', u'type', u'of', u'shell', u'also', u'affect', u'the', u'sound', u'of', u'a', u'drum', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NN', u'RB', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'VBP', u'.'], u'char_offsets': [[4802, 4805], [4806, 4810], [4811, 4813], [4814, 4819], [4820, 4824], [4825, 4832], [4833, 4836], [4837, 4842], [4843, 4845], [4846, 4847], [4848, 4852], [4852, 4853]]}) 
answer: set([u'serv', u'head', u'purpos', u'music'])
candidate Sentence: (0.096087656915187836, {u'tokens': [u'The', u'sound', u'of', u'a', u'drum', u'depends', u'on', u'several', u'variables', u',', u'including', u'shape', u',', u'size', u'and', u'thickness', u'of', u'its', u'shell', u',', u'materials', u'from', u'which', u'the', u'shell', u'was', u'made', u',', u'counterhoop', u'material', u',', u'type', u'of', u'drumhead', u'used', u'and', u'tension', u'applied', u'to', u'it', u',', u'position', u'of', u'the', u'drum', u',', u'location', u',', u'and', u'the', u'velocity', u'and', u'angle', u'in', u'which', u'it', u'is', u'struck', u'.'], u'lemmas': [u'the', u'sound', u'of', u'a', u'drum', u'depend', u'on', u'several', u'variable', u',', u'include', u'shape', u',', u'size', u'and', u'thickness', u'of', u'its', u'shell', u',', u'material', u'from', u'which', u'the', u'shell', u'be', u'make', u',', u'counterhoop', u'material', u',', u'type', u'of', u'drumhead', u'use', u'and', u'tension', u'apply', u'to', u'it', u',', u'position', u'of', u'the', u'drum', u',', u'location', u',', u'and', u'the', u'velocity', u'and', u'angle', u'in', u'which', u'it', u'be', u'strike', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'VBP', u'VBZ', u'IN', u'JJ', u'NNS', u',', u'VBG', u'NN', u',', u'NN', u'CC', u'NN', u'IN', u'PRP$', u'NN', u',', u'NNS', u'IN', u'WDT', u'DT', u'NN', u'VBD', u'VBN', u',', u'NN', u'NN', u',', u'NN', u'IN', u'NN', u'VBN', u'CC', u'NN', u'VBD', u'TO', u'PRP', u',', u'NN', u'IN', u'DT', u'VBP', u',', u'NN', u',', u'CC', u'DT', u'NN', u'CC', u'NN', u'IN', u'WDT', u'PRP', u'VBZ', u'VBN', u'.'], u'char_offsets': [[2563, 2566], [2567, 2572], [2573, 2575], [2576, 2577], [2578, 2582], [2583, 2590], [2591, 2593], [2594, 2601], [2602, 2611], [2611, 2612], [2613, 2622], [2623, 2628], [2628, 2629], [2630, 2634], [2635, 2638], [2639, 2648], [2649, 2651], [2652, 2655], [2656, 2661], [2661, 2662], [2663, 2672], [2673, 2677], [2678, 2683], [2684, 2687], [2688, 2693], [2694, 2697], [2698, 2702], [2702, 2703], [2704, 2715], [2716, 2724], [2724, 2725], [2726, 2730], [2731, 2733], [2734, 2742], [2743, 2747], [2748, 2751], [2752, 2759], [2760, 2767], [2768, 2770], [2771, 2773], [2773, 2774], [2775, 2783], [2784, 2786], [2787, 2790], [2791, 2795], [2795, 2796], [2797, 2805], [2805, 2806], [2807, 2810], [2811, 2814], [2815, 2823], [2824, 2827], [2828, 2833], [2834, 2836], [2837, 2842], [2843, 2845], [2846, 2848], [2849, 2855], [2855, 2856]]}) 
answer: set([u'serv', u'head', u'purpos', u'music'])
candidate Sentence: (0.082161940634250641, {u'tokens': [u'The', u'type', u'of', u'wood', u'is', u'important', u'as', u'well', u'.'], u'lemmas': [u'the', u'type', u'of', u'wood', u'be', u'important', u'as', u'well', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NN', u'VBZ', u'JJ', u'RB', u'RB', u'.'], u'char_offsets': [[5083, 5086], [5087, 5091], [5092, 5094], [5095, 5099], [5100, 5102], [5103, 5112], [5113, 5115], [5116, 5120], [5120, 5121]]}) 
answer: set([u'serv', u'head', u'purpos', u'music'])
candidate Sentence: (0.081024825572967529, {u'tokens': [u'Drums', u'with', u'two', u'heads', u'covering', u'both', u'ends', u'of', u'a', u'cylindrical', u'shell', u'often', u'have', u'a', u'small', u'hole', u'somewhat', u'halfway', u'between', u'the', u'two', u'heads', u';', u'the', u'shell', u'forms', u'a', u'resonating', u'chamber', u'for', u'the', u'resulting', u'sound', u'.'], u'lemmas': [u'drum', u'with', u'two', u'head', u'cover', u'both', u'end', u'of', u'a', u'cylindrical', u'shell', u'often', u'have', u'a', u'small', u'hole', u'somewhat', u'halfway', u'between', u'the', u'two', u'head', u';', u'the', u'shell', u'form', u'a', u'resonate', u'chamber', u'for', u'the', u'result', u'sound', u'.'], u'pos': [u'NNS', u'IN', u'CD', u'NNS', u'VBG', u'CC', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'RB', u'VBP', u'DT', u'JJ', u'NN', u'RB', u'RB', u'IN', u'DT', u'CD', u'NNS', u':', u'DT', u'NN', u'VBZ', u'DT', u'VBG', u'NN', u'IN', u'DT', u'VBG', u'NN', u'.'], u'char_offsets': [[1670, 1675], [1676, 1680], [1681, 1684], [1685, 1690], [1691, 1699], [1700, 1704], [1705, 1709], [1710, 1712], [1713, 1714], [1715, 1726], [1727, 1732], [1733, 1738], [1739, 1743], [1744, 1745], [1746, 1751], [1752, 1756], [1757, 1765], [1766, 1773], [1774, 1781], [1782, 1785], [1786, 1789], [1790, 1795], [1795, 1796], [1797, 1800], [1801, 1806], [1807, 1812], [1813, 1814], [1815, 1825], [1826, 1833], [1834, 1837], [1838, 1841], [1842, 1851], [1852, 1857], [1857, 1858]]}) 
answer: set([u'serv', u'music', u'purpos', u'type'])
candidate Sentence: (0.074329674243927002, {u'tokens': [u'The', u'head', u"'s", u'tension', u'can', u'be', u'adjusted', u'by', u'loosening', u'or', u'tightening', u'the', u'rods', u'.'], u'lemmas': [u'the', u'head', u"'s", u'tension', u'can', u'be', u'adjust', u'by', u'loosen', u'or', u'tighten', u'the', u'rod', u'.'], u'pos': [u'DT', u'NN', u'POS', u'NN', u'MD', u'VB', u'VBN', u'IN', u'VBG', u'CC', u'VBG', u'DT', u'NNS', u'.'], u'char_offsets': [[2445, 2448], [2449, 2453], [2453, 2455], [2456, 2463], [2464, 2467], [2468, 2470], [2471, 2479], [2480, 2482], [2483, 2492], [2493, 2495], [2496, 2506], [2507, 2510], [2511, 2515], [2515, 2516]]}) 
answer: set([u'serv', u'music', u'purpos', u'type'])
candidate Sentence: (0.062839537858963013, {u'tokens': [u'Drum', u'carried', u'by', u'John', u'Unger', u',', u'Company', u'B', u',', u'40th', u'Regiment', u'New', u'York', u'Veteran', u'Volunteer', u'Infantry', u'Mozart', u'Regiment', u',', u'December', u'20', u',', u'1863', u'Several', u'factors', u'determine', u'the', u'sound', u'a', u'drum', u'produces', u',', u'including', u'the', u'type', u'of', u'shell', u'the', u'drum', u'has', u',', u'the', u'type', u'of', u'drumheads', u'it', u'has', u',', u'and', u'the', u'tension', u'of', u'the', u'drumheads', u'.'], u'lemmas': [u'drum', u'carry', u'by', u'John', u'Unger', u',', u'Company', u'B', u',', u'40th', u'Regiment', u'New', u'York', u'Veteran', u'Volunteer', u'Infantry', u'Mozart', u'Regiment', u',', u'December', u'20', u',', u'1863', u'several', u'factor', u'determine', u'the', u'sound', u'a', u'drum', u'produce', u',', u'include', u'the', u'type', u'of', u'shell', u'the', u'drum', u'have', u',', u'the', u'type', u'of', u'drumhead', u'it', u'have', u',', u'and', u'the', u'tension', u'of', u'the', u'drumhead', u'.'], u'pos': [u'VB', u'VBN', u'IN', u'NNP', u'NNP', u',', u'NNP', u'NNP', u',', u'JJ', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'CD', u',', u'CD', u'JJ', u'NNS', u'VBP', u'DT', u'NN', u'DT', u'VB', u'VBZ', u',', u'VBG', u'DT', u'NN', u'IN', u'NN', u'DT', u'VB', u'VBZ', u',', u'DT', u'NN', u'IN', u'NNS', u'PRP', u'VBZ', u',', u'CC', u'DT', u'NN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[3123, 3127], [3128, 3135], [3136, 3138], [3139, 3143], [3144, 3149], [3149, 3150], [3151, 3158], [3159, 3160], [3160, 3161], [3162, 3166], [3167, 3175], [3176, 3179], [3180, 3184], [3185, 3192], [3193, 3202], [3203, 3211], [3212, 3218], [3219, 3227], [3227, 3228], [3229, 3237], [3238, 3240], [3240, 3241], [3242, 3246], [3247, 3254], [3255, 3262], [3263, 3272], [3273, 3276], [3277, 3282], [3283, 3284], [3285, 3289], [3290, 3298], [3298, 3299], [3300, 3309], [3310, 3313], [3314, 3318], [3319, 3321], [3322, 3327], [3328, 3331], [3332, 3336], [3337, 3340], [3340, 3341], [3342, 3345], [3346, 3350], [3351, 3353], [3354, 3363], [3364, 3366], [3367, 3370], [3370, 3371], [3372, 3375], [3376, 3379], [3380, 3387], [3388, 3390], [3391, 3394], [3395, 3404], [3404, 3405]]}) 
answer: set([u'serv', u'head', u'purpos', u'music'])
candidate Sentence: (0.06026337668299675, {u'tokens': [u'In', u'the', u'western', u'musical', u'tradition', u',', u'the', u'most', u'usual', u'shape', u'is', u'a', u'cylinder', u',', u'although', u'timpani', u',', u'for', u'example', u',', u'use', u'bowl-shaped', u'shells', u'.'], u'lemmas': [u'in', u'the', u'western', u'musical', u'tradition', u',', u'the', u'most', u'usual', u'shape', u'be', u'a', u'cylinder', u',', u'although', u'timpani', u',', u'for', u'example', u',', u'use', u'bowl-shaped', u'shell', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'JJ', u'NN', u',', u'DT', u'RBS', u'JJ', u'NN', u'VBZ', u'DT', u'NN', u',', u'IN', u'NNS', u',', u'IN', u'NN', u',', u'NN', u'JJ', u'NNS', u'.'], u'char_offsets': [[1140, 1142], [1143, 1146], [1147, 1154], [1155, 1162], [1163, 1172], [1172, 1173], [1174, 1177], [1178, 1182], [1183, 1188], [1189, 1194], [1195, 1197], [1198, 1199], [1200, 1208], [1208, 1209], [1210, 1218], [1219, 1226], [1226, 1227], [1228, 1231], [1232, 1239], [1239, 1240], [1241, 1244], [1245, 1256], [1257, 1263], [1264, 1265]]}) 
answer: set([u'serv', u'head', u'purpos', u'type'])
candidate Sentence: (0.060087621212005615, {u'tokens': [u'Lima-Peru', u'In', u'the', u'past', u'drums', u'have', u'been', u'used', u'not', u'only', u'for', u'their', u'musical', u'qualities', u',', u'but', u'also', u'as', u'a', u'means', u'of', u'communication', u',', u'especially', u'through', u'signals', u'.'], u'lemmas': [u'Lima-Peru', u'in', u'the', u'past', u'drum', u'have', u'be', u'use', u'not', u'only', u'for', u'they', u'musical', u'quality', u',', u'but', u'also', u'as', u'a', u'means', u'of', u'communication', u',', u'especially', u'through', u'signal', u'.'], u'pos': [u'NNP', u'IN', u'DT', u'JJ', u'NNS', u'VBP', u'VBN', u'VBN', u'RB', u'RB', u'IN', u'PRP$', u'JJ', u'NNS', u',', u'CC', u'RB', u'IN', u'DT', u'NN', u'IN', u'NN', u',', u'RB', u'IN', u'NNS', u'.'], u'char_offsets': [[6142, 6151], [6153, 6155], [6156, 6159], [6160, 6164], [6165, 6170], [6171, 6175], [6176, 6180], [6181, 6185], [6186, 6189], [6190, 6194], [6195, 6198], [6199, 6204], [6205, 6212], [6213, 6222], [6222, 6223], [6224, 6227], [6228, 6232], [6233, 6235], [6236, 6237], [6238, 6243], [6244, 6246], [6247, 6260], [6260, 6261], [6262, 6272], [6273, 6280], [6281, 6288], [6288, 6289]]}) 
answer: set([u'serv', u'head', u'purpos', u'type'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Does each type of drum head serve its own musical purpose?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Drum
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a4.txt

No
_____________________________ test_yesno[param93] ______________________________

param = (<src.question_processing.Question_parser instance at 0x10cac7170>, (<src.tfidf.TF_IDF object at 0x109b86850>, set(['drum'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cac7170>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.86695915460586548, {u'tokens': [u'Each', u'type', u'of', u'drumhead', u'serves', u'its', u'own', u'musical', u'purpose', u'and', u'has', u'its', u'own', u'unique', u'sound', u'.'], u'lemmas': [u'each', u'type', u'of', u'drumhead', u'serve', u'its', u'own', u'musical', u'purpose', u'and', u'have', u'its', u'own', u'unique', u'sound', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NN', u'VBZ', u'PRP$', u'JJ', u'JJ', u'NN', u'CC', u'VBZ', u'PRP$', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[3779, 3783], [3784, 3788], [3789, 3791], [3792, 3800], [3801, 3807], [3808, 3811], [3812, 3815], [3816, 3823], [3824, 3831], [3832, 3835], [3836, 3839], [3840, 3843], [3844, 3847], [3848, 3854], [3855, 3860], [3860, 3861]]}) 
answer: set([u'head'])
candidate Sentence: (0.15374471247196198, {u'tokens': [u'Drums', u'with', u'two', u'heads', u'can', u'also', u'have', u'a', u'set', u'of', u'wires', u',', u'called', u'snares', u',', u'held', u'across', u'the', u'bottom', u'head', u',', u'top', u'head', u',', u'or', u'both', u'heads', u',', u'hence', u'the', u'name', u'snare', u'drum', u'.'], u'lemmas': [u'drum', u'with', u'two', u'head', u'can', u'also', u'have', u'a', u'set', u'of', u'wire', u',', u'call', u'snare', u',', u'hold', u'across', u'the', u'bottom', u'head', u',', u'top', u'head', u',', u'or', u'both', u'head', u',', u'hence', u'the', u'name', u'snare', u'drum', u'.'], u'pos': [u'NNS', u'IN', u'CD', u'NNS', u'MD', u'RB', u'VB', u'DT', u'NN', u'IN', u'NNS', u',', u'VBN', u'NNS', u',', u'VBN', u'IN', u'DT', u'JJ', u'NN', u',', u'JJ', u'NN', u',', u'CC', u'DT', u'NNS', u',', u'RB', u'DT', u'NN', u'VB', u'VB', u'.'], u'char_offsets': [[1994, 1999], [2000, 2004], [2005, 2008], [2009, 2014], [2015, 2018], [2019, 2023], [2024, 2028], [2029, 2030], [2031, 2034], [2035, 2037], [2038, 2043], [2043, 2044], [2045, 2051], [2052, 2058], [2058, 2059], [2060, 2064], [2065, 2071], [2072, 2075], [2076, 2082], [2083, 2087], [2087, 2088], [2089, 2092], [2093, 2097], [2097, 2098], [2099, 2101], [2102, 2106], [2107, 2112], [2112, 2113], [2114, 2119], [2120, 2123], [2124, 2128], [2129, 2134], [2135, 2139], [2140, 2141]]}) 
answer: set([u'serv', u'music', u'purpos', u'type'])
candidate Sentence: (0.12231619656085968, {u'tokens': [u'The', u'type', u'of', u'shell', u'also', u'affects', u'the', u'sound', u'of', u'a', u'drum', u'.'], u'lemmas': [u'the', u'type', u'of', u'shell', u'also', u'affect', u'the', u'sound', u'of', u'a', u'drum', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NN', u'RB', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'VBP', u'.'], u'char_offsets': [[4802, 4805], [4806, 4810], [4811, 4813], [4814, 4819], [4820, 4824], [4825, 4832], [4833, 4836], [4837, 4842], [4843, 4845], [4846, 4847], [4848, 4852], [4852, 4853]]}) 
answer: set([u'serv', u'head', u'purpos', u'music'])
candidate Sentence: (0.096087656915187836, {u'tokens': [u'The', u'sound', u'of', u'a', u'drum', u'depends', u'on', u'several', u'variables', u',', u'including', u'shape', u',', u'size', u'and', u'thickness', u'of', u'its', u'shell', u',', u'materials', u'from', u'which', u'the', u'shell', u'was', u'made', u',', u'counterhoop', u'material', u',', u'type', u'of', u'drumhead', u'used', u'and', u'tension', u'applied', u'to', u'it', u',', u'position', u'of', u'the', u'drum', u',', u'location', u',', u'and', u'the', u'velocity', u'and', u'angle', u'in', u'which', u'it', u'is', u'struck', u'.'], u'lemmas': [u'the', u'sound', u'of', u'a', u'drum', u'depend', u'on', u'several', u'variable', u',', u'include', u'shape', u',', u'size', u'and', u'thickness', u'of', u'its', u'shell', u',', u'material', u'from', u'which', u'the', u'shell', u'be', u'make', u',', u'counterhoop', u'material', u',', u'type', u'of', u'drumhead', u'use', u'and', u'tension', u'apply', u'to', u'it', u',', u'position', u'of', u'the', u'drum', u',', u'location', u',', u'and', u'the', u'velocity', u'and', u'angle', u'in', u'which', u'it', u'be', u'strike', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'VBP', u'VBZ', u'IN', u'JJ', u'NNS', u',', u'VBG', u'NN', u',', u'NN', u'CC', u'NN', u'IN', u'PRP$', u'NN', u',', u'NNS', u'IN', u'WDT', u'DT', u'NN', u'VBD', u'VBN', u',', u'NN', u'NN', u',', u'NN', u'IN', u'NN', u'VBN', u'CC', u'NN', u'VBD', u'TO', u'PRP', u',', u'NN', u'IN', u'DT', u'VBP', u',', u'NN', u',', u'CC', u'DT', u'NN', u'CC', u'NN', u'IN', u'WDT', u'PRP', u'VBZ', u'VBN', u'.'], u'char_offsets': [[2563, 2566], [2567, 2572], [2573, 2575], [2576, 2577], [2578, 2582], [2583, 2590], [2591, 2593], [2594, 2601], [2602, 2611], [2611, 2612], [2613, 2622], [2623, 2628], [2628, 2629], [2630, 2634], [2635, 2638], [2639, 2648], [2649, 2651], [2652, 2655], [2656, 2661], [2661, 2662], [2663, 2672], [2673, 2677], [2678, 2683], [2684, 2687], [2688, 2693], [2694, 2697], [2698, 2702], [2702, 2703], [2704, 2715], [2716, 2724], [2724, 2725], [2726, 2730], [2731, 2733], [2734, 2742], [2743, 2747], [2748, 2751], [2752, 2759], [2760, 2767], [2768, 2770], [2771, 2773], [2773, 2774], [2775, 2783], [2784, 2786], [2787, 2790], [2791, 2795], [2795, 2796], [2797, 2805], [2805, 2806], [2807, 2810], [2811, 2814], [2815, 2823], [2824, 2827], [2828, 2833], [2834, 2836], [2837, 2842], [2843, 2845], [2846, 2848], [2849, 2855], [2855, 2856]]}) 
answer: set([u'serv', u'head', u'purpos', u'music'])
candidate Sentence: (0.082161940634250641, {u'tokens': [u'The', u'type', u'of', u'wood', u'is', u'important', u'as', u'well', u'.'], u'lemmas': [u'the', u'type', u'of', u'wood', u'be', u'important', u'as', u'well', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NN', u'VBZ', u'JJ', u'RB', u'RB', u'.'], u'char_offsets': [[5083, 5086], [5087, 5091], [5092, 5094], [5095, 5099], [5100, 5102], [5103, 5112], [5113, 5115], [5116, 5120], [5120, 5121]]}) 
answer: set([u'serv', u'head', u'purpos', u'music'])
candidate Sentence: (0.081024825572967529, {u'tokens': [u'Drums', u'with', u'two', u'heads', u'covering', u'both', u'ends', u'of', u'a', u'cylindrical', u'shell', u'often', u'have', u'a', u'small', u'hole', u'somewhat', u'halfway', u'between', u'the', u'two', u'heads', u';', u'the', u'shell', u'forms', u'a', u'resonating', u'chamber', u'for', u'the', u'resulting', u'sound', u'.'], u'lemmas': [u'drum', u'with', u'two', u'head', u'cover', u'both', u'end', u'of', u'a', u'cylindrical', u'shell', u'often', u'have', u'a', u'small', u'hole', u'somewhat', u'halfway', u'between', u'the', u'two', u'head', u';', u'the', u'shell', u'form', u'a', u'resonate', u'chamber', u'for', u'the', u'result', u'sound', u'.'], u'pos': [u'NNS', u'IN', u'CD', u'NNS', u'VBG', u'CC', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'RB', u'VBP', u'DT', u'JJ', u'NN', u'RB', u'RB', u'IN', u'DT', u'CD', u'NNS', u':', u'DT', u'NN', u'VBZ', u'DT', u'VBG', u'NN', u'IN', u'DT', u'VBG', u'NN', u'.'], u'char_offsets': [[1670, 1675], [1676, 1680], [1681, 1684], [1685, 1690], [1691, 1699], [1700, 1704], [1705, 1709], [1710, 1712], [1713, 1714], [1715, 1726], [1727, 1732], [1733, 1738], [1739, 1743], [1744, 1745], [1746, 1751], [1752, 1756], [1757, 1765], [1766, 1773], [1774, 1781], [1782, 1785], [1786, 1789], [1790, 1795], [1795, 1796], [1797, 1800], [1801, 1806], [1807, 1812], [1813, 1814], [1815, 1825], [1826, 1833], [1834, 1837], [1838, 1841], [1842, 1851], [1852, 1857], [1857, 1858]]}) 
answer: set([u'serv', u'music', u'purpos', u'type'])
candidate Sentence: (0.074329674243927002, {u'tokens': [u'The', u'head', u"'s", u'tension', u'can', u'be', u'adjusted', u'by', u'loosening', u'or', u'tightening', u'the', u'rods', u'.'], u'lemmas': [u'the', u'head', u"'s", u'tension', u'can', u'be', u'adjust', u'by', u'loosen', u'or', u'tighten', u'the', u'rod', u'.'], u'pos': [u'DT', u'NN', u'POS', u'NN', u'MD', u'VB', u'VBN', u'IN', u'VBG', u'CC', u'VBG', u'DT', u'NNS', u'.'], u'char_offsets': [[2445, 2448], [2449, 2453], [2453, 2455], [2456, 2463], [2464, 2467], [2468, 2470], [2471, 2479], [2480, 2482], [2483, 2492], [2493, 2495], [2496, 2506], [2507, 2510], [2511, 2515], [2515, 2516]]}) 
answer: set([u'serv', u'music', u'purpos', u'type'])
candidate Sentence: (0.062839537858963013, {u'tokens': [u'Drum', u'carried', u'by', u'John', u'Unger', u',', u'Company', u'B', u',', u'40th', u'Regiment', u'New', u'York', u'Veteran', u'Volunteer', u'Infantry', u'Mozart', u'Regiment', u',', u'December', u'20', u',', u'1863', u'Several', u'factors', u'determine', u'the', u'sound', u'a', u'drum', u'produces', u',', u'including', u'the', u'type', u'of', u'shell', u'the', u'drum', u'has', u',', u'the', u'type', u'of', u'drumheads', u'it', u'has', u',', u'and', u'the', u'tension', u'of', u'the', u'drumheads', u'.'], u'lemmas': [u'drum', u'carry', u'by', u'John', u'Unger', u',', u'Company', u'B', u',', u'40th', u'Regiment', u'New', u'York', u'Veteran', u'Volunteer', u'Infantry', u'Mozart', u'Regiment', u',', u'December', u'20', u',', u'1863', u'several', u'factor', u'determine', u'the', u'sound', u'a', u'drum', u'produce', u',', u'include', u'the', u'type', u'of', u'shell', u'the', u'drum', u'have', u',', u'the', u'type', u'of', u'drumhead', u'it', u'have', u',', u'and', u'the', u'tension', u'of', u'the', u'drumhead', u'.'], u'pos': [u'VB', u'VBN', u'IN', u'NNP', u'NNP', u',', u'NNP', u'NNP', u',', u'JJ', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'CD', u',', u'CD', u'JJ', u'NNS', u'VBP', u'DT', u'NN', u'DT', u'VB', u'VBZ', u',', u'VBG', u'DT', u'NN', u'IN', u'NN', u'DT', u'VB', u'VBZ', u',', u'DT', u'NN', u'IN', u'NNS', u'PRP', u'VBZ', u',', u'CC', u'DT', u'NN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[3123, 3127], [3128, 3135], [3136, 3138], [3139, 3143], [3144, 3149], [3149, 3150], [3151, 3158], [3159, 3160], [3160, 3161], [3162, 3166], [3167, 3175], [3176, 3179], [3180, 3184], [3185, 3192], [3193, 3202], [3203, 3211], [3212, 3218], [3219, 3227], [3227, 3228], [3229, 3237], [3238, 3240], [3240, 3241], [3242, 3246], [3247, 3254], [3255, 3262], [3263, 3272], [3273, 3276], [3277, 3282], [3283, 3284], [3285, 3289], [3290, 3298], [3298, 3299], [3300, 3309], [3310, 3313], [3314, 3318], [3319, 3321], [3322, 3327], [3328, 3331], [3332, 3336], [3337, 3340], [3340, 3341], [3342, 3345], [3346, 3350], [3351, 3353], [3354, 3363], [3364, 3366], [3367, 3370], [3370, 3371], [3372, 3375], [3376, 3379], [3380, 3387], [3388, 3390], [3391, 3394], [3395, 3404], [3404, 3405]]}) 
answer: set([u'serv', u'head', u'purpos', u'music'])
candidate Sentence: (0.06026337668299675, {u'tokens': [u'In', u'the', u'western', u'musical', u'tradition', u',', u'the', u'most', u'usual', u'shape', u'is', u'a', u'cylinder', u',', u'although', u'timpani', u',', u'for', u'example', u',', u'use', u'bowl-shaped', u'shells', u'.'], u'lemmas': [u'in', u'the', u'western', u'musical', u'tradition', u',', u'the', u'most', u'usual', u'shape', u'be', u'a', u'cylinder', u',', u'although', u'timpani', u',', u'for', u'example', u',', u'use', u'bowl-shaped', u'shell', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'JJ', u'NN', u',', u'DT', u'RBS', u'JJ', u'NN', u'VBZ', u'DT', u'NN', u',', u'IN', u'NNS', u',', u'IN', u'NN', u',', u'NN', u'JJ', u'NNS', u'.'], u'char_offsets': [[1140, 1142], [1143, 1146], [1147, 1154], [1155, 1162], [1163, 1172], [1172, 1173], [1174, 1177], [1178, 1182], [1183, 1188], [1189, 1194], [1195, 1197], [1198, 1199], [1200, 1208], [1208, 1209], [1210, 1218], [1219, 1226], [1226, 1227], [1228, 1231], [1232, 1239], [1239, 1240], [1241, 1244], [1245, 1256], [1257, 1263], [1264, 1265]]}) 
answer: set([u'serv', u'head', u'purpos', u'type'])
candidate Sentence: (0.060087621212005615, {u'tokens': [u'Lima-Peru', u'In', u'the', u'past', u'drums', u'have', u'been', u'used', u'not', u'only', u'for', u'their', u'musical', u'qualities', u',', u'but', u'also', u'as', u'a', u'means', u'of', u'communication', u',', u'especially', u'through', u'signals', u'.'], u'lemmas': [u'Lima-Peru', u'in', u'the', u'past', u'drum', u'have', u'be', u'use', u'not', u'only', u'for', u'they', u'musical', u'quality', u',', u'but', u'also', u'as', u'a', u'means', u'of', u'communication', u',', u'especially', u'through', u'signal', u'.'], u'pos': [u'NNP', u'IN', u'DT', u'JJ', u'NNS', u'VBP', u'VBN', u'VBN', u'RB', u'RB', u'IN', u'PRP$', u'JJ', u'NNS', u',', u'CC', u'RB', u'IN', u'DT', u'NN', u'IN', u'NN', u',', u'RB', u'IN', u'NNS', u'.'], u'char_offsets': [[6142, 6151], [6153, 6155], [6156, 6159], [6160, 6164], [6165, 6170], [6171, 6175], [6176, 6180], [6181, 6185], [6186, 6189], [6190, 6194], [6195, 6198], [6199, 6204], [6205, 6212], [6213, 6222], [6222, 6223], [6224, 6227], [6228, 6232], [6233, 6235], [6236, 6237], [6238, 6243], [6244, 6246], [6247, 6260], [6260, 6261], [6262, 6272], [6273, 6280], [6281, 6288], [6288, 6289]]}) 
answer: set([u'serv', u'head', u'purpos', u'type'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Does each type of drum head serve its own musical purpose?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Drum
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a4.txt

No
_____________________________ test_yesno[param94] ______________________________

param = (<src.question_processing.Question_parser instance at 0x10cac71b8>, (<src.tfidf.TF_IDF object at 0x109b86850>, set(['drum'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cac71b8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.51137542724609375, {u'tokens': [u'The', u'type', u'of', u'shell', u'also', u'affects', u'the', u'sound', u'of', u'a', u'drum', u'.'], u'lemmas': [u'the', u'type', u'of', u'shell', u'also', u'affect', u'the', u'sound', u'of', u'a', u'drum', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NN', u'RB', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'VBP', u'.'], u'char_offsets': [[4802, 4805], [4806, 4810], [4811, 4813], [4814, 4819], [4820, 4824], [4825, 4832], [4833, 4836], [4837, 4842], [4843, 4845], [4846, 4847], [4848, 4852], [4852, 4853]]}) 
answer: set([u'aburukuwa'])
candidate Sentence: (0.34035110473632812, {u'tokens': [u'The', u'type', u'of', u'wood', u'is', u'important', u'as', u'well', u'.'], u'lemmas': [u'the', u'type', u'of', u'wood', u'be', u'important', u'as', u'well', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NN', u'VBZ', u'JJ', u'RB', u'RB', u'.'], u'char_offsets': [[5083, 5086], [5087, 5091], [5092, 5094], [5095, 5099], [5100, 5102], [5103, 5112], [5113, 5115], [5116, 5120], [5120, 5121]]}) 
answer: set([u'aburukuwa'])
candidate Sentence: (0.29343646764755249, {u'tokens': [u'Because', u'the', u'vibrations', u'resonate', u'in', u'the', u'shell', u'of', u'the', u'drum', u',', u'the', u'shell', u'can', u'be', u'used', u'to', u'increase', u'the', u'volume', u'and', u'to', u'manipulate', u'the', u'type', u'of', u'sound', u'produced', u'.'], u'lemmas': [u'because', u'the', u'vibration', u'resonate', u'in', u'the', u'shell', u'of', u'the', u'drum', u',', u'the', u'shell', u'can', u'be', u'use', u'to', u'increase', u'the', u'volume', u'and', u'to', u'manipulate', u'the', u'type', u'of', u'sound', u'produce', u'.'], u'pos': [u'IN', u'DT', u'NNS', u'VBP', u'IN', u'DT', u'NN', u'IN', u'DT', u'VBP', u',', u'DT', u'NN', u'MD', u'VB', u'VBN', u'TO', u'VB', u'DT', u'NN', u'CC', u'TO', u'VB', u'DT', u'NN', u'IN', u'NN', u'VBD', u'.'], u'char_offsets': [[4854, 4861], [4862, 4865], [4866, 4876], [4877, 4885], [4886, 4888], [4889, 4892], [4893, 4898], [4899, 4901], [4902, 4905], [4906, 4910], [4910, 4911], [4912, 4915], [4916, 4921], [4922, 4925], [4926, 4928], [4929, 4933], [4934, 4936], [4937, 4945], [4946, 4949], [4950, 4956], [4957, 4960], [4961, 4963], [4964, 4974], [4975, 4978], [4979, 4983], [4984, 4986], [4987, 4992], [4993, 5001], [5001, 5002]]}) 
answer: set([u'aburukuwa'])
candidate Sentence: (0.26812058687210083, {u'tokens': [u'Drum', u'carried', u'by', u'John', u'Unger', u',', u'Company', u'B', u',', u'40th', u'Regiment', u'New', u'York', u'Veteran', u'Volunteer', u'Infantry', u'Mozart', u'Regiment', u',', u'December', u'20', u',', u'1863', u'Several', u'factors', u'determine', u'the', u'sound', u'a', u'drum', u'produces', u',', u'including', u'the', u'type', u'of', u'shell', u'the', u'drum', u'has', u',', u'the', u'type', u'of', u'drumheads', u'it', u'has', u',', u'and', u'the', u'tension', u'of', u'the', u'drumheads', u'.'], u'lemmas': [u'drum', u'carry', u'by', u'John', u'Unger', u',', u'Company', u'B', u',', u'40th', u'Regiment', u'New', u'York', u'Veteran', u'Volunteer', u'Infantry', u'Mozart', u'Regiment', u',', u'December', u'20', u',', u'1863', u'several', u'factor', u'determine', u'the', u'sound', u'a', u'drum', u'produce', u',', u'include', u'the', u'type', u'of', u'shell', u'the', u'drum', u'have', u',', u'the', u'type', u'of', u'drumhead', u'it', u'have', u',', u'and', u'the', u'tension', u'of', u'the', u'drumhead', u'.'], u'pos': [u'VB', u'VBN', u'IN', u'NNP', u'NNP', u',', u'NNP', u'NNP', u',', u'JJ', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'CD', u',', u'CD', u'JJ', u'NNS', u'VBP', u'DT', u'NN', u'DT', u'VB', u'VBZ', u',', u'VBG', u'DT', u'NN', u'IN', u'NN', u'DT', u'VB', u'VBZ', u',', u'DT', u'NN', u'IN', u'NNS', u'PRP', u'VBZ', u',', u'CC', u'DT', u'NN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[3123, 3127], [3128, 3135], [3136, 3138], [3139, 3143], [3144, 3149], [3149, 3150], [3151, 3158], [3159, 3160], [3160, 3161], [3162, 3166], [3167, 3175], [3176, 3179], [3180, 3184], [3185, 3192], [3193, 3202], [3203, 3211], [3212, 3218], [3219, 3227], [3227, 3228], [3229, 3237], [3238, 3240], [3240, 3241], [3242, 3246], [3247, 3254], [3255, 3262], [3263, 3272], [3273, 3276], [3277, 3282], [3283, 3284], [3285, 3289], [3290, 3298], [3298, 3299], [3300, 3309], [3310, 3313], [3314, 3318], [3319, 3321], [3322, 3327], [3328, 3331], [3332, 3336], [3337, 3340], [3340, 3341], [3342, 3345], [3346, 3350], [3351, 3353], [3354, 3363], [3364, 3366], [3367, 3370], [3370, 3371], [3372, 3375], [3376, 3379], [3380, 3387], [3388, 3390], [3391, 3394], [3395, 3404], [3404, 3405]]}) 
answer: set([u'aburukuwa'])
candidate Sentence: (0.19107162952423096, {u'tokens': [u'The', u'sound', u'of', u'a', u'drum', u'depends', u'on', u'several', u'variables', u',', u'including', u'shape', u',', u'size', u'and', u'thickness', u'of', u'its', u'shell', u',', u'materials', u'from', u'which', u'the', u'shell', u'was', u'made', u',', u'counterhoop', u'material', u',', u'type', u'of', u'drumhead', u'used', u'and', u'tension', u'applied', u'to', u'it', u',', u'position', u'of', u'the', u'drum', u',', u'location', u',', u'and', u'the', u'velocity', u'and', u'angle', u'in', u'which', u'it', u'is', u'struck', u'.'], u'lemmas': [u'the', u'sound', u'of', u'a', u'drum', u'depend', u'on', u'several', u'variable', u',', u'include', u'shape', u',', u'size', u'and', u'thickness', u'of', u'its', u'shell', u',', u'material', u'from', u'which', u'the', u'shell', u'be', u'make', u',', u'counterhoop', u'material', u',', u'type', u'of', u'drumhead', u'use', u'and', u'tension', u'apply', u'to', u'it', u',', u'position', u'of', u'the', u'drum', u',', u'location', u',', u'and', u'the', u'velocity', u'and', u'angle', u'in', u'which', u'it', u'be', u'strike', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'VBP', u'VBZ', u'IN', u'JJ', u'NNS', u',', u'VBG', u'NN', u',', u'NN', u'CC', u'NN', u'IN', u'PRP$', u'NN', u',', u'NNS', u'IN', u'WDT', u'DT', u'NN', u'VBD', u'VBN', u',', u'NN', u'NN', u',', u'NN', u'IN', u'NN', u'VBN', u'CC', u'NN', u'VBD', u'TO', u'PRP', u',', u'NN', u'IN', u'DT', u'VBP', u',', u'NN', u',', u'CC', u'DT', u'NN', u'CC', u'NN', u'IN', u'WDT', u'PRP', u'VBZ', u'VBN', u'.'], u'char_offsets': [[2563, 2566], [2567, 2572], [2573, 2575], [2576, 2577], [2578, 2582], [2583, 2590], [2591, 2593], [2594, 2601], [2602, 2611], [2611, 2612], [2613, 2622], [2623, 2628], [2628, 2629], [2630, 2634], [2635, 2638], [2639, 2648], [2649, 2651], [2652, 2655], [2656, 2661], [2661, 2662], [2663, 2672], [2673, 2677], [2678, 2683], [2684, 2687], [2688, 2693], [2694, 2697], [2698, 2702], [2702, 2703], [2704, 2715], [2716, 2724], [2724, 2725], [2726, 2730], [2731, 2733], [2734, 2742], [2743, 2747], [2748, 2751], [2752, 2759], [2760, 2767], [2768, 2770], [2771, 2773], [2773, 2774], [2775, 2783], [2784, 2786], [2787, 2790], [2791, 2795], [2795, 2796], [2797, 2805], [2805, 2806], [2807, 2810], [2811, 2814], [2815, 2823], [2824, 2827], [2828, 2833], [2834, 2836], [2837, 2842], [2843, 2845], [2846, 2848], [2849, 2855], [2855, 2856]]}) 
answer: set([u'aburukuwa'])
candidate Sentence: (0.15839624404907227, {u'tokens': [u'The', u'larger', u'the', u'diameter', u'of', u'the', u'shell', u',', u'the', u'lower', u'the', u'pitch', u'of', u'the', u'drum', u'will', u'be', u'.'], u'lemmas': [u'the', u'larger', u'the', u'diameter', u'of', u'the', u'shell', u',', u'the', u'lower', u'the', u'pitch', u'of', u'the', u'drum', u'will', u'be', u'.'], u'pos': [u'DT', u'JJR', u'DT', u'NN', u'IN', u'DT', u'NN', u',', u'DT', u'JJR', u'DT', u'NN', u'IN', u'DT', u'VBP', u'MD', u'VB', u'.'], u'char_offsets': [[5003, 5006], [5007, 5013], [5014, 5017], [5018, 5026], [5027, 5029], [5030, 5033], [5034, 5039], [5039, 5040], [5041, 5044], [5045, 5050], [5051, 5054], [5055, 5060], [5061, 5063], [5064, 5067], [5068, 5072], [5073, 5077], [5078, 5080], [5080, 5081]]}) 
answer: set([u'aburukuwa', u'type'])
candidate Sentence: (0.15780381858348846, {u'tokens': [u'Each', u'type', u'of', u'drumhead', u'serves', u'its', u'own', u'musical', u'purpose', u'and', u'has', u'its', u'own', u'unique', u'sound', u'.'], u'lemmas': [u'each', u'type', u'of', u'drumhead', u'serve', u'its', u'own', u'musical', u'purpose', u'and', u'have', u'its', u'own', u'unique', u'sound', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NN', u'VBZ', u'PRP$', u'JJ', u'JJ', u'NN', u'CC', u'VBZ', u'PRP$', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[3779, 3783], [3784, 3788], [3789, 3791], [3792, 3800], [3801, 3807], [3808, 3811], [3812, 3815], [3816, 3823], [3824, 3831], [3832, 3835], [3836, 3839], [3840, 3843], [3844, 3847], [3848, 3854], [3855, 3860], [3860, 3861]]}) 
answer: set([u'aburukuwa'])
candidate Sentence: (0.14037114381790161, {u'tokens': [u'The', u'second', u'biggest', u'factor', u'affecting', u'the', u'sound', u'produced', u'by', u'a', u'drum', u'is', u'the', u'tension', u'at', u'which', u'the', u'drumhead', u'is', u'held', u'against', u'the', u'shell', u'of', u'the', u'drum', u'.'], u'lemmas': [u'the', u'second', u'biggest', u'factor', u'affect', u'the', u'sound', u'produce', u'by', u'a', u'drum', u'be', u'the', u'tension', u'at', u'which', u'the', u'drumhead', u'be', u'hold', u'against', u'the', u'shell', u'of', u'the', u'drum', u'.'], u'pos': [u'DT', u'JJ', u'JJS', u'NN', u'VBG', u'DT', u'NN', u'VBN', u'IN', u'DT', u'VBP', u'VBZ', u'DT', u'NN', u'IN', u'WDT', u'DT', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'NN', u'IN', u'DT', u'VBP', u'.'], u'char_offsets': [[4386, 4389], [4390, 4396], [4397, 4404], [4405, 4411], [4412, 4421], [4422, 4425], [4426, 4431], [4432, 4440], [4441, 4443], [4444, 4445], [4446, 4450], [4451, 4453], [4454, 4457], [4458, 4465], [4466, 4468], [4469, 4474], [4475, 4478], [4479, 4487], [4488, 4490], [4491, 4495], [4496, 4503], [4504, 4507], [4508, 4513], [4514, 4516], [4517, 4520], [4521, 4525], [4525, 4526]]}) 
answer: set([u'aburukuwa', u'type'])
candidate Sentence: (0.11374986171722412, {u'tokens': [u'When', u'the', u'tension', u'is', u'increased', u',', u'the', u'amplitude', u'of', u'the', u'sound', u'is', u'reduced', u'and', u'the', u'frequency', u'is', u'increased', u',', u'making', u'the', u'pitch', u'higher', u'and', u'the', u'volume', u'lower', u'.'], u'lemmas': [u'when', u'the', u'tension', u'be', u'increase', u',', u'the', u'amplitude', u'of', u'the', u'sound', u'be', u'reduce', u'and', u'the', u'frequency', u'be', u'increase', u',', u'make', u'the', u'pitch', u'higher', u'and', u'the', u'volume', u'lower', u'.'], u'pos': [u'WRB', u'DT', u'NN', u'VBZ', u'VBN', u',', u'DT', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'VBN', u'CC', u'DT', u'NN', u'VBZ', u'VBN', u',', u'VBG', u'DT', u'NN', u'JJR', u'CC', u'DT', u'NN', u'JJR', u'.'], u'char_offsets': [[4654, 4658], [4659, 4662], [4663, 4670], [4671, 4673], [4674, 4683], [4683, 4684], [4685, 4688], [4689, 4698], [4699, 4701], [4702, 4705], [4706, 4711], [4712, 4714], [4715, 4722], [4724, 4727], [4728, 4731], [4732, 4741], [4742, 4744], [4745, 4754], [4754, 4755], [4756, 4762], [4763, 4766], [4767, 4772], [4773, 4779], [4780, 4783], [4784, 4787], [4788, 4794], [4795, 4800], [4800, 4801]]}) 
answer: set([u'type', u'aburukuwa'])
candidate Sentence: (0.10552647709846497, {u'tokens': [u'Single-headed', u'drums', u'normally', u'consist', u'of', u'a', u'skin', u'which', u'is', u'stretched', u'over', u'an', u'enclosed', u'space', u',', u'or', u'over', u'one', u'of', u'the', u'ends', u'of', u'a', u'hollow', u'vessel', u'.'], u'lemmas': [u'single-headed', u'drum', u'normally', u'consist', u'of', u'a', u'skin', u'which', u'be', u'stretch', u'over', u'a', u'enclosed', u'space', u',', u'or', u'over', u'one', u'of', u'the', u'end', u'of', u'a', u'hollow', u'vessel', u'.'], u'pos': [u'JJ', u'NNS', u'RB', u'VBP', u'IN', u'DT', u'NN', u'WDT', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u',', u'CC', u'IN', u'CD', u'IN', u'DT', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[1536, 1549], [1550, 1555], [1556, 1564], [1565, 1572], [1573, 1575], [1576, 1577], [1578, 1582], [1583, 1588], [1589, 1591], [1592, 1601], [1602, 1606], [1607, 1609], [1610, 1618], [1619, 1624], [1624, 1625], [1626, 1628], [1629, 1633], [1634, 1637], [1638, 1640], [1641, 1644], [1645, 1649], [1650, 1652], [1653, 1654], [1655, 1661], [1662, 1668], [1668, 1669]]}) 
answer: set([u'aburukuwa', u'type'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is the Aburukuwa a type of drum?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Drum
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a4.txt

No
_____________________________ test_yesno[param128] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cac7b48>, (<src.tfidf.TF_IDF object at 0x1080443d0>, set(['giant', 'giant_panda', 'panda'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cac7b48>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.39236637949943542, {u'tokens': [u'A', u'Giant', u'Panda', u'cub', u'.'], u'lemmas': [u'a', u'giant', u'panda', u'cub', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[1794, 1795], [1796, 1801], [1802, 1807], [1808, 1811], [1811, 1812]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.26208400726318359, {u'tokens': [u'The', u'Giant', u'Panda', u'-LRB-', u'Ailuropoda', u'melanoleuca', u',', u'literally', u'meaning', u'``', u'cat-foot', u'black-and-white', u"''", u'-RRB-', u'is', u'a', u'mammal', u'native', u'to', u'central-western', u'and', u'south', u'western', u'China', u'.'], u'lemmas': [u'the', u'Giant', u'Panda', u'-lrb-', u'Ailuropoda', u'melanoleuca', u',', u'literally', u'mean', u'``', u'cat-foot', u'black-and-white', u"''", u'-rrb-', u'be', u'a', u'mammal', u'native', u'to', u'central-western', u'and', u'south', u'western', u'China', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NN', u',', u'RB', u'VBG', u'``', u'JJ', u'JJ', u"''", u'-RRB-', u'VBZ', u'DT', u'NN', u'JJ', u'TO', u'JJ', u'CC', u'JJ', u'JJ', u'NNP', u'.'], u'char_offsets': [[0, 3], [4, 9], [10, 15], [16, 17], [17, 27], [28, 39], [39, 40], [41, 50], [51, 58], [59, 60], [60, 68], [69, 84], [84, 85], [85, 86], [87, 89], [90, 91], [92, 98], [99, 105], [106, 108], [109, 124], [125, 128], [129, 134], [135, 142], [143, 148], [148, 149]]}) 
answer: set([])
candidate Sentence: (0.23611243069171906, {u'tokens': [u'For', u'this', u'reason', u',', u'pandas', u'do', u'not', u'hibernate', u',', u'which', u'is', u'similar', u'to', u'other', u'subtropical', u'mammals', u',', u'and', u'will', u'instead', u'move', u'to', u'elevations', u'with', u'warmer', u'temperatures', u'.'], u'lemmas': [u'for', u'this', u'reason', u',', u'panda', u'do', u'not', u'hibernate', u',', u'which', u'be', u'similar', u'to', u'other', u'subtropical', u'mammal', u',', u'and', u'will', u'instead', u'move', u'to', u'elevation', u'with', u'warmer', u'temperature', u'.'], u'pos': [u'IN', u'DT', u'NN', u',', u'NNS', u'VBP', u'RB', u'VB', u',', u'WDT', u'VBZ', u'JJ', u'TO', u'JJ', u'JJ', u'NNS', u',', u'CC', u'MD', u'RB', u'VB', u'TO', u'NNS', u'IN', u'JJR', u'NNS', u'.'], u'char_offsets': [[3832, 3835], [3836, 3840], [3841, 3847], [3847, 3848], [3849, 3855], [3856, 3858], [3859, 3862], [3863, 3872], [3872, 3873], [3874, 3879], [3880, 3882], [3883, 3890], [3891, 3893], [3894, 3899], [3900, 3911], [3912, 3919], [3919, 3920], [3921, 3924], [3925, 3929], [3930, 3937], [3938, 3942], [3943, 3945], [3946, 3956], [3957, 3961], [3962, 3968], [3969, 3981], [3981, 3982]]}) 
answer: set([])
candidate Sentence: (0.13531079888343811, {u'tokens': [u'Was', u'the', u'first', u'giant', u'panda', u'that', u'was', u'born', u'and', u'survived', u'in', u'captivity', u'outside', u'China', u'.'], u'lemmas': [u'be', u'the', u'first', u'giant', u'panda', u'that', u'be', u'bear', u'and', u'survive', u'in', u'captivity', u'outside', u'China', u'.'], u'pos': [u'VBD', u'DT', u'JJ', u'JJ', u'NN', u'WDT', u'VBD', u'VBN', u'CC', u'VBN', u'IN', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[25256, 25259], [25260, 25263], [25264, 25269], [25270, 25275], [25276, 25281], [25282, 25286], [25287, 25290], [25291, 25295], [25296, 25299], [25300, 25308], [25309, 25311], [25312, 25321], [25322, 25329], [25330, 25335], [25335, 25336]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.11068816483020782, {u'tokens': [u'The', u'giant', u'panda', u'genome', u'was', u'sequenced', u'in', u'2009', u'using', u'a', u'next-generation', u'sequencing', u'technology', u'.'], u'lemmas': [u'the', u'giant', u'panda', u'genome', u'be', u'sequence', u'in', u'2009', u'use', u'a', u'next-generation', u'sequencing', u'technology', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NN', u'VBD', u'VBN', u'IN', u'CD', u'VBG', u'DT', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[6472, 6475], [6476, 6481], [6482, 6487], [6488, 6494], [6495, 6498], [6499, 6508], [6509, 6511], [6512, 6516], [6517, 6522], [6523, 6524], [6525, 6540], [6541, 6551], [6552, 6562], [6562, 6563]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.10200812667608261, {u'tokens': [u'A', u'Giant', u'Panda', u'cub', u'is', u'also', u'extremely', u'small', u',', u'and', u'it', u'is', u'difficult', u'for', u'the', u'mother', u'to', u'protect', u'it', u'because', u'of', u'the', u'baby', u"'s", u'size', u'.'], u'lemmas': [u'a', u'giant', u'panda', u'cub', u'be', u'also', u'extremely', u'small', u',', u'and', u'it', u'be', u'difficult', u'for', u'the', u'mother', u'to', u'protect', u'it', u'because', u'of', u'the', u'baby', u"'s", u'size', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NN', u'VBZ', u'RB', u'RB', u'JJ', u',', u'CC', u'PRP', u'VBZ', u'JJ', u'IN', u'DT', u'NN', u'TO', u'VB', u'PRP', u'IN', u'IN', u'DT', u'NN', u'POS', u'NN', u'.'], u'char_offsets': [[17505, 17506], [17507, 17512], [17513, 17518], [17519, 17522], [17523, 17525], [17526, 17530], [17531, 17540], [17541, 17546], [17546, 17547], [17548, 17551], [17552, 17554], [17555, 17557], [17558, 17567], [17568, 17571], [17572, 17575], [17576, 17582], [17583, 17585], [17586, 17593], [17594, 17596], [17597, 17604], [17605, 17607], [17608, 17611], [17612, 17616], [17616, 17618], [17619, 17623], [17623, 17624]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.10152770578861237, {u'tokens': [u'They', u'are', u'expected', u'to', u'stay', u'for', u'a', u'minimum', u'of', u'10', u'years', u',', u'and', u'will', u'be', u'the', u'only', u'Giant', u'Pandas', u'living', u'in', u'the', u'Southern', u'Hemisphere', u'.'], u'lemmas': [u'they', u'be', u'expect', u'to', u'stay', u'for', u'a', u'minimum', u'of', u'10', u'year', u',', u'and', u'will', u'be', u'the', u'only', u'giant', u'panda', u'living', u'in', u'the', u'Southern', u'Hemisphere', u'.'], u'pos': [u'PRP', u'VBP', u'VBN', u'TO', u'VB', u'IN', u'DT', u'NN', u'IN', u'CD', u'NNS', u',', u'CC', u'MD', u'VB', u'DT', u'JJ', u'NN', u'NN', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[23258, 23262], [23263, 23266], [23267, 23275], [23276, 23278], [23279, 23283], [23284, 23287], [23288, 23289], [23290, 23297], [23298, 23300], [23301, 23303], [23304, 23309], [23309, 23310], [23311, 23314], [23315, 23319], [23320, 23322], [23323, 23326], [23327, 23331], [23332, 23337], [23338, 23344], [23345, 23351], [23352, 23354], [23355, 23358], [23359, 23367], [23368, 23378], [23378, 23379]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.098710060119628906, {u'tokens': [u'The', u'first', u'Westerner', u'known', u'to', u'have', u'seen', u'a', u'living', u'Giant', u'Panda', u'is', u'the', u'German', u'zoologist', u'Hugo', u'Weigold', u',', u'who', u'purchased', u'a', u'cub', u'in', u'1916', u'.'], u'lemmas': [u'the', u'first', u'Westerner', u'know', u'to', u'have', u'see', u'a', u'living', u'giant', u'panda', u'be', u'the', u'german', u'zoologist', u'Hugo', u'Weigold', u',', u'who', u'purchase', u'a', u'cub', u'in', u'1916', u'.'], u'pos': [u'DT', u'JJ', u'NNP', u'VBN', u'TO', u'VB', u'VBN', u'DT', u'NN', u'NN', u'NN', u'VBZ', u'DT', u'JJ', u'NN', u'NNP', u'NNP', u',', u'WP', u'VBD', u'DT', u'NN', u'IN', u'CD', u'.'], u'char_offsets': [[9090, 9093], [9094, 9099], [9100, 9109], [9110, 9115], [9116, 9118], [9119, 9123], [9124, 9128], [9129, 9130], [9131, 9137], [9138, 9143], [9144, 9149], [9150, 9152], [9153, 9156], [9157, 9163], [9164, 9173], [9174, 9178], [9179, 9186], [9186, 9187], [9188, 9191], [9192, 9201], [9202, 9203], [9204, 9207], [9208, 9210], [9211, 9215], [9215, 9216]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.088805779814720154, {u'tokens': [u'Chris', u'Packham', u':', u'`', u'Giant', u'pandas', u'should', u'be', u'allowed', u'to', u'die', u'out', u"'", u'.'], u'lemmas': [u'Chris', u'Packham', u':', u'`', u'giant', u'panda', u'should', u'be', u'allow', u'to', u'die', u'out', u"'", u'.'], u'pos': [u'NNP', u'NNP', u':', u'``', u'JJ', u'NNS', u'MD', u'VB', u'VBN', u'TO', u'VB', u'RP', u"''", u'.'], u'char_offsets': [[14783, 14788], [14789, 14796], [14796, 14797], [14798, 14799], [14799, 14804], [14805, 14811], [14812, 14818], [14819, 14821], [14822, 14829], [14830, 14832], [14833, 14836], [14837, 14840], [14840, 14841], [14841, 14842]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.088572114706039429, {u'tokens': [u'A', u'2007', u'report', u'shows', u'239', u'Giant', u'Pandas', u'living', u'in', u'captivity', u'inside', u'China', u'and', u'another', u'27', u'outside', u'the', u'country', u'.'], u'lemmas': [u'a', u'2007', u'report', u'show', u'239', u'giant', u'panda', u'living', u'in', u'captivity', u'inside', u'China', u'and', u'another', u'27', u'outside', u'the', u'country', u'.'], u'pos': [u'DT', u'CD', u'NN', u'VBZ', u'CD', u'JJ', u'NN', u'NN', u'IN', u'NN', u'IN', u'NNP', u'CC', u'DT', u'CD', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[858, 859], [860, 864], [865, 871], [872, 877], [878, 881], [882, 887], [888, 894], [895, 901], [902, 904], [905, 914], [915, 921], [922, 927], [928, 931], [932, 939], [940, 942], [943, 950], [951, 954], [955, 962], [962, 963]]}) 
answer: set([u'mammal'])
['No', 'Yes', 'No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is the Giant Panda a mammal?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Giant_Panda
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set1/a4.txt

No
_____________________________ test_yesno[param129] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cac7b90>, (<src.tfidf.TF_IDF object at 0x1080443d0>, set(['giant', 'giant_panda', 'panda'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cac7b90>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.39236637949943542, {u'tokens': [u'A', u'Giant', u'Panda', u'cub', u'.'], u'lemmas': [u'a', u'giant', u'panda', u'cub', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[1794, 1795], [1796, 1801], [1802, 1807], [1808, 1811], [1811, 1812]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.26208400726318359, {u'tokens': [u'The', u'Giant', u'Panda', u'-LRB-', u'Ailuropoda', u'melanoleuca', u',', u'literally', u'meaning', u'``', u'cat-foot', u'black-and-white', u"''", u'-RRB-', u'is', u'a', u'mammal', u'native', u'to', u'central-western', u'and', u'south', u'western', u'China', u'.'], u'lemmas': [u'the', u'Giant', u'Panda', u'-lrb-', u'Ailuropoda', u'melanoleuca', u',', u'literally', u'mean', u'``', u'cat-foot', u'black-and-white', u"''", u'-rrb-', u'be', u'a', u'mammal', u'native', u'to', u'central-western', u'and', u'south', u'western', u'China', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NN', u',', u'RB', u'VBG', u'``', u'JJ', u'JJ', u"''", u'-RRB-', u'VBZ', u'DT', u'NN', u'JJ', u'TO', u'JJ', u'CC', u'JJ', u'JJ', u'NNP', u'.'], u'char_offsets': [[0, 3], [4, 9], [10, 15], [16, 17], [17, 27], [28, 39], [39, 40], [41, 50], [51, 58], [59, 60], [60, 68], [69, 84], [84, 85], [85, 86], [87, 89], [90, 91], [92, 98], [99, 105], [106, 108], [109, 124], [125, 128], [129, 134], [135, 142], [143, 148], [148, 149]]}) 
answer: set([])
candidate Sentence: (0.23611243069171906, {u'tokens': [u'For', u'this', u'reason', u',', u'pandas', u'do', u'not', u'hibernate', u',', u'which', u'is', u'similar', u'to', u'other', u'subtropical', u'mammals', u',', u'and', u'will', u'instead', u'move', u'to', u'elevations', u'with', u'warmer', u'temperatures', u'.'], u'lemmas': [u'for', u'this', u'reason', u',', u'panda', u'do', u'not', u'hibernate', u',', u'which', u'be', u'similar', u'to', u'other', u'subtropical', u'mammal', u',', u'and', u'will', u'instead', u'move', u'to', u'elevation', u'with', u'warmer', u'temperature', u'.'], u'pos': [u'IN', u'DT', u'NN', u',', u'NNS', u'VBP', u'RB', u'VB', u',', u'WDT', u'VBZ', u'JJ', u'TO', u'JJ', u'JJ', u'NNS', u',', u'CC', u'MD', u'RB', u'VB', u'TO', u'NNS', u'IN', u'JJR', u'NNS', u'.'], u'char_offsets': [[3832, 3835], [3836, 3840], [3841, 3847], [3847, 3848], [3849, 3855], [3856, 3858], [3859, 3862], [3863, 3872], [3872, 3873], [3874, 3879], [3880, 3882], [3883, 3890], [3891, 3893], [3894, 3899], [3900, 3911], [3912, 3919], [3919, 3920], [3921, 3924], [3925, 3929], [3930, 3937], [3938, 3942], [3943, 3945], [3946, 3956], [3957, 3961], [3962, 3968], [3969, 3981], [3981, 3982]]}) 
answer: set([])
candidate Sentence: (0.13531079888343811, {u'tokens': [u'Was', u'the', u'first', u'giant', u'panda', u'that', u'was', u'born', u'and', u'survived', u'in', u'captivity', u'outside', u'China', u'.'], u'lemmas': [u'be', u'the', u'first', u'giant', u'panda', u'that', u'be', u'bear', u'and', u'survive', u'in', u'captivity', u'outside', u'China', u'.'], u'pos': [u'VBD', u'DT', u'JJ', u'JJ', u'NN', u'WDT', u'VBD', u'VBN', u'CC', u'VBN', u'IN', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[25256, 25259], [25260, 25263], [25264, 25269], [25270, 25275], [25276, 25281], [25282, 25286], [25287, 25290], [25291, 25295], [25296, 25299], [25300, 25308], [25309, 25311], [25312, 25321], [25322, 25329], [25330, 25335], [25335, 25336]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.11068816483020782, {u'tokens': [u'The', u'giant', u'panda', u'genome', u'was', u'sequenced', u'in', u'2009', u'using', u'a', u'next-generation', u'sequencing', u'technology', u'.'], u'lemmas': [u'the', u'giant', u'panda', u'genome', u'be', u'sequence', u'in', u'2009', u'use', u'a', u'next-generation', u'sequencing', u'technology', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NN', u'VBD', u'VBN', u'IN', u'CD', u'VBG', u'DT', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[6472, 6475], [6476, 6481], [6482, 6487], [6488, 6494], [6495, 6498], [6499, 6508], [6509, 6511], [6512, 6516], [6517, 6522], [6523, 6524], [6525, 6540], [6541, 6551], [6552, 6562], [6562, 6563]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.10200812667608261, {u'tokens': [u'A', u'Giant', u'Panda', u'cub', u'is', u'also', u'extremely', u'small', u',', u'and', u'it', u'is', u'difficult', u'for', u'the', u'mother', u'to', u'protect', u'it', u'because', u'of', u'the', u'baby', u"'s", u'size', u'.'], u'lemmas': [u'a', u'giant', u'panda', u'cub', u'be', u'also', u'extremely', u'small', u',', u'and', u'it', u'be', u'difficult', u'for', u'the', u'mother', u'to', u'protect', u'it', u'because', u'of', u'the', u'baby', u"'s", u'size', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NN', u'VBZ', u'RB', u'RB', u'JJ', u',', u'CC', u'PRP', u'VBZ', u'JJ', u'IN', u'DT', u'NN', u'TO', u'VB', u'PRP', u'IN', u'IN', u'DT', u'NN', u'POS', u'NN', u'.'], u'char_offsets': [[17505, 17506], [17507, 17512], [17513, 17518], [17519, 17522], [17523, 17525], [17526, 17530], [17531, 17540], [17541, 17546], [17546, 17547], [17548, 17551], [17552, 17554], [17555, 17557], [17558, 17567], [17568, 17571], [17572, 17575], [17576, 17582], [17583, 17585], [17586, 17593], [17594, 17596], [17597, 17604], [17605, 17607], [17608, 17611], [17612, 17616], [17616, 17618], [17619, 17623], [17623, 17624]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.10152770578861237, {u'tokens': [u'They', u'are', u'expected', u'to', u'stay', u'for', u'a', u'minimum', u'of', u'10', u'years', u',', u'and', u'will', u'be', u'the', u'only', u'Giant', u'Pandas', u'living', u'in', u'the', u'Southern', u'Hemisphere', u'.'], u'lemmas': [u'they', u'be', u'expect', u'to', u'stay', u'for', u'a', u'minimum', u'of', u'10', u'year', u',', u'and', u'will', u'be', u'the', u'only', u'giant', u'panda', u'living', u'in', u'the', u'Southern', u'Hemisphere', u'.'], u'pos': [u'PRP', u'VBP', u'VBN', u'TO', u'VB', u'IN', u'DT', u'NN', u'IN', u'CD', u'NNS', u',', u'CC', u'MD', u'VB', u'DT', u'JJ', u'NN', u'NN', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[23258, 23262], [23263, 23266], [23267, 23275], [23276, 23278], [23279, 23283], [23284, 23287], [23288, 23289], [23290, 23297], [23298, 23300], [23301, 23303], [23304, 23309], [23309, 23310], [23311, 23314], [23315, 23319], [23320, 23322], [23323, 23326], [23327, 23331], [23332, 23337], [23338, 23344], [23345, 23351], [23352, 23354], [23355, 23358], [23359, 23367], [23368, 23378], [23378, 23379]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.098710060119628906, {u'tokens': [u'The', u'first', u'Westerner', u'known', u'to', u'have', u'seen', u'a', u'living', u'Giant', u'Panda', u'is', u'the', u'German', u'zoologist', u'Hugo', u'Weigold', u',', u'who', u'purchased', u'a', u'cub', u'in', u'1916', u'.'], u'lemmas': [u'the', u'first', u'Westerner', u'know', u'to', u'have', u'see', u'a', u'living', u'giant', u'panda', u'be', u'the', u'german', u'zoologist', u'Hugo', u'Weigold', u',', u'who', u'purchase', u'a', u'cub', u'in', u'1916', u'.'], u'pos': [u'DT', u'JJ', u'NNP', u'VBN', u'TO', u'VB', u'VBN', u'DT', u'NN', u'NN', u'NN', u'VBZ', u'DT', u'JJ', u'NN', u'NNP', u'NNP', u',', u'WP', u'VBD', u'DT', u'NN', u'IN', u'CD', u'.'], u'char_offsets': [[9090, 9093], [9094, 9099], [9100, 9109], [9110, 9115], [9116, 9118], [9119, 9123], [9124, 9128], [9129, 9130], [9131, 9137], [9138, 9143], [9144, 9149], [9150, 9152], [9153, 9156], [9157, 9163], [9164, 9173], [9174, 9178], [9179, 9186], [9186, 9187], [9188, 9191], [9192, 9201], [9202, 9203], [9204, 9207], [9208, 9210], [9211, 9215], [9215, 9216]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.088805779814720154, {u'tokens': [u'Chris', u'Packham', u':', u'`', u'Giant', u'pandas', u'should', u'be', u'allowed', u'to', u'die', u'out', u"'", u'.'], u'lemmas': [u'Chris', u'Packham', u':', u'`', u'giant', u'panda', u'should', u'be', u'allow', u'to', u'die', u'out', u"'", u'.'], u'pos': [u'NNP', u'NNP', u':', u'``', u'JJ', u'NNS', u'MD', u'VB', u'VBN', u'TO', u'VB', u'RP', u"''", u'.'], u'char_offsets': [[14783, 14788], [14789, 14796], [14796, 14797], [14798, 14799], [14799, 14804], [14805, 14811], [14812, 14818], [14819, 14821], [14822, 14829], [14830, 14832], [14833, 14836], [14837, 14840], [14840, 14841], [14841, 14842]]}) 
answer: set([u'mammal'])
candidate Sentence: (0.088572114706039429, {u'tokens': [u'A', u'2007', u'report', u'shows', u'239', u'Giant', u'Pandas', u'living', u'in', u'captivity', u'inside', u'China', u'and', u'another', u'27', u'outside', u'the', u'country', u'.'], u'lemmas': [u'a', u'2007', u'report', u'show', u'239', u'giant', u'panda', u'living', u'in', u'captivity', u'inside', u'China', u'and', u'another', u'27', u'outside', u'the', u'country', u'.'], u'pos': [u'DT', u'CD', u'NN', u'VBZ', u'CD', u'JJ', u'NN', u'NN', u'IN', u'NN', u'IN', u'NNP', u'CC', u'DT', u'CD', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[858, 859], [860, 864], [865, 871], [872, 877], [878, 881], [882, 887], [888, 894], [895, 901], [902, 904], [905, 914], [915, 921], [922, 927], [928, 931], [932, 939], [940, 942], [943, 950], [951, 954], [955, 962], [962, 963]]}) 
answer: set([u'mammal'])
['No', 'Yes', 'No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is the Giant Panda a mammal?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Giant_Panda
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set1/a4.txt

No
_____________________________ test_yesno[param138] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cac7e18>, (<src.tfidf.TF_IDF object at 0x108044e10>, set(['guitar'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cac7e18>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.24625295400619507, {u'tokens': [u'There', u'are', u'several', u'notable', u'subcategories', u'within', u'the', u'acoustic', u'guitar', u'group', u':', u'classical', u'and', u'flamenco', u'guitars', u';', u'steel', u'string', u'guitars', u',', u'which', u'include', u'the', u'flat', u'top', u'or', u'``', u'folk', u"''", u'guitar', u';', u'twelve', u'string', u'guitars', u'and', u'the', u'arch', u'top', u'guitar', u'.'], u'lemmas': [u'there', u'be', u'several', u'notable', u'subcategory', u'within', u'the', u'acoustic', u'guitar', u'group', u':', u'classical', u'and', u'flamenco', u'guitar', u';', u'steel', u'string', u'guitar', u',', u'which', u'include', u'the', u'flat', u'top', u'or', u'``', u'folk', u"''", u'guitar', u';', u'twelve', u'string', u'guitar', u'and', u'the', u'arch', u'top', u'guitar', u'.'], u'pos': [u'EX', u'VBP', u'JJ', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'NN', u':', u'JJ', u'CC', u'JJ', u'NNS', u':', u'NN', u'NN', u'NNS', u',', u'WDT', u'VBP', u'DT', u'JJ', u'NN', u'CC', u'``', u'NN', u"''", u'NN', u':', u'CD', u'NN', u'NNS', u'CC', u'DT', u'NN', u'JJ', u'NN', u'.'], u'char_offsets': [[6004, 6009], [6010, 6013], [6014, 6021], [6022, 6029], [6030, 6043], [6044, 6050], [6051, 6054], [6055, 6063], [6064, 6070], [6071, 6076], [6076, 6077], [6078, 6087], [6088, 6091], [6092, 6100], [6101, 6108], [6108, 6109], [6110, 6115], [6116, 6122], [6123, 6130], [6130, 6131], [6132, 6137], [6138, 6145], [6146, 6149], [6150, 6154], [6155, 6158], [6159, 6161], [6162, 6163], [6163, 6167], [6167, 6168], [6169, 6175], [6175, 6176], [6177, 6183], [6184, 6190], [6191, 6198], [6199, 6202], [6203, 6206], [6207, 6211], [6212, 6215], [6216, 6222], [6222, 6223]]}) 
answer: set([u'similar'])
candidate Sentence: (0.23842421174049377, {u'tokens': [u'Classical', u'and', u'flamenco', u'instruments', u'historically', u'used', u'gut', u'strings', u',', u'but', u'these', u'have', u'been', u'superseded', u'by', u'polymer', u'materials', u',', u'such', u'as', u'nylon', u'and', u'fluorocarbon', u'materials', u'.'], u'lemmas': [u'classical', u'and', u'flamenco', u'instrument', u'historically', u'use', u'gut', u'string', u',', u'but', u'these', u'have', u'be', u'supersede', u'by', u'polymer', u'material', u',', u'such', u'as', u'nylon', u'and', u'fluorocarbon', u'material', u'.'], u'pos': [u'JJ', u'CC', u'NN', u'NNS', u'RB', u'VBN', u'NN', u'NNS', u',', u'CC', u'DT', u'VBP', u'VBN', u'VBN', u'IN', u'NN', u'NNS', u',', u'JJ', u'IN', u'NN', u'CC', u'NN', u'NNS', u'.'], u'char_offsets': [[29322, 29331], [29332, 29335], [29336, 29344], [29345, 29356], [29357, 29369], [29370, 29374], [29375, 29378], [29379, 29386], [29386, 29387], [29388, 29391], [29392, 29397], [29398, 29402], [29403, 29407], [29408, 29418], [29419, 29421], [29422, 29429], [29430, 29439], [29439, 29440], [29441, 29445], [29446, 29448], [29449, 29454], [29455, 29458], [29459, 29471], [29472, 29481], [29481, 29482]]}) 
answer: set([u'similar'])
candidate Sentence: (0.21534419059753418, {u'tokens': [u';', u'Flat-top', u'-LRB-', u'steel-string', u'-RRB-', u'guitars', u':', u'Similar', u'to', u'the', u'classical', u'guitar', u',', u'however', u',', u'within', u'the', u'varied', u'sizes', u'of', u'the', u'steel-stringed', u'guitar', u'the', u'body', u'size', u'is', u'usually', u'significantly', u'larger', u'than', u'a', u'classical', u'guitar', u'and', u'it', u'has', u'a', u'narrower', u',', u'reinforced', u'neck', u'and', u'stronger', u'structural', u'design', u'.'], u'lemmas': [u';', u'flat-top', u'-lrb-', u'steel-string', u'-rrb-', u'guitar', u':', u'similar', u'to', u'the', u'classical', u'guitar', u',', u'however', u',', u'within', u'the', u'varied', u'size', u'of', u'the', u'steel-stringed', u'guitar', u'the', u'body', u'size', u'be', u'usually', u'significantly', u'larger', u'than', u'a', u'classical', u'guitar', u'and', u'it', u'have', u'a', u'narrower', u',', u'reinforce', u'neck', u'and', u'stronger', u'structural', u'design', u'.'], u'pos': [u':', u'NN', u'-LRB-', u'JJ', u'-RRB-', u'NNS', u':', u'JJ', u'TO', u'DT', u'JJ', u'NN', u',', u'RB', u',', u'IN', u'DT', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'DT', u'NN', u'NN', u'VBZ', u'RB', u'RB', u'JJR', u'IN', u'DT', u'JJ', u'NN', u'CC', u'PRP', u'VBZ', u'DT', u'JJR', u',', u'VBN', u'NN', u'CC', u'JJR', u'JJ', u'NN', u'.'], u'char_offsets': [[9599, 9600], [9600, 9608], [9609, 9610], [9610, 9622], [9622, 9623], [9624, 9631], [9631, 9632], [9633, 9640], [9641, 9643], [9644, 9647], [9648, 9657], [9658, 9664], [9664, 9665], [9666, 9673], [9673, 9674], [9675, 9681], [9682, 9685], [9686, 9692], [9693, 9698], [9699, 9701], [9702, 9705], [9706, 9720], [9721, 9727], [9728, 9731], [9732, 9736], [9737, 9741], [9742, 9744], [9745, 9752], [9753, 9766], [9767, 9773], [9774, 9778], [9779, 9780], [9781, 9790], [9791, 9797], [9798, 9801], [9802, 9804], [9805, 9808], [9809, 9810], [9811, 9819], [9819, 9820], [9821, 9831], [9832, 9836], [9837, 9840], [9841, 9849], [9850, 9860], [9861, 9867], [9867, 9868]]}) 
answer: set([u'flamenco'])
candidate Sentence: (0.2147291898727417, {u'tokens': [u'The', u'physical', u'principle', u'of', u'the', u'guitar', u'is', u'therefore', u'similar', u'to', u'the', u'banjo', u'.'], u'lemmas': [u'the', u'physical', u'principle', u'of', u'the', u'guitar', u'be', u'therefore', u'similar', u'to', u'the', u'banjo', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'RB', u'JJ', u'TO', u'DT', u'NN', u'.'], u'char_offsets': [[11147, 11150], [11151, 11159], [11160, 11169], [11170, 11172], [11173, 11176], [11177, 11183], [11184, 11186], [11187, 11196], [11197, 11204], [11205, 11207], [11208, 11211], [11212, 11217], [11217, 11218]]}) 
answer: set([u'flamenco', u'classic'])
candidate Sentence: (0.21090118587017059, {u'tokens': [u'Guitars', u'are', u'recognized', u'as', u'one', u'of', u'the', u'primary', u'instruments', u'in', u'blues', u',', u'country', u',', u'flamenco', u',', u'rock', u'music', u',', u'and', u'many', u'forms', u'of', u'pop', u'.'], u'lemmas': [u'guitar', u'be', u'recognize', u'as', u'one', u'of', u'the', u'primary', u'instrument', u'in', u'blues', u',', u'country', u',', u'flamenco', u',', u'rock', u'music', u',', u'and', u'many', u'form', u'of', u'pop', u'.'], u'pos': [u'NNS', u'VBP', u'VBN', u'IN', u'CD', u'IN', u'DT', u'JJ', u'NNS', u'IN', u'NNS', u',', u'NN', u',', u'NN', u',', u'NN', u'NN', u',', u'CC', u'JJ', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[201, 208], [209, 212], [213, 223], [224, 226], [227, 230], [231, 233], [234, 237], [238, 245], [246, 257], [258, 260], [261, 266], [266, 267], [268, 275], [275, 276], [277, 285], [285, 286], [287, 291], [292, 297], [297, 298], [299, 302], [303, 307], [308, 313], [314, 316], [317, 320], [320, 321]]}) 
answer: set([u'similar', u'classic'])
candidate Sentence: (0.19169627130031586, {u'tokens': [u'Vigorous', u'performance', u'styles', u'such', u'as', u'flamenco', u',', u'which', u'can', u'involve', u'the', u'use', u'of', u'the', u'guitar', u'as', u'a', u'percussion', u'instrument', u',', u'call', u'for', u'a', u'scratchplate', u'to', u'be', u'fitted', u'to', u'nylon-string', u'instruments', u'.'], u'lemmas': [u'vigorous', u'performance', u'style', u'such', u'as', u'flamenco', u',', u'which', u'can', u'involve', u'the', u'use', u'of', u'the', u'guitar', u'as', u'a', u'percussion', u'instrument', u',', u'call', u'for', u'a', u'scratchplate', u'to', u'be', u'fit', u'to', u'nylon-string', u'instrument', u'.'], u'pos': [u'JJ', u'NN', u'NNS', u'JJ', u'IN', u'NN', u',', u'WDT', u'MD', u'VB', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'NN', u',', u'NN', u'IN', u'DT', u'NN', u'TO', u'VB', u'VBN', u'TO', u'JJ', u'NNS', u'.'], u'char_offsets': [[40458, 40466], [40467, 40478], [40479, 40485], [40486, 40490], [40491, 40493], [40494, 40502], [40502, 40503], [40504, 40509], [40510, 40513], [40514, 40521], [40522, 40525], [40526, 40529], [40530, 40532], [40533, 40536], [40537, 40543], [40544, 40546], [40547, 40548], [40549, 40559], [40560, 40570], [40570, 40571], [40572, 40576], [40577, 40580], [40581, 40582], [40583, 40595], [40596, 40598], [40599, 40601], [40602, 40608], [40609, 40611], [40612, 40624], [40625, 40636], [40636, 40637]]}) 
answer: set([u'similar', u'classic'])
candidate Sentence: (0.18934209644794464, {u'tokens': [u'The', u'electric', u'bass', u'guitar', u'is', u'similar', u'in', u'tuning', u'to', u'the', u'traditional', u'double', u'bass', u'viol', u'.'], u'lemmas': [u'the', u'electric', u'bass', u'guitar', u'be', u'similar', u'in', u'tuning', u'to', u'the', u'traditional', u'double', u'bass', u'viol', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NN', u'VBZ', u'JJ', u'IN', u'NN', u'TO', u'DT', u'JJ', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[17260, 17263], [17264, 17272], [17273, 17277], [17278, 17284], [17285, 17287], [17288, 17295], [17296, 17298], [17299, 17305], [17306, 17308], [17309, 17312], [17313, 17324], [17325, 17331], [17332, 17336], [17337, 17341], [17341, 17342]]}) 
answer: set([u'flamenco', u'classic'])
candidate Sentence: (0.18087916076183319, {u'tokens': [u'Many', u'open', u'tunings', u',', u'where', u'all', u'of', u'the', u'strings', u'are', u'tuned', u'to', u'a', u'similar', u'note', u'or', u'chord', u',', u'are', u'popular', u'for', u'slide', u'guitar', u'playing', u'.'], u'lemmas': [u'many', u'open', u'tuning', u',', u'where', u'all', u'of', u'the', u'string', u'be', u'tune', u'to', u'a', u'similar', u'note', u'or', u'chord', u',', u'be', u'popular', u'for', u'slide', u'guitar', u'playing', u'.'], u'pos': [u'JJ', u'JJ', u'NNS', u',', u'WRB', u'DT', u'IN', u'DT', u'NNS', u'VBP', u'VBN', u'TO', u'DT', u'JJ', u'NN', u'CC', u'NN', u',', u'VBP', u'JJ', u'IN', u'NN', u'NN', u'NN', u'.'], u'char_offsets': [[44171, 44175], [44176, 44180], [44181, 44188], [44188, 44189], [44190, 44195], [44196, 44199], [44200, 44202], [44203, 44206], [44207, 44214], [44215, 44218], [44219, 44224], [44225, 44227], [44228, 44229], [44230, 44237], [44238, 44242], [44243, 44245], [44246, 44251], [44251, 44252], [44253, 44256], [44257, 44264], [44265, 44268], [44269, 44274], [44275, 44281], [44282, 44289], [44289, 44290]]}) 
answer: set([u'flamenco', u'classic'])
candidate Sentence: (0.17828387022018433, {u'tokens': [u'The', u'acoustic', u'guitar', u'group', u'also', u'includes', u'unamplified', u'guitars', u'designed', u'to', u'play', u'in', u'different', u'registers', u'such', u'as', u'the', u'acoustic', u'bass', u'guitar', u'which', u'has', u'a', u'similar', u'tuning', u'to', u'that', u'of', u'the', u'electric', u'bass', u'guitar', u'.'], u'lemmas': [u'the', u'acoustic', u'guitar', u'group', u'also', u'include', u'unamplified', u'guitar', u'design', u'to', u'play', u'in', u'different', u'register', u'such', u'as', u'the', u'acoustic', u'bass', u'guitar', u'which', u'have', u'a', u'similar', u'tuning', u'to', u'that', u'of', u'the', u'electric', u'bass', u'guitar', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NN', u'RB', u'VBZ', u'JJ', u'NNS', u'VBN', u'TO', u'VB', u'IN', u'JJ', u'VBZ', u'JJ', u'IN', u'DT', u'JJ', u'NN', u'NN', u'WDT', u'VBZ', u'DT', u'JJ', u'NN', u'TO', u'DT', u'IN', u'DT', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[6224, 6227], [6228, 6236], [6237, 6243], [6244, 6249], [6250, 6254], [6255, 6263], [6264, 6275], [6276, 6283], [6284, 6292], [6293, 6295], [6296, 6300], [6301, 6303], [6304, 6313], [6314, 6323], [6324, 6328], [6329, 6331], [6332, 6335], [6336, 6344], [6345, 6349], [6350, 6356], [6357, 6362], [6363, 6366], [6367, 6368], [6369, 6376], [6377, 6383], [6384, 6386], [6387, 6391], [6392, 6394], [6395, 6398], [6399, 6407], [6408, 6412], [6413, 6419], [6419, 6420]]}) 
answer: set([u'flamenco', u'classic'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is the flamenco guitar similar to the classical guitar?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Guitar
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a7.txt

No
_____________________________ test_yesno[param139] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cac7e60>, (<src.tfidf.TF_IDF object at 0x108044e10>, set(['guitar'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x10cac7e60>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.24625295400619507, {u'tokens': [u'There', u'are', u'several', u'notable', u'subcategories', u'within', u'the', u'acoustic', u'guitar', u'group', u':', u'classical', u'and', u'flamenco', u'guitars', u';', u'steel', u'string', u'guitars', u',', u'which', u'include', u'the', u'flat', u'top', u'or', u'``', u'folk', u"''", u'guitar', u';', u'twelve', u'string', u'guitars', u'and', u'the', u'arch', u'top', u'guitar', u'.'], u'lemmas': [u'there', u'be', u'several', u'notable', u'subcategory', u'within', u'the', u'acoustic', u'guitar', u'group', u':', u'classical', u'and', u'flamenco', u'guitar', u';', u'steel', u'string', u'guitar', u',', u'which', u'include', u'the', u'flat', u'top', u'or', u'``', u'folk', u"''", u'guitar', u';', u'twelve', u'string', u'guitar', u'and', u'the', u'arch', u'top', u'guitar', u'.'], u'pos': [u'EX', u'VBP', u'JJ', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'NN', u':', u'JJ', u'CC', u'JJ', u'NNS', u':', u'NN', u'NN', u'NNS', u',', u'WDT', u'VBP', u'DT', u'JJ', u'NN', u'CC', u'``', u'NN', u"''", u'NN', u':', u'CD', u'NN', u'NNS', u'CC', u'DT', u'NN', u'JJ', u'NN', u'.'], u'char_offsets': [[6004, 6009], [6010, 6013], [6014, 6021], [6022, 6029], [6030, 6043], [6044, 6050], [6051, 6054], [6055, 6063], [6064, 6070], [6071, 6076], [6076, 6077], [6078, 6087], [6088, 6091], [6092, 6100], [6101, 6108], [6108, 6109], [6110, 6115], [6116, 6122], [6123, 6130], [6130, 6131], [6132, 6137], [6138, 6145], [6146, 6149], [6150, 6154], [6155, 6158], [6159, 6161], [6162, 6163], [6163, 6167], [6167, 6168], [6169, 6175], [6175, 6176], [6177, 6183], [6184, 6190], [6191, 6198], [6199, 6202], [6203, 6206], [6207, 6211], [6212, 6215], [6216, 6222], [6222, 6223]]}) 
answer: set([u'similar'])
candidate Sentence: (0.23842421174049377, {u'tokens': [u'Classical', u'and', u'flamenco', u'instruments', u'historically', u'used', u'gut', u'strings', u',', u'but', u'these', u'have', u'been', u'superseded', u'by', u'polymer', u'materials', u',', u'such', u'as', u'nylon', u'and', u'fluorocarbon', u'materials', u'.'], u'lemmas': [u'classical', u'and', u'flamenco', u'instrument', u'historically', u'use', u'gut', u'string', u',', u'but', u'these', u'have', u'be', u'supersede', u'by', u'polymer', u'material', u',', u'such', u'as', u'nylon', u'and', u'fluorocarbon', u'material', u'.'], u'pos': [u'JJ', u'CC', u'NN', u'NNS', u'RB', u'VBN', u'NN', u'NNS', u',', u'CC', u'DT', u'VBP', u'VBN', u'VBN', u'IN', u'NN', u'NNS', u',', u'JJ', u'IN', u'NN', u'CC', u'NN', u'NNS', u'.'], u'char_offsets': [[29322, 29331], [29332, 29335], [29336, 29344], [29345, 29356], [29357, 29369], [29370, 29374], [29375, 29378], [29379, 29386], [29386, 29387], [29388, 29391], [29392, 29397], [29398, 29402], [29403, 29407], [29408, 29418], [29419, 29421], [29422, 29429], [29430, 29439], [29439, 29440], [29441, 29445], [29446, 29448], [29449, 29454], [29455, 29458], [29459, 29471], [29472, 29481], [29481, 29482]]}) 
answer: set([u'similar'])
candidate Sentence: (0.21534419059753418, {u'tokens': [u';', u'Flat-top', u'-LRB-', u'steel-string', u'-RRB-', u'guitars', u':', u'Similar', u'to', u'the', u'classical', u'guitar', u',', u'however', u',', u'within', u'the', u'varied', u'sizes', u'of', u'the', u'steel-stringed', u'guitar', u'the', u'body', u'size', u'is', u'usually', u'significantly', u'larger', u'than', u'a', u'classical', u'guitar', u'and', u'it', u'has', u'a', u'narrower', u',', u'reinforced', u'neck', u'and', u'stronger', u'structural', u'design', u'.'], u'lemmas': [u';', u'flat-top', u'-lrb-', u'steel-string', u'-rrb-', u'guitar', u':', u'similar', u'to', u'the', u'classical', u'guitar', u',', u'however', u',', u'within', u'the', u'varied', u'size', u'of', u'the', u'steel-stringed', u'guitar', u'the', u'body', u'size', u'be', u'usually', u'significantly', u'larger', u'than', u'a', u'classical', u'guitar', u'and', u'it', u'have', u'a', u'narrower', u',', u'reinforce', u'neck', u'and', u'stronger', u'structural', u'design', u'.'], u'pos': [u':', u'NN', u'-LRB-', u'JJ', u'-RRB-', u'NNS', u':', u'JJ', u'TO', u'DT', u'JJ', u'NN', u',', u'RB', u',', u'IN', u'DT', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'DT', u'NN', u'NN', u'VBZ', u'RB', u'RB', u'JJR', u'IN', u'DT', u'JJ', u'NN', u'CC', u'PRP', u'VBZ', u'DT', u'JJR', u',', u'VBN', u'NN', u'CC', u'JJR', u'JJ', u'NN', u'.'], u'char_offsets': [[9599, 9600], [9600, 9608], [9609, 9610], [9610, 9622], [9622, 9623], [9624, 9631], [9631, 9632], [9633, 9640], [9641, 9643], [9644, 9647], [9648, 9657], [9658, 9664], [9664, 9665], [9666, 9673], [9673, 9674], [9675, 9681], [9682, 9685], [9686, 9692], [9693, 9698], [9699, 9701], [9702, 9705], [9706, 9720], [9721, 9727], [9728, 9731], [9732, 9736], [9737, 9741], [9742, 9744], [9745, 9752], [9753, 9766], [9767, 9773], [9774, 9778], [9779, 9780], [9781, 9790], [9791, 9797], [9798, 9801], [9802, 9804], [9805, 9808], [9809, 9810], [9811, 9819], [9819, 9820], [9821, 9831], [9832, 9836], [9837, 9840], [9841, 9849], [9850, 9860], [9861, 9867], [9867, 9868]]}) 
answer: set([u'flamenco'])
candidate Sentence: (0.2147291898727417, {u'tokens': [u'The', u'physical', u'principle', u'of', u'the', u'guitar', u'is', u'therefore', u'similar', u'to', u'the', u'banjo', u'.'], u'lemmas': [u'the', u'physical', u'principle', u'of', u'the', u'guitar', u'be', u'therefore', u'similar', u'to', u'the', u'banjo', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'RB', u'JJ', u'TO', u'DT', u'NN', u'.'], u'char_offsets': [[11147, 11150], [11151, 11159], [11160, 11169], [11170, 11172], [11173, 11176], [11177, 11183], [11184, 11186], [11187, 11196], [11197, 11204], [11205, 11207], [11208, 11211], [11212, 11217], [11217, 11218]]}) 
answer: set([u'flamenco', u'classic'])
candidate Sentence: (0.21090118587017059, {u'tokens': [u'Guitars', u'are', u'recognized', u'as', u'one', u'of', u'the', u'primary', u'instruments', u'in', u'blues', u',', u'country', u',', u'flamenco', u',', u'rock', u'music', u',', u'and', u'many', u'forms', u'of', u'pop', u'.'], u'lemmas': [u'guitar', u'be', u'recognize', u'as', u'one', u'of', u'the', u'primary', u'instrument', u'in', u'blues', u',', u'country', u',', u'flamenco', u',', u'rock', u'music', u',', u'and', u'many', u'form', u'of', u'pop', u'.'], u'pos': [u'NNS', u'VBP', u'VBN', u'IN', u'CD', u'IN', u'DT', u'JJ', u'NNS', u'IN', u'NNS', u',', u'NN', u',', u'NN', u',', u'NN', u'NN', u',', u'CC', u'JJ', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[201, 208], [209, 212], [213, 223], [224, 226], [227, 230], [231, 233], [234, 237], [238, 245], [246, 257], [258, 260], [261, 266], [266, 267], [268, 275], [275, 276], [277, 285], [285, 286], [287, 291], [292, 297], [297, 298], [299, 302], [303, 307], [308, 313], [314, 316], [317, 320], [320, 321]]}) 
answer: set([u'similar', u'classic'])
candidate Sentence: (0.19169627130031586, {u'tokens': [u'Vigorous', u'performance', u'styles', u'such', u'as', u'flamenco', u',', u'which', u'can', u'involve', u'the', u'use', u'of', u'the', u'guitar', u'as', u'a', u'percussion', u'instrument', u',', u'call', u'for', u'a', u'scratchplate', u'to', u'be', u'fitted', u'to', u'nylon-string', u'instruments', u'.'], u'lemmas': [u'vigorous', u'performance', u'style', u'such', u'as', u'flamenco', u',', u'which', u'can', u'involve', u'the', u'use', u'of', u'the', u'guitar', u'as', u'a', u'percussion', u'instrument', u',', u'call', u'for', u'a', u'scratchplate', u'to', u'be', u'fit', u'to', u'nylon-string', u'instrument', u'.'], u'pos': [u'JJ', u'NN', u'NNS', u'JJ', u'IN', u'NN', u',', u'WDT', u'MD', u'VB', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'NN', u',', u'NN', u'IN', u'DT', u'NN', u'TO', u'VB', u'VBN', u'TO', u'JJ', u'NNS', u'.'], u'char_offsets': [[40458, 40466], [40467, 40478], [40479, 40485], [40486, 40490], [40491, 40493], [40494, 40502], [40502, 40503], [40504, 40509], [40510, 40513], [40514, 40521], [40522, 40525], [40526, 40529], [40530, 40532], [40533, 40536], [40537, 40543], [40544, 40546], [40547, 40548], [40549, 40559], [40560, 40570], [40570, 40571], [40572, 40576], [40577, 40580], [40581, 40582], [40583, 40595], [40596, 40598], [40599, 40601], [40602, 40608], [40609, 40611], [40612, 40624], [40625, 40636], [40636, 40637]]}) 
answer: set([u'similar', u'classic'])
candidate Sentence: (0.18934209644794464, {u'tokens': [u'The', u'electric', u'bass', u'guitar', u'is', u'similar', u'in', u'tuning', u'to', u'the', u'traditional', u'double', u'bass', u'viol', u'.'], u'lemmas': [u'the', u'electric', u'bass', u'guitar', u'be', u'similar', u'in', u'tuning', u'to', u'the', u'traditional', u'double', u'bass', u'viol', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NN', u'VBZ', u'JJ', u'IN', u'NN', u'TO', u'DT', u'JJ', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[17260, 17263], [17264, 17272], [17273, 17277], [17278, 17284], [17285, 17287], [17288, 17295], [17296, 17298], [17299, 17305], [17306, 17308], [17309, 17312], [17313, 17324], [17325, 17331], [17332, 17336], [17337, 17341], [17341, 17342]]}) 
answer: set([u'flamenco', u'classic'])
candidate Sentence: (0.18087916076183319, {u'tokens': [u'Many', u'open', u'tunings', u',', u'where', u'all', u'of', u'the', u'strings', u'are', u'tuned', u'to', u'a', u'similar', u'note', u'or', u'chord', u',', u'are', u'popular', u'for', u'slide', u'guitar', u'playing', u'.'], u'lemmas': [u'many', u'open', u'tuning', u',', u'where', u'all', u'of', u'the', u'string', u'be', u'tune', u'to', u'a', u'similar', u'note', u'or', u'chord', u',', u'be', u'popular', u'for', u'slide', u'guitar', u'playing', u'.'], u'pos': [u'JJ', u'JJ', u'NNS', u',', u'WRB', u'DT', u'IN', u'DT', u'NNS', u'VBP', u'VBN', u'TO', u'DT', u'JJ', u'NN', u'CC', u'NN', u',', u'VBP', u'JJ', u'IN', u'NN', u'NN', u'NN', u'.'], u'char_offsets': [[44171, 44175], [44176, 44180], [44181, 44188], [44188, 44189], [44190, 44195], [44196, 44199], [44200, 44202], [44203, 44206], [44207, 44214], [44215, 44218], [44219, 44224], [44225, 44227], [44228, 44229], [44230, 44237], [44238, 44242], [44243, 44245], [44246, 44251], [44251, 44252], [44253, 44256], [44257, 44264], [44265, 44268], [44269, 44274], [44275, 44281], [44282, 44289], [44289, 44290]]}) 
answer: set([u'flamenco', u'classic'])
candidate Sentence: (0.17828387022018433, {u'tokens': [u'The', u'acoustic', u'guitar', u'group', u'also', u'includes', u'unamplified', u'guitars', u'designed', u'to', u'play', u'in', u'different', u'registers', u'such', u'as', u'the', u'acoustic', u'bass', u'guitar', u'which', u'has', u'a', u'similar', u'tuning', u'to', u'that', u'of', u'the', u'electric', u'bass', u'guitar', u'.'], u'lemmas': [u'the', u'acoustic', u'guitar', u'group', u'also', u'include', u'unamplified', u'guitar', u'design', u'to', u'play', u'in', u'different', u'register', u'such', u'as', u'the', u'acoustic', u'bass', u'guitar', u'which', u'have', u'a', u'similar', u'tuning', u'to', u'that', u'of', u'the', u'electric', u'bass', u'guitar', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NN', u'RB', u'VBZ', u'JJ', u'NNS', u'VBN', u'TO', u'VB', u'IN', u'JJ', u'VBZ', u'JJ', u'IN', u'DT', u'JJ', u'NN', u'NN', u'WDT', u'VBZ', u'DT', u'JJ', u'NN', u'TO', u'DT', u'IN', u'DT', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[6224, 6227], [6228, 6236], [6237, 6243], [6244, 6249], [6250, 6254], [6255, 6263], [6264, 6275], [6276, 6283], [6284, 6292], [6293, 6295], [6296, 6300], [6301, 6303], [6304, 6313], [6314, 6323], [6324, 6328], [6329, 6331], [6332, 6335], [6336, 6344], [6345, 6349], [6350, 6356], [6357, 6362], [6363, 6366], [6367, 6368], [6369, 6376], [6377, 6383], [6384, 6386], [6387, 6391], [6392, 6394], [6395, 6398], [6399, 6407], [6408, 6412], [6413, 6419], [6419, 6420]]}) 
answer: set([u'flamenco', u'classic'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is the flamenco guitar similar to the classical guitar?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Guitar
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a7.txt

No
_____________________________ test_yesno[param142] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cac7f38>, (<src.tfidf.TF_IDF object at 0x108044e10>, set(['guitar'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cac7f38>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.43902823328971863, {u'tokens': [u'The', u'guitar', u'player', u'-LRB-', u'c.', u'1672', u'-RRB-', u',', u'by', u'Johannes', u'Vermeer', u'Guitars', u'can', u'be', u'divided', u'into', u'two', u'broad', u'categories', u',', u'acoustic', u'and', u'electric', u':', u'An', u'acoustic', u'guitar', u'is', u'one', u'not', u'dependent', u'on', u'an', u'external', u'device', u'to', u'be', u'heard', u'but', u'uses', u'a', u'soundboard', u'which', u'is', u'a', u'wooden', u'piece', u'mounted', u'on', u'the', u'front', u'of', u'the', u'guitar', u"'s", u'body', u'.'], u'lemmas': [u'the', u'guitar', u'player', u'-lrb-', u'c.', u'1672', u'-rrb-', u',', u'by', u'Johannes', u'Vermeer', u'Guitars', u'can', u'be', u'divide', u'into', u'two', u'broad', u'category', u',', u'acoustic', u'and', u'electric', u':', u'a', u'acoustic', u'guitar', u'be', u'one', u'not', u'dependent', u'on', u'a', u'external', u'device', u'to', u'be', u'hear', u'but', u'use', u'a', u'soundboard', u'which', u'be', u'a', u'wooden', u'piece', u'mount', u'on', u'the', u'front', u'of', u'the', u'guitar', u"'s", u'body', u'.'], u'pos': [u'DT', u'NN', u'NN', u'-LRB-', u'NN', u'CD', u'-RRB-', u',', u'IN', u'NNP', u'NNP', u'NNP', u'MD', u'VB', u'VBN', u'IN', u'CD', u'JJ', u'NNS', u',', u'JJ', u'CC', u'JJ', u':', u'DT', u'JJ', u'NN', u'VBZ', u'CD', u'RB', u'JJ', u'IN', u'DT', u'JJ', u'NN', u'TO', u'VB', u'VBN', u'CC', u'VBZ', u'DT', u'NN', u'WDT', u'VBZ', u'DT', u'JJ', u'NN', u'VBD', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'POS', u'NN', u'.'], u'char_offsets': [[5422, 5425], [5426, 5432], [5433, 5439], [5440, 5441], [5441, 5443], [5444, 5448], [5448, 5449], [5449, 5450], [5451, 5453], [5454, 5462], [5463, 5470], [5471, 5478], [5479, 5482], [5483, 5485], [5486, 5493], [5494, 5498], [5499, 5502], [5503, 5508], [5509, 5519], [5519, 5520], [5521, 5529], [5530, 5533], [5534, 5542], [5542, 5543], [5544, 5546], [5547, 5555], [5556, 5562], [5563, 5565], [5566, 5569], [5570, 5573], [5574, 5583], [5584, 5586], [5587, 5589], [5590, 5598], [5599, 5605], [5606, 5608], [5609, 5611], [5612, 5617], [5618, 5621], [5622, 5626], [5627, 5628], [5629, 5639], [5640, 5645], [5646, 5648], [5649, 5650], [5651, 5657], [5658, 5663], [5664, 5671], [5672, 5674], [5675, 5678], [5679, 5684], [5685, 5687], [5688, 5691], [5692, 5698], [5698, 5700], [5701, 5705], [5705, 5706]]}) 
answer: set([])
candidate Sentence: (0.18585856258869171, {u'tokens': [u'The', u'twelfth', u'fret', u'divides', u'the', u'scale', u'length', u'in', u'two', u'exact', u'halves', u'and', u'the', u'24th', u'fret', u'position', u'divides', u'the', u'scale', u'length', u'in', u'half', u'yet', u'again', u'.'], u'lemmas': [u'the', u'twelfth', u'fret', u'divide', u'the', u'scale', u'length', u'in', u'two', u'exact', u'half', u'and', u'the', u'24th', u'fret', u'position', u'divide', u'the', u'scale', u'length', u'in', u'half', u'yet', u'again', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VBZ', u'DT', u'NN', u'NN', u'IN', u'CD', u'JJ', u'NNS', u'CC', u'DT', u'JJ', u'NN', u'NN', u'VBZ', u'DT', u'NN', u'NN', u'IN', u'NN', u'RB', u'RB', u'.'], u'char_offsets': [[21699, 21702], [21703, 21710], [21711, 21715], [21716, 21723], [21724, 21727], [21728, 21733], [21734, 21740], [21741, 21743], [21744, 21747], [21748, 21753], [21754, 21760], [21761, 21764], [21765, 21768], [21769, 21773], [21774, 21778], [21779, 21787], [21788, 21795], [21796, 21799], [21800, 21805], [21806, 21812], [21813, 21815], [21816, 21820], [21821, 21824], [21825, 21830], [21830, 21831]]}) 
answer: set([u'categori', u'broad'])
candidate Sentence: (0.1324327290058136, {u'tokens': [u'That', u'distance', u'is', u'subtracted', u'from', u'the', u'scale', u'length', u'and', u'the', u'result', u'is', u'divided', u'in', u'two', u'sections', u'by', u'the', u'constant', u'to', u'yield', u'the', u'distance', u'from', u'the', u'first', u'fret', u'to', u'the', u'second', u'fret', u'.'], u'lemmas': [u'that', u'distance', u'be', u'subtract', u'from', u'the', u'scale', u'length', u'and', u'the', u'result', u'be', u'divide', u'in', u'two', u'section', u'by', u'the', u'constant', u'to', u'yield', u'the', u'distance', u'from', u'the', u'first', u'fret', u'to', u'the', u'second', u'fret', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'NN', u'NN', u'CC', u'DT', u'NN', u'VBZ', u'VBN', u'IN', u'CD', u'NNS', u'IN', u'DT', u'JJ', u'TO', u'VB', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'TO', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[22086, 22090], [22091, 22099], [22100, 22102], [22103, 22113], [22114, 22118], [22119, 22122], [22123, 22128], [22129, 22135], [22136, 22139], [22140, 22143], [22144, 22150], [22151, 22153], [22154, 22161], [22162, 22164], [22165, 22168], [22169, 22177], [22178, 22180], [22181, 22184], [22185, 22193], [22194, 22196], [22197, 22202], [22203, 22206], [22207, 22215], [22216, 22220], [22221, 22224], [22225, 22230], [22231, 22235], [22236, 22238], [22239, 22242], [22243, 22249], [22250, 22254], [22254, 22255]]}) 
answer: set([u'categori', u'broad'])
candidate Sentence: (0.12797744572162628, {u'tokens': [u'The', u'scale', u'length', u'divided', u'by', u'this', u'value', u'yields', u'the', u'distance', u'from', u'the', u'nut', u'to', u'the', u'first', u'fret', u'.'], u'lemmas': [u'the', u'scale', u'length', u'divide', u'by', u'this', u'value', u'yield', u'the', u'distance', u'from', u'the', u'nut', u'to', u'the', u'first', u'fret', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBN', u'IN', u'DT', u'NN', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NN', u'TO', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[21995, 21998], [21999, 22004], [22005, 22011], [22012, 22019], [22020, 22022], [22023, 22027], [22028, 22033], [22034, 22040], [22041, 22044], [22045, 22053], [22054, 22058], [22059, 22062], [22063, 22066], [22067, 22069], [22070, 22073], [22074, 22079], [22080, 22084], [22084, 22085]]}) 
answer: set([u'categori', u'broad', u'two'])
candidate Sentence: (0.11718807369470596, {u'tokens': [u'The', u'ratio', u'of', u'the', u'spacing', u'of', u'two', u'consecutive', u'frets', u'is', u'the', u'twelfth', u'root', u'of', u'two', u'.'], u'lemmas': [u'the', u'ratio', u'of', u'the', u'spacing', u'of', u'two', u'consecutive', u'fret', u'be', u'the', u'twelfth', u'root', u'of', u'two', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'CD', u'JJ', u'VBZ', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'CD', u'.'], u'char_offsets': [[21621, 21624], [21625, 21630], [21631, 21633], [21634, 21637], [21638, 21645], [21646, 21648], [21649, 21652], [21653, 21664], [21665, 21670], [21671, 21673], [21674, 21677], [21678, 21685], [21686, 21690], [21691, 21693], [21694, 21697], [21697, 21698]]}) 
answer: set([u'categori', u'broad', u'divid'])
candidate Sentence: (0.097049862146377563, {u'tokens': [u'Alternate', u'tunings', u'are', u'used', u'for', u'two', u'main', u'reasons', u':', u'the', u'ease', u'of', u'playing', u'and', u'the', u'variation', u'in', u'tone', u'that', u'can', u'be', u'achieved', u'.'], u'lemmas': [u'alternate', u'tuning', u'be', u'use', u'for', u'two', u'main', u'reason', u':', u'the', u'ease', u'of', u'playing', u'and', u'the', u'variation', u'in', u'tone', u'that', u'can', u'be', u'achieve', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'VBN', u'IN', u'CD', u'JJ', u'NNS', u':', u'DT', u'NN', u'IN', u'NN', u'CC', u'DT', u'NN', u'IN', u'NN', u'WDT', u'MD', u'VB', u'VBN', u'.'], u'char_offsets': [[44291, 44300], [44301, 44308], [44309, 44312], [44313, 44317], [44318, 44321], [44322, 44325], [44326, 44330], [44331, 44338], [44338, 44339], [44340, 44343], [44344, 44348], [44349, 44351], [44352, 44359], [44360, 44363], [44364, 44367], [44368, 44377], [44378, 44380], [44381, 44385], [44386, 44390], [44391, 44394], [44395, 44397], [44398, 44406], [44406, 44407]]}) 
answer: set([u'categori', u'broad', u'divid'])
candidate Sentence: (0.095553860068321228, {u'tokens': [u'There', u'are', u'two', u'main', u'types', u'of', u'pickup', u',', u'single', u'and', u'double', u'coil', u'-LRB-', u'or', u'humbucker', u'-RRB-', u',', u'each', u'of', u'which', u'can', u'be', u'passive', u'or', u'active', u'.'], u'lemmas': [u'there', u'be', u'two', u'main', u'type', u'of', u'pickup', u',', u'single', u'and', u'double', u'coil', u'-lrb-', u'or', u'humbucker', u'-rrb-', u',', u'each', u'of', u'which', u'can', u'be', u'passive', u'or', u'active', u'.'], u'pos': [u'EX', u'VBP', u'CD', u'JJ', u'NNS', u'IN', u'NN', u',', u'JJ', u'CC', u'JJ', u'NN', u'-LRB-', u'CC', u'NN', u'-RRB-', u',', u'DT', u'IN', u'WDT', u'MD', u'VB', u'JJ', u'CC', u'JJ', u'.'], u'char_offsets': [[16080, 16085], [16086, 16089], [16090, 16093], [16094, 16098], [16099, 16104], [16105, 16107], [16108, 16114], [16114, 16115], [16116, 16122], [16123, 16126], [16127, 16133], [16134, 16138], [16139, 16140], [16140, 16142], [16143, 16152], [16152, 16153], [16153, 16154], [16155, 16159], [16160, 16162], [16163, 16168], [16169, 16172], [16173, 16175], [16176, 16183], [16184, 16186], [16187, 16193], [16193, 16194]]}) 
answer: set([u'categori', u'broad', u'divid'])
candidate Sentence: (0.094398520886898041, {u'tokens': [u'The', u'manufacturer', u"'s", u'logo', u'or', u'a', u'small', u'design', u'is', u'often', u'inlaid', u'into', u'the', u'headstock', u'.'], u'lemmas': [u'the', u'manufacturer', u"'s", u'logo', u'or', u'a', u'small', u'design', u'be', u'often', u'inlay', u'into', u'the', u'headstock', u'.'], u'pos': [u'DT', u'NN', u'POS', u'NN', u'CC', u'DT', u'JJ', u'NN', u'VBZ', u'RB', u'VBN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[25746, 25749], [25750, 25762], [25762, 25764], [25765, 25769], [25770, 25772], [25773, 25774], [25775, 25780], [25781, 25787], [25788, 25790], [25791, 25796], [25797, 25803], [25804, 25808], [25809, 25812], [25813, 25822], [25822, 25823]]}) 
answer: set([u'categori', u'broad', u'two', u'divid'])
candidate Sentence: (0.092643000185489655, {u'tokens': [u'Purfling', u'can', u'also', u'appear', u'on', u'the', u'back', u'of', u'an', u'acoustic', u'guitar', u',', u'marking', u'the', u'edge', u'joints', u'of', u'the', u'two', u'or', u'three', u'sections', u'of', u'the', u'back', u'.'], u'lemmas': [u'purfle', u'can', u'also', u'appear', u'on', u'the', u'back', u'of', u'a', u'acoustic', u'guitar', u',', u'mark', u'the', u'edge', u'joint', u'of', u'the', u'two', u'or', u'three', u'section', u'of', u'the', u'back', u'.'], u'pos': [u'VBG', u'MD', u'RB', u'VB', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u',', u'VBG', u'DT', u'NN', u'NNS', u'IN', u'DT', u'CD', u'CC', u'CD', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[38191, 38199], [38200, 38203], [38204, 38208], [38209, 38215], [38216, 38218], [38219, 38222], [38223, 38227], [38228, 38230], [38231, 38233], [38234, 38242], [38243, 38249], [38249, 38250], [38251, 38258], [38259, 38262], [38263, 38267], [38268, 38274], [38275, 38277], [38278, 38281], [38282, 38285], [38286, 38288], [38289, 38294], [38295, 38303], [38304, 38306], [38307, 38310], [38311, 38315], [38315, 38316]]}) 
answer: set([u'categori', u'broad', u'divid'])
candidate Sentence: (0.090025641024112701, {u'tokens': [u'They', u'can', u'also', u'be', u'a', u'solo', u'classical', u'instrument', u'.'], u'lemmas': [u'they', u'can', u'also', u'be', u'a', u'solo', u'classical', u'instrument', u'.'], u'pos': [u'PRP', u'MD', u'RB', u'VB', u'DT', u'NN', u'JJ', u'NN', u'.'], u'char_offsets': [[322, 326], [327, 330], [331, 335], [336, 338], [339, 340], [341, 345], [346, 355], [356, 366], [366, 367]]}) 
answer: set([u'categori', u'broad', u'two', u'divid'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Can guitars be divided into two broad categories?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Guitar
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a7.txt

No
_____________________________ test_yesno[param143] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cac7f80>, (<src.tfidf.TF_IDF object at 0x108044e10>, set(['guitar'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cac7f80>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.43902823328971863, {u'tokens': [u'The', u'guitar', u'player', u'-LRB-', u'c.', u'1672', u'-RRB-', u',', u'by', u'Johannes', u'Vermeer', u'Guitars', u'can', u'be', u'divided', u'into', u'two', u'broad', u'categories', u',', u'acoustic', u'and', u'electric', u':', u'An', u'acoustic', u'guitar', u'is', u'one', u'not', u'dependent', u'on', u'an', u'external', u'device', u'to', u'be', u'heard', u'but', u'uses', u'a', u'soundboard', u'which', u'is', u'a', u'wooden', u'piece', u'mounted', u'on', u'the', u'front', u'of', u'the', u'guitar', u"'s", u'body', u'.'], u'lemmas': [u'the', u'guitar', u'player', u'-lrb-', u'c.', u'1672', u'-rrb-', u',', u'by', u'Johannes', u'Vermeer', u'Guitars', u'can', u'be', u'divide', u'into', u'two', u'broad', u'category', u',', u'acoustic', u'and', u'electric', u':', u'a', u'acoustic', u'guitar', u'be', u'one', u'not', u'dependent', u'on', u'a', u'external', u'device', u'to', u'be', u'hear', u'but', u'use', u'a', u'soundboard', u'which', u'be', u'a', u'wooden', u'piece', u'mount', u'on', u'the', u'front', u'of', u'the', u'guitar', u"'s", u'body', u'.'], u'pos': [u'DT', u'NN', u'NN', u'-LRB-', u'NN', u'CD', u'-RRB-', u',', u'IN', u'NNP', u'NNP', u'NNP', u'MD', u'VB', u'VBN', u'IN', u'CD', u'JJ', u'NNS', u',', u'JJ', u'CC', u'JJ', u':', u'DT', u'JJ', u'NN', u'VBZ', u'CD', u'RB', u'JJ', u'IN', u'DT', u'JJ', u'NN', u'TO', u'VB', u'VBN', u'CC', u'VBZ', u'DT', u'NN', u'WDT', u'VBZ', u'DT', u'JJ', u'NN', u'VBD', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'POS', u'NN', u'.'], u'char_offsets': [[5422, 5425], [5426, 5432], [5433, 5439], [5440, 5441], [5441, 5443], [5444, 5448], [5448, 5449], [5449, 5450], [5451, 5453], [5454, 5462], [5463, 5470], [5471, 5478], [5479, 5482], [5483, 5485], [5486, 5493], [5494, 5498], [5499, 5502], [5503, 5508], [5509, 5519], [5519, 5520], [5521, 5529], [5530, 5533], [5534, 5542], [5542, 5543], [5544, 5546], [5547, 5555], [5556, 5562], [5563, 5565], [5566, 5569], [5570, 5573], [5574, 5583], [5584, 5586], [5587, 5589], [5590, 5598], [5599, 5605], [5606, 5608], [5609, 5611], [5612, 5617], [5618, 5621], [5622, 5626], [5627, 5628], [5629, 5639], [5640, 5645], [5646, 5648], [5649, 5650], [5651, 5657], [5658, 5663], [5664, 5671], [5672, 5674], [5675, 5678], [5679, 5684], [5685, 5687], [5688, 5691], [5692, 5698], [5698, 5700], [5701, 5705], [5705, 5706]]}) 
answer: set([])
candidate Sentence: (0.18585856258869171, {u'tokens': [u'The', u'twelfth', u'fret', u'divides', u'the', u'scale', u'length', u'in', u'two', u'exact', u'halves', u'and', u'the', u'24th', u'fret', u'position', u'divides', u'the', u'scale', u'length', u'in', u'half', u'yet', u'again', u'.'], u'lemmas': [u'the', u'twelfth', u'fret', u'divide', u'the', u'scale', u'length', u'in', u'two', u'exact', u'half', u'and', u'the', u'24th', u'fret', u'position', u'divide', u'the', u'scale', u'length', u'in', u'half', u'yet', u'again', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VBZ', u'DT', u'NN', u'NN', u'IN', u'CD', u'JJ', u'NNS', u'CC', u'DT', u'JJ', u'NN', u'NN', u'VBZ', u'DT', u'NN', u'NN', u'IN', u'NN', u'RB', u'RB', u'.'], u'char_offsets': [[21699, 21702], [21703, 21710], [21711, 21715], [21716, 21723], [21724, 21727], [21728, 21733], [21734, 21740], [21741, 21743], [21744, 21747], [21748, 21753], [21754, 21760], [21761, 21764], [21765, 21768], [21769, 21773], [21774, 21778], [21779, 21787], [21788, 21795], [21796, 21799], [21800, 21805], [21806, 21812], [21813, 21815], [21816, 21820], [21821, 21824], [21825, 21830], [21830, 21831]]}) 
answer: set([u'categori', u'broad'])
candidate Sentence: (0.1324327290058136, {u'tokens': [u'That', u'distance', u'is', u'subtracted', u'from', u'the', u'scale', u'length', u'and', u'the', u'result', u'is', u'divided', u'in', u'two', u'sections', u'by', u'the', u'constant', u'to', u'yield', u'the', u'distance', u'from', u'the', u'first', u'fret', u'to', u'the', u'second', u'fret', u'.'], u'lemmas': [u'that', u'distance', u'be', u'subtract', u'from', u'the', u'scale', u'length', u'and', u'the', u'result', u'be', u'divide', u'in', u'two', u'section', u'by', u'the', u'constant', u'to', u'yield', u'the', u'distance', u'from', u'the', u'first', u'fret', u'to', u'the', u'second', u'fret', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'NN', u'NN', u'CC', u'DT', u'NN', u'VBZ', u'VBN', u'IN', u'CD', u'NNS', u'IN', u'DT', u'JJ', u'TO', u'VB', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'TO', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[22086, 22090], [22091, 22099], [22100, 22102], [22103, 22113], [22114, 22118], [22119, 22122], [22123, 22128], [22129, 22135], [22136, 22139], [22140, 22143], [22144, 22150], [22151, 22153], [22154, 22161], [22162, 22164], [22165, 22168], [22169, 22177], [22178, 22180], [22181, 22184], [22185, 22193], [22194, 22196], [22197, 22202], [22203, 22206], [22207, 22215], [22216, 22220], [22221, 22224], [22225, 22230], [22231, 22235], [22236, 22238], [22239, 22242], [22243, 22249], [22250, 22254], [22254, 22255]]}) 
answer: set([u'categori', u'broad'])
candidate Sentence: (0.12797744572162628, {u'tokens': [u'The', u'scale', u'length', u'divided', u'by', u'this', u'value', u'yields', u'the', u'distance', u'from', u'the', u'nut', u'to', u'the', u'first', u'fret', u'.'], u'lemmas': [u'the', u'scale', u'length', u'divide', u'by', u'this', u'value', u'yield', u'the', u'distance', u'from', u'the', u'nut', u'to', u'the', u'first', u'fret', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBN', u'IN', u'DT', u'NN', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NN', u'TO', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[21995, 21998], [21999, 22004], [22005, 22011], [22012, 22019], [22020, 22022], [22023, 22027], [22028, 22033], [22034, 22040], [22041, 22044], [22045, 22053], [22054, 22058], [22059, 22062], [22063, 22066], [22067, 22069], [22070, 22073], [22074, 22079], [22080, 22084], [22084, 22085]]}) 
answer: set([u'categori', u'broad', u'two'])
candidate Sentence: (0.11718807369470596, {u'tokens': [u'The', u'ratio', u'of', u'the', u'spacing', u'of', u'two', u'consecutive', u'frets', u'is', u'the', u'twelfth', u'root', u'of', u'two', u'.'], u'lemmas': [u'the', u'ratio', u'of', u'the', u'spacing', u'of', u'two', u'consecutive', u'fret', u'be', u'the', u'twelfth', u'root', u'of', u'two', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'CD', u'JJ', u'VBZ', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'CD', u'.'], u'char_offsets': [[21621, 21624], [21625, 21630], [21631, 21633], [21634, 21637], [21638, 21645], [21646, 21648], [21649, 21652], [21653, 21664], [21665, 21670], [21671, 21673], [21674, 21677], [21678, 21685], [21686, 21690], [21691, 21693], [21694, 21697], [21697, 21698]]}) 
answer: set([u'categori', u'broad', u'divid'])
candidate Sentence: (0.097049862146377563, {u'tokens': [u'Alternate', u'tunings', u'are', u'used', u'for', u'two', u'main', u'reasons', u':', u'the', u'ease', u'of', u'playing', u'and', u'the', u'variation', u'in', u'tone', u'that', u'can', u'be', u'achieved', u'.'], u'lemmas': [u'alternate', u'tuning', u'be', u'use', u'for', u'two', u'main', u'reason', u':', u'the', u'ease', u'of', u'playing', u'and', u'the', u'variation', u'in', u'tone', u'that', u'can', u'be', u'achieve', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'VBN', u'IN', u'CD', u'JJ', u'NNS', u':', u'DT', u'NN', u'IN', u'NN', u'CC', u'DT', u'NN', u'IN', u'NN', u'WDT', u'MD', u'VB', u'VBN', u'.'], u'char_offsets': [[44291, 44300], [44301, 44308], [44309, 44312], [44313, 44317], [44318, 44321], [44322, 44325], [44326, 44330], [44331, 44338], [44338, 44339], [44340, 44343], [44344, 44348], [44349, 44351], [44352, 44359], [44360, 44363], [44364, 44367], [44368, 44377], [44378, 44380], [44381, 44385], [44386, 44390], [44391, 44394], [44395, 44397], [44398, 44406], [44406, 44407]]}) 
answer: set([u'categori', u'broad', u'divid'])
candidate Sentence: (0.095553860068321228, {u'tokens': [u'There', u'are', u'two', u'main', u'types', u'of', u'pickup', u',', u'single', u'and', u'double', u'coil', u'-LRB-', u'or', u'humbucker', u'-RRB-', u',', u'each', u'of', u'which', u'can', u'be', u'passive', u'or', u'active', u'.'], u'lemmas': [u'there', u'be', u'two', u'main', u'type', u'of', u'pickup', u',', u'single', u'and', u'double', u'coil', u'-lrb-', u'or', u'humbucker', u'-rrb-', u',', u'each', u'of', u'which', u'can', u'be', u'passive', u'or', u'active', u'.'], u'pos': [u'EX', u'VBP', u'CD', u'JJ', u'NNS', u'IN', u'NN', u',', u'JJ', u'CC', u'JJ', u'NN', u'-LRB-', u'CC', u'NN', u'-RRB-', u',', u'DT', u'IN', u'WDT', u'MD', u'VB', u'JJ', u'CC', u'JJ', u'.'], u'char_offsets': [[16080, 16085], [16086, 16089], [16090, 16093], [16094, 16098], [16099, 16104], [16105, 16107], [16108, 16114], [16114, 16115], [16116, 16122], [16123, 16126], [16127, 16133], [16134, 16138], [16139, 16140], [16140, 16142], [16143, 16152], [16152, 16153], [16153, 16154], [16155, 16159], [16160, 16162], [16163, 16168], [16169, 16172], [16173, 16175], [16176, 16183], [16184, 16186], [16187, 16193], [16193, 16194]]}) 
answer: set([u'categori', u'broad', u'divid'])
candidate Sentence: (0.094398520886898041, {u'tokens': [u'The', u'manufacturer', u"'s", u'logo', u'or', u'a', u'small', u'design', u'is', u'often', u'inlaid', u'into', u'the', u'headstock', u'.'], u'lemmas': [u'the', u'manufacturer', u"'s", u'logo', u'or', u'a', u'small', u'design', u'be', u'often', u'inlay', u'into', u'the', u'headstock', u'.'], u'pos': [u'DT', u'NN', u'POS', u'NN', u'CC', u'DT', u'JJ', u'NN', u'VBZ', u'RB', u'VBN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[25746, 25749], [25750, 25762], [25762, 25764], [25765, 25769], [25770, 25772], [25773, 25774], [25775, 25780], [25781, 25787], [25788, 25790], [25791, 25796], [25797, 25803], [25804, 25808], [25809, 25812], [25813, 25822], [25822, 25823]]}) 
answer: set([u'categori', u'broad', u'two', u'divid'])
candidate Sentence: (0.092643000185489655, {u'tokens': [u'Purfling', u'can', u'also', u'appear', u'on', u'the', u'back', u'of', u'an', u'acoustic', u'guitar', u',', u'marking', u'the', u'edge', u'joints', u'of', u'the', u'two', u'or', u'three', u'sections', u'of', u'the', u'back', u'.'], u'lemmas': [u'purfle', u'can', u'also', u'appear', u'on', u'the', u'back', u'of', u'a', u'acoustic', u'guitar', u',', u'mark', u'the', u'edge', u'joint', u'of', u'the', u'two', u'or', u'three', u'section', u'of', u'the', u'back', u'.'], u'pos': [u'VBG', u'MD', u'RB', u'VB', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u',', u'VBG', u'DT', u'NN', u'NNS', u'IN', u'DT', u'CD', u'CC', u'CD', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[38191, 38199], [38200, 38203], [38204, 38208], [38209, 38215], [38216, 38218], [38219, 38222], [38223, 38227], [38228, 38230], [38231, 38233], [38234, 38242], [38243, 38249], [38249, 38250], [38251, 38258], [38259, 38262], [38263, 38267], [38268, 38274], [38275, 38277], [38278, 38281], [38282, 38285], [38286, 38288], [38289, 38294], [38295, 38303], [38304, 38306], [38307, 38310], [38311, 38315], [38315, 38316]]}) 
answer: set([u'categori', u'broad', u'divid'])
candidate Sentence: (0.090025641024112701, {u'tokens': [u'They', u'can', u'also', u'be', u'a', u'solo', u'classical', u'instrument', u'.'], u'lemmas': [u'they', u'can', u'also', u'be', u'a', u'solo', u'classical', u'instrument', u'.'], u'pos': [u'PRP', u'MD', u'RB', u'VB', u'DT', u'NN', u'JJ', u'NN', u'.'], u'char_offsets': [[322, 326], [327, 330], [331, 335], [336, 338], [339, 340], [341, 345], [346, 355], [356, 366], [366, 367]]}) 
answer: set([u'categori', u'broad', u'two', u'divid'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Can guitars be divided into two broad categories?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Guitar
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a7.txt

No
_____________________________ test_yesno[param148] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb2c128>, (<src.tfidf.TF_IDF object at 0x109b86f50>, set(['becquerel', 'henri', 'henri_becquerel'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cb2c128>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.79266440868377686, {u'tokens': [u'In', u'1894', u',', u'he', u'became', u'chief', u'engineer', u'in', u'the', u'Department', u'of', u'Bridges', u'and', u'Highways', u'.'], u'lemmas': [u'in', u'1894', u',', u'he', u'become', u'chief', u'engineer', u'in', u'the', u'Department', u'of', u'Bridges', u'and', u'highway', u'.'], u'pos': [u'IN', u'CD', u',', u'PRP', u'VBD', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNPS', u'CC', u'NNS', u'.'], u'char_offsets': [[652, 654], [655, 659], [659, 660], [661, 663], [664, 670], [671, 676], [677, 685], [686, 688], [689, 692], [693, 703], [704, 706], [707, 714], [715, 718], [719, 727], [727, 728]]}) 
answer: set([u'1892'])
candidate Sentence: (0.19068320095539093, {u'tokens': [u'In', u'1892', u',', u'he', u'became', u'the', u'third', u'in', u'his', u'family', u'to', u'occupy', u'the', u'physics', u'chair', u'at', u'the', u'Musum', u'National', u"d'Histoire", u'Naturelle', u'.'], u'lemmas': [u'in', u'1892', u',', u'he', u'become', u'the', u'third', u'in', u'he', u'family', u'to', u'occupy', u'the', u'physics', u'chair', u'at', u'the', u'Musum', u'National', u"d'Histoire", u'Naturelle', u'.'], u'pos': [u'IN', u'CD', u',', u'PRP', u'VBD', u'DT', u'JJ', u'IN', u'PRP$', u'NN', u'TO', u'VB', u'DT', u'NN', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[537, 539], [540, 544], [544, 545], [546, 548], [549, 555], [556, 559], [560, 565], [566, 568], [569, 572], [573, 579], [580, 582], [583, 589], [590, 593], [594, 601], [602, 607], [608, 610], [611, 614], [615, 620], [621, 629], [630, 640], [641, 650], [650, 651]]}) 
answer: set([u'engin', u'chief', u'bridg', u'depart', u'highway'])
candidate Sentence: (0.1143018901348114, {u'tokens': [u'Describing', u'his', u'method', u'to', u'the', u'French', u'Academy', u'of', u'Sciences', u'on', u'24', u'January', u'1896', u',', u'he', u'said', u':', u'One', u'wraps', u'a', u'Lumire', u'photographic', u'plate', u'with', u'a', u'bromide', u'emulsion', u'in', u'two', u'sheets', u'of', u'very', u'thick', u'black', u'paper', u',', u'such', u'that', u'the', u'plate', u'does', u'not', u'become', u'clouded', u'upon', u'being', u'exposed', u'to', u'the', u'sun', u'for', u'a', u'day', u'.'], u'lemmas': [u'describe', u'he', u'method', u'to', u'the', u'french', u'academy', u'of', u'Sciences', u'on', u'24', u'January', u'1896', u',', u'he', u'say', u':', u'one', u'wrap', u'a', u'lumire', u'photographic', u'plate', u'with', u'a', u'bromide', u'emulsion', u'in', u'two', u'sheet', u'of', u'very', u'thick', u'black', u'paper', u',', u'such', u'that', u'the', u'plate', u'do', u'not', u'become', u'clouded', u'upon', u'be', u'expose', u'to', u'the', u'sun', u'for', u'a', u'day', u'.'], u'pos': [u'VBG', u'PRP$', u'NN', u'TO', u'DT', u'JJ', u'NN', u'IN', u'NNPS', u'IN', u'CD', u'NNP', u'CD', u',', u'PRP', u'VBD', u':', u'CD', u'VBZ', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'DT', u'NN', u'NN', u'IN', u'CD', u'NNS', u'IN', u'RB', u'JJ', u'JJ', u'NN', u',', u'JJ', u'IN', u'DT', u'NN', u'VBZ', u'RB', u'VB', u'JJ', u'IN', u'VBG', u'VBN', u'TO', u'DT', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[1309, 1319], [1320, 1323], [1324, 1330], [1331, 1333], [1334, 1337], [1338, 1344], [1345, 1352], [1353, 1355], [1356, 1364], [1365, 1367], [1368, 1370], [1371, 1378], [1379, 1383], [1383, 1384], [1385, 1387], [1388, 1392], [1392, 1393], [1395, 1398], [1399, 1404], [1405, 1406], [1407, 1413], [1414, 1426], [1427, 1432], [1433, 1437], [1438, 1439], [1440, 1447], [1448, 1456], [1457, 1459], [1460, 1463], [1464, 1470], [1471, 1473], [1474, 1478], [1479, 1484], [1485, 1490], [1491, 1496], [1496, 1497], [1498, 1502], [1503, 1507], [1508, 1511], [1512, 1517], [1518, 1522], [1523, 1526], [1527, 1533], [1534, 1541], [1542, 1546], [1547, 1552], [1553, 1560], [1561, 1563], [1564, 1567], [1568, 1571], [1572, 1575], [1576, 1577], [1578, 1581], [1581, 1582]]}) 
answer: set([u'engin', u'chief', u'bridg', u'1892', u'depart', u'highway'])
candidate Sentence: (0.048345927149057388, {u'tokens': [u'In', u'1903', u',', u'he', u'shared', u'the', u'Nobel', u'Prize', u'in', u'Physics', u'with', u'Pierre', u'and', u'Marie', u'Curie', u'``', u'in', u'recognition', u'of', u'the', u'extraordinary', u'services', u'he', u'has', u'rendered', u'by', u'his', u'discovery', u'of', u'spontaneous', u'radioactivity', u"''", u'.'], u'lemmas': [u'in', u'1903', u',', u'he', u'share', u'the', u'Nobel', u'Prize', u'in', u'physics', u'with', u'Pierre', u'and', u'Marie', u'Curie', u'``', u'in', u'recognition', u'of', u'the', u'extraordinary', u'service', u'he', u'have', u'render', u'by', u'he', u'discovery', u'of', u'spontaneous', u'radioactivity', u"''", u'.'], u'pos': [u'IN', u'CD', u',', u'PRP', u'VBD', u'DT', u'NNP', u'NNP', u'IN', u'NN', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u'``', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'PRP', u'VBZ', u'VBN', u'IN', u'PRP$', u'NN', u'IN', u'JJ', u'NN', u"''", u'.'], u'char_offsets': [[2323, 2325], [2326, 2330], [2330, 2331], [2332, 2334], [2335, 2341], [2342, 2345], [2346, 2351], [2352, 2357], [2358, 2360], [2361, 2368], [2369, 2373], [2374, 2380], [2381, 2384], [2385, 2390], [2391, 2396], [2397, 2398], [2398, 2400], [2401, 2412], [2413, 2415], [2416, 2419], [2420, 2433], [2434, 2442], [2443, 2445], [2446, 2449], [2450, 2458], [2459, 2461], [2462, 2465], [2466, 2475], [2476, 2478], [2479, 2490], [2491, 2504], [2504, 2505], [2505, 2506]]}) 
answer: set([u'engin', u'chief', u'bridg', u'highway', u'depart', u'becom', u'1892'])
candidate Sentence: (0.023881666362285614, {u'tokens': [u'He', u'died', u'at', u'the', u'age', u'of', u'55', u'in', u'Le', u'Croisic', u'.'], u'lemmas': [u'he', u'die', u'at', u'the', u'age', u'of', u'55', u'in', u'Le', u'Croisic', u'.'], u'pos': [u'PRP', u'VBD', u'IN', u'DT', u'NN', u'IN', u'CD', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[2820, 2822], [2823, 2827], [2828, 2830], [2831, 2834], [2835, 2838], [2839, 2841], [2842, 2844], [2845, 2847], [2848, 2850], [2851, 2858], [2858, 2859]]}) 
answer: set([u'engin', u'chief', u'bridg', u'highway', u'depart', u'becom', u'1892'])
candidate Sentence: (0.022806655615568161, {u'tokens': [u'In', u'1908', u',', u'the', u'year', u'of', u'his', u'death', u',', u'Becquerel', u'was', u'elected', u'Permanent', u'Secretary', u'of', u'the', u'Acadmie', u'des', u'Sciences', u'.'], u'lemmas': [u'in', u'1908', u',', u'the', u'year', u'of', u'he', u'death', u',', u'Becquerel', u'be', u'elect', u'Permanent', u'Secretary', u'of', u'the', u'Acadmie', u'des', u'Sciences', u'.'], u'pos': [u'IN', u'CD', u',', u'DT', u'NN', u'IN', u'PRP$', u'NN', u',', u'NNP', u'VBD', u'VBN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNPS', u'.'], u'char_offsets': [[2717, 2719], [2720, 2724], [2724, 2725], [2726, 2729], [2730, 2734], [2735, 2737], [2738, 2741], [2742, 2747], [2747, 2748], [2749, 2758], [2759, 2762], [2763, 2770], [2771, 2780], [2781, 2790], [2791, 2793], [2794, 2797], [2798, 2805], [2806, 2809], [2810, 2818], [2818, 2819]]}) 
answer: set([u'engin', u'chief', u'bridg', u'highway', u'depart', u'becom', u'1892'])
candidate Sentence: (0.020713824778795242, {u'tokens': [u'In', u'1890', u'he', u'married', u'Louise', u'Dsire', u'Lorieux', u'.'], u'lemmas': [u'in', u'1890', u'he', u'marry', u'Louise', u'Dsire', u'Lorieux', u'.'], u'pos': [u'IN', u'CD', u'PRP', u'VBD', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[496, 498], [499, 503], [504, 506], [507, 514], [515, 521], [522, 527], [528, 535], [535, 536]]}) 
answer: set([u'engin', u'chief', u'bridg', u'highway', u'depart', u'becom', u'1892'])
candidate Sentence: (0.020383454859256744, {u'tokens': [u'He', u'also', u'received', u'the', u'following', u'awards', u'besides', u'the', u'Nobel', u'Prize', u'for', u'Physics', u'-LRB-', u'1903', u'-RRB-', u':', u'*', u'Antoine', u'Csar', u'Becquerel', u'-LRB-', u'his', u'grandfather', u'-RRB-', u'*', u'A.', u'E.', u'Becquerel', u'-LRB-', u'his', u'father', u'-RRB-', u'*', u'Jean', u'Becquerel', u'-LRB-', u'his', u'son', u'-RRB-', u'*', u'Henri', u'Becquerel', u'-', u'Biography', u'*', u'Becquerel', u'short', u'biography', u'and', u'the', u'use', u'of', u'his', u'name', u'as', u'a', u'unit', u'of', u'measure', u'in', u'the', u'SI', u'*', u'Annotated', u'bibliography', u'for', u'Henri', u'Becquerel', u'from', u'the', u'Alsos', u'Digital', u'Library', u'for', u'Nuclear', u'Issues'], u'lemmas': [u'he', u'also', u'receive', u'the', u'follow', u'award', u'besides', u'the', u'Nobel', u'Prize', u'for', u'physics', u'-lrb-', u'1903', u'-rrb-', u':', u'*', u'Antoine', u'Csar', u'Becquerel', u'-lrb-', u'he', u'grandfather', u'-rrb-', u'*', u'a.', u'E.', u'Becquerel', u'-lrb-', u'he', u'father', u'-rrb-', u'*', u'Jean', u'Becquerel', u'-lrb-', u'he', u'son', u'-rrb-', u'*', u'Henri', u'Becquerel', u'-', u'biography', u'*', u'Becquerel', u'short', u'biography', u'and', u'the', u'use', u'of', u'he', u'name', u'as', u'a', u'unit', u'of', u'measure', u'in', u'the', u'SI', u'*', u'annotated', u'bibliography', u'for', u'Henri', u'Becquerel', u'from', u'the', u'Alsos', u'Digital', u'Library', u'for', u'Nuclear', u'issue'], u'pos': [u'PRP', u'RB', u'VBD', u'DT', u'VBG', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NN', u'-LRB-', u'CD', u'-RRB-', u':', u'SYM', u'NNP', u'NNP', u'NNP', u'-LRB-', u'PRP$', u'NN', u'-RRB-', u'SYM', u'NN', u'NNP', u'NNP', u'-LRB-', u'PRP$', u'NN', u'-RRB-', u'SYM', u'NNP', u'NNP', u'-LRB-', u'PRP$', u'NN', u'-RRB-', u'SYM', u'NNP', u'NNP', u':', u'NN', u'SYM', u'NNP', u'JJ', u'NN', u'CC', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'IN', u'DT', u'NN', u'IN', u'NN', u'IN', u'DT', u'NNP', u'SYM', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNS'], u'char_offsets': [[3022, 3024], [3025, 3029], [3030, 3038], [3039, 3042], [3043, 3052], [3053, 3059], [3060, 3067], [3068, 3071], [3072, 3077], [3078, 3083], [3084, 3087], [3088, 3095], [3096, 3097], [3097, 3101], [3101, 3102], [3102, 3103], [3104, 3105], [3106, 3113], [3114, 3118], [3119, 3128], [3129, 3130], [3130, 3133], [3134, 3145], [3145, 3146], [3147, 3148], [3149, 3151], [3152, 3154], [3155, 3164], [3165, 3166], [3166, 3169], [3170, 3176], [3176, 3177], [3178, 3179], [3180, 3184], [3185, 3194], [3195, 3196], [3196, 3199], [3200, 3203], [3203, 3204], [3205, 3206], [3208, 3213], [3214, 3223], [3224, 3225], [3226, 3235], [3236, 3237], [3239, 3248], [3249, 3254], [3255, 3264], [3265, 3268], [3269, 3272], [3273, 3276], [3277, 3279], [3280, 3283], [3284, 3288], [3289, 3291], [3292, 3293], [3294, 3298], [3299, 3301], [3302, 3309], [3310, 3312], [3313, 3316], [3317, 3319], [3320, 3321], [3323, 3332], [3333, 3345], [3346, 3349], [3350, 3355], [3356, 3365], [3366, 3370], [3371, 3374], [3375, 3380], [3381, 3388], [3389, 3396], [3397, 3400], [3401, 3408], [3409, 3415]]}) 
answer: set([u'engin', u'chief', u'bridg', u'highway', u'depart', u'becom', u'1892'])
candidate Sentence: (0.019706860184669495, {u'tokens': [u'Antoine', u'Henri', u'Becquerel', u'-LRB-', u'15', u'December', u'1852', u'25', u'August', u'1908', u'-RRB-', u'was', u'a', u'French', u'physicist', u',', u'Nobel', u'laureate', u',', u'and', u'the', u'discoverer', u'of', u'radioactivity', u',', u'for', u'which', u'he', u'won', u'the', u'1903', u'Nobel', u'Prize', u'in', u'Physics', u'-LRB-', u'along', u'with', u'Marie', u'Curie', u'and', u'Pierre', u'Curie', u'who', u'had', u'found', u'additional', u'radioactive', u'elements', u'-RRB-', u'.'], u'lemmas': [u'Antoine', u'Henri', u'Becquerel', u'-lrb-', u'15', u'December', u'1852', u'25', u'August', u'1908', u'-rrb-', u'be', u'a', u'french', u'physicist', u',', u'Nobel', u'laureate', u',', u'and', u'the', u'discoverer', u'of', u'radioactivity', u',', u'for', u'which', u'he', u'win', u'the', u'1903', u'Nobel', u'Prize', u'in', u'physics', u'-lrb-', u'along', u'with', u'Marie', u'Curie', u'and', u'Pierre', u'Curie', u'who', u'have', u'find', u'additional', u'radioactive', u'element', u'-rrb-', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'-LRB-', u'CD', u'NNP', u'CD', u'CD', u'NNP', u'CD', u'-RRB-', u'VBD', u'DT', u'JJ', u'NN', u',', u'NNP', u'NN', u',', u'CC', u'DT', u'NN', u'IN', u'NN', u',', u'IN', u'WDT', u'PRP', u'VBD', u'DT', u'CD', u'NNP', u'NNP', u'IN', u'NN', u'-LRB-', u'IN', u'IN', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'WP', u'VBD', u'VBN', u'JJ', u'JJ', u'NNS', u'-RRB-', u'.'], u'char_offsets': [[0, 7], [8, 13], [14, 23], [24, 25], [25, 27], [28, 36], [37, 41], [44, 46], [47, 53], [54, 58], [58, 59], [60, 63], [64, 65], [66, 72], [73, 82], [82, 83], [84, 89], [90, 98], [98, 99], [100, 103], [104, 107], [108, 118], [119, 121], [122, 135], [135, 136], [137, 140], [141, 146], [147, 149], [150, 153], [154, 157], [158, 162], [163, 168], [169, 174], [175, 177], [178, 185], [186, 187], [187, 192], [193, 197], [198, 203], [204, 209], [210, 213], [214, 220], [221, 226], [227, 230], [231, 234], [235, 240], [241, 251], [252, 263], [264, 272], [272, 273], [273, 274]]}) 
answer: set([u'engin', u'chief', u'bridg', u'highway', u'depart', u'becom', u'1892'])
candidate Sentence: (0.019545117393136024, {u'tokens': [u'Investigating', u'the', u'work', u'of', u'Wilhelm', u'Conrad', u'Rntgen', u',', u'Becquerel', u'wrapped', u'a', u'fluorescent', u'substance', u',', u'potassium', u'uranyl', u'sulfate', u',', u'in', u'photographic', u'plates', u'and', u'black', u'material', u'in', u'preparation', u'for', u'an', u'experiment', u'requiring', u'bright', u'sunlight', u'.'], u'lemmas': [u'investigate', u'the', u'work', u'of', u'Wilhelm', u'Conrad', u'Rntgen', u',', u'Becquerel', u'wrap', u'a', u'fluorescent', u'substance', u',', u'potassium', u'uranyl', u'sulfate', u',', u'in', u'photographic', u'plate', u'and', u'black', u'material', u'in', u'preparation', u'for', u'a', u'experiment', u'require', u'bright', u'sunlight', u'.'], u'pos': [u'VBG', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'VBD', u'DT', u'JJ', u'NN', u',', u'NN', u'NN', u'NN', u',', u'IN', u'JJ', u'NNS', u'CC', u'JJ', u'NN', u'IN', u'NN', u'IN', u'DT', u'NN', u'VBG', u'JJ', u'NN', u'.'], u'char_offsets': [[841, 854], [855, 858], [859, 863], [864, 866], [867, 874], [875, 881], [882, 888], [888, 889], [890, 899], [900, 907], [908, 909], [910, 921], [922, 931], [931, 932], [933, 942], [943, 949], [950, 957], [957, 958], [959, 961], [962, 974], [975, 981], [982, 985], [986, 991], [992, 1000], [1001, 1003], [1004, 1015], [1016, 1019], [1020, 1022], [1023, 1033], [1034, 1043], [1044, 1050], [1051, 1059], [1059, 1060]]}) 
answer: set([u'engin', u'chief', u'bridg', u'highway', u'depart', u'becom', u'1892'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Did he become chief engineer in the Department of Bridges and Highways in 1892?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Henri_Becquerel
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set4/a9.txt

No
_____________________________ test_yesno[param159] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb2c440>, (<src.tfidf.TF_IDF object at 0x109b86190>, set(['isaac', 'isaac_newton', 'newton'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cb2c440>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.32077088952064514, {u'tokens': [u'NY', u':', u'Thomas', u'Y.', u'Crowell', u'&', u'Co.', u',', u'1889', u'-RRB-', u'From', u'the', u'age', u'of', u'about', u'twelve', u'until', u'he', u'was', u'seventeen', u',', u'Newton', u'was', u'educated', u'at', u'The', u'King', u"'s", u'School', u',', u'Grantham', u'-LRB-', u'where', u'his', u'signature', u'can', u'still', u'be', u'seen', u'upon', u'a', u'library', u'window', u'sill', u'-RRB-', u'.'], u'lemmas': [u'NY', u':', u'Thomas', u'Y.', u'Crowell', u'&', u'Co.', u',', u'1889', u'-rrb-', u'from', u'the', u'age', u'of', u'about', u'twelve', u'until', u'he', u'be', u'seventeen', u',', u'Newton', u'be', u'educate', u'at', u'the', u'King', u"'s", u'School', u',', u'Grantham', u'-lrb-', u'where', u'he', u'signature', u'can', u'still', u'be', u'see', u'upon', u'a', u'library', u'window', u'sill', u'-rrb-', u'.'], u'pos': [u'NNP', u':', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u',', u'CD', u'-RRB-', u'IN', u'DT', u'NN', u'IN', u'IN', u'CD', u'IN', u'PRP', u'VBD', u'CD', u',', u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'NNP', u'POS', u'NNP', u',', u'NNP', u'-LRB-', u'WRB', u'PRP$', u'NN', u'MD', u'RB', u'VB', u'VBN', u'IN', u'DT', u'NN', u'NN', u'NN', u'-RRB-', u'.'], u'char_offsets': [[3292, 3294], [3294, 3295], [3296, 3302], [3303, 3305], [3306, 3313], [3314, 3315], [3316, 3319], [3319, 3320], [3321, 3325], [3325, 3326], [3327, 3331], [3332, 3335], [3336, 3339], [3340, 3342], [3343, 3348], [3349, 3355], [3356, 3361], [3362, 3364], [3365, 3368], [3369, 3378], [3378, 3379], [3380, 3386], [3387, 3390], [3391, 3399], [3400, 3402], [3403, 3406], [3407, 3411], [3411, 3413], [3414, 3420], [3420, 3421], [3422, 3430], [3431, 3432], [3432, 3437], [3438, 3441], [3442, 3451], [3452, 3455], [3456, 3461], [3462, 3464], [3465, 3469], [3470, 3474], [3475, 3476], [3477, 3484], [3485, 3491], [3492, 3496], [3496, 3497], [3497, 3498]]}) 
answer: set([u'schol'])
candidate Sentence: (0.25496959686279297, {u'tokens': [u'The', u'King', u"'s", u'School', u',', u'Grantham', u',', u'claims', u'that', u'the', u'tree', u'was', u'purchased', u'by', u'the', u'school', u',', u'uprooted', u'and', u'transported', u'to', u'the', u'headmaster', u"'s", u'garden', u'some', u'years', u'later', u'.'], u'lemmas': [u'the', u'King', u"'s", u'School', u',', u'Grantham', u',', u'claim', u'that', u'the', u'tree', u'be', u'purchase', u'by', u'the', u'school', u',', u'uproot', u'and', u'transport', u'to', u'the', u'headmaster', u"'s", u'garden', u'some', u'year', u'later', u'.'], u'pos': [u'DT', u'NNP', u'POS', u'NNP', u',', u'NNP', u',', u'VBZ', u'IN', u'DT', u'NN', u'VBD', u'VBN', u'IN', u'DT', u'NN', u',', u'VBN', u'CC', u'VBN', u'TO', u'DT', u'NN', u'POS', u'NN', u'DT', u'NNS', u'RB', u'.'], u'char_offsets': [[44695, 44698], [44699, 44703], [44703, 44705], [44706, 44712], [44712, 44713], [44714, 44722], [44722, 44723], [44724, 44730], [44731, 44735], [44736, 44739], [44740, 44744], [44745, 44748], [44749, 44758], [44759, 44761], [44762, 44765], [44766, 44772], [44772, 44773], [44774, 44782], [44783, 44786], [44787, 44798], [44799, 44801], [44802, 44805], [44806, 44816], [44816, 44818], [44819, 44825], [44826, 44830], [44831, 44836], [44837, 44842], [44842, 44843]]}) 
answer: set([u'educ', u'schol'])
candidate Sentence: (0.22600708901882172, {u'tokens': [u'in', u'JSTOR', u'*', u'Pfizenmaier', u',', u'Thomas', u'C.', u'``', u'Was', u'Isaac', u'Newton', u'an', u'Arian', u'?'], u'lemmas': [u'in', u'JSTOR', u'*', u'Pfizenmaier', u',', u'Thomas', u'C.', u'``', u'be', u'Isaac', u'Newton', u'a', u'Arian', u'?'], u'pos': [u'IN', u'NNP', u'SYM', u'NNP', u',', u'NNP', u'NNP', u'``', u'VBD', u'NNP', u'NNP', u'DT', u'NNP', u'.'], u'char_offsets': [[48562, 48564], [48565, 48570], [48571, 48572], [48573, 48584], [48584, 48585], [48586, 48592], [48593, 48595], [48596, 48597], [48597, 48600], [48601, 48606], [48607, 48613], [48614, 48616], [48617, 48622], [48622, 48623]]}) 
answer: set([u'king', u'educ', u'grantham', u'schol'])
candidate Sentence: (0.15298661589622498, {u'tokens': [u'Westfall', u'2007', u',', u'p.', u'73', u'One', u'of', u'Newton', u"'s", u'cases', u'as', u'the', u'King', u"'s", u'attorney', u'was', u'against', u'William', u'Chaloner', u'.'], u'lemmas': [u'Westfall', u'2007', u',', u'p.', u'73', u'one', u'of', u'Newton', u"'s", u'case', u'as', u'the', u'King', u"'s", u'attorney', u'be', u'against', u'William', u'Chaloner', u'.'], u'pos': [u'NNP', u'CD', u',', u'NN', u'CD', u'CD', u'IN', u'NNP', u'POS', u'NNS', u'IN', u'DT', u'NNP', u'POS', u'NN', u'VBD', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[38561, 38569], [38570, 38574], [38574, 38575], [38576, 38578], [38578, 38580], [38581, 38584], [38585, 38587], [38588, 38594], [38594, 38596], [38597, 38602], [38603, 38605], [38606, 38609], [38610, 38614], [38614, 38616], [38617, 38625], [38626, 38629], [38630, 38637], [38638, 38645], [38646, 38654], [38654, 38655]]}) 
answer: set([u'educ', u'grantham', u'schol'])
candidate Sentence: (0.14743557572364807, {u'tokens': [u'*', u'Newton', u',', u'Isaac', u'.'], u'lemmas': [u'*', u'Newton', u',', u'Isaac', u'.'], u'pos': [u'SYM', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[49304, 49305], [49306, 49312], [49312, 49313], [49314, 49319], [49319, 49320]]}) 
answer: set([u'king', u'educ', u'grantham', u'schol'])
candidate Sentence: (0.11858338117599487, {u'tokens': [u'Westfall', u'1994', u',', u'pp', u'16-19', u'Henry', u'Stokes', u',', u'master', u'at', u'the', u'King', u"'s", u'School', u',', u'persuaded', u'his', u'mother', u'to', u'send', u'him', u'back', u'to', u'school', u'so', u'that', u'he', u'might', u'complete', u'his', u'education', u'.'], u'lemmas': [u'Westfall', u'1994', u',', u'pp', u'16-19', u'Henry', u'Stokes', u',', u'master', u'at', u'the', u'King', u"'s", u'School', u',', u'persuade', u'he', u'mother', u'to', u'send', u'he', u'back', u'to', u'school', u'so', u'that', u'he', u'might', u'complete', u'he', u'education', u'.'], u'pos': [u'NNP', u'CD', u',', u'NN', u'CD', u'NNP', u'NNP', u',', u'NN', u'IN', u'DT', u'NNP', u'POS', u'NNP', u',', u'VBD', u'PRP$', u'NN', u'TO', u'VB', u'PRP', u'RB', u'TO', u'NN', u'IN', u'IN', u'PRP', u'MD', u'VB', u'PRP$', u'NN', u'.'], u'char_offsets': [[3704, 3712], [3713, 3717], [3717, 3718], [3719, 3721], [3722, 3727], [3729, 3734], [3735, 3741], [3741, 3742], [3743, 3749], [3750, 3752], [3753, 3756], [3757, 3761], [3761, 3763], [3764, 3770], [3770, 3771], [3772, 3781], [3782, 3785], [3786, 3792], [3793, 3795], [3796, 3800], [3801, 3804], [3805, 3809], [3810, 3812], [3813, 3819], [3820, 3822], [3823, 3827], [3828, 3830], [3831, 3836], [3837, 3845], [3846, 3849], [3850, 3859], [3859, 3860]]}) 
answer: set([u'grantham', u'schol'])
candidate Sentence: (0.11791456490755081, {u'tokens': [u'Isaac', u'Newton', u"'s", u'Natural', u'Philosophy', u'.'], u'lemmas': [u'Isaac', u'Newton', u"'s", u'natural', u'philosophy', u'.'], u'pos': [u'NNP', u'NNP', u'POS', u'JJ', u'NN', u'.'], u'char_offsets': [[46560, 46565], [46566, 46572], [46572, 46574], [46575, 46582], [46583, 46593], [46593, 46594]]}) 
answer: set([u'king', u'educ', u'grantham', u'schol'])
candidate Sentence: (0.099880605936050415, {u'tokens': [u'**', u'Newton', u',', u'Isaac', u'.'], u'lemmas': [u'**', u'Newton', u',', u'Isaac', u'.'], u'pos': [u'SYM', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[49431, 49433], [49434, 49440], [49440, 49441], [49442, 49447], [49447, 49448]]}) 
answer: set([u'king', u'educ', u'grantham', u'schol'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Was Isaac Newton educated at The King's Schol, Grantham?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Isaac_Newton
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set4/a1.txt

No
_____________________________ test_yesno[param160] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb2c488>, (<src.tfidf.TF_IDF object at 0x109b86190>, set(['isaac', 'isaac_newton', 'newton'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cb2c488>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.32077088952064514, {u'tokens': [u'NY', u':', u'Thomas', u'Y.', u'Crowell', u'&', u'Co.', u',', u'1889', u'-RRB-', u'From', u'the', u'age', u'of', u'about', u'twelve', u'until', u'he', u'was', u'seventeen', u',', u'Newton', u'was', u'educated', u'at', u'The', u'King', u"'s", u'School', u',', u'Grantham', u'-LRB-', u'where', u'his', u'signature', u'can', u'still', u'be', u'seen', u'upon', u'a', u'library', u'window', u'sill', u'-RRB-', u'.'], u'lemmas': [u'NY', u':', u'Thomas', u'Y.', u'Crowell', u'&', u'Co.', u',', u'1889', u'-rrb-', u'from', u'the', u'age', u'of', u'about', u'twelve', u'until', u'he', u'be', u'seventeen', u',', u'Newton', u'be', u'educate', u'at', u'the', u'King', u"'s", u'School', u',', u'Grantham', u'-lrb-', u'where', u'he', u'signature', u'can', u'still', u'be', u'see', u'upon', u'a', u'library', u'window', u'sill', u'-rrb-', u'.'], u'pos': [u'NNP', u':', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u',', u'CD', u'-RRB-', u'IN', u'DT', u'NN', u'IN', u'IN', u'CD', u'IN', u'PRP', u'VBD', u'CD', u',', u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'NNP', u'POS', u'NNP', u',', u'NNP', u'-LRB-', u'WRB', u'PRP$', u'NN', u'MD', u'RB', u'VB', u'VBN', u'IN', u'DT', u'NN', u'NN', u'NN', u'-RRB-', u'.'], u'char_offsets': [[3292, 3294], [3294, 3295], [3296, 3302], [3303, 3305], [3306, 3313], [3314, 3315], [3316, 3319], [3319, 3320], [3321, 3325], [3325, 3326], [3327, 3331], [3332, 3335], [3336, 3339], [3340, 3342], [3343, 3348], [3349, 3355], [3356, 3361], [3362, 3364], [3365, 3368], [3369, 3378], [3378, 3379], [3380, 3386], [3387, 3390], [3391, 3399], [3400, 3402], [3403, 3406], [3407, 3411], [3411, 3413], [3414, 3420], [3420, 3421], [3422, 3430], [3431, 3432], [3432, 3437], [3438, 3441], [3442, 3451], [3452, 3455], [3456, 3461], [3462, 3464], [3465, 3469], [3470, 3474], [3475, 3476], [3477, 3484], [3485, 3491], [3492, 3496], [3496, 3497], [3497, 3498]]}) 
answer: set([u'schol'])
candidate Sentence: (0.25496959686279297, {u'tokens': [u'The', u'King', u"'s", u'School', u',', u'Grantham', u',', u'claims', u'that', u'the', u'tree', u'was', u'purchased', u'by', u'the', u'school', u',', u'uprooted', u'and', u'transported', u'to', u'the', u'headmaster', u"'s", u'garden', u'some', u'years', u'later', u'.'], u'lemmas': [u'the', u'King', u"'s", u'School', u',', u'Grantham', u',', u'claim', u'that', u'the', u'tree', u'be', u'purchase', u'by', u'the', u'school', u',', u'uproot', u'and', u'transport', u'to', u'the', u'headmaster', u"'s", u'garden', u'some', u'year', u'later', u'.'], u'pos': [u'DT', u'NNP', u'POS', u'NNP', u',', u'NNP', u',', u'VBZ', u'IN', u'DT', u'NN', u'VBD', u'VBN', u'IN', u'DT', u'NN', u',', u'VBN', u'CC', u'VBN', u'TO', u'DT', u'NN', u'POS', u'NN', u'DT', u'NNS', u'RB', u'.'], u'char_offsets': [[44695, 44698], [44699, 44703], [44703, 44705], [44706, 44712], [44712, 44713], [44714, 44722], [44722, 44723], [44724, 44730], [44731, 44735], [44736, 44739], [44740, 44744], [44745, 44748], [44749, 44758], [44759, 44761], [44762, 44765], [44766, 44772], [44772, 44773], [44774, 44782], [44783, 44786], [44787, 44798], [44799, 44801], [44802, 44805], [44806, 44816], [44816, 44818], [44819, 44825], [44826, 44830], [44831, 44836], [44837, 44842], [44842, 44843]]}) 
answer: set([u'educ', u'schol'])
candidate Sentence: (0.22600708901882172, {u'tokens': [u'in', u'JSTOR', u'*', u'Pfizenmaier', u',', u'Thomas', u'C.', u'``', u'Was', u'Isaac', u'Newton', u'an', u'Arian', u'?'], u'lemmas': [u'in', u'JSTOR', u'*', u'Pfizenmaier', u',', u'Thomas', u'C.', u'``', u'be', u'Isaac', u'Newton', u'a', u'Arian', u'?'], u'pos': [u'IN', u'NNP', u'SYM', u'NNP', u',', u'NNP', u'NNP', u'``', u'VBD', u'NNP', u'NNP', u'DT', u'NNP', u'.'], u'char_offsets': [[48562, 48564], [48565, 48570], [48571, 48572], [48573, 48584], [48584, 48585], [48586, 48592], [48593, 48595], [48596, 48597], [48597, 48600], [48601, 48606], [48607, 48613], [48614, 48616], [48617, 48622], [48622, 48623]]}) 
answer: set([u'king', u'educ', u'grantham', u'schol'])
candidate Sentence: (0.15298661589622498, {u'tokens': [u'Westfall', u'2007', u',', u'p.', u'73', u'One', u'of', u'Newton', u"'s", u'cases', u'as', u'the', u'King', u"'s", u'attorney', u'was', u'against', u'William', u'Chaloner', u'.'], u'lemmas': [u'Westfall', u'2007', u',', u'p.', u'73', u'one', u'of', u'Newton', u"'s", u'case', u'as', u'the', u'King', u"'s", u'attorney', u'be', u'against', u'William', u'Chaloner', u'.'], u'pos': [u'NNP', u'CD', u',', u'NN', u'CD', u'CD', u'IN', u'NNP', u'POS', u'NNS', u'IN', u'DT', u'NNP', u'POS', u'NN', u'VBD', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[38561, 38569], [38570, 38574], [38574, 38575], [38576, 38578], [38578, 38580], [38581, 38584], [38585, 38587], [38588, 38594], [38594, 38596], [38597, 38602], [38603, 38605], [38606, 38609], [38610, 38614], [38614, 38616], [38617, 38625], [38626, 38629], [38630, 38637], [38638, 38645], [38646, 38654], [38654, 38655]]}) 
answer: set([u'educ', u'grantham', u'schol'])
candidate Sentence: (0.14743557572364807, {u'tokens': [u'*', u'Newton', u',', u'Isaac', u'.'], u'lemmas': [u'*', u'Newton', u',', u'Isaac', u'.'], u'pos': [u'SYM', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[49304, 49305], [49306, 49312], [49312, 49313], [49314, 49319], [49319, 49320]]}) 
answer: set([u'king', u'educ', u'grantham', u'schol'])
candidate Sentence: (0.11858338117599487, {u'tokens': [u'Westfall', u'1994', u',', u'pp', u'16-19', u'Henry', u'Stokes', u',', u'master', u'at', u'the', u'King', u"'s", u'School', u',', u'persuaded', u'his', u'mother', u'to', u'send', u'him', u'back', u'to', u'school', u'so', u'that', u'he', u'might', u'complete', u'his', u'education', u'.'], u'lemmas': [u'Westfall', u'1994', u',', u'pp', u'16-19', u'Henry', u'Stokes', u',', u'master', u'at', u'the', u'King', u"'s", u'School', u',', u'persuade', u'he', u'mother', u'to', u'send', u'he', u'back', u'to', u'school', u'so', u'that', u'he', u'might', u'complete', u'he', u'education', u'.'], u'pos': [u'NNP', u'CD', u',', u'NN', u'CD', u'NNP', u'NNP', u',', u'NN', u'IN', u'DT', u'NNP', u'POS', u'NNP', u',', u'VBD', u'PRP$', u'NN', u'TO', u'VB', u'PRP', u'RB', u'TO', u'NN', u'IN', u'IN', u'PRP', u'MD', u'VB', u'PRP$', u'NN', u'.'], u'char_offsets': [[3704, 3712], [3713, 3717], [3717, 3718], [3719, 3721], [3722, 3727], [3729, 3734], [3735, 3741], [3741, 3742], [3743, 3749], [3750, 3752], [3753, 3756], [3757, 3761], [3761, 3763], [3764, 3770], [3770, 3771], [3772, 3781], [3782, 3785], [3786, 3792], [3793, 3795], [3796, 3800], [3801, 3804], [3805, 3809], [3810, 3812], [3813, 3819], [3820, 3822], [3823, 3827], [3828, 3830], [3831, 3836], [3837, 3845], [3846, 3849], [3850, 3859], [3859, 3860]]}) 
answer: set([u'grantham', u'schol'])
candidate Sentence: (0.11791456490755081, {u'tokens': [u'Isaac', u'Newton', u"'s", u'Natural', u'Philosophy', u'.'], u'lemmas': [u'Isaac', u'Newton', u"'s", u'natural', u'philosophy', u'.'], u'pos': [u'NNP', u'NNP', u'POS', u'JJ', u'NN', u'.'], u'char_offsets': [[46560, 46565], [46566, 46572], [46572, 46574], [46575, 46582], [46583, 46593], [46593, 46594]]}) 
answer: set([u'king', u'educ', u'grantham', u'schol'])
candidate Sentence: (0.099880605936050415, {u'tokens': [u'**', u'Newton', u',', u'Isaac', u'.'], u'lemmas': [u'**', u'Newton', u',', u'Isaac', u'.'], u'pos': [u'SYM', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[49431, 49433], [49434, 49440], [49440, 49441], [49442, 49447], [49447, 49448]]}) 
answer: set([u'king', u'educ', u'grantham', u'schol'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Was Isaac Newton educated at The King's Schol, Grantham?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Isaac_Newton
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set4/a1.txt

No
_____________________________ test_yesno[param165] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb2c5f0>, (<src.tfidf.TF_IDF object at 0x105d7eb90>, set(['jakarta'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cb2c5f0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.46456235647201538, {u'tokens': [u'The', u'metropolitan', u'area', u',', u'Jabodetabek', u',', u'is', u'the', u'second', u'largest', u'in', u'the', u'world', u'.'], u'lemmas': [u'the', u'metropolitan', u'area', u',', u'jabodetabek', u',', u'be', u'the', u'second', u'largest', u'in', u'the', u'world', u'.'], u'pos': [u'DT', u'JJ', u'NN', u',', u'NN', u',', u'VBZ', u'DT', u'JJ', u'JJS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[339, 342], [343, 355], [356, 360], [360, 361], [362, 373], [373, 374], [375, 377], [378, 381], [382, 388], [389, 396], [397, 399], [400, 403], [404, 409], [409, 410]]}) 
answer: set([u'12th', u'citi'])
candidate Sentence: (0.38391271233558655, {u'tokens': [u'Jakarta', u'-LRB-', u'also', u'DKI', u'Jakarta', u'-RRB-', u'is', u'the', u'capital', u'and', u'largest', u'city', u'of', u'Indonesia', u'.'], u'lemmas': [u'Jakarta', u'-lrb-', u'also', u'DKI', u'Jakarta', u'-rrb-', u'be', u'the', u'capital', u'and', u'largest', u'city', u'of', u'Indonesia', u'.'], u'pos': [u'NNP', u'-LRB-', u'RB', u'NNP', u'NNP', u'-RRB-', u'VBZ', u'DT', u'NN', u'CC', u'JJS', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[0, 7], [8, 9], [9, 13], [14, 17], [18, 25], [25, 26], [27, 29], [30, 33], [34, 41], [42, 45], [46, 53], [54, 58], [59, 61], [62, 71], [71, 72]]}) 
answer: set([u'12th', u'world'])
candidate Sentence: (0.35539999604225159, {u'tokens': [u'The', u'population', u'of', u'greater', u'Jakarta', u'is', u'estimated', u'at', u'23', u'million', u',', u'making', u'it', u'the', u'second', u'largest', u'urban', u'area', u'in', u'the', u'world', u'.'], u'lemmas': [u'the', u'population', u'of', u'greater', u'Jakarta', u'be', u'estimate', u'at', u'23', u'million', u',', u'make', u'it', u'the', u'second', u'largest', u'urban', u'area', u'in', u'the', u'world', u'.'], u'pos': [u'DT', u'NN', u'IN', u'JJR', u'NNP', u'VBZ', u'VBN', u'IN', u'CD', u'CD', u',', u'VBG', u'PRP', u'DT', u'JJ', u'JJS', u'JJ', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[22059, 22062], [22063, 22073], [22074, 22076], [22077, 22084], [22085, 22092], [22093, 22095], [22096, 22105], [22106, 22108], [22109, 22111], [22112, 22119], [22119, 22120], [22121, 22127], [22128, 22130], [22131, 22134], [22135, 22141], [22142, 22149], [22150, 22155], [22156, 22160], [22161, 22163], [22164, 22167], [22168, 22173], [22173, 22174]]}) 
answer: set([u'12th', u'citi'])
candidate Sentence: (0.32038417458534241, {u'tokens': [u'It', u'is', u'the', u'most', u'populous', u'city', u'in', u'Indonesia', u'and', u'Southeast', u'Asia', u',', u'and', u'is', u'the', u'twelfth-largest', u'city', u'in', u'the', u'world', u'.'], u'lemmas': [u'it', u'be', u'the', u'most', u'populous', u'city', u'in', u'Indonesia', u'and', u'Southeast', u'Asia', u',', u'and', u'be', u'the', u'twelfth-largest', u'city', u'in', u'the', u'world', u'.'], u'pos': [u'PRP', u'VBZ', u'DT', u'RBS', u'JJ', u'NN', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u',', u'CC', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[231, 233], [234, 236], [237, 240], [241, 245], [246, 254], [255, 259], [260, 262], [263, 272], [273, 276], [277, 286], [287, 291], [291, 292], [293, 296], [297, 299], [300, 303], [304, 319], [320, 324], [325, 327], [328, 331], [332, 337], [337, 338]]}) 
answer: set([u'12th', u'largest'])
candidate Sentence: (0.23952849209308624, {u'tokens': [u'Financial', u'services', u',', u'trade', u'and', u'manufacturing', u'are', u'the', u'largest', u'sectors', u'of', u'the', u'city', u"'s", u'economy', u'.'], u'lemmas': [u'Financial', u'service', u',', u'trade', u'and', u'manufacturing', u'be', u'the', u'largest', u'sector', u'of', u'the', u'city', u"'s", u'economy', u'.'], u'pos': [u'NNP', u'NNS', u',', u'NN', u'CC', u'NN', u'VBP', u'DT', u'JJS', u'NNS', u'IN', u'DT', u'NN', u'POS', u'NN', u'.'], u'char_offsets': [[19456, 19465], [19466, 19474], [19474, 19475], [19476, 19481], [19482, 19485], [19486, 19499], [19500, 19503], [19504, 19507], [19508, 19515], [19516, 19523], [19524, 19526], [19527, 19530], [19531, 19535], [19535, 19537], [19538, 19545], [19545, 19546]]}) 
answer: set([u'12th', u'world'])
candidate Sentence: (0.22970418632030487, {u'tokens': [u'Jalan', u'Thamrin', u',', u'the', u'main', u'avenue', u'in', u'Central', u'Jakarta', u'One', u'of', u'the', u'most', u'populous', u'cities', u'in', u'the', u'world', u',', u'Jakarta', u'is', u'strained', u'by', u'transportation', u'problems', u'.'], u'lemmas': [u'Jalan', u'Thamrin', u',', u'the', u'main', u'avenue', u'in', u'Central', u'Jakarta', u'one', u'of', u'the', u'most', u'populous', u'city', u'in', u'the', u'world', u',', u'Jakarta', u'be', u'strain', u'by', u'transportation', u'problem', u'.'], u'pos': [u'NNP', u'NNP', u',', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'CD', u'IN', u'DT', u'RBS', u'JJ', u'NNS', u'IN', u'DT', u'NN', u',', u'NNP', u'VBZ', u'VBN', u'IN', u'NN', u'NNS', u'.'], u'char_offsets': [[25056, 25061], [25062, 25069], [25069, 25070], [25071, 25074], [25075, 25079], [25080, 25086], [25087, 25089], [25090, 25097], [25098, 25105], [25106, 25109], [25110, 25112], [25113, 25116], [25117, 25121], [25122, 25130], [25131, 25137], [25138, 25140], [25141, 25144], [25145, 25150], [25150, 25151], [25152, 25159], [25160, 25162], [25163, 25171], [25172, 25174], [25175, 25189], [25190, 25198], [25198, 25199]]}) 
answer: set([u'12th', u'largest'])
candidate Sentence: (0.22298970818519592, {u'tokens': [u'Jakarta', u'is', u'listed', u'as', u'a', u'global', u'city', u'in', u'the', u'2008', u'Globalization', u'and', u'World', u'Cities', u'Study', u'Group', u'and', u'Network', u'-LRB-', u'GaWC', u'-RRB-', u'research', u'.'], u'lemmas': [u'Jakarta', u'be', u'list', u'as', u'a', u'global', u'city', u'in', u'the', u'2008', u'globalization', u'and', u'world', u'city', u'Study', u'Group', u'and', u'Network', u'-lrb-', u'GaWC', u'-rrb-', u'research', u'.'], u'pos': [u'NNP', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'CD', u'NN', u'CC', u'NN', u'NNS', u'NNP', u'NNP', u'CC', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u'NN', u'.'], u'char_offsets': [[411, 418], [419, 421], [422, 428], [429, 431], [432, 433], [434, 440], [441, 445], [446, 448], [449, 452], [453, 457], [458, 471], [472, 475], [476, 481], [482, 488], [489, 494], [495, 500], [501, 504], [505, 512], [513, 514], [514, 518], [518, 519], [520, 528], [528, 529]]}) 
answer: set([u'12th', u'largest'])
candidate Sentence: (0.16407212615013123, {u'tokens': [u'As', u'the', u'largest', u'city', u'and', u'the', u'capital', u',', u'Jakarta', u'houses', u'a', u'large', u'number', u'of', u'students', u'from', u'various', u'parts', u'of', u'Indonesia', u',', u'many', u'of', u'whom', u'reside', u'in', u'dormitories', u'or', u'home-stay', u'residences', u'.'], u'lemmas': [u'as', u'the', u'largest', u'city', u'and', u'the', u'capital', u',', u'Jakarta', u'house', u'a', u'large', u'number', u'of', u'student', u'from', u'various', u'part', u'of', u'Indonesia', u',', u'many', u'of', u'whom', u'reside', u'in', u'dormitory', u'or', u'home-stay', u'residence', u'.'], u'pos': [u'IN', u'DT', u'JJS', u'NN', u'CC', u'DT', u'NN', u',', u'NNP', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'NNS', u'IN', u'JJ', u'NNS', u'IN', u'NNP', u',', u'JJ', u'IN', u'WP', u'VBP', u'IN', u'NNS', u'CC', u'JJ', u'NNS', u'.'], u'char_offsets': [[28957, 28959], [28960, 28963], [28964, 28971], [28972, 28976], [28977, 28980], [28981, 28984], [28985, 28992], [28992, 28993], [28994, 29001], [29002, 29008], [29009, 29010], [29011, 29016], [29017, 29023], [29024, 29026], [29027, 29035], [29036, 29040], [29041, 29048], [29049, 29054], [29055, 29057], [29058, 29067], [29067, 29068], [29069, 29073], [29074, 29076], [29077, 29081], [29082, 29088], [29089, 29091], [29092, 29103], [29104, 29106], [29107, 29116], [29117, 29127], [29127, 29128]]}) 
answer: set([u'world', u'12th'])
candidate Sentence: (0.1478235274553299, {u'tokens': [u'The', u'biggest', u'stadium', u'in', u'Jakarta', u'is', u'the', u'Bung', u'Karno', u'Stadium', u'with', u'a', u'capacity', u'of', u'100,000', u'seats', u'Football', u'stadiums', u'of', u'the', u'world', u'-', u'Stadiums', u'in', u'Indonesia', u'.'], u'lemmas': [u'the', u'biggest', u'stadium', u'in', u'Jakarta', u'be', u'the', u'Bung', u'Karno', u'Stadium', u'with', u'a', u'capacity', u'of', u'100,000', u'seat', u'football', u'stadium', u'of', u'the', u'world', u'-', u'stadium', u'in', u'Indonesia', u'.'], u'pos': [u'DT', u'JJS', u'NN', u'IN', u'NNP', u'VBZ', u'DT', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NN', u'IN', u'CD', u'NNS', u'NN', u'NNS', u'IN', u'DT', u'NN', u':', u'NNS', u'IN', u'NNP', u'.'], u'char_offsets': [[29804, 29807], [29808, 29815], [29816, 29823], [29824, 29826], [29827, 29834], [29835, 29837], [29838, 29841], [29842, 29846], [29847, 29852], [29853, 29860], [29861, 29865], [29866, 29867], [29868, 29876], [29877, 29879], [29880, 29887], [29888, 29893], [29895, 29903], [29904, 29912], [29913, 29915], [29916, 29919], [29920, 29925], [29926, 29927], [29928, 29936], [29937, 29939], [29940, 29949], [29951, 29952]]}) 
answer: set([u'12th', u'largest', u'citi'])
candidate Sentence: (0.13914389908313751, {u'tokens': [u'As', u'the', u'nation', u"'s", u'largest', u'city', u'and', u'capital', u',', u'Jakarta', u'has', u'lured', u'much', u'national', u'and', u'regional', u'talent', u'who', u'hope', u'to', u'find', u'a', u'greater', u'audience', u'and', u'more', u'opportunities', u'for', u'success', u'.'], u'lemmas': [u'as', u'the', u'nation', u"'s", u'largest', u'city', u'and', u'capital', u',', u'Jakarta', u'have', u'lure', u'much', u'national', u'and', u'regional', u'talent', u'who', u'hope', u'to', u'find', u'a', u'greater', u'audience', u'and', u'more', u'opportunity', u'for', u'success', u'.'], u'pos': [u'IN', u'DT', u'NN', u'POS', u'JJS', u'NN', u'CC', u'NN', u',', u'NNP', u'VBZ', u'VBN', u'JJ', u'JJ', u'CC', u'JJ', u'NN', u'WP', u'VBP', u'TO', u'VB', u'DT', u'JJR', u'NN', u'CC', u'JJR', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[16097, 16099], [16100, 16103], [16104, 16110], [16110, 16112], [16113, 16120], [16121, 16125], [16126, 16129], [16130, 16137], [16137, 16138], [16139, 16146], [16147, 16150], [16151, 16156], [16157, 16161], [16162, 16170], [16171, 16174], [16175, 16183], [16184, 16190], [16191, 16194], [16195, 16199], [16200, 16202], [16203, 16207], [16208, 16209], [16210, 16217], [16218, 16226], [16227, 16230], [16231, 16235], [16236, 16249], [16250, 16253], [16254, 16261], [16261, 16262]]}) 
answer: set([u'12th', u'world'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is Jakarta the 12th largest city in the world?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Jakarta
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set3/a5.txt

No
_____________________________ test_yesno[param166] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb2c638>, (<src.tfidf.TF_IDF object at 0x105d7eb90>, set(['jakarta'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x10cb2c638>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.46456235647201538, {u'tokens': [u'The', u'metropolitan', u'area', u',', u'Jabodetabek', u',', u'is', u'the', u'second', u'largest', u'in', u'the', u'world', u'.'], u'lemmas': [u'the', u'metropolitan', u'area', u',', u'jabodetabek', u',', u'be', u'the', u'second', u'largest', u'in', u'the', u'world', u'.'], u'pos': [u'DT', u'JJ', u'NN', u',', u'NN', u',', u'VBZ', u'DT', u'JJ', u'JJS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[339, 342], [343, 355], [356, 360], [360, 361], [362, 373], [373, 374], [375, 377], [378, 381], [382, 388], [389, 396], [397, 399], [400, 403], [404, 409], [409, 410]]}) 
answer: set([u'12th', u'citi'])
candidate Sentence: (0.38391271233558655, {u'tokens': [u'Jakarta', u'-LRB-', u'also', u'DKI', u'Jakarta', u'-RRB-', u'is', u'the', u'capital', u'and', u'largest', u'city', u'of', u'Indonesia', u'.'], u'lemmas': [u'Jakarta', u'-lrb-', u'also', u'DKI', u'Jakarta', u'-rrb-', u'be', u'the', u'capital', u'and', u'largest', u'city', u'of', u'Indonesia', u'.'], u'pos': [u'NNP', u'-LRB-', u'RB', u'NNP', u'NNP', u'-RRB-', u'VBZ', u'DT', u'NN', u'CC', u'JJS', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[0, 7], [8, 9], [9, 13], [14, 17], [18, 25], [25, 26], [27, 29], [30, 33], [34, 41], [42, 45], [46, 53], [54, 58], [59, 61], [62, 71], [71, 72]]}) 
answer: set([u'12th', u'world'])
candidate Sentence: (0.35539999604225159, {u'tokens': [u'The', u'population', u'of', u'greater', u'Jakarta', u'is', u'estimated', u'at', u'23', u'million', u',', u'making', u'it', u'the', u'second', u'largest', u'urban', u'area', u'in', u'the', u'world', u'.'], u'lemmas': [u'the', u'population', u'of', u'greater', u'Jakarta', u'be', u'estimate', u'at', u'23', u'million', u',', u'make', u'it', u'the', u'second', u'largest', u'urban', u'area', u'in', u'the', u'world', u'.'], u'pos': [u'DT', u'NN', u'IN', u'JJR', u'NNP', u'VBZ', u'VBN', u'IN', u'CD', u'CD', u',', u'VBG', u'PRP', u'DT', u'JJ', u'JJS', u'JJ', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[22059, 22062], [22063, 22073], [22074, 22076], [22077, 22084], [22085, 22092], [22093, 22095], [22096, 22105], [22106, 22108], [22109, 22111], [22112, 22119], [22119, 22120], [22121, 22127], [22128, 22130], [22131, 22134], [22135, 22141], [22142, 22149], [22150, 22155], [22156, 22160], [22161, 22163], [22164, 22167], [22168, 22173], [22173, 22174]]}) 
answer: set([u'12th', u'citi'])
candidate Sentence: (0.32038417458534241, {u'tokens': [u'It', u'is', u'the', u'most', u'populous', u'city', u'in', u'Indonesia', u'and', u'Southeast', u'Asia', u',', u'and', u'is', u'the', u'twelfth-largest', u'city', u'in', u'the', u'world', u'.'], u'lemmas': [u'it', u'be', u'the', u'most', u'populous', u'city', u'in', u'Indonesia', u'and', u'Southeast', u'Asia', u',', u'and', u'be', u'the', u'twelfth-largest', u'city', u'in', u'the', u'world', u'.'], u'pos': [u'PRP', u'VBZ', u'DT', u'RBS', u'JJ', u'NN', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u',', u'CC', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[231, 233], [234, 236], [237, 240], [241, 245], [246, 254], [255, 259], [260, 262], [263, 272], [273, 276], [277, 286], [287, 291], [291, 292], [293, 296], [297, 299], [300, 303], [304, 319], [320, 324], [325, 327], [328, 331], [332, 337], [337, 338]]}) 
answer: set([u'12th', u'largest'])
candidate Sentence: (0.23952849209308624, {u'tokens': [u'Financial', u'services', u',', u'trade', u'and', u'manufacturing', u'are', u'the', u'largest', u'sectors', u'of', u'the', u'city', u"'s", u'economy', u'.'], u'lemmas': [u'Financial', u'service', u',', u'trade', u'and', u'manufacturing', u'be', u'the', u'largest', u'sector', u'of', u'the', u'city', u"'s", u'economy', u'.'], u'pos': [u'NNP', u'NNS', u',', u'NN', u'CC', u'NN', u'VBP', u'DT', u'JJS', u'NNS', u'IN', u'DT', u'NN', u'POS', u'NN', u'.'], u'char_offsets': [[19456, 19465], [19466, 19474], [19474, 19475], [19476, 19481], [19482, 19485], [19486, 19499], [19500, 19503], [19504, 19507], [19508, 19515], [19516, 19523], [19524, 19526], [19527, 19530], [19531, 19535], [19535, 19537], [19538, 19545], [19545, 19546]]}) 
answer: set([u'12th', u'world'])
candidate Sentence: (0.22970418632030487, {u'tokens': [u'Jalan', u'Thamrin', u',', u'the', u'main', u'avenue', u'in', u'Central', u'Jakarta', u'One', u'of', u'the', u'most', u'populous', u'cities', u'in', u'the', u'world', u',', u'Jakarta', u'is', u'strained', u'by', u'transportation', u'problems', u'.'], u'lemmas': [u'Jalan', u'Thamrin', u',', u'the', u'main', u'avenue', u'in', u'Central', u'Jakarta', u'one', u'of', u'the', u'most', u'populous', u'city', u'in', u'the', u'world', u',', u'Jakarta', u'be', u'strain', u'by', u'transportation', u'problem', u'.'], u'pos': [u'NNP', u'NNP', u',', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'CD', u'IN', u'DT', u'RBS', u'JJ', u'NNS', u'IN', u'DT', u'NN', u',', u'NNP', u'VBZ', u'VBN', u'IN', u'NN', u'NNS', u'.'], u'char_offsets': [[25056, 25061], [25062, 25069], [25069, 25070], [25071, 25074], [25075, 25079], [25080, 25086], [25087, 25089], [25090, 25097], [25098, 25105], [25106, 25109], [25110, 25112], [25113, 25116], [25117, 25121], [25122, 25130], [25131, 25137], [25138, 25140], [25141, 25144], [25145, 25150], [25150, 25151], [25152, 25159], [25160, 25162], [25163, 25171], [25172, 25174], [25175, 25189], [25190, 25198], [25198, 25199]]}) 
answer: set([u'12th', u'largest'])
candidate Sentence: (0.22298970818519592, {u'tokens': [u'Jakarta', u'is', u'listed', u'as', u'a', u'global', u'city', u'in', u'the', u'2008', u'Globalization', u'and', u'World', u'Cities', u'Study', u'Group', u'and', u'Network', u'-LRB-', u'GaWC', u'-RRB-', u'research', u'.'], u'lemmas': [u'Jakarta', u'be', u'list', u'as', u'a', u'global', u'city', u'in', u'the', u'2008', u'globalization', u'and', u'world', u'city', u'Study', u'Group', u'and', u'Network', u'-lrb-', u'GaWC', u'-rrb-', u'research', u'.'], u'pos': [u'NNP', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'CD', u'NN', u'CC', u'NN', u'NNS', u'NNP', u'NNP', u'CC', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u'NN', u'.'], u'char_offsets': [[411, 418], [419, 421], [422, 428], [429, 431], [432, 433], [434, 440], [441, 445], [446, 448], [449, 452], [453, 457], [458, 471], [472, 475], [476, 481], [482, 488], [489, 494], [495, 500], [501, 504], [505, 512], [513, 514], [514, 518], [518, 519], [520, 528], [528, 529]]}) 
answer: set([u'12th', u'largest'])
candidate Sentence: (0.16407212615013123, {u'tokens': [u'As', u'the', u'largest', u'city', u'and', u'the', u'capital', u',', u'Jakarta', u'houses', u'a', u'large', u'number', u'of', u'students', u'from', u'various', u'parts', u'of', u'Indonesia', u',', u'many', u'of', u'whom', u'reside', u'in', u'dormitories', u'or', u'home-stay', u'residences', u'.'], u'lemmas': [u'as', u'the', u'largest', u'city', u'and', u'the', u'capital', u',', u'Jakarta', u'house', u'a', u'large', u'number', u'of', u'student', u'from', u'various', u'part', u'of', u'Indonesia', u',', u'many', u'of', u'whom', u'reside', u'in', u'dormitory', u'or', u'home-stay', u'residence', u'.'], u'pos': [u'IN', u'DT', u'JJS', u'NN', u'CC', u'DT', u'NN', u',', u'NNP', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'NNS', u'IN', u'JJ', u'NNS', u'IN', u'NNP', u',', u'JJ', u'IN', u'WP', u'VBP', u'IN', u'NNS', u'CC', u'JJ', u'NNS', u'.'], u'char_offsets': [[28957, 28959], [28960, 28963], [28964, 28971], [28972, 28976], [28977, 28980], [28981, 28984], [28985, 28992], [28992, 28993], [28994, 29001], [29002, 29008], [29009, 29010], [29011, 29016], [29017, 29023], [29024, 29026], [29027, 29035], [29036, 29040], [29041, 29048], [29049, 29054], [29055, 29057], [29058, 29067], [29067, 29068], [29069, 29073], [29074, 29076], [29077, 29081], [29082, 29088], [29089, 29091], [29092, 29103], [29104, 29106], [29107, 29116], [29117, 29127], [29127, 29128]]}) 
answer: set([u'world', u'12th'])
candidate Sentence: (0.1478235274553299, {u'tokens': [u'The', u'biggest', u'stadium', u'in', u'Jakarta', u'is', u'the', u'Bung', u'Karno', u'Stadium', u'with', u'a', u'capacity', u'of', u'100,000', u'seats', u'Football', u'stadiums', u'of', u'the', u'world', u'-', u'Stadiums', u'in', u'Indonesia', u'.'], u'lemmas': [u'the', u'biggest', u'stadium', u'in', u'Jakarta', u'be', u'the', u'Bung', u'Karno', u'Stadium', u'with', u'a', u'capacity', u'of', u'100,000', u'seat', u'football', u'stadium', u'of', u'the', u'world', u'-', u'stadium', u'in', u'Indonesia', u'.'], u'pos': [u'DT', u'JJS', u'NN', u'IN', u'NNP', u'VBZ', u'DT', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NN', u'IN', u'CD', u'NNS', u'NN', u'NNS', u'IN', u'DT', u'NN', u':', u'NNS', u'IN', u'NNP', u'.'], u'char_offsets': [[29804, 29807], [29808, 29815], [29816, 29823], [29824, 29826], [29827, 29834], [29835, 29837], [29838, 29841], [29842, 29846], [29847, 29852], [29853, 29860], [29861, 29865], [29866, 29867], [29868, 29876], [29877, 29879], [29880, 29887], [29888, 29893], [29895, 29903], [29904, 29912], [29913, 29915], [29916, 29919], [29920, 29925], [29926, 29927], [29928, 29936], [29937, 29939], [29940, 29949], [29951, 29952]]}) 
answer: set([u'12th', u'largest', u'citi'])
candidate Sentence: (0.13914389908313751, {u'tokens': [u'As', u'the', u'nation', u"'s", u'largest', u'city', u'and', u'capital', u',', u'Jakarta', u'has', u'lured', u'much', u'national', u'and', u'regional', u'talent', u'who', u'hope', u'to', u'find', u'a', u'greater', u'audience', u'and', u'more', u'opportunities', u'for', u'success', u'.'], u'lemmas': [u'as', u'the', u'nation', u"'s", u'largest', u'city', u'and', u'capital', u',', u'Jakarta', u'have', u'lure', u'much', u'national', u'and', u'regional', u'talent', u'who', u'hope', u'to', u'find', u'a', u'greater', u'audience', u'and', u'more', u'opportunity', u'for', u'success', u'.'], u'pos': [u'IN', u'DT', u'NN', u'POS', u'JJS', u'NN', u'CC', u'NN', u',', u'NNP', u'VBZ', u'VBN', u'JJ', u'JJ', u'CC', u'JJ', u'NN', u'WP', u'VBP', u'TO', u'VB', u'DT', u'JJR', u'NN', u'CC', u'JJR', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[16097, 16099], [16100, 16103], [16104, 16110], [16110, 16112], [16113, 16120], [16121, 16125], [16126, 16129], [16130, 16137], [16137, 16138], [16139, 16146], [16147, 16150], [16151, 16156], [16157, 16161], [16162, 16170], [16171, 16174], [16175, 16183], [16184, 16190], [16191, 16194], [16195, 16199], [16200, 16202], [16203, 16207], [16208, 16209], [16210, 16217], [16218, 16226], [16227, 16230], [16231, 16235], [16236, 16249], [16250, 16253], [16254, 16261], [16261, 16262]]}) 
answer: set([u'12th', u'world'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is Jakarta the 12th largest city in the world?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Jakarta
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set3/a5.txt

No
_____________________________ test_yesno[param174] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb2c878>, (<src.tfidf.TF_IDF object at 0x1080448d0>, set(['james', 'james_watt', 'watt'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes, his improvements to the Newcomen steam engine were fundamental to the changes brought by the Industrial Revolution.')
E            +    where 'Yes, his improvements to the Newcomen steam engine were fundamental to the changes brought by the Industrial Revolution.' = <src.question_processing.Question_parser instance at 0x10cb2c878>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.24743221700191498, {u'tokens': [u'It', u'was', u'a', u'platform', u'for', u'generations', u'of', u'inventors', u'to', u'improve', u'.'], u'lemmas': [u'it', u'be', u'a', u'platform', u'for', u'generation', u'of', u'inventor', u'to', u'improve', u'.'], u'pos': [u'PRP', u'VBD', u'DT', u'NN', u'IN', u'NNS', u'IN', u'NNS', u'TO', u'VB', u'.'], u'char_offsets': [[7748, 7750], [7751, 7754], [7755, 7756], [7757, 7765], [7766, 7769], [7770, 7781], [7782, 7784], [7785, 7794], [7795, 7797], [7798, 7805], [7805, 7806]]}) 
answer: set([u'jame', u'engin'])
candidate Sentence: (0.16439877450466156, {u'tokens': [u'Capital', u'could', u'work', u'more', u'efficiently', u',', u'and', u'manufacturing', u'productivity', u'greatly', u'improved', u'.'], u'lemmas': [u'Capital', u'could', u'work', u'more', u'efficiently', u',', u'and', u'manufacture', u'productivity', u'greatly', u'improve', u'.'], u'pos': [u'NNP', u'MD', u'VB', u'RBR', u'RB', u',', u'CC', u'VBG', u'NN', u'RB', u'VBN', u'.'], u'char_offsets': [[8279, 8286], [8287, 8292], [8293, 8297], [8298, 8302], [8303, 8314], [8314, 8315], [8316, 8319], [8320, 8333], [8334, 8346], [8347, 8354], [8355, 8363], [8363, 8364]]}) 
answer: set([u'jame', u'engin'])
candidate Sentence: (0.15922486782073975, {u'tokens': [u'Watt', u',', u'with', u'his', u'partner', u'Matthew', u'Boulton', u',', u'battled', u'against', u'rival', u'engineers', u'such', u'as', u'Jonathan', u'Hornblower', u'who', u'tried', u'to', u'develop', u'engines', u'which', u'did', u'not', u'fall', u'foul', u'of', u'his', u'patents', u'.'], u'lemmas': [u'watt', u',', u'with', u'he', u'partner', u'Matthew', u'Boulton', u',', u'battle', u'against', u'rival', u'engineer', u'such', u'as', u'Jonathan', u'Hornblower', u'who', u'try', u'to', u'develop', u'engine', u'which', u'do', u'not', u'fall', u'foul', u'of', u'he', u'patent', u'.'], u'pos': [u'NN', u',', u'IN', u'PRP$', u'NN', u'NNP', u'NNP', u',', u'VBD', u'IN', u'JJ', u'NNS', u'JJ', u'IN', u'NNP', u'NNP', u'WP', u'VBD', u'TO', u'VB', u'NNS', u'WDT', u'VBD', u'RB', u'VB', u'JJ', u'IN', u'PRP$', u'NNS', u'.'], u'char_offsets': [[5777, 5781], [5781, 5782], [5783, 5787], [5788, 5791], [5792, 5799], [5800, 5807], [5808, 5815], [5815, 5816], [5817, 5824], [5825, 5832], [5833, 5838], [5839, 5848], [5849, 5853], [5854, 5856], [5857, 5865], [5866, 5876], [5877, 5880], [5881, 5886], [5887, 5889], [5890, 5897], [5898, 5905], [5906, 5911], [5912, 5915], [5916, 5919], [5920, 5924], [5925, 5929], [5930, 5932], [5933, 5936], [5937, 5944], [5944, 5945]]}) 
answer: set([u'jame', u'improv'])
candidate Sentence: (0.14191658794879913, {u'tokens': [u'To', u'our', u'ancestors', u',', u'such', u'an', u'odd', u'eccentric', u'instant', u'was', u'without', u'significance', u'-', u'did', u'not', u'even', u'exist', u'.'], u'lemmas': [u'to', u'we', u'ancestor', u',', u'such', u'a', u'odd', u'eccentric', u'instant', u'be', u'without', u'significance', u'-', u'do', u'not', u'even', u'exist', u'.'], u'pos': [u'TO', u'PRP$', u'NNS', u',', u'PDT', u'DT', u'JJ', u'JJ', u'NN', u'VBD', u'IN', u'NN', u':', u'VBD', u'RB', u'RB', u'VB', u'.'], u'char_offsets': [[8737, 8739], [8740, 8743], [8744, 8753], [8753, 8754], [8755, 8759], [8760, 8762], [8763, 8766], [8767, 8776], [8777, 8784], [8785, 8788], [8789, 8796], [8797, 8809], [8810, 8811], [8812, 8815], [8816, 8819], [8820, 8824], [8825, 8830], [8830, 8831]]}) 
answer: set([u'jame', u'engin', u'improv'])
candidate Sentence: (0.12628896534442902, {u'tokens': [u'It', u'was', u'clear', u'to', u'many', u'that', u'higher', u'pressures', u'produced', u'in', u'improved', u'boilers', u'would', u'produce', u'engines', u'having', u'even', u'higher', u'efficiency', u',', u'and', u'would', u'lead', u'to', u'the', u'revolution', u'in', u'transportation', u'that', u'was', u'soon', u'embodied', u'in', u'the', u'locomotive', u'and', u'steamboat', u'.'], u'lemmas': [u'it', u'be', u'clear', u'to', u'many', u'that', u'higher', u'pressure', u'produce', u'in', u'improve', u'boiler', u'would', u'produce', u'engine', u'have', u'even', u'higher', u'efficiency', u',', u'and', u'would', u'lead', u'to', u'the', u'revolution', u'in', u'transportation', u'that', u'be', u'soon', u'embody', u'in', u'the', u'locomotive', u'and', u'steamboat', u'.'], u'pos': [u'PRP', u'VBD', u'JJ', u'TO', u'JJ', u'IN', u'JJR', u'NNS', u'VBN', u'IN', u'VBN', u'NNS', u'MD', u'VB', u'NNS', u'VBG', u'RB', u'JJR', u'NN', u',', u'CC', u'MD', u'VB', u'TO', u'DT', u'NN', u'IN', u'NN', u'WDT', u'VBD', u'RB', u'VBN', u'IN', u'DT', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[7808, 7810], [7811, 7814], [7815, 7820], [7821, 7823], [7824, 7828], [7829, 7833], [7834, 7840], [7841, 7850], [7851, 7859], [7860, 7862], [7863, 7871], [7872, 7879], [7880, 7885], [7886, 7893], [7894, 7901], [7902, 7908], [7909, 7913], [7914, 7920], [7921, 7931], [7931, 7932], [7933, 7936], [7937, 7942], [7943, 7947], [7948, 7950], [7951, 7954], [7955, 7965], [7966, 7968], [7969, 7983], [7984, 7988], [7989, 7992], [7993, 7997], [7998, 8006], [8007, 8009], [8010, 8013], [8014, 8024], [8025, 8028], [8029, 8038], [8038, 8039]]}) 
answer: set([u'jame'])
candidate Sentence: (0.1218436062335968, {u'tokens': [u'The', u'huge', u'painting', u'James', u'Watt', u'contemplating', u'the', u'steam', u'engine', u'by', u'James', u'Eckford', u'Lauder', u'is', u'now', u'owned', u'by', u'the', u'National', u'Gallery', u'of', u'Scotland', u'.'], u'lemmas': [u'the', u'huge', u'painting', u'James', u'Watt', u'contemplate', u'the', u'steam', u'engine', u'by', u'James', u'Eckford', u'Lauder', u'be', u'now', u'own', u'by', u'the', u'National', u'Gallery', u'of', u'Scotland', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NNP', u'NNP', u'VBG', u'DT', u'NN', u'NN', u'IN', u'NNP', u'NNP', u'NNP', u'VBZ', u'RB', u'VBN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[11639, 11642], [11643, 11647], [11648, 11656], [11657, 11662], [11663, 11667], [11668, 11681], [11682, 11685], [11686, 11691], [11692, 11698], [11699, 11701], [11702, 11707], [11708, 11715], [11716, 11722], [11723, 11725], [11726, 11729], [11730, 11735], [11736, 11738], [11739, 11742], [11743, 11751], [11752, 11759], [11760, 11762], [11763, 11771], [11771, 11772]]}) 
answer: set([u'improv'])
candidate Sentence: (0.11666389554738998, {u'tokens': [u'He', u'and', u'his', u'second', u'wife', u'travelled', u'to', u'France', u'and', u'Germany', u',', u'and', u'he', u'purchased', u'an', u'estate', u'in', u'Wales', u'at', u'Doldowlod', u'House', u',', u'one', u'mile', u'south', u'of', u'Llanwrthwl', u',', u'which', u'he', u'much', u'improved', u'.'], u'lemmas': [u'he', u'and', u'he', u'second', u'wife', u'travel', u'to', u'France', u'and', u'Germany', u',', u'and', u'he', u'purchase', u'a', u'estate', u'in', u'Wales', u'at', u'Doldowlod', u'House', u',', u'one', u'mile', u'south', u'of', u'Llanwrthwl', u',', u'which', u'he', u'much', u'improve', u'.'], u'pos': [u'PRP', u'CC', u'PRP$', u'JJ', u'NN', u'VBD', u'TO', u'NNP', u'CC', u'NNP', u',', u'CC', u'PRP', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'IN', u'NNP', u'NNP', u',', u'CD', u'NN', u'NN', u'IN', u'NNP', u',', u'WDT', u'PRP', u'RB', u'VBD', u'.'], u'char_offsets': [[3761, 3763], [3764, 3767], [3768, 3771], [3772, 3778], [3779, 3783], [3784, 3793], [3794, 3796], [3797, 3803], [3804, 3807], [3808, 3815], [3815, 3816], [3817, 3820], [3821, 3823], [3824, 3833], [3834, 3836], [3837, 3843], [3844, 3846], [3847, 3852], [3853, 3855], [3856, 3865], [3866, 3871], [3871, 3872], [3873, 3876], [3877, 3881], [3882, 3887], [3888, 3890], [3891, 3901], [3901, 3902], [3903, 3908], [3909, 3911], [3912, 3916], [3917, 3925], [3925, 3926]]}) 
answer: set([u'jame', u'engin'])
candidate Sentence: (0.11019629240036011, {u'tokens': [u'Those', u'more', u'efficient', u'steam', u'engines', u'would', u'eventually', u'displace', u'Watt', u"'s", u'engines', u',', u'leading', u'to', u'another', u'industrial', u'revolution', u'with', u'the', u'development', u'of', u'the', u'steam', u'locomotive', u'.'], u'lemmas': [u'those', u'more', u'efficient', u'steam', u'engine', u'would', u'eventually', u'displace', u'Watt', u"'s", u'engine', u',', u'lead', u'to', u'another', u'industrial', u'revolution', u'with', u'the', u'development', u'of', u'the', u'steam', u'locomotive', u'.'], u'pos': [u'DT', u'RBR', u'JJ', u'NN', u'NNS', u'MD', u'RB', u'VB', u'NNP', u'POS', u'NNS', u',', u'VBG', u'TO', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[6905, 6910], [6911, 6915], [6916, 6925], [6926, 6931], [6932, 6939], [6940, 6945], [6946, 6956], [6957, 6965], [6966, 6970], [6970, 6972], [6973, 6980], [6980, 6981], [6982, 6989], [6990, 6992], [6993, 7000], [7001, 7011], [7012, 7022], [7023, 7027], [7028, 7031], [7032, 7043], [7044, 7046], [7047, 7050], [7051, 7056], [7057, 7067], [7067, 7068]]}) 
answer: set([u'improv', u'jame'])
candidate Sentence: (0.108111172914505, {u'tokens': [u'As', u'he', u'states', u'in', u'a', u'letter', u'to', u'Boulton', u'of', u'17', u'August', u'1784', u':', u':', u'I', u'have', u'given', u'such', u'descriptions', u'of', u'engines', u'for', u'wheel', u'carriages', u'as', u'I', u'could', u'do', u'in', u'the', u'time', u'and', u'space', u'I', u'could', u'allow', u'myself', u';', u'but', u'it', u'is', u'very', u'defective', u'and', u'can', u'only', u'serve', u'to', u'keep', u'other', u'people', u'from', u'similar', u'patents', u'.'], u'lemmas': [u'as', u'he', u'state', u'in', u'a', u'letter', u'to', u'Boulton', u'of', u'17', u'August', u'1784', u':', u':', u'I', u'have', u'give', u'such', u'description', u'of', u'engine', u'for', u'wheel', u'carriage', u'as', u'I', u'could', u'do', u'in', u'the', u'time', u'and', u'space', u'I', u'could', u'allow', u'myself', u';', u'but', u'it', u'be', u'very', u'defective', u'and', u'can', u'only', u'serve', u'to', u'keep', u'other', u'people', u'from', u'similar', u'patent', u'.'], u'pos': [u'IN', u'PRP', u'VBZ', u'IN', u'DT', u'NN', u'TO', u'NNP', u'IN', u'CD', u'NNP', u'CD', u':', u':', u'PRP', u'VBP', u'VBN', u'JJ', u'NNS', u'IN', u'NNS', u'IN', u'NN', u'NNS', u'IN', u'PRP', u'MD', u'VB', u'IN', u'DT', u'NN', u'CC', u'NN', u'PRP', u'MD', u'VB', u'PRP', u':', u'CC', u'PRP', u'VBZ', u'RB', u'JJ', u'CC', u'MD', u'RB', u'VB', u'TO', u'VB', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[5344, 5346], [5347, 5349], [5350, 5356], [5357, 5359], [5360, 5361], [5362, 5368], [5369, 5371], [5372, 5379], [5380, 5382], [5383, 5385], [5386, 5392], [5393, 5397], [5397, 5398], [5400, 5401], [5401, 5402], [5403, 5407], [5408, 5413], [5414, 5418], [5419, 5431], [5432, 5434], [5435, 5442], [5443, 5446], [5447, 5452], [5453, 5462], [5463, 5465], [5466, 5467], [5468, 5473], [5474, 5476], [5477, 5479], [5480, 5483], [5484, 5488], [5489, 5492], [5493, 5498], [5499, 5500], [5501, 5506], [5507, 5512], [5513, 5519], [5519, 5520], [5521, 5524], [5525, 5527], [5528, 5530], [5531, 5535], [5536, 5545], [5546, 5549], [5550, 5553], [5554, 5558], [5559, 5564], [5565, 5567], [5568, 5572], [5573, 5578], [5579, 5585], [5586, 5590], [5591, 5598], [5599, 5606], [5606, 5607]]}) 
answer: set([u'jame', u'improv'])
candidate Sentence: (0.10505922138690948, {u'tokens': [u'Original', u'Condenser', u'by', u'James', u'Watt', u'.'], u'lemmas': [u'original', u'condenser', u'by', u'James', u'Watt', u'.'], u'pos': [u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[4805, 4813], [4814, 4823], [4824, 4826], [4827, 4832], [4833, 4837], [4837, 4838]]}) 
answer: set([u'improv', u'engin'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Did James Watt improve an engine?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes, his improvements to the Newcomen steam engine were fundamental to the changes brought by the Industrial Revolution.
Difficulty = easy
Article_Title = James_Watt
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set4/a2.txt

No
_____________________________ test_yesno[param175] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb2c8c0>, (<src.tfidf.TF_IDF object at 0x1080448d0>, set(['james', 'james_watt', 'watt'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb2c8c0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.24743221700191498, {u'tokens': [u'It', u'was', u'a', u'platform', u'for', u'generations', u'of', u'inventors', u'to', u'improve', u'.'], u'lemmas': [u'it', u'be', u'a', u'platform', u'for', u'generation', u'of', u'inventor', u'to', u'improve', u'.'], u'pos': [u'PRP', u'VBD', u'DT', u'NN', u'IN', u'NNS', u'IN', u'NNS', u'TO', u'VB', u'.'], u'char_offsets': [[7748, 7750], [7751, 7754], [7755, 7756], [7757, 7765], [7766, 7769], [7770, 7781], [7782, 7784], [7785, 7794], [7795, 7797], [7798, 7805], [7805, 7806]]}) 
answer: set([u'jame', u'engin'])
candidate Sentence: (0.16439877450466156, {u'tokens': [u'Capital', u'could', u'work', u'more', u'efficiently', u',', u'and', u'manufacturing', u'productivity', u'greatly', u'improved', u'.'], u'lemmas': [u'Capital', u'could', u'work', u'more', u'efficiently', u',', u'and', u'manufacture', u'productivity', u'greatly', u'improve', u'.'], u'pos': [u'NNP', u'MD', u'VB', u'RBR', u'RB', u',', u'CC', u'VBG', u'NN', u'RB', u'VBN', u'.'], u'char_offsets': [[8279, 8286], [8287, 8292], [8293, 8297], [8298, 8302], [8303, 8314], [8314, 8315], [8316, 8319], [8320, 8333], [8334, 8346], [8347, 8354], [8355, 8363], [8363, 8364]]}) 
answer: set([u'jame', u'engin'])
candidate Sentence: (0.15922486782073975, {u'tokens': [u'Watt', u',', u'with', u'his', u'partner', u'Matthew', u'Boulton', u',', u'battled', u'against', u'rival', u'engineers', u'such', u'as', u'Jonathan', u'Hornblower', u'who', u'tried', u'to', u'develop', u'engines', u'which', u'did', u'not', u'fall', u'foul', u'of', u'his', u'patents', u'.'], u'lemmas': [u'watt', u',', u'with', u'he', u'partner', u'Matthew', u'Boulton', u',', u'battle', u'against', u'rival', u'engineer', u'such', u'as', u'Jonathan', u'Hornblower', u'who', u'try', u'to', u'develop', u'engine', u'which', u'do', u'not', u'fall', u'foul', u'of', u'he', u'patent', u'.'], u'pos': [u'NN', u',', u'IN', u'PRP$', u'NN', u'NNP', u'NNP', u',', u'VBD', u'IN', u'JJ', u'NNS', u'JJ', u'IN', u'NNP', u'NNP', u'WP', u'VBD', u'TO', u'VB', u'NNS', u'WDT', u'VBD', u'RB', u'VB', u'JJ', u'IN', u'PRP$', u'NNS', u'.'], u'char_offsets': [[5777, 5781], [5781, 5782], [5783, 5787], [5788, 5791], [5792, 5799], [5800, 5807], [5808, 5815], [5815, 5816], [5817, 5824], [5825, 5832], [5833, 5838], [5839, 5848], [5849, 5853], [5854, 5856], [5857, 5865], [5866, 5876], [5877, 5880], [5881, 5886], [5887, 5889], [5890, 5897], [5898, 5905], [5906, 5911], [5912, 5915], [5916, 5919], [5920, 5924], [5925, 5929], [5930, 5932], [5933, 5936], [5937, 5944], [5944, 5945]]}) 
answer: set([u'jame', u'improv'])
candidate Sentence: (0.14191658794879913, {u'tokens': [u'To', u'our', u'ancestors', u',', u'such', u'an', u'odd', u'eccentric', u'instant', u'was', u'without', u'significance', u'-', u'did', u'not', u'even', u'exist', u'.'], u'lemmas': [u'to', u'we', u'ancestor', u',', u'such', u'a', u'odd', u'eccentric', u'instant', u'be', u'without', u'significance', u'-', u'do', u'not', u'even', u'exist', u'.'], u'pos': [u'TO', u'PRP$', u'NNS', u',', u'PDT', u'DT', u'JJ', u'JJ', u'NN', u'VBD', u'IN', u'NN', u':', u'VBD', u'RB', u'RB', u'VB', u'.'], u'char_offsets': [[8737, 8739], [8740, 8743], [8744, 8753], [8753, 8754], [8755, 8759], [8760, 8762], [8763, 8766], [8767, 8776], [8777, 8784], [8785, 8788], [8789, 8796], [8797, 8809], [8810, 8811], [8812, 8815], [8816, 8819], [8820, 8824], [8825, 8830], [8830, 8831]]}) 
answer: set([u'jame', u'engin', u'improv'])
candidate Sentence: (0.12628896534442902, {u'tokens': [u'It', u'was', u'clear', u'to', u'many', u'that', u'higher', u'pressures', u'produced', u'in', u'improved', u'boilers', u'would', u'produce', u'engines', u'having', u'even', u'higher', u'efficiency', u',', u'and', u'would', u'lead', u'to', u'the', u'revolution', u'in', u'transportation', u'that', u'was', u'soon', u'embodied', u'in', u'the', u'locomotive', u'and', u'steamboat', u'.'], u'lemmas': [u'it', u'be', u'clear', u'to', u'many', u'that', u'higher', u'pressure', u'produce', u'in', u'improve', u'boiler', u'would', u'produce', u'engine', u'have', u'even', u'higher', u'efficiency', u',', u'and', u'would', u'lead', u'to', u'the', u'revolution', u'in', u'transportation', u'that', u'be', u'soon', u'embody', u'in', u'the', u'locomotive', u'and', u'steamboat', u'.'], u'pos': [u'PRP', u'VBD', u'JJ', u'TO', u'JJ', u'IN', u'JJR', u'NNS', u'VBN', u'IN', u'VBN', u'NNS', u'MD', u'VB', u'NNS', u'VBG', u'RB', u'JJR', u'NN', u',', u'CC', u'MD', u'VB', u'TO', u'DT', u'NN', u'IN', u'NN', u'WDT', u'VBD', u'RB', u'VBN', u'IN', u'DT', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[7808, 7810], [7811, 7814], [7815, 7820], [7821, 7823], [7824, 7828], [7829, 7833], [7834, 7840], [7841, 7850], [7851, 7859], [7860, 7862], [7863, 7871], [7872, 7879], [7880, 7885], [7886, 7893], [7894, 7901], [7902, 7908], [7909, 7913], [7914, 7920], [7921, 7931], [7931, 7932], [7933, 7936], [7937, 7942], [7943, 7947], [7948, 7950], [7951, 7954], [7955, 7965], [7966, 7968], [7969, 7983], [7984, 7988], [7989, 7992], [7993, 7997], [7998, 8006], [8007, 8009], [8010, 8013], [8014, 8024], [8025, 8028], [8029, 8038], [8038, 8039]]}) 
answer: set([u'jame'])
candidate Sentence: (0.1218436062335968, {u'tokens': [u'The', u'huge', u'painting', u'James', u'Watt', u'contemplating', u'the', u'steam', u'engine', u'by', u'James', u'Eckford', u'Lauder', u'is', u'now', u'owned', u'by', u'the', u'National', u'Gallery', u'of', u'Scotland', u'.'], u'lemmas': [u'the', u'huge', u'painting', u'James', u'Watt', u'contemplate', u'the', u'steam', u'engine', u'by', u'James', u'Eckford', u'Lauder', u'be', u'now', u'own', u'by', u'the', u'National', u'Gallery', u'of', u'Scotland', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NNP', u'NNP', u'VBG', u'DT', u'NN', u'NN', u'IN', u'NNP', u'NNP', u'NNP', u'VBZ', u'RB', u'VBN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[11639, 11642], [11643, 11647], [11648, 11656], [11657, 11662], [11663, 11667], [11668, 11681], [11682, 11685], [11686, 11691], [11692, 11698], [11699, 11701], [11702, 11707], [11708, 11715], [11716, 11722], [11723, 11725], [11726, 11729], [11730, 11735], [11736, 11738], [11739, 11742], [11743, 11751], [11752, 11759], [11760, 11762], [11763, 11771], [11771, 11772]]}) 
answer: set([u'improv'])
candidate Sentence: (0.11666389554738998, {u'tokens': [u'He', u'and', u'his', u'second', u'wife', u'travelled', u'to', u'France', u'and', u'Germany', u',', u'and', u'he', u'purchased', u'an', u'estate', u'in', u'Wales', u'at', u'Doldowlod', u'House', u',', u'one', u'mile', u'south', u'of', u'Llanwrthwl', u',', u'which', u'he', u'much', u'improved', u'.'], u'lemmas': [u'he', u'and', u'he', u'second', u'wife', u'travel', u'to', u'France', u'and', u'Germany', u',', u'and', u'he', u'purchase', u'a', u'estate', u'in', u'Wales', u'at', u'Doldowlod', u'House', u',', u'one', u'mile', u'south', u'of', u'Llanwrthwl', u',', u'which', u'he', u'much', u'improve', u'.'], u'pos': [u'PRP', u'CC', u'PRP$', u'JJ', u'NN', u'VBD', u'TO', u'NNP', u'CC', u'NNP', u',', u'CC', u'PRP', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'IN', u'NNP', u'NNP', u',', u'CD', u'NN', u'NN', u'IN', u'NNP', u',', u'WDT', u'PRP', u'RB', u'VBD', u'.'], u'char_offsets': [[3761, 3763], [3764, 3767], [3768, 3771], [3772, 3778], [3779, 3783], [3784, 3793], [3794, 3796], [3797, 3803], [3804, 3807], [3808, 3815], [3815, 3816], [3817, 3820], [3821, 3823], [3824, 3833], [3834, 3836], [3837, 3843], [3844, 3846], [3847, 3852], [3853, 3855], [3856, 3865], [3866, 3871], [3871, 3872], [3873, 3876], [3877, 3881], [3882, 3887], [3888, 3890], [3891, 3901], [3901, 3902], [3903, 3908], [3909, 3911], [3912, 3916], [3917, 3925], [3925, 3926]]}) 
answer: set([u'jame', u'engin'])
candidate Sentence: (0.11019629240036011, {u'tokens': [u'Those', u'more', u'efficient', u'steam', u'engines', u'would', u'eventually', u'displace', u'Watt', u"'s", u'engines', u',', u'leading', u'to', u'another', u'industrial', u'revolution', u'with', u'the', u'development', u'of', u'the', u'steam', u'locomotive', u'.'], u'lemmas': [u'those', u'more', u'efficient', u'steam', u'engine', u'would', u'eventually', u'displace', u'Watt', u"'s", u'engine', u',', u'lead', u'to', u'another', u'industrial', u'revolution', u'with', u'the', u'development', u'of', u'the', u'steam', u'locomotive', u'.'], u'pos': [u'DT', u'RBR', u'JJ', u'NN', u'NNS', u'MD', u'RB', u'VB', u'NNP', u'POS', u'NNS', u',', u'VBG', u'TO', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[6905, 6910], [6911, 6915], [6916, 6925], [6926, 6931], [6932, 6939], [6940, 6945], [6946, 6956], [6957, 6965], [6966, 6970], [6970, 6972], [6973, 6980], [6980, 6981], [6982, 6989], [6990, 6992], [6993, 7000], [7001, 7011], [7012, 7022], [7023, 7027], [7028, 7031], [7032, 7043], [7044, 7046], [7047, 7050], [7051, 7056], [7057, 7067], [7067, 7068]]}) 
answer: set([u'improv', u'jame'])
candidate Sentence: (0.108111172914505, {u'tokens': [u'As', u'he', u'states', u'in', u'a', u'letter', u'to', u'Boulton', u'of', u'17', u'August', u'1784', u':', u':', u'I', u'have', u'given', u'such', u'descriptions', u'of', u'engines', u'for', u'wheel', u'carriages', u'as', u'I', u'could', u'do', u'in', u'the', u'time', u'and', u'space', u'I', u'could', u'allow', u'myself', u';', u'but', u'it', u'is', u'very', u'defective', u'and', u'can', u'only', u'serve', u'to', u'keep', u'other', u'people', u'from', u'similar', u'patents', u'.'], u'lemmas': [u'as', u'he', u'state', u'in', u'a', u'letter', u'to', u'Boulton', u'of', u'17', u'August', u'1784', u':', u':', u'I', u'have', u'give', u'such', u'description', u'of', u'engine', u'for', u'wheel', u'carriage', u'as', u'I', u'could', u'do', u'in', u'the', u'time', u'and', u'space', u'I', u'could', u'allow', u'myself', u';', u'but', u'it', u'be', u'very', u'defective', u'and', u'can', u'only', u'serve', u'to', u'keep', u'other', u'people', u'from', u'similar', u'patent', u'.'], u'pos': [u'IN', u'PRP', u'VBZ', u'IN', u'DT', u'NN', u'TO', u'NNP', u'IN', u'CD', u'NNP', u'CD', u':', u':', u'PRP', u'VBP', u'VBN', u'JJ', u'NNS', u'IN', u'NNS', u'IN', u'NN', u'NNS', u'IN', u'PRP', u'MD', u'VB', u'IN', u'DT', u'NN', u'CC', u'NN', u'PRP', u'MD', u'VB', u'PRP', u':', u'CC', u'PRP', u'VBZ', u'RB', u'JJ', u'CC', u'MD', u'RB', u'VB', u'TO', u'VB', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[5344, 5346], [5347, 5349], [5350, 5356], [5357, 5359], [5360, 5361], [5362, 5368], [5369, 5371], [5372, 5379], [5380, 5382], [5383, 5385], [5386, 5392], [5393, 5397], [5397, 5398], [5400, 5401], [5401, 5402], [5403, 5407], [5408, 5413], [5414, 5418], [5419, 5431], [5432, 5434], [5435, 5442], [5443, 5446], [5447, 5452], [5453, 5462], [5463, 5465], [5466, 5467], [5468, 5473], [5474, 5476], [5477, 5479], [5480, 5483], [5484, 5488], [5489, 5492], [5493, 5498], [5499, 5500], [5501, 5506], [5507, 5512], [5513, 5519], [5519, 5520], [5521, 5524], [5525, 5527], [5528, 5530], [5531, 5535], [5536, 5545], [5546, 5549], [5550, 5553], [5554, 5558], [5559, 5564], [5565, 5567], [5568, 5572], [5573, 5578], [5579, 5585], [5586, 5590], [5591, 5598], [5599, 5606], [5606, 5607]]}) 
answer: set([u'jame', u'improv'])
candidate Sentence: (0.10505922138690948, {u'tokens': [u'Original', u'Condenser', u'by', u'James', u'Watt', u'.'], u'lemmas': [u'original', u'condenser', u'by', u'James', u'Watt', u'.'], u'pos': [u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[4805, 4813], [4814, 4823], [4824, 4826], [4827, 4832], [4833, 4837], [4837, 4838]]}) 
answer: set([u'improv', u'engin'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Did James Watt improve an engine?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = James_Watt
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set4/a2.txt

No
_____________________________ test_yesno[param186] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb2cbd8>, (<src.tfidf.TF_IDF object at 0x1069b5b90>, set(['kuala', 'kuala_lumpur', 'lumpur'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb2cbd8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.36769601702690125, {u'tokens': [u'Kuala', u'Lumpur', u'is', u'home', u'to', u'the', u'Parliament', u'of', u'Malaysia', u'.'], u'lemmas': [u'Kuala', u'Lumpur', u'be', u'home', u'to', u'the', u'Parliament', u'of', u'Malaysia', u'.'], u'pos': [u'NNP', u'NNP', u'VBZ', u'NN', u'TO', u'DT', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[12838, 12843], [12844, 12850], [12851, 12853], [12854, 12858], [12859, 12861], [12862, 12865], [12866, 12876], [12877, 12879], [12880, 12888], [12888, 12889]]}) 
answer: set([u'capitol'])
candidate Sentence: (0.36600908637046814, {u'tokens': [u'Kuala', u'Lumpur', u'is', u'the', u'seat', u'of', u'the', u'Parliament', u'of', u'Malaysia', u'.'], u'lemmas': [u'Kuala', u'Lumpur', u'be', u'the', u'seat', u'of', u'the', u'Parliament', u'of', u'Malaysia', u'.'], u'pos': [u'NNP', u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[572, 577], [578, 584], [585, 587], [588, 591], [592, 596], [597, 599], [600, 603], [604, 614], [615, 617], [618, 626], [626, 627]]}) 
answer: set([u'capitol'])
candidate Sentence: (0.25331690907478333, {u'tokens': [u'As', u'capital', u'of', u'Malaysia', u',', u'Kuala', u'Lumpur', u'has', u'a', u'comprehensive', u'road', u'network', u'that', u'leads', u'to', u'the', u'rest', u'of', u'Peninsular', u'Malaysia', u'.'], u'lemmas': [u'as', u'capital', u'of', u'Malaysia', u',', u'Kuala', u'Lumpur', u'have', u'a', u'comprehensive', u'road', u'network', u'that', u'lead', u'to', u'the', u'rest', u'of', u'Peninsular', u'Malaysia', u'.'], u'pos': [u'IN', u'NN', u'IN', u'NNP', u',', u'NNP', u'NNP', u'VBZ', u'DT', u'JJ', u'NN', u'NN', u'WDT', u'VBZ', u'TO', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[35691, 35693], [35694, 35701], [35702, 35704], [35705, 35713], [35713, 35714], [35715, 35720], [35721, 35727], [35728, 35731], [35732, 35733], [35734, 35747], [35748, 35752], [35753, 35760], [35761, 35765], [35766, 35771], [35772, 35774], [35775, 35778], [35779, 35783], [35784, 35786], [35787, 35797], [35798, 35806], [35806, 35807]]}) 
answer: set([u'capitol'])
candidate Sentence: (0.21216881275177002, {u'tokens': [u'Bursa', u'Malaysia', u'or', u'the', u'Malaysia', u'Exchange', u'is', u'based', u'in', u'the', u'city', u'and', u'forms', u'one', u'of', u'its', u'core', u'economic', u'activities', u'.'], u'lemmas': [u'Bursa', u'Malaysia', u'or', u'the', u'Malaysia', u'Exchange', u'be', u'base', u'in', u'the', u'city', u'and', u'form', u'one', u'of', u'its', u'core', u'economic', u'activity', u'.'], u'pos': [u'NNP', u'NNP', u'CC', u'DT', u'NNP', u'NNP', u'VBZ', u'VBN', u'IN', u'DT', u'NN', u'CC', u'VBZ', u'CD', u'IN', u'PRP$', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[14617, 14622], [14623, 14631], [14632, 14634], [14635, 14638], [14639, 14647], [14648, 14656], [14657, 14659], [14660, 14665], [14666, 14668], [14669, 14672], [14673, 14677], [14678, 14681], [14682, 14687], [14688, 14691], [14692, 14694], [14695, 14698], [14699, 14703], [14704, 14712], [14713, 14723], [14723, 14724]]}) 
answer: set([u'capitol'])
candidate Sentence: (0.19694358110427856, {u'tokens': [u'TM', u'Tower', u'is', u'the', u'headquarters', u'of', u'Malaysia', u"'s", u'principal', u'telecommunication', u'service', u'provider', u',', u'Telekom', u'Malaysia', u'.'], u'lemmas': [u'TM', u'Tower', u'be', u'the', u'headquarters', u'of', u'Malaysia', u"'s", u'principal', u'telecommunication', u'service', u'provider', u',', u'Telekom', u'Malaysia', u'.'], u'pos': [u'NNP', u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'NNP', u'POS', u'JJ', u'NN', u'NN', u'NN', u',', u'NNP', u'NNP', u'.'], u'char_offsets': [[33183, 33185], [33186, 33191], [33192, 33194], [33195, 33198], [33199, 33211], [33212, 33214], [33215, 33223], [33223, 33225], [33226, 33235], [33236, 33253], [33254, 33261], [33262, 33270], [33270, 33271], [33272, 33279], [33280, 33288], [33288, 33289]]}) 
answer: set([u'capitol'])
candidate Sentence: (0.19352120161056519, {u'tokens': [u'Since', u'2000', u',', u'the', u'Ministry', u'of', u'Tourism', u'of', u'Malaysia', u'has', u'kick-started', u'the', u'mega', u'sale', u'event', u'for', u'all', u'shopping', u'in', u'Malaysia', u'.'], u'lemmas': [u'since', u'2000', u',', u'the', u'Ministry', u'of', u'Tourism', u'of', u'Malaysia', u'have', u'kick-start', u'the', u'mega', u'sale', u'event', u'for', u'all', u'shopping', u'in', u'Malaysia', u'.'], u'pos': [u'IN', u'CD', u',', u'DT', u'NNP', u'IN', u'NNP', u'IN', u'NNP', u'VBZ', u'VBN', u'DT', u'JJ', u'NN', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[22712, 22717], [22718, 22722], [22722, 22723], [22724, 22727], [22728, 22736], [22737, 22739], [22740, 22747], [22748, 22750], [22751, 22759], [22760, 22763], [22764, 22776], [22777, 22780], [22781, 22785], [22786, 22790], [22791, 22796], [22797, 22800], [22801, 22804], [22805, 22813], [22814, 22816], [22817, 22825], [22825, 22826]]}) 
answer: set([u'capitol'])
candidate Sentence: (0.18477143347263336, {u'tokens': [u'Kuala', u'Lumpur', u'City', u'Centre', u'Park', u'Kuala', u'Lumpur', u'also', u'has', u'a', u'mix', u'of', u'different', u'cultures', u'which', u'include', u'Malays', u',', u'Chinese', u',', u'Indians', u',', u'Eurasians', u',', u'as', u'well', u'as', u'Kadazans', u',', u'Ibans', u'and', u'other', u'indigenous', u'races', u'from', u'East', u'Malaysia', u'and', u'Peninsula', u'Malaysia', u'.'], u'lemmas': [u'Kuala', u'Lumpur', u'City', u'Centre', u'Park', u'Kuala', u'Lumpur', u'also', u'have', u'a', u'mix', u'of', u'different', u'culture', u'which', u'include', u'Malays', u',', u'Chinese', u',', u'Indians', u',', u'Eurasians', u',', u'as', u'well', u'as', u'Kadazans', u',', u'Ibans', u'and', u'other', u'indigenous', u'race', u'from', u'East', u'Malaysia', u'and', u'Peninsula', u'Malaysia', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'RB', u'VBZ', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'WDT', u'VBP', u'NNP', u',', u'NNP', u',', u'NNPS', u',', u'NNPS', u',', u'RB', u'RB', u'IN', u'NNP', u',', u'NNP', u'CC', u'JJ', u'JJ', u'NNS', u'IN', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'.'], u'char_offsets': [[9008, 9013], [9014, 9020], [9021, 9025], [9026, 9032], [9033, 9037], [9038, 9043], [9044, 9050], [9051, 9055], [9056, 9059], [9060, 9061], [9062, 9065], [9066, 9068], [9069, 9078], [9079, 9087], [9088, 9093], [9094, 9101], [9102, 9108], [9108, 9109], [9110, 9117], [9117, 9118], [9119, 9126], [9126, 9127], [9128, 9137], [9137, 9138], [9139, 9141], [9142, 9146], [9147, 9149], [9150, 9158], [9158, 9159], [9160, 9165], [9166, 9169], [9170, 9175], [9176, 9186], [9187, 9192], [9193, 9197], [9198, 9202], [9203, 9211], [9212, 9215], [9216, 9225], [9226, 9234], [9234, 9235]]}) 
answer: set([u'capitol'])
candidate Sentence: (0.17981483042240143, {u'tokens': [u'Such', u'public', u'institutions', u'include', u'the', u'International', u'Islamic', u'University', u'Malaysia', u',', u'University', u'of', u'Malaya', u',', u'the', u'Universiti', u'Teknologi', u'Malaysia', u',', u'International', u'Medical', u'University', u'and', u'the', u'Medical', u'Faculty', u'of', u'the', u'Universiti', u'Kebangsaan', u'Malaysia', u'.'], u'lemmas': [u'such', u'public', u'institution', u'include', u'the', u'International', u'Islamic', u'University', u'Malaysia', u',', u'University', u'of', u'Malaya', u',', u'the', u'Universiti', u'Teknologi', u'Malaysia', u',', u'International', u'Medical', u'University', u'and', u'the', u'Medical', u'Faculty', u'of', u'the', u'Universiti', u'Kebangsaan', u'Malaysia', u'.'], u'pos': [u'JJ', u'JJ', u'NNS', u'VBP', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'IN', u'NNP', u',', u'DT', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'NNP', u'CC', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[16884, 16888], [16889, 16895], [16896, 16908], [16909, 16916], [16917, 16920], [16921, 16934], [16935, 16942], [16943, 16953], [16954, 16962], [16962, 16963], [16964, 16974], [16975, 16977], [16978, 16984], [16984, 16985], [16986, 16989], [16990, 17000], [17001, 17010], [17011, 17019], [17019, 17020], [17021, 17034], [17035, 17042], [17043, 17053], [17054, 17057], [17058, 17061], [17062, 17069], [17070, 17077], [17078, 17080], [17081, 17084], [17085, 17095], [17096, 17106], [17107, 17115], [17115, 17116]]}) 
answer: set([u'capitol'])
candidate Sentence: (0.17733313143253326, {u'tokens': [u'The', u'main', u'airport', u',', u'Kuala', u'Lumpur', u'International', u'Airport', u'-LRB-', u'KLIA', u'-RRB-', u',', u'which', u'is', u'also', u'the', u'aviation', u'hub', u'of', u'Malaysia', u',', u'is', u'located', u'about', u'south', u'of', u'city', u'.'], u'lemmas': [u'the', u'main', u'airport', u',', u'Kuala', u'Lumpur', u'International', u'Airport', u'-lrb-', u'KLIA', u'-rrb-', u',', u'which', u'be', u'also', u'the', u'aviation', u'hub', u'of', u'Malaysia', u',', u'be', u'located', u'about', u'south', u'of', u'city', u'.'], u'pos': [u'DT', u'JJ', u'NN', u',', u'NNP', u'NNP', u'NNP', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u',', u'WDT', u'VBZ', u'RB', u'DT', u'NN', u'NN', u'IN', u'NNP', u',', u'VBZ', u'JJ', u'IN', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[35878, 35881], [35882, 35886], [35887, 35894], [35894, 35895], [35896, 35901], [35902, 35908], [35909, 35922], [35923, 35930], [35931, 35932], [35932, 35936], [35936, 35937], [35937, 35938], [35939, 35944], [35945, 35947], [35948, 35952], [35953, 35956], [35957, 35965], [35966, 35969], [35970, 35972], [35973, 35981], [35981, 35982], [35983, 35985], [35986, 35993], [35994, 35999], [36002, 36007], [36008, 36010], [36011, 36015], [36015, 36016]]}) 
answer: set([u'capitol'])
candidate Sentence: (0.17702600359916687, {u'tokens': [u'Other', u'universities', u'located', u'in', u'Kuala', u'Lumpur', u'include', u'UCSI', u'University', u',', u'International', u'Medical', u'University', u',', u'Open', u'University', u'Malaysia', u',', u'Universiti', u'Kuala', u'Lumpur', u',', u'Wawasan', u'Open', u'University', u'and', u'the', u'branch', u'campus', u'of', u'Universiti', u'Kebangsaan', u'Malaysia', u'and', u'Universiti', u'Teknologi', u'Malaysia', u'.'], u'lemmas': [u'other', u'university', u'locate', u'in', u'Kuala', u'Lumpur', u'include', u'UCSI', u'University', u',', u'International', u'Medical', u'University', u',', u'Open', u'University', u'Malaysia', u',', u'Universiti', u'Kuala', u'Lumpur', u',', u'Wawasan', u'Open', u'University', u'and', u'the', u'branch', u'campus', u'of', u'Universiti', u'Kebangsaan', u'Malaysia', u'and', u'Universiti', u'Teknologi', u'Malaysia', u'.'], u'pos': [u'JJ', u'NNS', u'VBN', u'IN', u'NNP', u'NNP', u'VBP', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'NNP', u'CC', u'DT', u'NN', u'NN', u'IN', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[39892, 39897], [39898, 39910], [39911, 39918], [39919, 39921], [39922, 39927], [39928, 39934], [39935, 39942], [39943, 39947], [39948, 39958], [39958, 39959], [39960, 39973], [39974, 39981], [39982, 39992], [39992, 39993], [39994, 39998], [39999, 40009], [40010, 40018], [40018, 40019], [40020, 40030], [40031, 40036], [40037, 40043], [40043, 40044], [40045, 40052], [40053, 40057], [40058, 40068], [40069, 40072], [40073, 40076], [40077, 40083], [40084, 40090], [40091, 40093], [40094, 40104], [40105, 40115], [40116, 40124], [40125, 40128], [40129, 40139], [40140, 40149], [40150, 40158], [40158, 40159]]}) 
answer: set([u'capitol'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is Kuala Lumpur the capitol of Malaysia? disfluent
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Kuala_Lumpur
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set3/a3.txt

No
_____________________________ test_yesno[param191] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb2cd40>, (<src.tfidf.TF_IDF object at 0x1069b5b90>, set(['kuala', 'kuala_lumpur', 'lumpur'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb2cd40>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.32371953129768372, {u'tokens': [u'Kuala', u'Lumpur', u'is', u'home', u'to', u'the', u'Parliament', u'of', u'Malaysia', u'.'], u'lemmas': [u'Kuala', u'Lumpur', u'be', u'home', u'to', u'the', u'Parliament', u'of', u'Malaysia', u'.'], u'pos': [u'NNP', u'NNP', u'VBZ', u'NN', u'TO', u'DT', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[12838, 12843], [12844, 12850], [12851, 12853], [12854, 12858], [12859, 12861], [12862, 12865], [12866, 12876], [12877, 12879], [12880, 12888], [12888, 12889]]}) 
answer: set([u'malaysium'])
candidate Sentence: (0.28108614683151245, {u'tokens': [u'Kuala', u'Lumpur', u'is', u'home', u'to', u'the', u'University', u'of', u'Malaya', u'.'], u'lemmas': [u'Kuala', u'Lumpur', u'be', u'home', u'to', u'the', u'University', u'of', u'Malaya', u'.'], u'pos': [u'NNP', u'NNP', u'VBZ', u'NN', u'TO', u'DT', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[39405, 39410], [39411, 39417], [39418, 39420], [39421, 39425], [39426, 39428], [39429, 39432], [39433, 39443], [39444, 39446], [39447, 39453], [39453, 39454]]}) 
answer: set([u'parliament', u'malaysium'])
candidate Sentence: (0.22641527652740479, {u'tokens': [u'The', u'parliament', u'is', u'composed', u'of', u'a', u'lower', u'House', u'of', u'Representatives', u'-LRB-', u'Dewan', u'Rakyat', u'-RRB-', u'and', u'an', u'upper', u'House', u'of', u'Senate', u'-LRB-', u'Dewan', u'Negara', u'-RRB-', u'.'], u'lemmas': [u'the', u'parliament', u'be', u'compose', u'of', u'a', u'lower', u'House', u'of', u'Representatives', u'-lrb-', u'Dewan', u'Rakyat', u'-rrb-', u'and', u'a', u'upper', u'House', u'of', u'Senate', u'-lrb-', u'Dewan', u'Negara', u'-rrb-', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'JJR', u'NNP', u'IN', u'NNP', u'-LRB-', u'NNP', u'NNP', u'-RRB-', u'CC', u'DT', u'JJ', u'NNP', u'IN', u'NNP', u'-LRB-', u'NNP', u'NNP', u'-RRB-', u'.'], u'char_offsets': [[12890, 12893], [12894, 12904], [12905, 12907], [12908, 12916], [12917, 12919], [12920, 12921], [12922, 12927], [12928, 12933], [12934, 12936], [12937, 12952], [12953, 12954], [12954, 12959], [12960, 12966], [12966, 12967], [12968, 12971], [12972, 12974], [12975, 12980], [12981, 12986], [12987, 12989], [12990, 12996], [12997, 12998], [12998, 13003], [13004, 13010], [13010, 13011], [13011, 13012]]}) 
answer: set([u'home', u'malaysium'])
candidate Sentence: (0.14297240972518921, {u'tokens': [u'In', u'addition', u',', u'Kuala', u'Lumpur', u'is', u'home', u'to', u'the', u'tallest', u'twin', u'buildings', u'in', u'the', u'world', u',', u'the', u'Petronas', u'Twin', u'Towers', u'.'], u'lemmas': [u'in', u'addition', u',', u'Kuala', u'Lumpur', u'be', u'home', u'to', u'the', u'tallest', u'twin', u'building', u'in', u'the', u'world', u',', u'the', u'Petronas', u'Twin', u'Towers', u'.'], u'pos': [u'IN', u'NN', u',', u'NNP', u'NNP', u'VBZ', u'NN', u'TO', u'DT', u'JJS', u'JJ', u'NNS', u'IN', u'DT', u'NN', u',', u'DT', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[1698, 1700], [1701, 1709], [1709, 1710], [1711, 1716], [1717, 1723], [1724, 1726], [1727, 1731], [1732, 1734], [1735, 1738], [1739, 1746], [1747, 1751], [1752, 1761], [1762, 1764], [1765, 1768], [1769, 1774], [1774, 1775], [1776, 1779], [1780, 1788], [1789, 1793], [1794, 1800], [1800, 1801]]}) 
answer: set([u'parliament', u'malaysium'])
candidate Sentence: (0.12345829606056213, {u'tokens': [u'The', u'city', u'was', u'once', u'home', u'to', u'the', u'executive', u'and', u'judicial', u'branches', u'of', u'the', u'federal', u'government', u',', u'but', u'they', u'have', u'since', u'moved', u'to', u'Putrajaya', u'starting', u'in', u'1999', u'.'], u'lemmas': [u'the', u'city', u'be', u'once', u'home', u'to', u'the', u'executive', u'and', u'judicial', u'branch', u'of', u'the', u'federal', u'government', u',', u'but', u'they', u'have', u'since', u'move', u'to', u'Putrajaya', u'start', u'in', u'1999', u'.'], u'pos': [u'DT', u'NN', u'VBD', u'RB', u'NN', u'TO', u'DT', u'NN', u'CC', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u',', u'CC', u'PRP', u'VBP', u'IN', u'VBN', u'TO', u'NNP', u'VBG', u'IN', u'CD', u'.'], u'char_offsets': [[628, 631], [632, 636], [637, 640], [641, 645], [646, 650], [651, 653], [654, 657], [658, 667], [668, 671], [672, 680], [681, 689], [690, 692], [693, 696], [697, 704], [705, 715], [715, 716], [717, 720], [721, 725], [726, 730], [731, 736], [737, 742], [743, 745], [746, 755], [756, 764], [765, 767], [768, 772], [772, 773]]}) 
answer: set([u'parliament', u'malaysium'])
candidate Sentence: (0.10794705152511597, {u'tokens': [u'It', u'is', u'also', u'known', u'as', u'Pasar', u'Seni', u'in', u'Malay', u'.'], u'lemmas': [u'it', u'be', u'also', u'know', u'as', u'Pasar', u'Seni', u'in', u'Malay', u'.'], u'pos': [u'PRP', u'VBZ', u'RB', u'VBN', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[22671, 22673], [22674, 22676], [22677, 22681], [22682, 22687], [22688, 22690], [22691, 22696], [22697, 22701], [22702, 22704], [22705, 22710], [22710, 22711]]}) 
answer: set([u'home', u'parliament', u'malaysium'])
candidate Sentence: (0.10399295389652252, {u'tokens': [u'It', u'is', u'located', u'at', u'Jalan', u'Lembah', u'Perdana', u'next', u'to', u'the', u'National', u'Mosque', u'.'], u'lemmas': [u'it', u'be', u'located', u'at', u'Jalan', u'Lembah', u'Perdana', u'next', u'to', u'the', u'National', u'Mosque', u'.'], u'pos': [u'PRP', u'VBZ', u'JJ', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'TO', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[27713, 27715], [27716, 27718], [27719, 27726], [27727, 27729], [27730, 27735], [27736, 27742], [27743, 27750], [27751, 27755], [27756, 27758], [27759, 27762], [27763, 27771], [27772, 27778], [27778, 27779]]}) 
answer: set([u'home', u'parliament', u'malaysium'])
candidate Sentence: (0.10173468291759491, {u'tokens': [u'These', u'residual', u'forest', u'areas', u'are', u'home', u'to', u'a', u'number', u'of', u'fauna', u'species', u'particularly', u'monkeys', u',', u'tree', u'shrews', u',', u'squirrels', u'and', u'birds', u'.'], u'lemmas': [u'these', u'residual', u'forest', u'area', u'be', u'home', u'to', u'a', u'number', u'of', u'fauna', u'species', u'particularly', u'monkey', u',', u'tree', u'shrew', u',', u'squirrel', u'and', u'bird', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NNS', u'VBP', u'NN', u'TO', u'DT', u'NN', u'IN', u'NNS', u'NNS', u'RB', u'NNS', u',', u'NN', u'NNS', u',', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[26846, 26851], [26852, 26860], [26861, 26867], [26868, 26873], [26874, 26877], [26878, 26882], [26883, 26885], [26886, 26887], [26888, 26894], [26895, 26897], [26898, 26903], [26904, 26911], [26912, 26924], [26925, 26932], [26932, 26933], [26934, 26938], [26939, 26945], [26945, 26946], [26947, 26956], [26957, 26960], [26961, 26966], [26966, 26967]]}) 
answer: set([u'parliament', u'malaysium'])
candidate Sentence: (0.099374100565910339, {u'tokens': [u'It', u'was', u'established', u'to', u'be', u'a', u'major', u'centre', u'for', u'military', u'and', u'defence', u'technology', u'studies', u'.'], u'lemmas': [u'it', u'be', u'establish', u'to', u'be', u'a', u'major', u'centre', u'for', u'military', u'and', u'defence', u'technology', u'study', u'.'], u'pos': [u'PRP', u'VBD', u'VBN', u'TO', u'VB', u'DT', u'JJ', u'NN', u'IN', u'JJ', u'CC', u'NN', u'NN', u'NNS', u'.'], u'char_offsets': [[40287, 40289], [40290, 40293], [40294, 40305], [40306, 40308], [40309, 40311], [40312, 40313], [40314, 40319], [40320, 40326], [40327, 40330], [40331, 40339], [40340, 40343], [40344, 40351], [40352, 40362], [40363, 40370], [40370, 40371]]}) 
answer: set([u'home', u'parliament', u'malaysium'])
candidate Sentence: (0.095188133418560028, {u'tokens': [u'Kuala', u'Lumpur', u'City', u'Centre', u'Park', u'as', u'seen', u'from', u'the', u'Traders', u'Hotel', u'The', u'Perdana', u'Lake', u'Gardens', u',', u'a', u'manicured', u'garden', u'near', u'the', u'Malaysian', u'Parliament', u'building', u',', u'was', u'once', u'home', u'to', u'a', u'British', u'colonial', u'official', u'.'], u'lemmas': [u'Kuala', u'Lumpur', u'City', u'Centre', u'Park', u'as', u'see', u'from', u'the', u'trader', u'hotel', u'the', u'Perdana', u'Lake', u'Gardens', u',', u'a', u'manicure', u'garden', u'near', u'the', u'malaysian', u'Parliament', u'building', u',', u'be', u'once', u'home', u'to', u'a', u'british', u'colonial', u'official', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'VBN', u'IN', u'DT', u'NNS', u'NN', u'DT', u'NNP', u'NNP', u'NNP', u',', u'DT', u'VBN', u'NN', u'IN', u'DT', u'JJ', u'NNP', u'NN', u',', u'VBD', u'RB', u'NN', u'TO', u'DT', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[25805, 25810], [25811, 25817], [25818, 25822], [25823, 25829], [25830, 25834], [25835, 25837], [25838, 25842], [25843, 25847], [25848, 25851], [25852, 25859], [25860, 25865], [25866, 25869], [25870, 25877], [25878, 25882], [25883, 25890], [25890, 25891], [25892, 25893], [25896, 25905], [25906, 25912], [25913, 25917], [25918, 25921], [25922, 25931], [25932, 25942], [25943, 25951], [25951, 25952], [25953, 25956], [25957, 25961], [25962, 25966], [25967, 25969], [25970, 25971], [25972, 25979], [25980, 25988], [25989, 25997], [25997, 25998]]}) 
answer: set([u'malaysium'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

is it home to the parliament of malaysia?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Kuala_Lumpur
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set3/a3.txt

No
_____________________________ test_yesno[param192] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb2cd88>, (<src.tfidf.TF_IDF object at 0x108044690>, set(['lobster'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb2cd88>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.28565219044685364, {u'tokens': [u'They', u'are', u'invertebrates', u',', u'with', u'a', u'hard', u'protective', u'exoskeleton', u'.'], u'lemmas': [u'they', u'be', u'invertebrate', u',', u'with', u'a', u'hard', u'protective', u'exoskeleton', u'.'], u'pos': [u'PRP', u'VBP', u'NNS', u',', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[959, 963], [964, 967], [968, 981], [981, 982], [983, 987], [988, 989], [990, 994], [995, 1005], [1006, 1017], [1017, 1018]]}) 
answer: set([])
candidate Sentence: (0.17940044403076172, {u'tokens': [u'These', u'findings', u'have', u'been', u'replicated', u'for', u'other', u'invertebrate', u'species', u',', u'but', u'similar', u'data', u'is', u'not', u'yet', u'available', u'for', u'lobsters', u'.'], u'lemmas': [u'these', u'finding', u'have', u'be', u'replicate', u'for', u'other', u'invertebrate', u'species', u',', u'but', u'similar', u'datum', u'be', u'not', u'yet', u'available', u'for', u'lobster', u'.'], u'pos': [u'DT', u'NNS', u'VBP', u'VBN', u'VBN', u'IN', u'JJ', u'JJ', u'NNS', u',', u'CC', u'JJ', u'NNS', u'VBZ', u'RB', u'RB', u'JJ', u'IN', u'NNS', u'.'], u'char_offsets': [[10873, 10878], [10879, 10887], [10888, 10892], [10893, 10897], [10898, 10908], [10909, 10912], [10913, 10918], [10919, 10931], [10932, 10939], [10939, 10940], [10942, 10945], [10946, 10953], [10954, 10958], [10959, 10961], [10962, 10965], [10966, 10969], [10970, 10979], [10980, 10983], [10984, 10992], [10992, 10993]]}) 
answer: set([])
candidate Sentence: (0.11384820938110352, {u'tokens': [u'It', u'and', u'the', u'related', u'lobster', u'poems', u'can', u'be', u'read', u'here', u':', u'``', u'Will', u'you', u',', u'wont', u'you', u',', u'will', u'you', u',', u'wont', u'you', u',', u'wont', u'you', u'join', u'the', u'dance', u'?', u"''"], u'lemmas': [u'it', u'and', u'the', u'related', u'lobster', u'poem', u'can', u'be', u'read', u'here', u':', u'``', u'will', u'you', u',', u'wont', u'you', u',', u'will', u'you', u',', u'wont', u'you', u',', u'wont', u'you', u'join', u'the', u'dance', u'?', u"''"], u'pos': [u'PRP', u'CC', u'DT', u'JJ', u'NN', u'NNS', u'MD', u'VB', u'VBN', u'RB', u':', u'``', u'MD', u'PRP', u',', u'VB', u'PRP', u',', u'MD', u'PRP', u',', u'VB', u'PRP', u',', u'VB', u'PRP', u'VB', u'DT', u'NN', u'.', u"''"], u'char_offsets': [[12532, 12534], [12535, 12538], [12539, 12542], [12543, 12550], [12551, 12558], [12559, 12564], [12565, 12568], [12569, 12571], [12572, 12576], [12578, 12582], [12582, 12583], [12584, 12585], [12585, 12589], [12590, 12593], [12593, 12594], [12595, 12599], [12600, 12603], [12603, 12604], [12605, 12609], [12610, 12613], [12613, 12614], [12615, 12619], [12620, 12623], [12623, 12624], [12625, 12629], [12630, 12633], [12634, 12638], [12639, 12642], [12643, 12648], [12648, 12649], [12649, 12650]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.013432034291327, {u'tokens': [u'Though', u'several', u'groups', u'of', u'crustaceans', u'are', u'known', u'as', u'``', u'lobsters', u',', u"''", u'the', u'clawed', u'lobsters', u'are', u'most', u'often', u'associated', u'with', u'the', u'name', u'.'], u'lemmas': [u'though', u'several', u'group', u'of', u'crustacean', u'be', u'know', u'as', u'``', u'lobster', u',', u"''", u'the', u'clawed', u'lobster', u'be', u'most', u'often', u'associate', u'with', u'the', u'name', u'.'], u'pos': [u'IN', u'JJ', u'NNS', u'IN', u'NNS', u'VBP', u'VBN', u'IN', u'``', u'NNS', u',', u"''", u'DT', u'JJ', u'NNS', u'VBP', u'RBS', u'RB', u'VBN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[233, 239], [240, 247], [248, 254], [255, 257], [258, 269], [270, 273], [274, 279], [280, 282], [283, 284], [284, 292], [292, 293], [293, 294], [295, 298], [299, 305], [306, 314], [315, 318], [319, 323], [324, 329], [330, 340], [341, 345], [346, 349], [350, 354], [354, 355]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.013387018814682961, {u'tokens': [u'Although', u'lobster', u'skin', u'has', u'been', u'found', u'in', u'lobster', u'stomachs', u',', u'this', u'is', u'because', u'lobsters', u'eat', u'their', u'shed', u'skin', u'after', u'molting', u'.'], u'lemmas': [u'although', u'lobster', u'skin', u'have', u'be', u'find', u'in', u'lobster', u'stomach', u',', u'this', u'be', u'because', u'lobster', u'eat', u'they', u'shed', u'skin', u'after', u'molt', u'.'], u'pos': [u'IN', u'NN', u'NN', u'VBZ', u'VBN', u'VBN', u'IN', u'NN', u'NNS', u',', u'DT', u'VBZ', u'IN', u'NNS', u'VBP', u'PRP$', u'NN', u'NN', u'IN', u'VBG', u'.'], u'char_offsets': [[1967, 1975], [1976, 1983], [1984, 1988], [1989, 1992], [1993, 1997], [1998, 2003], [2004, 2006], [2007, 2014], [2015, 2023], [2023, 2024], [2025, 2029], [2030, 2032], [2033, 2040], [2041, 2049], [2050, 2053], [2054, 2059], [2060, 2064], [2065, 2069], [2070, 2075], [2076, 2083], [2083, 2084]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.012895837426185608, {u'tokens': [u'Lobsters', u'are', u'found', u'in', u'all', u'oceans', u'.'], u'lemmas': [u'lobster', u'be', u'find', u'in', u'all', u'ocean', u'.'], u'pos': [u'NNS', u'VBP', u'VBN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[751, 759], [760, 763], [764, 769], [770, 772], [773, 776], [777, 783], [783, 784]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.012847550213336945, {u'tokens': [u'Lobster', u'is', u'fished', u'in', u'water', u'between', u',', u'although', u'some', u'lobsters', u'live', u'at', u'.'], u'lemmas': [u'lobster', u'be', u'fish', u'in', u'water', u'between', u',', u'although', u'some', u'lobster', u'live', u'at', u'.'], u'pos': [u'NN', u'VBZ', u'VBN', u'IN', u'NN', u'IN', u',', u'IN', u'DT', u'NNS', u'VBP', u'IN', u'.'], u'char_offsets': [[11977, 11984], [11985, 11987], [11988, 11994], [11995, 11997], [11998, 12003], [12004, 12011], [12013, 12014], [12015, 12023], [12024, 12028], [12029, 12037], [12038, 12042], [12043, 12045], [12047, 12048]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.012270419858396053, {u'tokens': [u'Clawed', u'lobsters', u'are', u'not', u'closely', u'related', u'to', u'spiny', u'lobsters', u'or', u'slipper', u'lobsters', u',', u'which', u'have', u'no', u'claws', u'-LRB-', u'chelae', u'-RRB-', u',', u'or', u'squat', u'lobsters', u'.'], u'lemmas': [u'claw', u'lobster', u'be', u'not', u'closely', u'related', u'to', u'spiny', u'lobster', u'or', u'slipper', u'lobster', u',', u'which', u'have', u'no', u'claw', u'-lrb-', u'chela', u'-rrb-', u',', u'or', u'squat', u'lobster', u'.'], u'pos': [u'VBN', u'NNS', u'VBP', u'RB', u'RB', u'JJ', u'TO', u'JJ', u'NNS', u'CC', u'NN', u'NNS', u',', u'WDT', u'VBP', u'DT', u'NNS', u'-LRB-', u'NNS', u'-RRB-', u',', u'CC', u'JJ', u'NNS', u'.'], u'char_offsets': [[408, 414], [415, 423], [424, 427], [428, 431], [432, 439], [440, 447], [448, 450], [451, 456], [457, 465], [466, 468], [469, 476], [477, 485], [485, 486], [487, 492], [493, 497], [498, 500], [501, 506], [507, 508], [508, 514], [514, 515], [515, 516], [517, 519], [520, 525], [526, 534], [534, 535]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.011324957013130188, {u'tokens': [u'In', u'fact', u',', u'older', u'lobsters', u'are', u'more', u'fertile', u'than', u'younger', u'lobsters', u'.'], u'lemmas': [u'in', u'fact', u',', u'older', u'lobster', u'be', u'more', u'fertile', u'than', u'younger', u'lobster', u'.'], u'pos': [u'IN', u'NN', u',', u'JJR', u'NNS', u'VBP', u'RBR', u'JJ', u'IN', u'JJR', u'NNS', u'.'], u'char_offsets': [[3969, 3971], [3972, 3976], [3976, 3977], [3978, 3983], [3984, 3992], [3993, 3996], [3997, 4001], [4002, 4009], [4010, 4014], [4015, 4022], [4023, 4031], [4031, 4032]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.011264082044363022, {u'tokens': [u'Due', u'to', u'the', u'ambiguous', u'nature', u'of', u'suffering', u',', u'the', u'issue', u'of', u'lobster', u'pain', u'may', u'be', u'argued', u'by', u'analogy', u'that', u'lobster', u'biology', u'is', u'similar', u'to', u'human', u'biology', u'or', u'that', u'lobster', u'behavior', u'warrants', u'assumptions', u'that', u'lobsters', u'can', u'feel', u'pain', u'.'], u'lemmas': [u'due', u'to', u'the', u'ambiguous', u'nature', u'of', u'suffering', u',', u'the', u'issue', u'of', u'lobster', u'pain', u'may', u'be', u'argue', u'by', u'analogy', u'that', u'lobster', u'biology', u'be', u'similar', u'to', u'human', u'biology', u'or', u'that', u'lobster', u'behavior', u'warrant', u'assumption', u'that', u'lobster', u'can', u'feel', u'pain', u'.'], u'pos': [u'JJ', u'TO', u'DT', u'JJ', u'NN', u'IN', u'NN', u',', u'DT', u'NN', u'IN', u'NN', u'NN', u'MD', u'VB', u'VBN', u'IN', u'NN', u'WDT', u'NN', u'NN', u'VBZ', u'JJ', u'TO', u'JJ', u'NN', u'CC', u'IN', u'NN', u'NN', u'NNS', u'NNS', u'WDT', u'NNS', u'MD', u'VB', u'NN', u'.'], u'char_offsets': [[7372, 7375], [7376, 7378], [7379, 7382], [7383, 7392], [7393, 7399], [7400, 7402], [7403, 7412], [7412, 7413], [7414, 7417], [7418, 7423], [7424, 7426], [7427, 7434], [7435, 7439], [7440, 7443], [7444, 7446], [7447, 7453], [7454, 7456], [7457, 7464], [7465, 7469], [7470, 7477], [7478, 7485], [7486, 7488], [7489, 7496], [7497, 7499], [7500, 7505], [7506, 7513], [7514, 7516], [7517, 7521], [7522, 7529], [7530, 7538], [7539, 7547], [7548, 7559], [7560, 7564], [7565, 7573], [7574, 7577], [7578, 7582], [7583, 7587], [7587, 7588]]}) 
answer: set([u'invertebr'])
['Yes', 'No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Are lobsters invertebrates?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Lobster
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set1/a5.txt

No
_____________________________ test_yesno[param193] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb2cdd0>, (<src.tfidf.TF_IDF object at 0x108044690>, set(['lobster'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb2cdd0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.28565219044685364, {u'tokens': [u'They', u'are', u'invertebrates', u',', u'with', u'a', u'hard', u'protective', u'exoskeleton', u'.'], u'lemmas': [u'they', u'be', u'invertebrate', u',', u'with', u'a', u'hard', u'protective', u'exoskeleton', u'.'], u'pos': [u'PRP', u'VBP', u'NNS', u',', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[959, 963], [964, 967], [968, 981], [981, 982], [983, 987], [988, 989], [990, 994], [995, 1005], [1006, 1017], [1017, 1018]]}) 
answer: set([])
candidate Sentence: (0.17940044403076172, {u'tokens': [u'These', u'findings', u'have', u'been', u'replicated', u'for', u'other', u'invertebrate', u'species', u',', u'but', u'similar', u'data', u'is', u'not', u'yet', u'available', u'for', u'lobsters', u'.'], u'lemmas': [u'these', u'finding', u'have', u'be', u'replicate', u'for', u'other', u'invertebrate', u'species', u',', u'but', u'similar', u'datum', u'be', u'not', u'yet', u'available', u'for', u'lobster', u'.'], u'pos': [u'DT', u'NNS', u'VBP', u'VBN', u'VBN', u'IN', u'JJ', u'JJ', u'NNS', u',', u'CC', u'JJ', u'NNS', u'VBZ', u'RB', u'RB', u'JJ', u'IN', u'NNS', u'.'], u'char_offsets': [[10873, 10878], [10879, 10887], [10888, 10892], [10893, 10897], [10898, 10908], [10909, 10912], [10913, 10918], [10919, 10931], [10932, 10939], [10939, 10940], [10942, 10945], [10946, 10953], [10954, 10958], [10959, 10961], [10962, 10965], [10966, 10969], [10970, 10979], [10980, 10983], [10984, 10992], [10992, 10993]]}) 
answer: set([])
candidate Sentence: (0.11384820938110352, {u'tokens': [u'It', u'and', u'the', u'related', u'lobster', u'poems', u'can', u'be', u'read', u'here', u':', u'``', u'Will', u'you', u',', u'wont', u'you', u',', u'will', u'you', u',', u'wont', u'you', u',', u'wont', u'you', u'join', u'the', u'dance', u'?', u"''"], u'lemmas': [u'it', u'and', u'the', u'related', u'lobster', u'poem', u'can', u'be', u'read', u'here', u':', u'``', u'will', u'you', u',', u'wont', u'you', u',', u'will', u'you', u',', u'wont', u'you', u',', u'wont', u'you', u'join', u'the', u'dance', u'?', u"''"], u'pos': [u'PRP', u'CC', u'DT', u'JJ', u'NN', u'NNS', u'MD', u'VB', u'VBN', u'RB', u':', u'``', u'MD', u'PRP', u',', u'VB', u'PRP', u',', u'MD', u'PRP', u',', u'VB', u'PRP', u',', u'VB', u'PRP', u'VB', u'DT', u'NN', u'.', u"''"], u'char_offsets': [[12532, 12534], [12535, 12538], [12539, 12542], [12543, 12550], [12551, 12558], [12559, 12564], [12565, 12568], [12569, 12571], [12572, 12576], [12578, 12582], [12582, 12583], [12584, 12585], [12585, 12589], [12590, 12593], [12593, 12594], [12595, 12599], [12600, 12603], [12603, 12604], [12605, 12609], [12610, 12613], [12613, 12614], [12615, 12619], [12620, 12623], [12623, 12624], [12625, 12629], [12630, 12633], [12634, 12638], [12639, 12642], [12643, 12648], [12648, 12649], [12649, 12650]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.013432034291327, {u'tokens': [u'Though', u'several', u'groups', u'of', u'crustaceans', u'are', u'known', u'as', u'``', u'lobsters', u',', u"''", u'the', u'clawed', u'lobsters', u'are', u'most', u'often', u'associated', u'with', u'the', u'name', u'.'], u'lemmas': [u'though', u'several', u'group', u'of', u'crustacean', u'be', u'know', u'as', u'``', u'lobster', u',', u"''", u'the', u'clawed', u'lobster', u'be', u'most', u'often', u'associate', u'with', u'the', u'name', u'.'], u'pos': [u'IN', u'JJ', u'NNS', u'IN', u'NNS', u'VBP', u'VBN', u'IN', u'``', u'NNS', u',', u"''", u'DT', u'JJ', u'NNS', u'VBP', u'RBS', u'RB', u'VBN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[233, 239], [240, 247], [248, 254], [255, 257], [258, 269], [270, 273], [274, 279], [280, 282], [283, 284], [284, 292], [292, 293], [293, 294], [295, 298], [299, 305], [306, 314], [315, 318], [319, 323], [324, 329], [330, 340], [341, 345], [346, 349], [350, 354], [354, 355]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.013387018814682961, {u'tokens': [u'Although', u'lobster', u'skin', u'has', u'been', u'found', u'in', u'lobster', u'stomachs', u',', u'this', u'is', u'because', u'lobsters', u'eat', u'their', u'shed', u'skin', u'after', u'molting', u'.'], u'lemmas': [u'although', u'lobster', u'skin', u'have', u'be', u'find', u'in', u'lobster', u'stomach', u',', u'this', u'be', u'because', u'lobster', u'eat', u'they', u'shed', u'skin', u'after', u'molt', u'.'], u'pos': [u'IN', u'NN', u'NN', u'VBZ', u'VBN', u'VBN', u'IN', u'NN', u'NNS', u',', u'DT', u'VBZ', u'IN', u'NNS', u'VBP', u'PRP$', u'NN', u'NN', u'IN', u'VBG', u'.'], u'char_offsets': [[1967, 1975], [1976, 1983], [1984, 1988], [1989, 1992], [1993, 1997], [1998, 2003], [2004, 2006], [2007, 2014], [2015, 2023], [2023, 2024], [2025, 2029], [2030, 2032], [2033, 2040], [2041, 2049], [2050, 2053], [2054, 2059], [2060, 2064], [2065, 2069], [2070, 2075], [2076, 2083], [2083, 2084]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.012895837426185608, {u'tokens': [u'Lobsters', u'are', u'found', u'in', u'all', u'oceans', u'.'], u'lemmas': [u'lobster', u'be', u'find', u'in', u'all', u'ocean', u'.'], u'pos': [u'NNS', u'VBP', u'VBN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[751, 759], [760, 763], [764, 769], [770, 772], [773, 776], [777, 783], [783, 784]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.012847550213336945, {u'tokens': [u'Lobster', u'is', u'fished', u'in', u'water', u'between', u',', u'although', u'some', u'lobsters', u'live', u'at', u'.'], u'lemmas': [u'lobster', u'be', u'fish', u'in', u'water', u'between', u',', u'although', u'some', u'lobster', u'live', u'at', u'.'], u'pos': [u'NN', u'VBZ', u'VBN', u'IN', u'NN', u'IN', u',', u'IN', u'DT', u'NNS', u'VBP', u'IN', u'.'], u'char_offsets': [[11977, 11984], [11985, 11987], [11988, 11994], [11995, 11997], [11998, 12003], [12004, 12011], [12013, 12014], [12015, 12023], [12024, 12028], [12029, 12037], [12038, 12042], [12043, 12045], [12047, 12048]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.012270419858396053, {u'tokens': [u'Clawed', u'lobsters', u'are', u'not', u'closely', u'related', u'to', u'spiny', u'lobsters', u'or', u'slipper', u'lobsters', u',', u'which', u'have', u'no', u'claws', u'-LRB-', u'chelae', u'-RRB-', u',', u'or', u'squat', u'lobsters', u'.'], u'lemmas': [u'claw', u'lobster', u'be', u'not', u'closely', u'related', u'to', u'spiny', u'lobster', u'or', u'slipper', u'lobster', u',', u'which', u'have', u'no', u'claw', u'-lrb-', u'chela', u'-rrb-', u',', u'or', u'squat', u'lobster', u'.'], u'pos': [u'VBN', u'NNS', u'VBP', u'RB', u'RB', u'JJ', u'TO', u'JJ', u'NNS', u'CC', u'NN', u'NNS', u',', u'WDT', u'VBP', u'DT', u'NNS', u'-LRB-', u'NNS', u'-RRB-', u',', u'CC', u'JJ', u'NNS', u'.'], u'char_offsets': [[408, 414], [415, 423], [424, 427], [428, 431], [432, 439], [440, 447], [448, 450], [451, 456], [457, 465], [466, 468], [469, 476], [477, 485], [485, 486], [487, 492], [493, 497], [498, 500], [501, 506], [507, 508], [508, 514], [514, 515], [515, 516], [517, 519], [520, 525], [526, 534], [534, 535]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.011324957013130188, {u'tokens': [u'In', u'fact', u',', u'older', u'lobsters', u'are', u'more', u'fertile', u'than', u'younger', u'lobsters', u'.'], u'lemmas': [u'in', u'fact', u',', u'older', u'lobster', u'be', u'more', u'fertile', u'than', u'younger', u'lobster', u'.'], u'pos': [u'IN', u'NN', u',', u'JJR', u'NNS', u'VBP', u'RBR', u'JJ', u'IN', u'JJR', u'NNS', u'.'], u'char_offsets': [[3969, 3971], [3972, 3976], [3976, 3977], [3978, 3983], [3984, 3992], [3993, 3996], [3997, 4001], [4002, 4009], [4010, 4014], [4015, 4022], [4023, 4031], [4031, 4032]]}) 
answer: set([u'invertebr'])
candidate Sentence: (0.011264082044363022, {u'tokens': [u'Due', u'to', u'the', u'ambiguous', u'nature', u'of', u'suffering', u',', u'the', u'issue', u'of', u'lobster', u'pain', u'may', u'be', u'argued', u'by', u'analogy', u'that', u'lobster', u'biology', u'is', u'similar', u'to', u'human', u'biology', u'or', u'that', u'lobster', u'behavior', u'warrants', u'assumptions', u'that', u'lobsters', u'can', u'feel', u'pain', u'.'], u'lemmas': [u'due', u'to', u'the', u'ambiguous', u'nature', u'of', u'suffering', u',', u'the', u'issue', u'of', u'lobster', u'pain', u'may', u'be', u'argue', u'by', u'analogy', u'that', u'lobster', u'biology', u'be', u'similar', u'to', u'human', u'biology', u'or', u'that', u'lobster', u'behavior', u'warrant', u'assumption', u'that', u'lobster', u'can', u'feel', u'pain', u'.'], u'pos': [u'JJ', u'TO', u'DT', u'JJ', u'NN', u'IN', u'NN', u',', u'DT', u'NN', u'IN', u'NN', u'NN', u'MD', u'VB', u'VBN', u'IN', u'NN', u'WDT', u'NN', u'NN', u'VBZ', u'JJ', u'TO', u'JJ', u'NN', u'CC', u'IN', u'NN', u'NN', u'NNS', u'NNS', u'WDT', u'NNS', u'MD', u'VB', u'NN', u'.'], u'char_offsets': [[7372, 7375], [7376, 7378], [7379, 7382], [7383, 7392], [7393, 7399], [7400, 7402], [7403, 7412], [7412, 7413], [7414, 7417], [7418, 7423], [7424, 7426], [7427, 7434], [7435, 7439], [7440, 7443], [7444, 7446], [7447, 7453], [7454, 7456], [7457, 7464], [7465, 7469], [7470, 7477], [7478, 7485], [7486, 7488], [7489, 7496], [7497, 7499], [7500, 7505], [7506, 7513], [7514, 7516], [7517, 7521], [7522, 7529], [7530, 7538], [7539, 7547], [7548, 7559], [7560, 7564], [7565, 7573], [7574, 7577], [7578, 7582], [7583, 7587], [7587, 7588]]}) 
answer: set([u'invertebr'])
['Yes', 'No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Are lobsters invertebrates?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Lobster
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set1/a5.txt

No
_____________________________ test_yesno[param200] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb2cfc8>, (<src.tfidf.TF_IDF object at 0x1069b55d0>, set(['lyre'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb2cfc8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.45988816022872925, {u'tokens': [u'The', u'lyre', u'is', u'a', u'stringed', u'musical', u'instrument', u'well', u'known', u'for', u'its', u'use', u'in', u'classical', u'antiquity', u'and', u'later', u'.'], u'lemmas': [u'the', u'lyre', u'be', u'a', u'stringed', u'musical', u'instrument', u'well', u'know', u'for', u'its', u'use', u'in', u'classical', u'antiquity', u'and', u'later', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'DT', u'JJ', u'JJ', u'NN', u'RB', u'VBN', u'IN', u'PRP$', u'NN', u'IN', u'JJ', u'NN', u'CC', u'RB', u'.'], u'char_offsets': [[0, 3], [5, 9], [10, 12], [13, 14], [15, 23], [24, 31], [32, 42], [43, 47], [48, 53], [54, 57], [58, 61], [62, 65], [66, 68], [69, 78], [79, 88], [89, 92], [93, 98], [98, 99]]}) 
answer: set([])
candidate Sentence: (0.28501662611961365, {u'tokens': [u'Lyres', u'from', u'various', u'times', u'and', u'places', u'are', u'regarded', u'by', u'some', u'organologists', u'-LRB-', u'specialists', u'in', u'the', u'history', u'of', u'musical', u'instruments', u'-RRB-', u'as', u'a', u'branch', u'of', u'the', u'zither', u'family', u',', u'a', u'general', u'category', u'which', u'includes', u'many', u'different', u'stringed', u'instruments', u',', u'such', u'as', u'lutes', u',', u'guitars', u',', u'kantele', u',', u'and', u'psalteries', u',', u'not', u'just', u'zithers', u'.'], u'lemmas': [u'lyre', u'from', u'various', u'time', u'and', u'place', u'be', u'regard', u'by', u'some', u'organologist', u'-lrb-', u'specialist', u'in', u'the', u'history', u'of', u'musical', u'instrument', u'-rrb-', u'as', u'a', u'branch', u'of', u'the', u'zither', u'family', u',', u'a', u'general', u'category', u'which', u'include', u'many', u'different', u'stringed', u'instrument', u',', u'such', u'as', u'lute', u',', u'guitar', u',', u'kantele', u',', u'and', u'psaltery', u',', u'not', u'just', u'zither', u'.'], u'pos': [u'NNS', u'IN', u'JJ', u'NNS', u'CC', u'NNS', u'VBP', u'VBN', u'IN', u'DT', u'NNS', u'-LRB-', u'NNS', u'IN', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'-RRB-', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'NN', u',', u'DT', u'JJ', u'NN', u'WDT', u'VBZ', u'JJ', u'JJ', u'JJ', u'NNS', u',', u'JJ', u'IN', u'NNS', u',', u'NNS', u',', u'NN', u',', u'CC', u'NNS', u',', u'RB', u'RB', u'NNS', u'.'], u'char_offsets': [[401, 406], [407, 411], [412, 419], [420, 425], [426, 429], [430, 436], [437, 440], [441, 449], [450, 452], [453, 457], [458, 471], [472, 473], [473, 484], [485, 487], [488, 491], [492, 499], [500, 502], [503, 510], [511, 522], [522, 523], [524, 526], [527, 528], [529, 535], [536, 538], [539, 542], [543, 549], [550, 556], [556, 557], [558, 559], [560, 567], [568, 576], [577, 582], [583, 591], [592, 596], [597, 606], [607, 615], [616, 627], [627, 628], [629, 633], [634, 636], [637, 642], [642, 643], [644, 651], [651, 652], [653, 660], [660, 661], [662, 665], [666, 676], [676, 677], [678, 681], [682, 686], [687, 694], [694, 695]]}) 
answer: set([])
candidate Sentence: (0.21319462358951569, {u'tokens': [u'The', u'History', u'of', u'Musical', u'Instruments', u'-LRB-', u'New', u'York', u':', u'W.W.', u'Norton', u',', u'1940', u'-RRB-', u'.'], u'lemmas': [u'the', u'history', u'of', u'musical', u'Instruments', u'-lrb-', u'New', u'York', u':', u'W.W.', u'Norton', u',', u'1940', u'-rrb-', u'.'], u'pos': [u'DT', u'NN', u'IN', u'JJ', u'NNP', u'-LRB-', u'NNP', u'NNP', u':', u'NNP', u'NNP', u',', u'CD', u'-RRB-', u'.'], u'char_offsets': [[11790, 11793], [11794, 11801], [11802, 11804], [11805, 11812], [11813, 11824], [11825, 11826], [11826, 11829], [11830, 11834], [11834, 11835], [11836, 11840], [11841, 11847], [11847, 11848], [11849, 11853], [11853, 11854], [11854, 11855]]}) 
answer: set([u'string'])
candidate Sentence: (0.18262876570224762, {u'tokens': [u'This', u'group', u'they', u'usually', u'refer', u'to', u'as', u'the', u'lute', u'class', u',', u'after', u'the', u'instrument', u'of', u'that', u'name', u',', u'and', u'include', u'within', u'it', u'the', u'guitar', u',', u'the', u'violin', u',', u'the', u'banjo', u',', u'and', u'similar', u'stringed', u'instruments', u'with', u'fingerboards', u'.'], u'lemmas': [u'this', u'group', u'they', u'usually', u'refer', u'to', u'as', u'the', u'lute', u'class', u',', u'after', u'the', u'instrument', u'of', u'that', u'name', u',', u'and', u'include', u'within', u'it', u'the', u'guitar', u',', u'the', u'violin', u',', u'the', u'banjo', u',', u'and', u'similar', u'stringed', u'instrument', u'with', u'fingerboard', u'.'], u'pos': [u'DT', u'NN', u'PRP', u'RB', u'VBP', u'TO', u'IN', u'DT', u'NN', u'NN', u',', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u',', u'CC', u'VBP', u'IN', u'PRP', u'DT', u'NN', u',', u'DT', u'NN', u',', u'DT', u'NN', u',', u'CC', u'JJ', u'JJ', u'NNS', u'IN', u'NNS', u'.'], u'char_offsets': [[1402, 1406], [1407, 1412], [1413, 1417], [1418, 1425], [1426, 1431], [1432, 1434], [1435, 1437], [1438, 1441], [1442, 1446], [1447, 1452], [1452, 1453], [1454, 1459], [1460, 1463], [1464, 1474], [1475, 1477], [1478, 1482], [1483, 1487], [1487, 1488], [1489, 1492], [1493, 1500], [1501, 1507], [1508, 1510], [1511, 1514], [1515, 1521], [1521, 1522], [1523, 1526], [1527, 1533], [1533, 1534], [1535, 1538], [1539, 1544], [1544, 1545], [1546, 1549], [1550, 1557], [1558, 1566], [1567, 1578], [1579, 1583], [1584, 1596], [1596, 1597]]}) 
answer: set([u'music'])
candidate Sentence: (0.13711260259151459, {u'tokens': [u'Reproduction', u'of', u'the', u'lyre', u'from', u'the', u'royal', u'burial', u'at', u'Sutton', u'Hoo', u',', u'late', u'6th/early', u'7th', u'century', u'AD', u'Other', u'instruments', u'known', u'as', u'lyres', u'have', u'been', u'fashioned', u'and', u'used', u'in', u'Europe', u'outside', u'the', u'Greco-Roman', u'world', u'since', u'at', u'least', u'the', u'early', u'Middle', u'Ages', u',', u'and', u'one', u'view', u'holds', u'that', u'many', u'modern', u'stringed', u'instruments', u'are', u'late-emerging', u'examples', u'of', u'the', u'lyre', u'class', u'.'], u'lemmas': [u'Reproduction', u'of', u'the', u'lyre', u'from', u'the', u'royal', u'burial', u'at', u'Sutton', u'Hoo', u',', u'late', u'6th/early', u'7th', u'century', u'ad', u'other', u'instrument', u'know', u'as', u'lyre', u'have', u'be', u'fashion', u'and', u'use', u'in', u'Europe', u'outside', u'the', u'Greco-Roman', u'world', u'since', u'at', u'least', u'the', u'early', u'middle', u'Ages', u',', u'and', u'one', u'view', u'hold', u'that', u'many', u'modern', u'stringed', u'instrument', u'be', u'late-emerging', u'example', u'of', u'the', u'lyre', u'class', u'.'], u'pos': [u'NNP', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u',', u'JJ', u'RB', u'JJ', u'NN', u'NN', u'JJ', u'NNS', u'VBN', u'IN', u'NNS', u'VBP', u'VBN', u'VBN', u'CC', u'VBN', u'IN', u'NNP', u'IN', u'DT', u'NNP', u'NN', u'IN', u'IN', u'JJS', u'DT', u'JJ', u'NN', u'NNPS', u',', u'CC', u'CD', u'NN', u'VBZ', u'IN', u'JJ', u'JJ', u'JJ', u'NNS', u'VBP', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[8047, 8059], [8060, 8062], [8063, 8066], [8067, 8071], [8072, 8076], [8077, 8080], [8081, 8086], [8087, 8093], [8094, 8096], [8097, 8103], [8104, 8107], [8107, 8108], [8109, 8113], [8114, 8123], [8124, 8127], [8128, 8135], [8136, 8138], [8139, 8144], [8145, 8156], [8157, 8162], [8163, 8165], [8166, 8171], [8172, 8176], [8177, 8181], [8182, 8191], [8192, 8195], [8196, 8200], [8201, 8203], [8204, 8210], [8211, 8218], [8219, 8222], [8223, 8234], [8235, 8240], [8241, 8246], [8247, 8249], [8250, 8255], [8256, 8259], [8260, 8265], [8266, 8272], [8273, 8277], [8277, 8278], [8279, 8282], [8283, 8286], [8287, 8291], [8292, 8297], [8298, 8302], [8303, 8307], [8308, 8314], [8315, 8323], [8324, 8335], [8336, 8339], [8340, 8353], [8354, 8362], [8363, 8365], [8366, 8369], [8370, 8374], [8375, 8380], [8380, 8381]]}) 
answer: set([u'music'])
candidate Sentence: (0.13288977742195129, {u'tokens': [u'While', u'the', u'dates', u'of', u'origin', u'and', u'other', u'evolutionary', u'details', u'of', u'the', u'European', u'bowed', u'yoke', u'lyres', u'continue', u'to', u'be', u'disputed', u'among', u'organologists', u',', u'there', u'is', u'general', u'agreement', u'that', u'none', u'of', u'them', u'were', u'the', u'ancestors', u'of', u'modern', u'orchestral', u'bowed', u'stringed', u'instruments', u',', u'as', u'once', u'was', u'thought', u'.'], u'lemmas': [u'while', u'the', u'date', u'of', u'origin', u'and', u'other', u'evolutionary', u'detail', u'of', u'the', u'european', u'bow', u'yoke', u'lyre', u'continue', u'to', u'be', u'dispute', u'among', u'organologist', u',', u'there', u'be', u'general', u'agreement', u'that', u'none', u'of', u'they', u'be', u'the', u'ancestor', u'of', u'modern', u'orchestral', u'bow', u'stringed', u'instrument', u',', u'as', u'once', u'be', u'think', u'.'], u'pos': [u'IN', u'DT', u'NNS', u'IN', u'NN', u'CC', u'JJ', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'VBD', u'NN', u'NNS', u'VBP', u'TO', u'VB', u'VBN', u'IN', u'NNS', u',', u'EX', u'VBZ', u'JJ', u'NN', u'WDT', u'NN', u'IN', u'PRP', u'VBD', u'DT', u'NNS', u'IN', u'JJ', u'JJ', u'VBD', u'JJ', u'NNS', u',', u'IN', u'RB', u'VBD', u'VBN', u'.'], u'char_offsets': [[10147, 10152], [10153, 10156], [10157, 10162], [10163, 10165], [10166, 10172], [10173, 10176], [10177, 10182], [10183, 10195], [10196, 10203], [10204, 10206], [10207, 10210], [10211, 10219], [10220, 10225], [10226, 10230], [10231, 10236], [10237, 10245], [10246, 10248], [10249, 10251], [10252, 10260], [10261, 10266], [10267, 10280], [10280, 10281], [10282, 10287], [10288, 10290], [10291, 10298], [10299, 10308], [10309, 10313], [10314, 10318], [10319, 10321], [10322, 10326], [10327, 10331], [10332, 10335], [10336, 10345], [10346, 10348], [10349, 10355], [10356, 10366], [10367, 10372], [10373, 10381], [10382, 10393], [10393, 10394], [10395, 10397], [10398, 10402], [10403, 10406], [10407, 10414], [10414, 10415]]}) 
answer: set([u'music'])
candidate Sentence: (0.080507740378379822, {u'tokens': [u'A', u'music', u'holder', u'used', u'by', u'marching', u'bands', u'is', u'also', u'called', u'a', u'``', u'lyre', u"''", u'for', u'its', u'shape', u'similar', u'to', u'this', u'instrument', u'.'], u'lemmas': [u'a', u'music', u'holder', u'use', u'by', u'march', u'band', u'be', u'also', u'call', u'a', u'``', u'lyre', u"''", u'for', u'its', u'shape', u'similar', u'to', u'this', u'instrument', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBN', u'IN', u'VBG', u'NNS', u'VBZ', u'RB', u'VBN', u'DT', u'``', u'NN', u"''", u'IN', u'PRP$', u'NN', u'JJ', u'TO', u'DT', u'NN', u'.'], u'char_offsets': [[10614, 10615], [10616, 10621], [10622, 10628], [10629, 10633], [10634, 10636], [10637, 10645], [10646, 10651], [10652, 10654], [10655, 10659], [10660, 10666], [10667, 10668], [10669, 10670], [10670, 10674], [10674, 10675], [10676, 10679], [10680, 10683], [10684, 10689], [10690, 10697], [10698, 10700], [10701, 10705], [10706, 10716], [10716, 10717]]}) 
answer: set([u'string'])
candidate Sentence: (0.077958539128303528, {u'tokens': [u'The', u'lyre', u'of', u'Classical', u'Antiquity', u'was', u'ordinarily', u'played', u'by', u'being', u'strummed', u'with', u'a', u'plectrum', u',', u'like', u'a', u'guitar', u'or', u'a', u'zither', u',', u'rather', u'than', u'being', u'plucked', u',', u'like', u'a', u'harp', u'.'], u'lemmas': [u'the', u'lyre', u'of', u'classical', u'antiquity', u'be', u'ordinarily', u'play', u'by', u'be', u'strum', u'with', u'a', u'plectrum', u',', u'like', u'a', u'guitar', u'or', u'a', u'zither', u',', u'rather', u'than', u'be', u'pluck', u',', u'like', u'a', u'harp', u'.'], u'pos': [u'DT', u'NN', u'IN', u'JJ', u'NN', u'VBD', u'RB', u'VBN', u'IN', u'VBG', u'VBN', u'IN', u'DT', u'NN', u',', u'IN', u'DT', u'NN', u'CC', u'DT', u'NN', u',', u'RB', u'IN', u'VBG', u'VBN', u',', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[172, 175], [176, 180], [181, 183], [184, 193], [194, 203], [204, 207], [208, 218], [219, 225], [226, 228], [229, 234], [235, 243], [244, 248], [249, 250], [251, 259], [259, 260], [261, 265], [266, 267], [268, 274], [275, 277], [278, 279], [280, 286], [286, 287], [288, 294], [295, 299], [300, 305], [306, 313], [313, 314], [315, 319], [320, 321], [322, 326], [326, 327]]}) 
answer: set([u'instrument', u'music', u'string'])
candidate Sentence: (0.074648156762123108, {u'tokens': [u'Examples', u'of', u'that', u'difference', u'include', u'a', u'piano', u'-LRB-', u'a', u'keyed', u'zither', u'-RRB-', u'and', u'a', u'violin', u'-LRB-', u'referred', u'to', u'by', u'some', u'as', u'a', u'species', u'of', u'fingerboard', u'lyre', u'-RRB-', u'.'], u'lemmas': [u'example', u'of', u'that', u'difference', u'include', u'a', u'piano', u'-lrb-', u'a', u'key', u'zither', u'-rrb-', u'and', u'a', u'violin', u'-lrb-', u'refer', u'to', u'by', u'some', u'as', u'a', u'species', u'of', u'fingerboard', u'lyre', u'-rrb-', u'.'], u'pos': [u'NNS', u'IN', u'DT', u'NN', u'VBP', u'DT', u'NN', u'-LRB-', u'DT', u'VBN', u'NN', u'-RRB-', u'CC', u'DT', u'NN', u'-LRB-', u'VBN', u'TO', u'IN', u'DT', u'IN', u'DT', u'NNS', u'IN', u'NN', u'NN', u'-RRB-', u'.'], u'char_offsets': [[1069, 1077], [1078, 1080], [1081, 1085], [1086, 1096], [1097, 1104], [1105, 1106], [1107, 1112], [1113, 1114], [1114, 1115], [1116, 1121], [1122, 1128], [1128, 1129], [1130, 1133], [1134, 1135], [1136, 1142], [1143, 1144], [1144, 1152], [1153, 1155], [1156, 1158], [1159, 1163], [1164, 1166], [1167, 1168], [1169, 1176], [1177, 1179], [1180, 1191], [1192, 1196], [1196, 1197], [1197, 1198]]}) 
answer: set([u'instrument', u'music', u'string'])
candidate Sentence: (0.06408015638589859, {u'tokens': [u'There', u'are', u'two', u'basic', u'styles', u'of', u'lyra', u'fiddles', u':', u'1', u'-RRB-', u'a', u'pear-shaped', u'instrument', u'with', u'a', u'vaulted', u'back', u'which', u'is', u'found', u'in', u'the', u'Greek', u'islands', u'in', u'particular', u',', u'the', u'Dodecanese', u'and', u'Crete', u'and', u'the', u'northern', u'mainland', u'regions', u'of', u'Macedonia', u'and', u'Thrace', u';', u'and', u'2', u'-RRB-', u'an', u'instrument', u'with', u'a', u'narrow', u'rectangular', u'cylinder', u'body', u'of', u'the', u'Pontic', u'Greeks', u'who', u'trace', u'their', u'roots', u'to', u'Pontos', u'-LRB-', u'Pontus', u'-RRB-', u',', u'the', u'Black', u'Sea', u'region', u'of', u'northern', u'Turkey', u'.'], u'lemmas': [u'there', u'be', u'two', u'basic', u'style', u'of', u'lyra', u'fiddle', u':', u'1', u'-rrb-', u'a', u'pear-shaped', u'instrument', u'with', u'a', u'vault', u'back', u'which', u'be', u'find', u'in', u'the', u'greek', u'island', u'in', u'particular', u',', u'the', u'Dodecanese', u'and', u'Crete', u'and', u'the', u'northern', u'mainland', u'region', u'of', u'Macedonia', u'and', u'Thrace', u';', u'and', u'2', u'-rrb-', u'a', u'instrument', u'with', u'a', u'narrow', u'rectangular', u'cylinder', u'body', u'of', u'the', u'Pontic', u'Greeks', u'who', u'trace', u'they', u'root', u'to', u'Pontos', u'-lrb-', u'Pontus', u'-rrb-', u',', u'the', u'Black', u'Sea', u'region', u'of', u'northern', u'Turkey', u'.'], u'pos': [u'EX', u'VBP', u'CD', u'JJ', u'NNS', u'IN', u'NN', u'NNS', u':', u'LS', u'-RRB-', u'DT', u'JJ', u'NN', u'IN', u'DT', u'VBN', u'RB', u'WDT', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NNS', u'IN', u'JJ', u',', u'DT', u'NNP', u'CC', u'NNP', u'CC', u'DT', u'JJ', u'NN', u'NNS', u'IN', u'NNP', u'CC', u'NNP', u':', u'CC', u'LS', u'-RRB-', u'DT', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'NN', u'IN', u'DT', u'NNP', u'NNPS', u'WP', u'VBP', u'PRP$', u'NNS', u'TO', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u',', u'DT', u'NNP', u'NNP', u'NN', u'IN', u'JJ', u'NNP', u'.'], u'char_offsets': [[7285, 7290], [7291, 7294], [7295, 7298], [7299, 7304], [7305, 7311], [7312, 7314], [7315, 7319], [7320, 7327], [7327, 7328], [7329, 7330], [7330, 7331], [7332, 7333], [7334, 7345], [7346, 7356], [7357, 7361], [7362, 7363], [7364, 7371], [7372, 7376], [7377, 7382], [7383, 7385], [7386, 7391], [7392, 7394], [7395, 7398], [7399, 7404], [7405, 7412], [7414, 7416], [7417, 7427], [7427, 7428], [7429, 7432], [7433, 7443], [7444, 7447], [7448, 7453], [7455, 7458], [7459, 7462], [7463, 7471], [7472, 7480], [7481, 7488], [7489, 7491], [7492, 7501], [7502, 7505], [7506, 7512], [7512, 7513], [7514, 7517], [7518, 7519], [7519, 7520], [7521, 7523], [7524, 7534], [7535, 7539], [7540, 7541], [7542, 7548], [7549, 7560], [7561, 7569], [7570, 7574], [7575, 7577], [7578, 7581], [7582, 7588], [7590, 7596], [7597, 7600], [7601, 7606], [7607, 7612], [7613, 7618], [7619, 7621], [7622, 7628], [7629, 7630], [7630, 7636], [7636, 7637], [7637, 7638], [7639, 7642], [7643, 7648], [7649, 7652], [7653, 7659], [7660, 7662], [7663, 7671], [7672, 7678], [7678, 7679]]}) 
answer: set([u'music', u'string'])
['Yes', 'No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is the lyre a stringed musical instrument?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Lyre
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a10.txt

No
_____________________________ test_yesno[param202] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb31098>, (<src.tfidf.TF_IDF object at 0x10b195b10>, set(['language', 'malay', 'malay_language'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x10cb31098>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.52360594272613525, {u'tokens': [u'One', u'of', u'these', u'is', u'that', u'it', u'came', u'from', u'Sumatra', u'island', u'.'], u'lemmas': [u'one', u'of', u'these', u'be', u'that', u'it', u'come', u'from', u'Sumatra', u'island', u'.'], u'pos': [u'CD', u'IN', u'DT', u'VBZ', u'IN', u'PRP', u'VBD', u'IN', u'NNP', u'NN', u'.'], u'char_offsets': [[1906, 1909], [1910, 1912], [1913, 1918], [1919, 1921], [1922, 1926], [1927, 1929], [1930, 1934], [1935, 1939], [1940, 1947], [1948, 1954], [1954, 1955]]}) 
answer: set([u'origin'])
candidate Sentence: (0.23928949236869812, {u'tokens': [u'-LSB-', u'1', u'-RSB-', u'There', u'are', u'many', u'hypotheses', u'as', u'to', u'where', u'the', u'Malay', u'language', u'originated', u'.'], u'lemmas': [u'-lsb-', u'1', u'-rsb-', u'there', u'be', u'many', u'hypothesis', u'as', u'to', u'where', u'the', u'Malay', u'language', u'originate', u'.'], u'pos': [u'-LRB-', u'CD', u'-RRB-', u'EX', u'VBP', u'JJ', u'NNS', u'IN', u'TO', u'WRB', u'DT', u'NNP', u'NN', u'VBD', u'.'], u'char_offsets': [[1833, 1834], [1834, 1835], [1835, 1836], [1837, 1842], [1843, 1846], [1847, 1851], [1852, 1862], [1863, 1865], [1866, 1868], [1869, 1874], [1875, 1878], [1879, 1884], [1885, 1893], [1894, 1904], [1904, 1905]]}) 
answer: set([u'island', u'sumatra'])
candidate Sentence: (0.16777566075325012, {u'tokens': [u'The', u'oldest', u'written', u'documents', u'in', u'Malay', u',', u'dated', u'from', u'the', u'end', u'of', u'the', u'7th', u'century', u'AD', u',', u'were', u'found', u'on', u'Bangka', u'Island', u',', u'off', u'the', u'southeastern', u'coast', u'of', u'Sumatra', u'and', u'in', u'Palembang', u'in', u'southern', u'Sumatra', u'.'], u'lemmas': [u'the', u'oldest', u'write', u'document', u'in', u'Malay', u',', u'date', u'from', u'the', u'end', u'of', u'the', u'7th', u'century', u'ad', u',', u'be', u'find', u'on', u'Bangka', u'Island', u',', u'off', u'the', u'southeastern', u'coast', u'of', u'Sumatra', u'and', u'in', u'Palembang', u'in', u'southern', u'Sumatra', u'.'], u'pos': [u'DT', u'JJS', u'VBN', u'NNS', u'IN', u'NNP', u',', u'VBN', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'NN', u',', u'VBD', u'VBN', u'IN', u'NNP', u'NNP', u',', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'CC', u'IN', u'NNP', u'IN', u'JJ', u'NNP', u'.'], u'char_offsets': [[1956, 1959], [1960, 1966], [1967, 1974], [1975, 1984], [1985, 1987], [1988, 1993], [1993, 1994], [1995, 2000], [2001, 2005], [2006, 2009], [2010, 2013], [2014, 2016], [2017, 2020], [2021, 2024], [2025, 2032], [2033, 2035], [2035, 2036], [2037, 2041], [2042, 2047], [2048, 2050], [2051, 2057], [2058, 2064], [2064, 2065], [2066, 2069], [2070, 2073], [2074, 2086], [2087, 2092], [2093, 2095], [2096, 2103], [2104, 2107], [2108, 2110], [2111, 2120], [2121, 2123], [2124, 2132], [2133, 2140], [2140, 2141]]}) 
answer: set([u'origin'])
candidate Sentence: (0.11002375930547714, {u'tokens': [u'In', u'several', u'parts', u'of', u'Indonesia', u',', u'in', u'Sumatra', u'and', u'Borneo', u'Islands', u',', u'Malay', u'is', u'spoken', u'as', u'local', u'dialect', u'of', u'ethnic', u'Malays', u'.'], u'lemmas': [u'in', u'several', u'part', u'of', u'Indonesia', u',', u'in', u'Sumatra', u'and', u'Borneo', u'Islands', u',', u'Malay', u'be', u'speak', u'as', u'local', u'dialect', u'of', u'ethnic', u'Malays', u'.'], u'pos': [u'IN', u'JJ', u'NNS', u'IN', u'NNP', u',', u'IN', u'NNP', u'CC', u'NNP', u'NNPS', u',', u'NNP', u'VBZ', u'VBN', u'IN', u'JJ', u'NN', u'IN', u'JJ', u'NNP', u'.'], u'char_offsets': [[3110, 3112], [3113, 3120], [3121, 3126], [3127, 3129], [3130, 3139], [3139, 3140], [3141, 3143], [3144, 3151], [3152, 3155], [3156, 3162], [3163, 3170], [3170, 3171], [3172, 3177], [3178, 3180], [3181, 3187], [3188, 3190], [3191, 3196], [3197, 3204], [3205, 3207], [3208, 3214], [3215, 3221], [3221, 3222]]}) 
answer: set([u'origin'])
candidate Sentence: (0.09979606419801712, {u'tokens': [u'Many', u'roots', u'have', u'come', u'virtually', u'unchanged', u'from', u'their', u'common', u'Austronesian', u'ancestor', u'.'], u'lemmas': [u'many', u'root', u'have', u'come', u'virtually', u'unchanged', u'from', u'they', u'common', u'austronesian', u'ancestor', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'VBN', u'RB', u'JJ', u'IN', u'PRP$', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[6753, 6757], [6758, 6763], [6764, 6768], [6769, 6773], [6774, 6783], [6784, 6793], [6794, 6798], [6799, 6804], [6805, 6811], [6812, 6824], [6825, 6833], [6833, 6834]]}) 
answer: set([u'origin', u'island', u'sumatra'])
candidate Sentence: (0.097680531442165375, {u'tokens': [u'Historically', u',', u'Malay', u'has', u'been', u'written', u'using', u'various', u'scripts', u'.'], u'lemmas': [u'Historically', u',', u'Malay', u'have', u'be', u'write', u'use', u'various', u'script', u'.'], u'pos': [u'NNP', u',', u'NNP', u'VBZ', u'VBN', u'VBN', u'VBG', u'JJ', u'NNS', u'.'], u'char_offsets': [[7630, 7642], [7642, 7643], [7644, 7649], [7650, 7653], [7654, 7658], [7659, 7666], [7667, 7672], [7673, 7680], [7681, 7688], [7688, 7689]]}) 
answer: set([u'origin', u'island', u'sumatra'])
candidate Sentence: (0.095397040247917175, {u'tokens': [u'``', u'Malayu', u"''", u'was', u'the', u'name', u'of', u'an', u'old', u'kingdom', u'located', u'in', u'Jambi', u'province', u'in', u'eastern', u'Sumatra', u'.'], u'lemmas': [u'``', u'malayu', u"''", u'be', u'the', u'name', u'of', u'a', u'old', u'kingdom', u'located', u'in', u'Jambi', u'province', u'in', u'eastern', u'Sumatra', u'.'], u'pos': [u'``', u'FW', u"''", u'VBD', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'JJ', u'IN', u'NNP', u'NN', u'IN', u'JJ', u'NNP', u'.'], u'char_offsets': [[2142, 2143], [2143, 2149], [2149, 2150], [2151, 2154], [2155, 2158], [2159, 2163], [2164, 2166], [2167, 2169], [2170, 2173], [2174, 2181], [2182, 2189], [2190, 2192], [2193, 2198], [2199, 2207], [2208, 2210], [2211, 2218], [2219, 2226], [2226, 2227]]}) 
answer: set([u'origin', u'island'])
candidate Sentence: (0.087915360927581787, {u'tokens': [u'In', u'Malay', u',', u'there', u'are', u':', u'Adjective', u'affixes', u'are', u'attached', u'to', u'root', u'words', u'to', u'form', u'adjectives', u':', u'In', u'addition', u'to', u'these', u'affixes', u',', u'Malay', u'also', u'has', u'a', u'lot', u'of', u'borrowed', u'affixes', u'from', u'other', u'languages', u'such', u'as', u'Sanskrit', u',', u'Arabic', u'and', u'English', u'.'], u'lemmas': [u'in', u'Malay', u',', u'there', u'be', u':', u'Adjective', u'affix', u'be', u'attach', u'to', u'root', u'word', u'to', u'form', u'adjective', u':', u'in', u'addition', u'to', u'these', u'affix', u',', u'Malay', u'also', u'have', u'a', u'lot', u'of', u'borrow', u'affix', u'from', u'other', u'language', u'such', u'as', u'Sanskrit', u',', u'Arabic', u'and', u'English', u'.'], u'pos': [u'IN', u'NNP', u',', u'EX', u'VBP', u':', u'NNP', u'VBZ', u'VBP', u'VBN', u'TO', u'VB', u'NNS', u'TO', u'VB', u'NNS', u':', u'IN', u'NN', u'TO', u'DT', u'NNS', u',', u'NNP', u'RB', u'VBZ', u'DT', u'NN', u'IN', u'VBN', u'NNS', u'IN', u'JJ', u'NNS', u'JJ', u'IN', u'NNP', u',', u'NNP', u'CC', u'NNP', u'.'], u'char_offsets': [[11171, 11173], [11174, 11179], [11179, 11180], [11181, 11186], [11187, 11190], [11190, 11191], [11192, 11201], [11202, 11209], [11210, 11213], [11214, 11222], [11223, 11225], [11226, 11230], [11231, 11236], [11237, 11239], [11240, 11244], [11245, 11255], [11255, 11256], [11257, 11259], [11260, 11268], [11269, 11271], [11272, 11277], [11278, 11285], [11285, 11286], [11287, 11292], [11293, 11297], [11298, 11301], [11302, 11303], [11304, 11307], [11308, 11310], [11311, 11319], [11320, 11327], [11328, 11332], [11333, 11338], [11339, 11348], [11349, 11353], [11354, 11356], [11357, 11365], [11365, 11366], [11367, 11373], [11374, 11377], [11378, 11385], [11385, 11386]]}) 
answer: set([u'origin', u'island', u'sumatra'])
candidate Sentence: (0.085581511259078979, {u'tokens': [u'The', u'earliest', u'known', u'inscription', u'in', u'the', u'Old', u'Malay', u'language', u'was', u'found', u'in', u'Sumatra', u',', u'written', u'in', u'Pallava', u'variant', u'of', u'Grantha', u'script', u'/', u'ref', u'>', u'and', u'dates', u'back', u'to', u'7th', u'century', u'-', u'known', u'as', u'Kedukan', u'Bukit', u'Inscription', u',', u'it', u'was', u'discovered', u'by', u'the', u'Dutchman', u'M.', u'Batenburg', u'on', u'29', u'November', u'1920', u',', u'at', u'Kedukan', u'Bukit', u',', u'South', u'Sumatra', u',', u'on', u'the', u'banks', u'of', u'the', u'River', u'Tatang', u',', u'a', u'tributary', u'of', u'the', u'River', u'Musi', u'.'], u'lemmas': [u'the', u'earliest', u'known', u'inscription', u'in', u'the', u'Old', u'Malay', u'language', u'be', u'find', u'in', u'Sumatra', u',', u'write', u'in', u'pallava', u'variant', u'of', u'grantha', u'script', u'/', u'ref', u'>', u'and', u'date', u'back', u'to', u'7th', u'century', u'-', u'know', u'as', u'Kedukan', u'Bukit', u'Inscription', u',', u'it', u'be', u'discover', u'by', u'the', u'Dutchman', u'M.', u'Batenburg', u'on', u'29', u'November', u'1920', u',', u'at', u'Kedukan', u'Bukit', u',', u'South', u'Sumatra', u',', u'on', u'the', u'bank', u'of', u'the', u'river', u'Tatang', u',', u'a', u'tributary', u'of', u'the', u'River', u'Musi', u'.'], u'pos': [u'DT', u'JJS', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'VBD', u'VBN', u'IN', u'NNP', u',', u'VBN', u'IN', u'NN', u'NN', u'IN', u'NN', u'NN', u':', u'NN', u'JJR', u'CC', u'VBZ', u'RB', u'TO', u'JJ', u'NN', u':', u'VBN', u'IN', u'NNP', u'NNP', u'NNP', u',', u'PRP', u'VBD', u'VBN', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'IN', u'CD', u'NNP', u'CD', u',', u'IN', u'NNP', u'NNP', u',', u'NNP', u'NNP', u',', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NN', u'NNP', u',', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[5187, 5190], [5191, 5199], [5200, 5205], [5206, 5217], [5218, 5220], [5221, 5224], [5225, 5228], [5229, 5234], [5235, 5243], [5244, 5247], [5248, 5253], [5254, 5256], [5257, 5264], [5264, 5265], [5266, 5273], [5274, 5276], [5277, 5284], [5285, 5292], [5293, 5295], [5296, 5303], [5304, 5310], [5313, 5314], [5314, 5317], [5317, 5318], [5319, 5322], [5323, 5328], [5329, 5333], [5334, 5336], [5337, 5340], [5341, 5348], [5349, 5350], [5351, 5356], [5357, 5359], [5360, 5367], [5368, 5373], [5374, 5385], [5385, 5386], [5387, 5389], [5390, 5393], [5394, 5404], [5405, 5407], [5408, 5411], [5412, 5420], [5421, 5423], [5424, 5433], [5434, 5436], [5437, 5439], [5440, 5448], [5449, 5453], [5453, 5454], [5455, 5457], [5458, 5465], [5466, 5471], [5471, 5472], [5473, 5478], [5479, 5486], [5486, 5487], [5488, 5490], [5491, 5494], [5495, 5500], [5501, 5503], [5504, 5507], [5508, 5513], [5514, 5520], [5520, 5521], [5522, 5523], [5524, 5533], [5534, 5536], [5537, 5540], [5541, 5546], [5547, 5551], [5551, 5552]]}) 
answer: set([u'origin', u'island'])
candidate Sentence: (0.063236705958843231, {u'tokens': [u'However', u',', u'reduplication', u'has', u'most', u'of', u'the', u'time', u'many', u'other', u'functions', u'and', u'meanings', u'.'], u'lemmas': [u'however', u',', u'reduplication', u'have', u'most', u'of', u'the', u'time', u'many', u'other', u'function', u'and', u'meaning', u'.'], u'pos': [u'RB', u',', u'NN', u'VBZ', u'JJS', u'IN', u'DT', u'NN', u'JJ', u'JJ', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[14058, 14065], [14065, 14066], [14067, 14080], [14081, 14084], [14085, 14089], [14090, 14092], [14093, 14096], [14097, 14101], [14102, 14106], [14107, 14112], [14113, 14122], [14123, 14126], [14127, 14135], [14135, 14136]]}) 
answer: set([u'origin', u'island', u'sumatra'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Could Malay have originated from Sumatra island?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Malay_language
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set5/a2.txt

No
_____________________________ test_yesno[param208] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb31248>, (<src.tfidf.TF_IDF object at 0x1069b5c10>, set(['melbourne'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb31248>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.76101446151733398, {u'tokens': [u'is', u'the', u'capital', u'and', u'most', u'populous', u'city', u'in', u'the', u'state', u'of', u'Victoria', u',', u'and', u'also', u'the', u'second', u'most', u'populous', u'city', u'in', u'Australia', u'.'], u'lemmas': [u'be', u'the', u'capital', u'and', u'most', u'populous', u'city', u'in', u'the', u'state', u'of', u'Victoria', u',', u'and', u'also', u'the', u'second', u'most', u'populous', u'city', u'in', u'Australia', u'.'], u'pos': [u'VBZ', u'DT', u'NN', u'CC', u'RBS', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u',', u'CC', u'RB', u'DT', u'JJ', u'RBS', u'JJ', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[310, 312], [313, 316], [317, 324], [325, 328], [329, 333], [334, 342], [343, 347], [348, 350], [351, 354], [355, 360], [361, 363], [364, 372], [372, 373], [374, 377], [378, 382], [383, 386], [387, 393], [394, 398], [399, 407], [408, 412], [413, 415], [416, 425], [425, 426]]}) 
answer: set([u'melbourn'])
candidate Sentence: (0.33042389154434204, {u'tokens': [u'Most', u'Liveable', u'and', u'Best', u'Connected', u'?'], u'lemmas': [u'most', u'liveable', u'and', u'best', u'connect', u'?'], u'pos': [u'JJS', u'JJ', u'CC', u'JJS', u'VBN', u'.'], u'char_offsets': [[54420, 54424], [54425, 54433], [54434, 54437], [54438, 54442], [54443, 54452], [54452, 54453]]}) 
answer: set([u'capit', u'victoria', u'citi', u'state', u'melbourn', u'popul'])
candidate Sentence: (0.28202337026596069, {u'tokens': [u'Thereafter', u',', u'growth', u'was', u'exponential', u'and', u'by', u'1865', u',', u'Melbourne', u'had', u'overtaken', u'Sydney', u'as', u'Australia', u"'s", u'most', u'populous', u'city', u'.'], u'lemmas': [u'thereafter', u',', u'growth', u'be', u'exponential', u'and', u'by', u'1865', u',', u'Melbourne', u'have', u'overtake', u'Sydney', u'as', u'Australia', u"'s", u'most', u'populous', u'city', u'.'], u'pos': [u'RB', u',', u'NN', u'VBD', u'JJ', u'CC', u'IN', u'CD', u',', u'NNP', u'VBD', u'VBN', u'NNP', u'IN', u'NNP', u'POS', u'RBS', u'JJ', u'NN', u'.'], u'char_offsets': [[37032, 37042], [37042, 37043], [37044, 37050], [37051, 37054], [37055, 37066], [37067, 37070], [37071, 37073], [37074, 37078], [37078, 37079], [37080, 37089], [37090, 37093], [37094, 37103], [37104, 37110], [37111, 37113], [37114, 37123], [37123, 37125], [37126, 37130], [37131, 37139], [37140, 37144], [37144, 37145]]}) 
answer: set([u'capit', u'state', u'victoria'])
candidate Sentence: (0.21308426558971405, {u'tokens': [u'Melbourne', u'is', u'colder', u'than', u'other', u'mainland', u'Australian', u'state', u'capital', u'cities', u'in', u'the', u'winter', u'.'], u'lemmas': [u'Melbourne', u'be', u'colder', u'than', u'other', u'mainland', u'australian', u'state', u'capital', u'city', u'in', u'the', u'winter', u'.'], u'pos': [u'NNP', u'VBZ', u'JJR', u'IN', u'JJ', u'JJ', u'JJ', u'NN', u'NN', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[18843, 18852], [18853, 18855], [18856, 18862], [18863, 18867], [18868, 18873], [18874, 18882], [18883, 18893], [18894, 18899], [18900, 18907], [18908, 18914], [18915, 18917], [18918, 18921], [18922, 18928], [18928, 18929]]}) 
answer: set([u'victoria', u'popul'])
candidate Sentence: (0.20555073022842407, {u'tokens': [u'Melbourne', u'is', u'often', u'referred', u'to', u'as', u'Australia', u"'s", u'garden', u'city', u',', u'and', u'the', u'state', u'of', u'Victoria', u'was', u'once', u'known', u'as', u'the', u'garden', u'state', u'.'], u'lemmas': [u'Melbourne', u'be', u'often', u'refer', u'to', u'as', u'Australia', u"'s", u'garden', u'city', u',', u'and', u'the', u'state', u'of', u'Victoria', u'be', u'once', u'know', u'as', u'the', u'garden', u'state', u'.'], u'pos': [u'NNP', u'VBZ', u'RB', u'VBN', u'TO', u'IN', u'NNP', u'POS', u'NN', u'NN', u',', u'CC', u'DT', u'NN', u'IN', u'NNP', u'VBD', u'RB', u'VBN', u'IN', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[21890, 21899], [21900, 21902], [21903, 21908], [21909, 21917], [21918, 21920], [21921, 21923], [21924, 21933], [21933, 21935], [21936, 21942], [21943, 21947], [21947, 21948], [21949, 21952], [21953, 21956], [21957, 21962], [21963, 21965], [21966, 21974], [21975, 21978], [21979, 21983], [21984, 21989], [21990, 21992], [21993, 21996], [21997, 22003], [22004, 22009], [22009, 22010]]}) 
answer: set([u'capit', u'popul'])
candidate Sentence: (0.19330060482025146, {u'tokens': [u'In', u'1851', u',', u'it', u'became', u'the', u'capital', u'city', u'of', u'the', u'newly-created', u'colony', u'of', u'Victoria', u'.'], u'lemmas': [u'in', u'1851', u',', u'it', u'become', u'the', u'capital', u'city', u'of', u'the', u'newly-created', u'colony', u'of', u'Victoria', u'.'], u'pos': [u'IN', u'CD', u',', u'PRP', u'VBD', u'DT', u'NN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[1579, 1581], [1582, 1586], [1586, 1587], [1588, 1590], [1591, 1597], [1598, 1601], [1602, 1609], [1610, 1614], [1615, 1617], [1618, 1621], [1622, 1635], [1636, 1642], [1643, 1645], [1646, 1654], [1654, 1655]]}) 
answer: set([u'state', u'melbourn', u'popul'])
candidate Sentence: (0.19181311130523682, {u'tokens': [u'How', u'Much', u'Do', u'Public', u'Schools', u'Really', u'Cost', u'?'], u'lemmas': [u'how', u'much', u'Do', u'Public', u'Schools', u'really', u'cost', u'?'], u'pos': [u'WRB', u'JJ', u'NNP', u'NNP', u'NNP', u'RB', u'NN', u'.'], u'char_offsets': [[47905, 47908], [47909, 47913], [47914, 47916], [47917, 47923], [47924, 47931], [47932, 47938], [47939, 47943], [47943, 47944]]}) 
answer: set([u'capit', u'victoria', u'citi', u'state', u'melbourn', u'popul'])
candidate Sentence: (0.17954522371292114, {u'tokens': [u'Melbourne', u'is', u'located', u'in', u'the', u'south-eastern', u'part', u'of', u'mainland', u'Australia', u',', u'within', u'the', u'state', u'of', u'Victoria', u'.'], u'lemmas': [u'Melbourne', u'be', u'located', u'in', u'the', u'south-eastern', u'part', u'of', u'mainland', u'Australia', u',', u'within', u'the', u'state', u'of', u'Victoria', u'.'], u'pos': [u'NNP', u'VBZ', u'JJ', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'NNP', u',', u'IN', u'DT', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[15215, 15224], [15225, 15227], [15228, 15235], [15236, 15238], [15239, 15242], [15243, 15256], [15257, 15261], [15262, 15264], [15265, 15273], [15274, 15283], [15283, 15284], [15285, 15291], [15292, 15295], [15296, 15301], [15302, 15304], [15305, 15313], [15313, 15314]]}) 
answer: set([u'citi', u'capit', u'popul'])
candidate Sentence: (0.15985283255577087, {u'tokens': [u'This', u'is', u'a', u'feature', u'of', u'the', u'English', u'spoken', u'in', u'the', u'state', u'of', u'Victoria', u',', u'and', u'also', u'in', u'New', u'Zealand', u'.'], u'lemmas': [u'this', u'be', u'a', u'feature', u'of', u'the', u'English', u'speak', u'in', u'the', u'state', u'of', u'Victoria', u',', u'and', u'also', u'in', u'New', u'Zealand', u'.'], u'pos': [u'DT', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NNP', u'VBN', u'IN', u'DT', u'NN', u'IN', u'NNP', u',', u'CC', u'RB', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[218, 222], [223, 225], [226, 227], [228, 235], [236, 238], [239, 242], [243, 250], [251, 257], [258, 260], [261, 264], [265, 270], [271, 273], [274, 282], [282, 283], [284, 287], [288, 292], [293, 295], [296, 299], [300, 307], [307, 308]]}) 
answer: set([u'citi', u'capit', u'melbourn', u'popul'])
candidate Sentence: (0.14889654517173767, {u'tokens': [u'The', u'Port', u'Phillip', u'District', u'became', u'a', u'separate', u'colony', u'of', u'Victoria', u'in', u'1851', u'with', u'Melbourne', u'as', u'its', u'capital', u'.'], u'lemmas': [u'the', u'Port', u'Phillip', u'District', u'become', u'a', u'separate', u'colony', u'of', u'Victoria', u'in', u'1851', u'with', u'Melbourne', u'as', u'its', u'capital', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'NNP', u'VBD', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'IN', u'CD', u'IN', u'NNP', u'IN', u'PRP$', u'NN', u'.'], u'char_offsets': [[6896, 6899], [6900, 6904], [6905, 6912], [6913, 6921], [6922, 6928], [6929, 6930], [6931, 6939], [6940, 6946], [6947, 6949], [6950, 6958], [6959, 6961], [6962, 6966], [6967, 6971], [6972, 6981], [6982, 6984], [6985, 6988], [6989, 6996], [6996, 6997]]}) 
answer: set([u'citi', u'state', u'popul'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is Melbourne the capital and most populous city in the state of Victoria?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Melbourne
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set3/a2.txt

No
_____________________________ test_yesno[param209] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb31290>, (<src.tfidf.TF_IDF object at 0x1069b5c10>, set(['melbourne'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x10cb31290>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.76101446151733398, {u'tokens': [u'is', u'the', u'capital', u'and', u'most', u'populous', u'city', u'in', u'the', u'state', u'of', u'Victoria', u',', u'and', u'also', u'the', u'second', u'most', u'populous', u'city', u'in', u'Australia', u'.'], u'lemmas': [u'be', u'the', u'capital', u'and', u'most', u'populous', u'city', u'in', u'the', u'state', u'of', u'Victoria', u',', u'and', u'also', u'the', u'second', u'most', u'populous', u'city', u'in', u'Australia', u'.'], u'pos': [u'VBZ', u'DT', u'NN', u'CC', u'RBS', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u',', u'CC', u'RB', u'DT', u'JJ', u'RBS', u'JJ', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[310, 312], [313, 316], [317, 324], [325, 328], [329, 333], [334, 342], [343, 347], [348, 350], [351, 354], [355, 360], [361, 363], [364, 372], [372, 373], [374, 377], [378, 382], [383, 386], [387, 393], [394, 398], [399, 407], [408, 412], [413, 415], [416, 425], [425, 426]]}) 
answer: set([u'melbourn'])
candidate Sentence: (0.33042389154434204, {u'tokens': [u'Most', u'Liveable', u'and', u'Best', u'Connected', u'?'], u'lemmas': [u'most', u'liveable', u'and', u'best', u'connect', u'?'], u'pos': [u'JJS', u'JJ', u'CC', u'JJS', u'VBN', u'.'], u'char_offsets': [[54420, 54424], [54425, 54433], [54434, 54437], [54438, 54442], [54443, 54452], [54452, 54453]]}) 
answer: set([u'capit', u'victoria', u'citi', u'state', u'melbourn', u'popul'])
candidate Sentence: (0.28202337026596069, {u'tokens': [u'Thereafter', u',', u'growth', u'was', u'exponential', u'and', u'by', u'1865', u',', u'Melbourne', u'had', u'overtaken', u'Sydney', u'as', u'Australia', u"'s", u'most', u'populous', u'city', u'.'], u'lemmas': [u'thereafter', u',', u'growth', u'be', u'exponential', u'and', u'by', u'1865', u',', u'Melbourne', u'have', u'overtake', u'Sydney', u'as', u'Australia', u"'s", u'most', u'populous', u'city', u'.'], u'pos': [u'RB', u',', u'NN', u'VBD', u'JJ', u'CC', u'IN', u'CD', u',', u'NNP', u'VBD', u'VBN', u'NNP', u'IN', u'NNP', u'POS', u'RBS', u'JJ', u'NN', u'.'], u'char_offsets': [[37032, 37042], [37042, 37043], [37044, 37050], [37051, 37054], [37055, 37066], [37067, 37070], [37071, 37073], [37074, 37078], [37078, 37079], [37080, 37089], [37090, 37093], [37094, 37103], [37104, 37110], [37111, 37113], [37114, 37123], [37123, 37125], [37126, 37130], [37131, 37139], [37140, 37144], [37144, 37145]]}) 
answer: set([u'capit', u'state', u'victoria'])
candidate Sentence: (0.21308426558971405, {u'tokens': [u'Melbourne', u'is', u'colder', u'than', u'other', u'mainland', u'Australian', u'state', u'capital', u'cities', u'in', u'the', u'winter', u'.'], u'lemmas': [u'Melbourne', u'be', u'colder', u'than', u'other', u'mainland', u'australian', u'state', u'capital', u'city', u'in', u'the', u'winter', u'.'], u'pos': [u'NNP', u'VBZ', u'JJR', u'IN', u'JJ', u'JJ', u'JJ', u'NN', u'NN', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[18843, 18852], [18853, 18855], [18856, 18862], [18863, 18867], [18868, 18873], [18874, 18882], [18883, 18893], [18894, 18899], [18900, 18907], [18908, 18914], [18915, 18917], [18918, 18921], [18922, 18928], [18928, 18929]]}) 
answer: set([u'victoria', u'popul'])
candidate Sentence: (0.20555073022842407, {u'tokens': [u'Melbourne', u'is', u'often', u'referred', u'to', u'as', u'Australia', u"'s", u'garden', u'city', u',', u'and', u'the', u'state', u'of', u'Victoria', u'was', u'once', u'known', u'as', u'the', u'garden', u'state', u'.'], u'lemmas': [u'Melbourne', u'be', u'often', u'refer', u'to', u'as', u'Australia', u"'s", u'garden', u'city', u',', u'and', u'the', u'state', u'of', u'Victoria', u'be', u'once', u'know', u'as', u'the', u'garden', u'state', u'.'], u'pos': [u'NNP', u'VBZ', u'RB', u'VBN', u'TO', u'IN', u'NNP', u'POS', u'NN', u'NN', u',', u'CC', u'DT', u'NN', u'IN', u'NNP', u'VBD', u'RB', u'VBN', u'IN', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[21890, 21899], [21900, 21902], [21903, 21908], [21909, 21917], [21918, 21920], [21921, 21923], [21924, 21933], [21933, 21935], [21936, 21942], [21943, 21947], [21947, 21948], [21949, 21952], [21953, 21956], [21957, 21962], [21963, 21965], [21966, 21974], [21975, 21978], [21979, 21983], [21984, 21989], [21990, 21992], [21993, 21996], [21997, 22003], [22004, 22009], [22009, 22010]]}) 
answer: set([u'capit', u'popul'])
candidate Sentence: (0.19330060482025146, {u'tokens': [u'In', u'1851', u',', u'it', u'became', u'the', u'capital', u'city', u'of', u'the', u'newly-created', u'colony', u'of', u'Victoria', u'.'], u'lemmas': [u'in', u'1851', u',', u'it', u'become', u'the', u'capital', u'city', u'of', u'the', u'newly-created', u'colony', u'of', u'Victoria', u'.'], u'pos': [u'IN', u'CD', u',', u'PRP', u'VBD', u'DT', u'NN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[1579, 1581], [1582, 1586], [1586, 1587], [1588, 1590], [1591, 1597], [1598, 1601], [1602, 1609], [1610, 1614], [1615, 1617], [1618, 1621], [1622, 1635], [1636, 1642], [1643, 1645], [1646, 1654], [1654, 1655]]}) 
answer: set([u'state', u'melbourn', u'popul'])
candidate Sentence: (0.19181311130523682, {u'tokens': [u'How', u'Much', u'Do', u'Public', u'Schools', u'Really', u'Cost', u'?'], u'lemmas': [u'how', u'much', u'Do', u'Public', u'Schools', u'really', u'cost', u'?'], u'pos': [u'WRB', u'JJ', u'NNP', u'NNP', u'NNP', u'RB', u'NN', u'.'], u'char_offsets': [[47905, 47908], [47909, 47913], [47914, 47916], [47917, 47923], [47924, 47931], [47932, 47938], [47939, 47943], [47943, 47944]]}) 
answer: set([u'capit', u'victoria', u'citi', u'state', u'melbourn', u'popul'])
candidate Sentence: (0.17954522371292114, {u'tokens': [u'Melbourne', u'is', u'located', u'in', u'the', u'south-eastern', u'part', u'of', u'mainland', u'Australia', u',', u'within', u'the', u'state', u'of', u'Victoria', u'.'], u'lemmas': [u'Melbourne', u'be', u'located', u'in', u'the', u'south-eastern', u'part', u'of', u'mainland', u'Australia', u',', u'within', u'the', u'state', u'of', u'Victoria', u'.'], u'pos': [u'NNP', u'VBZ', u'JJ', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'NNP', u',', u'IN', u'DT', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[15215, 15224], [15225, 15227], [15228, 15235], [15236, 15238], [15239, 15242], [15243, 15256], [15257, 15261], [15262, 15264], [15265, 15273], [15274, 15283], [15283, 15284], [15285, 15291], [15292, 15295], [15296, 15301], [15302, 15304], [15305, 15313], [15313, 15314]]}) 
answer: set([u'citi', u'capit', u'popul'])
candidate Sentence: (0.15985283255577087, {u'tokens': [u'This', u'is', u'a', u'feature', u'of', u'the', u'English', u'spoken', u'in', u'the', u'state', u'of', u'Victoria', u',', u'and', u'also', u'in', u'New', u'Zealand', u'.'], u'lemmas': [u'this', u'be', u'a', u'feature', u'of', u'the', u'English', u'speak', u'in', u'the', u'state', u'of', u'Victoria', u',', u'and', u'also', u'in', u'New', u'Zealand', u'.'], u'pos': [u'DT', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NNP', u'VBN', u'IN', u'DT', u'NN', u'IN', u'NNP', u',', u'CC', u'RB', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[218, 222], [223, 225], [226, 227], [228, 235], [236, 238], [239, 242], [243, 250], [251, 257], [258, 260], [261, 264], [265, 270], [271, 273], [274, 282], [282, 283], [284, 287], [288, 292], [293, 295], [296, 299], [300, 307], [307, 308]]}) 
answer: set([u'citi', u'capit', u'melbourn', u'popul'])
candidate Sentence: (0.14889654517173767, {u'tokens': [u'The', u'Port', u'Phillip', u'District', u'became', u'a', u'separate', u'colony', u'of', u'Victoria', u'in', u'1851', u'with', u'Melbourne', u'as', u'its', u'capital', u'.'], u'lemmas': [u'the', u'Port', u'Phillip', u'District', u'become', u'a', u'separate', u'colony', u'of', u'Victoria', u'in', u'1851', u'with', u'Melbourne', u'as', u'its', u'capital', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'NNP', u'VBD', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'IN', u'CD', u'IN', u'NNP', u'IN', u'PRP$', u'NN', u'.'], u'char_offsets': [[6896, 6899], [6900, 6904], [6905, 6912], [6913, 6921], [6922, 6928], [6929, 6930], [6931, 6939], [6940, 6946], [6947, 6949], [6950, 6958], [6959, 6961], [6962, 6966], [6967, 6971], [6972, 6981], [6982, 6984], [6985, 6988], [6989, 6996], [6996, 6997]]}) 
answer: set([u'citi', u'state', u'popul'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is Melbourne the capital and most populous city in the state of Victoria?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Melbourne
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set3/a2.txt

No
_____________________________ test_yesno[param221] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb315f0>, (<src.tfidf.TF_IDF object at 0x105d7ed10>, set(['faraday', 'michael', 'michael_faraday'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb315f0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.63342177867889404, {u'tokens': [u'Faraday', u'also', u'was', u'active', u'in', u'what', u'would', u'now', u'be', u'called', u'environmental', u'science', u',', u'or', u'engineering', u'.'], u'lemmas': [u'Faraday', u'also', u'be', u'active', u'in', u'what', u'would', u'now', u'be', u'call', u'environmental', u'science', u',', u'or', u'engineering', u'.'], u'pos': [u'NNP', u'RB', u'VBD', u'JJ', u'IN', u'WP', u'MD', u'RB', u'VB', u'VBN', u'JJ', u'NN', u',', u'CC', u'NN', u'.'], u'char_offsets': [[19363, 19370], [19371, 19375], [19376, 19379], [19380, 19386], [19387, 19389], [19390, 19394], [19395, 19400], [19401, 19404], [19405, 19407], [19408, 19414], [19415, 19428], [19429, 19436], [19436, 19437], [19438, 19440], [19441, 19452], [19452, 19453]]}) 
answer: set([u'area'])
candidate Sentence: (0.20785526931285858, {u'tokens': [u'*', u'Regarding', u'the', u'hereafter', u',', u'``', u'Speculations', u'?'], u'lemmas': [u'*', u'regard', u'the', u'hereafter', u',', u'``', u'speculation', u'?'], u'pos': [u'SYM', u'VBG', u'DT', u'RB', u',', u'``', u'NNS', u'.'], u'char_offsets': [[24876, 24877], [24878, 24887], [24888, 24891], [24892, 24901], [24901, 24902], [24903, 24904], [24904, 24916], [24916, 24917]]}) 
answer: set([u'area', u'activ', u'environment', u'call', u'now', u'scienc'])
candidate Sentence: (0.19533507525920868, {u'tokens': [u'Education', u'was', u'another', u'area', u'of', u'service', u'for', u'Faraday', u'.'], u'lemmas': [u'education', u'be', u'another', u'area', u'of', u'service', u'for', u'Faraday', u'.'], u'pos': [u'NN', u'VBD', u'DT', u'NN', u'IN', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[19996, 20005], [20006, 20009], [20010, 20017], [20018, 20022], [20023, 20025], [20026, 20033], [20034, 20037], [20038, 20045], [20045, 20046]]}) 
answer: set([u'environment', u'call', u'now', u'activ', u'scienc'])
candidate Sentence: (0.16758625209331512, {u'tokens': [u'This', u'is', u'now', u'termed', u'the', u'Faraday', u'effect', u'.'], u'lemmas': [u'this', u'be', u'now', u'term', u'the', u'Faraday', u'effect', u'.'], u'pos': [u'DT', u'VBZ', u'RB', u'VBN', u'DT', u'NNP', u'NN', u'.'], u'char_offsets': [[16298, 16302], [16303, 16305], [16306, 16309], [16310, 16316], [16317, 16320], [16321, 16328], [16329, 16335], [16335, 16336]]}) 
answer: set([u'environment', u'call', u'scienc', u'activ', u'area'])
candidate Sentence: (0.14287599921226501, {u'tokens': [u'Some', u'historians', u'of', u'science', u'refer', u'to', u'him', u'as', u'the', u'best', u'experimentalist', u'in', u'the', u'history', u'of', u'science', u'.'], u'lemmas': [u'some', u'historian', u'of', u'science', u'refer', u'to', u'he', u'as', u'the', u'best', u'experimentalist', u'in', u'the', u'history', u'of', u'science', u'.'], u'pos': [u'DT', u'NNS', u'IN', u'NN', u'VBP', u'TO', u'PRP', u'IN', u'DT', u'JJS', u'NN', u'IN', u'DT', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[1381, 1385], [1386, 1396], [1400, 1402], [1403, 1410], [1411, 1416], [1417, 1419], [1420, 1423], [1424, 1426], [1427, 1430], [1431, 1435], [1436, 1451], [1452, 1454], [1455, 1458], [1459, 1466], [1467, 1469], [1470, 1477], [1477, 1478]]}) 
answer: set([u'environment', u'call', u'now', u'activ', u'area'])
candidate Sentence: (0.13382372260093689, {u'tokens': [u'This', u'was', u'the', u'Master', u'Mason', u"'s", u'House', u',', u'later', u'called', u'Faraday', u'House', u',', u'and', u'now', u'No.', u'37', u'Hampton', u'Court', u'Road', u'.'], u'lemmas': [u'this', u'be', u'the', u'Master', u'Mason', u"'s", u'House', u',', u'later', u'call', u'Faraday', u'House', u',', u'and', u'now', u'no.', u'37', u'Hampton', u'Court', u'Road', u'.'], u'pos': [u'DT', u'VBD', u'DT', u'NNP', u'NNP', u'POS', u'NNP', u',', u'RB', u'VBN', u'NNP', u'NNP', u',', u'CC', u'RB', u'NN', u'CD', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[21347, 21351], [21352, 21355], [21356, 21359], [21360, 21366], [21367, 21372], [21372, 21374], [21375, 21380], [21380, 21381], [21382, 21387], [21388, 21394], [21395, 21402], [21403, 21408], [21408, 21409], [21410, 21413], [21414, 21417], [21418, 21421], [21421, 21423], [21424, 21431], [21432, 21437], [21438, 21442], [21442, 21443]]}) 
answer: set([u'environment', u'area', u'activ', u'scienc'])
candidate Sentence: (0.12861759960651398, {u'tokens': [u'History', u'of', u'Science', u'and', u'Technology', u'.'], u'lemmas': [u'history', u'of', u'science', u'and', u'technology', u'.'], u'pos': [u'NN', u'IN', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[3688, 3695], [3696, 3698], [3699, 3706], [3707, 3710], [3711, 3721], [3721, 3722]]}) 
answer: set([u'environment', u'call', u'now', u'activ', u'area'])
candidate Sentence: (0.1173270046710968, {u'tokens': [u'This', u'shielding', u'effect', u'is', u'used', u'in', u'what', u'is', u'now', u'known', u'as', u'a', u'Faraday', u'cage', u'.'], u'lemmas': [u'this', u'shield', u'effect', u'be', u'use', u'in', u'what', u'be', u'now', u'know', u'as', u'a', u'Faraday', u'cage', u'.'], u'pos': [u'DT', u'VBG', u'NN', u'VBZ', u'VBN', u'IN', u'WP', u'VBZ', u'RB', u'VBN', u'IN', u'DT', u'NNP', u'NN', u'.'], u'char_offsets': [[17374, 17378], [17379, 17388], [17389, 17395], [17396, 17398], [17399, 17403], [17404, 17406], [17407, 17411], [17412, 17414], [17415, 17418], [17419, 17424], [17425, 17427], [17428, 17429], [17430, 17437], [17438, 17442], [17442, 17443]]}) 
answer: set([u'environment', u'call', u'scienc', u'activ', u'area'])
candidate Sentence: (0.10604943335056305, {u'tokens': [u'Faraday', u'was', u'the', u'first', u'to', u'report', u'what', u'later', u'came', u'to', u'be', u'called', u'metallic', u'nanoparticles', u'.'], u'lemmas': [u'Faraday', u'be', u'the', u'first', u'to', u'report', u'what', u'later', u'come', u'to', u'be', u'call', u'metallic', u'nanoparticle', u'.'], u'pos': [u'NNP', u'VBD', u'DT', u'JJ', u'TO', u'VB', u'WP', u'RB', u'VBD', u'TO', u'VB', u'VBN', u'JJ', u'NNS', u'.'], u'char_offsets': [[9738, 9745], [9746, 9749], [9750, 9753], [9754, 9759], [9760, 9762], [9763, 9769], [9770, 9774], [9775, 9780], [9781, 9785], [9786, 9788], [9789, 9791], [9792, 9798], [9799, 9807], [9808, 9821], [9821, 9822]]}) 
answer: set([u'environment', u'scienc', u'now', u'activ', u'area'])
candidate Sentence: (0.10592009127140045, {u'tokens': [u'``', u'best', u'experimentalist', u'in', u'the', u'history', u'of', u'science', u'.', u"''"], u'lemmas': [u'``', u'best', u'experimentalist', u'in', u'the', u'history', u'of', u'science', u'.', u"''"], u'pos': [u'``', u'JJS', u'NN', u'IN', u'DT', u'NN', u'IN', u'NN', u'.', u"''"], u'char_offsets': [[1480, 1481], [1481, 1485], [1486, 1501], [1502, 1504], [1505, 1508], [1509, 1516], [1517, 1519], [1520, 1527], [1527, 1528], [1528, 1529]]}) 
answer: set([u'environment', u'call', u'now', u'activ', u'area'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

was he active in the area now called environmental science?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Michael_Faraday
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set4/a7.txt

No
_____________________________ test_yesno[param223] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb31680>, (<src.tfidf.TF_IDF object at 0x105d7ef50>, set(['montreal'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('The language most spoken at home in the city is French.')
E            +    where 'The language most spoken at home in the city is French.' = <src.question_processing.Question_parser instance at 0x10cb31680>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.37360024452209473, {u'tokens': [u'In', u'terms', u'of', u'mother', u'tongue', u'language', u'-LRB-', u'first', u'language', u'learned', u'-RRB-', u',', u'the', u'2006', u'census', u'reported', u'that', u'in', u'the', u'Greater', u'Montreal', u'Area', u',', u'66.5', u'%', u'spoke', u'French', u'as', u'a', u'first', u'language', u',', u'followed', u'by', u'English', u'at', u'13.2', u'%', u',', u'while', u'0.8', u'%', u'spoke', u'both', u'as', u'a', u'first', u'language', u'.'], u'lemmas': [u'in', u'term', u'of', u'mother', u'tongue', u'language', u'-lrb-', u'first', u'language', u'learn', u'-rrb-', u',', u'the', u'2006', u'census', u'report', u'that', u'in', u'the', u'Greater', u'Montreal', u'Area', u',', u'66.5', u'%', u'speak', u'french', u'as', u'a', u'first', u'language', u',', u'follow', u'by', u'English', u'at', u'13.2', u'%', u',', u'while', u'0.8', u'%', u'speak', u'both', u'as', u'a', u'first', u'language', u'.'], u'pos': [u'IN', u'NNS', u'IN', u'NN', u'NN', u'NN', u'-LRB-', u'JJ', u'NN', u'VBD', u'-RRB-', u',', u'DT', u'CD', u'NN', u'VBD', u'IN', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u',', u'CD', u'NN', u'VBD', u'JJ', u'IN', u'DT', u'JJ', u'NN', u',', u'VBN', u'IN', u'NNP', u'IN', u'CD', u'NN', u',', u'IN', u'CD', u'NN', u'VBD', u'CC', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[17287, 17289], [17290, 17295], [17296, 17298], [17299, 17305], [17306, 17312], [17313, 17321], [17322, 17323], [17323, 17328], [17329, 17337], [17338, 17345], [17345, 17346], [17346, 17347], [17348, 17351], [17352, 17356], [17357, 17363], [17364, 17372], [17373, 17377], [17378, 17380], [17381, 17384], [17385, 17392], [17393, 17401], [17402, 17406], [17406, 17407], [17408, 17412], [17412, 17413], [17414, 17419], [17420, 17426], [17427, 17429], [17430, 17431], [17432, 17437], [17438, 17446], [17446, 17447], [17448, 17456], [17457, 17459], [17460, 17467], [17468, 17470], [17471, 17475], [17475, 17476], [17476, 17477], [17478, 17483], [17484, 17487], [17487, 17488], [17489, 17494], [17495, 17499], [17500, 17502], [17503, 17504], [17505, 17510], [17511, 17519], [17519, 17520]]}) 
answer: set([u'often'])
candidate Sentence: (0.36147964000701904, {u'tokens': [u'The', u'language', u'most', u'spoken', u'at', u'home', u'in', u'the', u'city', u'is', u'French', u'by', u'57', u'%', u'of', u'the', u'population', u',', u'followed', u'by', u'English', u'at', u'19', u'%', u'-LRB-', u'as', u'of', u'2006', u'census', u'-RRB-', u'.'], u'lemmas': [u'the', u'language', u'most', u'speak', u'at', u'home', u'in', u'the', u'city', u'be', u'french', u'by', u'57', u'%', u'of', u'the', u'population', u',', u'follow', u'by', u'English', u'at', u'19', u'%', u'-lrb-', u'as', u'of', u'2006', u'census', u'-rrb-', u'.'], u'pos': [u'DT', u'NN', u'RBS', u'VBN', u'IN', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'JJ', u'IN', u'CD', u'NN', u'IN', u'DT', u'NN', u',', u'VBN', u'IN', u'NNP', u'IN', u'CD', u'NN', u'-LRB-', u'IN', u'IN', u'CD', u'NN', u'-RRB-', u'.'], u'char_offsets': [[1638, 1641], [1642, 1650], [1651, 1655], [1656, 1662], [1663, 1665], [1666, 1670], [1671, 1673], [1674, 1677], [1678, 1682], [1683, 1685], [1686, 1692], [1693, 1695], [1696, 1698], [1698, 1699], [1700, 1702], [1703, 1706], [1707, 1717], [1717, 1718], [1719, 1727], [1728, 1730], [1731, 1738], [1739, 1741], [1742, 1744], [1744, 1745], [1746, 1747], [1747, 1749], [1750, 1752], [1753, 1757], [1758, 1764], [1764, 1765], [1765, 1766]]}) 
answer: set([u'often'])
candidate Sentence: (0.25787854194641113, {u'tokens': [u'-LRB-', u'pronounced', u'in', u'French', u',', u'in', u'English', u'is', u'the', u'local', u'English', u'pronunciation', u'.'], u'lemmas': [u'-lrb-', u'pronounced', u'in', u'french', u',', u'in', u'English', u'be', u'the', u'local', u'English', u'pronunciation', u'.'], u'pos': [u'-LRB-', u'JJ', u'IN', u'JJ', u',', u'IN', u'NNP', u'VBZ', u'DT', u'JJ', u'NNP', u'NN', u'.'], u'char_offsets': [[674, 675], [675, 685], [688, 690], [691, 697], [697, 698], [701, 703], [704, 711], [714, 716], [717, 720], [721, 726], [727, 734], [735, 748], [748, 749]]}) 
answer: set([u'often', u'languag', u'speak'])
candidate Sentence: (0.23482897877693176, {u'tokens': [u'In', u'terms', u'of', u'additional', u'languages', u'spoken', u',', u'a', u'unique', u'feature', u'of', u'Montreal', u'throughout', u'Canada', u',', u'noted', u'by', u'Statistics', u'Canada', u',', u'is', u'the', u'working', u'knowledge', u'of', u'both', u'French', u'and', u'English', u'by', u'most', u'of', u'its', u'residents', u'.'], u'lemmas': [u'in', u'term', u'of', u'additional', u'language', u'speak', u',', u'a', u'unique', u'feature', u'of', u'Montreal', u'throughout', u'Canada', u',', u'note', u'by', u'Statistics', u'Canada', u',', u'be', u'the', u'work', u'knowledge', u'of', u'both', u'french', u'and', u'english', u'by', u'most', u'of', u'its', u'resident', u'.'], u'pos': [u'IN', u'NNS', u'IN', u'JJ', u'NNS', u'VBN', u',', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'IN', u'NNP', u',', u'VBN', u'IN', u'NNPS', u'NNP', u',', u'VBZ', u'DT', u'VBG', u'NN', u'IN', u'CC', u'JJ', u'CC', u'JJ', u'IN', u'JJS', u'IN', u'PRP$', u'NNS', u'.'], u'char_offsets': [[17784, 17786], [17787, 17792], [17793, 17795], [17796, 17806], [17807, 17816], [17817, 17823], [17823, 17824], [17825, 17826], [17827, 17833], [17834, 17841], [17842, 17844], [17845, 17853], [17854, 17864], [17865, 17871], [17871, 17872], [17873, 17878], [17879, 17881], [17882, 17892], [17893, 17899], [17899, 17900], [17901, 17903], [17904, 17907], [17908, 17915], [17916, 17925], [17926, 17928], [17929, 17933], [17934, 17940], [17941, 17944], [17945, 17952], [17953, 17955], [17956, 17960], [17961, 17963], [17964, 17967], [17968, 17977], [17977, 17978]]}) 
answer: set([u'often'])
candidate Sentence: (0.14337167143821716, {u'tokens': [u'The', u'official', u'language', u'of', u'Montreal', u'is', u'French', u'as', u'defined', u'by', u'the', u'city', u"'s", u'charter', u'.'], u'lemmas': [u'the', u'official', u'language', u'of', u'Montreal', u'be', u'french', u'as', u'define', u'by', u'the', u'city', u"'s", u'charter', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'NNP', u'VBZ', u'JJ', u'IN', u'VBN', u'IN', u'DT', u'NN', u'POS', u'NN', u'.'], u'char_offsets': [[1770, 1773], [1774, 1782], [1783, 1791], [1792, 1794], [1795, 1803], [1804, 1806], [1807, 1813], [1814, 1816], [1817, 1824], [1825, 1827], [1828, 1831], [1832, 1836], [1836, 1838], [1839, 1846], [1846, 1847]]}) 
answer: set([u'english', u'often', u'speak'])
candidate Sentence: (0.14105506241321564, {u'tokens': [u'In', u'Montreal', u',', u'seventeen', u'CEGEPs', u'offer', u'courses', u'in', u'French', u'and', u'five', u'in', u'English', u'.'], u'lemmas': [u'in', u'Montreal', u',', u'seventeen', u'cegep', u'offer', u'course', u'in', u'french', u'and', u'five', u'in', u'English', u'.'], u'pos': [u'IN', u'NNP', u',', u'CD', u'NNS', u'VBP', u'NNS', u'IN', u'JJ', u'CC', u'CD', u'IN', u'NNP', u'.'], u'char_offsets': [[36539, 36541], [36542, 36550], [36550, 36551], [36552, 36561], [36562, 36568], [36569, 36574], [36575, 36582], [36583, 36585], [36586, 36592], [36593, 36596], [36597, 36601], [36602, 36604], [36605, 36612], [36612, 36613]]}) 
answer: set([u'often', u'languag', u'speak'])
candidate Sentence: (0.12090317904949188, {u'tokens': [u'Winter', u'brings', u'very', u'cold', u',', u'often', u'windy', u'and', u'snowy', u'weather', u',', u'with', u'average', u'high', u'temperature', u'of', u'-2', u'to', u'-6', u'C', u'-LRB-', u'20', u'-', u'28F', u'-RRB-', u'and', u'lows', u'of', u'-10', u'to', u'-15', u'C', u'-LRB-', u'6', u'-', u'13F', u'-RRB-', u'.'], u'lemmas': [u'Winter', u'bring', u'very', u'cold', u',', u'often', u'windy', u'and', u'snowy', u'weather', u',', u'with', u'average', u'high', u'temperature', u'of', u'-2', u'to', u'-6', u'c', u'-lrb-', u'20', u'-', u'28f', u'-rrb-', u'and', u'low', u'of', u'-10', u'to', u'-15', u'c', u'-lrb-', u'6', u'-', u'13f', u'-rrb-', u'.'], u'pos': [u'NNP', u'VBZ', u'RB', u'JJ', u',', u'RB', u'JJ', u'CC', u'JJ', u'NN', u',', u'IN', u'JJ', u'JJ', u'NN', u'IN', u'CD', u'TO', u'CD', u'NN', u'-LRB-', u'CD', u':', u'NN', u'-RRB-', u'CC', u'NNS', u'IN', u'CD', u'TO', u'CD', u'NN', u'-LRB-', u'CD', u':', u'NN', u'-RRB-', u'.'], u'char_offsets': [[8028, 8034], [8035, 8041], [8042, 8046], [8047, 8051], [8051, 8052], [8053, 8058], [8059, 8064], [8065, 8068], [8069, 8074], [8075, 8082], [8082, 8083], [8084, 8088], [8089, 8096], [8097, 8101], [8102, 8113], [8114, 8116], [8117, 8119], [8120, 8122], [8123, 8125], [8125, 8126], [8127, 8128], [8128, 8130], [8131, 8132], [8133, 8136], [8136, 8137], [8138, 8141], [8142, 8146], [8147, 8149], [8150, 8153], [8154, 8156], [8157, 8160], [8160, 8161], [8162, 8163], [8163, 8164], [8165, 8166], [8167, 8170], [8170, 8171], [8171, 8172]]}) 
answer: set([u'english', u'languag', u'speak'])
candidate Sentence: (0.10611248761415482, {u'tokens': [u'Yet', u',', u'being', u'at', u'the', u'confluence', u'of', u'the', u'French', u'and', u'the', u'English', u'traditions', u',', u'Montreal', u'has', u'developed', u'a', u'unique', u'and', u'distinguished', u'cultural', u'face', u'.'], u'lemmas': [u'yet', u',', u'be', u'at', u'the', u'confluence', u'of', u'the', u'french', u'and', u'the', u'English', u'tradition', u',', u'Montreal', u'have', u'develop', u'a', u'unique', u'and', u'distinguished', u'cultural', u'face', u'.'], u'pos': [u'RB', u',', u'VBG', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'CC', u'DT', u'NNP', u'NNS', u',', u'NNP', u'VBZ', u'VBN', u'DT', u'JJ', u'CC', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[25348, 25351], [25351, 25352], [25353, 25358], [25359, 25361], [25362, 25365], [25366, 25376], [25377, 25379], [25380, 25383], [25384, 25390], [25391, 25394], [25395, 25398], [25399, 25406], [25407, 25417], [25417, 25418], [25419, 25427], [25428, 25431], [25432, 25441], [25442, 25443], [25444, 25450], [25451, 25454], [25455, 25468], [25469, 25477], [25478, 25482], [25482, 25483]]}) 
answer: set([u'often', u'languag', u'speak'])
candidate Sentence: (0.10543283075094223, {u'tokens': [u'The', u'most', u'popular', u'sport', u'in', u'Montreal', u'is', u'ice', u'hockey', u'.'], u'lemmas': [u'the', u'most', u'popular', u'sport', u'in', u'Montreal', u'be', u'ice', u'hockey', u'.'], u'pos': [u'DT', u'RBS', u'JJ', u'NN', u'IN', u'NNP', u'VBZ', u'NN', u'NN', u'.'], u'char_offsets': [[27559, 27562], [27563, 27567], [27568, 27575], [27576, 27581], [27582, 27584], [27585, 27593], [27594, 27596], [27597, 27600], [27601, 27607], [27607, 27608]]}) 
answer: set([u'speak', u'often', u'languag', u'english'])
candidate Sentence: (0.09198392927646637, {u'tokens': [u'The', u'city', u'is', u'Canada', u"'s", u'centre', u'for', u'French', u'language', u'television', u'productions', u',', u'radio', u',', u'theatre', u',', u'film', u',', u'multimedia', u'and', u'print', u'publishing', u'.'], u'lemmas': [u'the', u'city', u'be', u'Canada', u"'s", u'centre', u'for', u'french', u'language', u'television', u'production', u',', u'radio', u',', u'theatre', u',', u'film', u',', u'multimedia', u'and', u'print', u'publishing', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'NNP', u'POS', u'NN', u'IN', u'JJ', u'NN', u'NN', u'NNS', u',', u'NN', u',', u'NN', u',', u'NN', u',', u'NNS', u'CC', u'NN', u'NN', u'.'], u'char_offsets': [[24886, 24889], [24890, 24894], [24895, 24897], [24898, 24904], [24904, 24906], [24907, 24913], [24914, 24917], [24918, 24924], [24925, 24933], [24934, 24944], [24945, 24956], [24956, 24957], [24958, 24963], [24963, 24964], [24965, 24972], [24972, 24973], [24974, 24978], [24978, 24979], [24980, 24990], [24991, 24994], [24995, 25000], [25001, 25011], [25011, 25012]]}) 
answer: set([u'english', u'often', u'speak'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is English the language most often spoken in Montreal?
Validity= False
Question Type = NA
Answer Type = NA
Answer = The language most spoken at home in the city is French.
Difficulty = easy
Article_Title = Montreal
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set3/a7.txt

No
_____________________________ test_yesno[param236] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb31a28>, (<src.tfidf.TF_IDF object at 0x10b195d90>, set(['nikola', 'nikola_tesla', 'tesla'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Nikola Tesla used a technique called picture thinking.')
E            +    where 'Nikola Tesla used a technique called picture thinking.' = <src.question_processing.Question_parser instance at 0x10cb31a28>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.33797436952590942, {u'tokens': [u'Tesla', u'would', u'visualise', u'an', u'invention', u'in', u'his', u'brain', u'with', u'extreme', u'precision', u',', u'including', u'all', u'dimensions', u',', u'before', u'moving', u'to', u'the', u'construction', u'stage', u';', u'a', u'technique', u'sometimes', u'known', u'as', u'picture', u'thinking', u'.'], u'lemmas': [u'Tesla', u'would', u'visualise', u'a', u'invention', u'in', u'he', u'brain', u'with', u'extreme', u'precision', u',', u'include', u'all', u'dimension', u',', u'before', u'move', u'to', u'the', u'construction', u'stage', u';', u'a', u'technique', u'sometimes', u'know', u'as', u'picture', u'thinking', u'.'], u'pos': [u'NNP', u'MD', u'VB', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'IN', u'JJ', u'NN', u',', u'VBG', u'DT', u'NNS', u',', u'IN', u'VBG', u'TO', u'DT', u'NN', u'NN', u':', u'DT', u'NN', u'RB', u'VBN', u'IN', u'NN', u'NN', u'.'], u'char_offsets': [[6327, 6332], [6333, 6338], [6339, 6348], [6349, 6351], [6352, 6361], [6362, 6364], [6365, 6368], [6369, 6374], [6375, 6379], [6380, 6387], [6388, 6397], [6397, 6398], [6399, 6408], [6409, 6412], [6413, 6423], [6423, 6424], [6425, 6431], [6432, 6438], [6439, 6441], [6442, 6445], [6446, 6458], [6459, 6464], [6464, 6465], [6466, 6467], [6468, 6477], [6478, 6487], [6488, 6493], [6494, 6496], [6497, 6504], [6505, 6513], [6513, 6514]]}) 
answer: set([u'use', u'call'])
candidate Sentence: (0.25518304109573364, {u'tokens': [u'Did', u'Tesla', u'really', u'invent', u'the', u'loudspeaker', u'?', u"''"], u'lemmas': [u'do', u'Tesla', u'really', u'invent', u'the', u'loudspeaker', u'?', u"''"], u'pos': [u'VBD', u'NNP', u'RB', u'VB', u'DT', u'NN', u'.', u"''"], u'char_offsets': [[7459, 7462], [7463, 7468], [7469, 7475], [7476, 7482], [7483, 7486], [7487, 7498], [7498, 7499], [7499, 7500]]}) 
answer: set([u'use', u'pictur', u'call', u'think', u'techniqu'])
candidate Sentence: (0.21481014788150787, {u'tokens': [u'Why', u'the', u'Name', u'``', u'Tesla', u"''", u'?'], u'lemmas': [u'why', u'the', u'name', u'``', u'Tesla', u"''", u'?'], u'pos': [u'WRB', u'DT', u'NN', u'``', u'NNP', u"''", u'.'], u'char_offsets': [[49350, 49353], [49354, 49357], [49358, 49362], [49363, 49364], [49364, 49369], [49369, 49370], [49370, 49371]]}) 
answer: set([u'use', u'pictur', u'call', u'think', u'techniqu'])
candidate Sentence: (0.16540056467056274, {u'tokens': [u'Tesla', u'called', u'his', u'boat', u'a', u'``', u'teleautomaton', u"''", u'.'], u'lemmas': [u'Tesla', u'call', u'he', u'boat', u'a', u'``', u'teleautomaton', u"''", u'.'], u'pos': [u'NNP', u'VBD', u'PRP$', u'NN', u'DT', u'``', u'NN', u"''", u'.'], u'char_offsets': [[21511, 21516], [21517, 21523], [21524, 21527], [21528, 21532], [21533, 21534], [21535, 21536], [21536, 21549], [21549, 21550], [21550, 21551]]}) 
answer: set([u'use', u'pictur', u'think', u'techniqu'])
candidate Sentence: (0.13074177503585815, {u'tokens': [u'ISBN', u'*', u'Valentinuzzi', u',', u'M.E.', u',', u'Nikola', u'Tesla', u':', u'why', u'was', u'he', u'so', u'much', u'resisted', u'and', u'forgotten', u'?'], u'lemmas': [u'ISBN', u'*', u'Valentinuzzi', u',', u'M.E.', u',', u'Nikola', u'Tesla', u':', u'why', u'be', u'he', u'so', u'much', u'resist', u'and', u'forget', u'?'], u'pos': [u'NNP', u'SYM', u'NNP', u',', u'NNP', u',', u'NNP', u'NNP', u':', u'WRB', u'VBD', u'PRP', u'RB', u'RB', u'VBN', u'CC', u'VBN', u'.'], u'char_offsets': [[56285, 56289], [56290, 56291], [56292, 56304], [56304, 56305], [56306, 56310], [56310, 56311], [56312, 56318], [56319, 56324], [56324, 56325], [56326, 56329], [56330, 56333], [56334, 56336], [56337, 56339], [56340, 56344], [56345, 56353], [56354, 56357], [56358, 56367], [56367, 56368]]}) 
answer: set([u'use', u'pictur', u'call', u'think', u'techniqu'])
candidate Sentence: (0.11778946965932846, {u'tokens': [u'Publicity', u'picture', u'of', u'a', u'participant', u'sitting', u'in', u'his', u'laboratory', u'in', u'Colorado', u'Springs', u'with', u'his', u'``', u'Magnifying', u'Transmitter', u"''", u'generating', u'millions', u'of', u'volts', u'.'], u'lemmas': [u'publicity', u'picture', u'of', u'a', u'participant', u'sit', u'in', u'he', u'laboratory', u'in', u'Colorado', u'Springs', u'with', u'he', u'``', u'magnify', u'transmitter', u"''", u'generate', u'million', u'of', u'volt', u'.'], u'pos': [u'NN', u'NN', u'IN', u'DT', u'NN', u'VBG', u'IN', u'PRP$', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'PRP$', u'``', u'VBG', u'NN', u"''", u'VBG', u'NNS', u'IN', u'NNS', u'.'], u'char_offsets': [[22278, 22287], [22288, 22295], [22296, 22298], [22299, 22300], [22301, 22312], [22313, 22320], [22321, 22323], [22324, 22327], [22328, 22338], [22339, 22341], [22342, 22350], [22351, 22358], [22359, 22363], [22364, 22367], [22368, 22369], [22369, 22379], [22380, 22391], [22391, 22392], [22393, 22403], [22404, 22412], [22413, 22415], [22416, 22421], [22421, 22422]]}) 
answer: set([u'use', u'call', u'techniqu', u'think'])
candidate Sentence: (0.11417946964502335, {u'tokens': [u'The', u'press', u'called', u'it', u'a', u'``', u'peace', u'ray', u"''", u'or', u'death', u'ray', u'.'], u'lemmas': [u'the', u'press', u'call', u'it', u'a', u'``', u'peace', u'ray', u"''", u'or', u'death', u'ray', u'.'], u'pos': [u'DT', u'NN', u'VBD', u'PRP', u'DT', u'``', u'NN', u'NN', u"''", u'CC', u'NN', u'NN', u'.'], u'char_offsets': [[33462, 33465], [33466, 33471], [33472, 33478], [33479, 33481], [33482, 33483], [33484, 33485], [33485, 33490], [33491, 33494], [33494, 33495], [33496, 33498], [33499, 33504], [33505, 33508], [33508, 33509]]}) 
answer: set([u'use', u'pictur', u'think', u'techniqu'])
candidate Sentence: (0.11222786456346512, {u'tokens': [u'In', u'April', u'1887', u',', u'Tesla', u'began', u'investigating', u'what', u'would', u'later', u'be', u'called', u'X', u'rays', u'using', u'his', u'own', u'single', u'terminal', u'vacuum', u'tubes', u'-LRB-', u'similar', u'to', u'his', u'patent', u'-RRB-', u'.'], u'lemmas': [u'in', u'April', u'1887', u',', u'Tesla', u'begin', u'investigate', u'what', u'would', u'later', u'be', u'call', u'x', u'ray', u'use', u'he', u'own', u'single', u'terminal', u'vacuum', u'tube', u'-lrb-', u'similar', u'to', u'he', u'patent', u'-rrb-', u'.'], u'pos': [u'IN', u'NNP', u'CD', u',', u'NNP', u'VBD', u'VBG', u'WP', u'MD', u'RB', u'VB', u'VBN', u'NN', u'NNS', u'VBG', u'PRP$', u'JJ', u'JJ', u'JJ', u'NN', u'NNS', u'-LRB-', u'JJ', u'TO', u'PRP$', u'NN', u'-RRB-', u'.'], u'char_offsets': [[11071, 11073], [11074, 11079], [11080, 11084], [11084, 11085], [11086, 11091], [11092, 11097], [11098, 11111], [11112, 11116], [11117, 11122], [11123, 11128], [11129, 11131], [11132, 11138], [11139, 11140], [11141, 11145], [11146, 11151], [11152, 11155], [11156, 11159], [11160, 11166], [11167, 11175], [11176, 11182], [11183, 11188], [11189, 11190], [11190, 11197], [11198, 11200], [11201, 11204], [11205, 11211], [11213, 11214], [11214, 11215]]}) 
answer: set([u'pictur', u'think', u'techniqu'])
candidate Sentence: (0.11192049086093903, {u'tokens': [u'Belgrade', u'International', u'Airport', u'is', u'called', u'``', u'Belgrade', u'Nikola', u'Tesla', u'Airport', u"''", u'.'], u'lemmas': [u'Belgrade', u'International', u'Airport', u'be', u'call', u'``', u'Belgrade', u'Nikola', u'Tesla', u'Airport', u"''", u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'VBZ', u'VBN', u'``', u'NNP', u'NNP', u'NNP', u'NNP', u"''", u'.'], u'char_offsets': [[53191, 53199], [53200, 53213], [53214, 53221], [53222, 53224], [53225, 53231], [53232, 53233], [53233, 53241], [53242, 53248], [53249, 53254], [53255, 53262], [53262, 53263], [53263, 53264]]}) 
answer: set([u'use', u'pictur', u'think', u'techniqu'])
candidate Sentence: (0.10741657763719559, {u'tokens': [u'He', u'did', u'not', u'like', u'posing', u'for', u'portraits', u',', u'doing', u'so', u'only', u'once', u'for', u'princess', u'Vilma', u'Lwoff-Parlaghy', u'.'], u'lemmas': [u'he', u'do', u'not', u'like', u'pose', u'for', u'portrait', u',', u'do', u'so', u'only', u'once', u'for', u'princess', u'Vilma', u'Lwoff-Parlaghy', u'.'], u'pos': [u'PRP', u'VBD', u'RB', u'VB', u'VBG', u'IN', u'NNS', u',', u'VBG', u'RB', u'RB', u'RB', u'IN', u'NN', u'NNP', u'NNP', u'.'], u'char_offsets': [[46648, 46650], [46651, 46654], [46655, 46658], [46659, 46663], [46664, 46670], [46671, 46674], [46675, 46684], [46684, 46685], [46686, 46691], [46692, 46694], [46695, 46699], [46700, 46704], [46705, 46708], [46709, 46717], [46718, 46723], [46724, 46738], [46738, 46739]]}) 
answer: set([u'use', u'think', u'call', u'techniqu', u'pictur'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Did Nikola Tesla use a technique called picture thinking?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Nikola Tesla used a technique called picture thinking.
Difficulty = easy
Article_Title = Nikola_Tesla
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set4/a3.txt

No
_____________________________ test_yesno[param237] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb31a70>, (<src.tfidf.TF_IDF object at 0x10b195d90>, set(['nikola', 'nikola_tesla', 'tesla'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb31a70>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.33797436952590942, {u'tokens': [u'Tesla', u'would', u'visualise', u'an', u'invention', u'in', u'his', u'brain', u'with', u'extreme', u'precision', u',', u'including', u'all', u'dimensions', u',', u'before', u'moving', u'to', u'the', u'construction', u'stage', u';', u'a', u'technique', u'sometimes', u'known', u'as', u'picture', u'thinking', u'.'], u'lemmas': [u'Tesla', u'would', u'visualise', u'a', u'invention', u'in', u'he', u'brain', u'with', u'extreme', u'precision', u',', u'include', u'all', u'dimension', u',', u'before', u'move', u'to', u'the', u'construction', u'stage', u';', u'a', u'technique', u'sometimes', u'know', u'as', u'picture', u'thinking', u'.'], u'pos': [u'NNP', u'MD', u'VB', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'IN', u'JJ', u'NN', u',', u'VBG', u'DT', u'NNS', u',', u'IN', u'VBG', u'TO', u'DT', u'NN', u'NN', u':', u'DT', u'NN', u'RB', u'VBN', u'IN', u'NN', u'NN', u'.'], u'char_offsets': [[6327, 6332], [6333, 6338], [6339, 6348], [6349, 6351], [6352, 6361], [6362, 6364], [6365, 6368], [6369, 6374], [6375, 6379], [6380, 6387], [6388, 6397], [6397, 6398], [6399, 6408], [6409, 6412], [6413, 6423], [6423, 6424], [6425, 6431], [6432, 6438], [6439, 6441], [6442, 6445], [6446, 6458], [6459, 6464], [6464, 6465], [6466, 6467], [6468, 6477], [6478, 6487], [6488, 6493], [6494, 6496], [6497, 6504], [6505, 6513], [6513, 6514]]}) 
answer: set([u'use', u'call'])
candidate Sentence: (0.25518304109573364, {u'tokens': [u'Did', u'Tesla', u'really', u'invent', u'the', u'loudspeaker', u'?', u"''"], u'lemmas': [u'do', u'Tesla', u'really', u'invent', u'the', u'loudspeaker', u'?', u"''"], u'pos': [u'VBD', u'NNP', u'RB', u'VB', u'DT', u'NN', u'.', u"''"], u'char_offsets': [[7459, 7462], [7463, 7468], [7469, 7475], [7476, 7482], [7483, 7486], [7487, 7498], [7498, 7499], [7499, 7500]]}) 
answer: set([u'use', u'pictur', u'call', u'think', u'techniqu'])
candidate Sentence: (0.21481014788150787, {u'tokens': [u'Why', u'the', u'Name', u'``', u'Tesla', u"''", u'?'], u'lemmas': [u'why', u'the', u'name', u'``', u'Tesla', u"''", u'?'], u'pos': [u'WRB', u'DT', u'NN', u'``', u'NNP', u"''", u'.'], u'char_offsets': [[49350, 49353], [49354, 49357], [49358, 49362], [49363, 49364], [49364, 49369], [49369, 49370], [49370, 49371]]}) 
answer: set([u'use', u'pictur', u'call', u'think', u'techniqu'])
candidate Sentence: (0.16540056467056274, {u'tokens': [u'Tesla', u'called', u'his', u'boat', u'a', u'``', u'teleautomaton', u"''", u'.'], u'lemmas': [u'Tesla', u'call', u'he', u'boat', u'a', u'``', u'teleautomaton', u"''", u'.'], u'pos': [u'NNP', u'VBD', u'PRP$', u'NN', u'DT', u'``', u'NN', u"''", u'.'], u'char_offsets': [[21511, 21516], [21517, 21523], [21524, 21527], [21528, 21532], [21533, 21534], [21535, 21536], [21536, 21549], [21549, 21550], [21550, 21551]]}) 
answer: set([u'use', u'pictur', u'think', u'techniqu'])
candidate Sentence: (0.13074177503585815, {u'tokens': [u'ISBN', u'*', u'Valentinuzzi', u',', u'M.E.', u',', u'Nikola', u'Tesla', u':', u'why', u'was', u'he', u'so', u'much', u'resisted', u'and', u'forgotten', u'?'], u'lemmas': [u'ISBN', u'*', u'Valentinuzzi', u',', u'M.E.', u',', u'Nikola', u'Tesla', u':', u'why', u'be', u'he', u'so', u'much', u'resist', u'and', u'forget', u'?'], u'pos': [u'NNP', u'SYM', u'NNP', u',', u'NNP', u',', u'NNP', u'NNP', u':', u'WRB', u'VBD', u'PRP', u'RB', u'RB', u'VBN', u'CC', u'VBN', u'.'], u'char_offsets': [[56285, 56289], [56290, 56291], [56292, 56304], [56304, 56305], [56306, 56310], [56310, 56311], [56312, 56318], [56319, 56324], [56324, 56325], [56326, 56329], [56330, 56333], [56334, 56336], [56337, 56339], [56340, 56344], [56345, 56353], [56354, 56357], [56358, 56367], [56367, 56368]]}) 
answer: set([u'use', u'pictur', u'call', u'think', u'techniqu'])
candidate Sentence: (0.11778946965932846, {u'tokens': [u'Publicity', u'picture', u'of', u'a', u'participant', u'sitting', u'in', u'his', u'laboratory', u'in', u'Colorado', u'Springs', u'with', u'his', u'``', u'Magnifying', u'Transmitter', u"''", u'generating', u'millions', u'of', u'volts', u'.'], u'lemmas': [u'publicity', u'picture', u'of', u'a', u'participant', u'sit', u'in', u'he', u'laboratory', u'in', u'Colorado', u'Springs', u'with', u'he', u'``', u'magnify', u'transmitter', u"''", u'generate', u'million', u'of', u'volt', u'.'], u'pos': [u'NN', u'NN', u'IN', u'DT', u'NN', u'VBG', u'IN', u'PRP$', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'PRP$', u'``', u'VBG', u'NN', u"''", u'VBG', u'NNS', u'IN', u'NNS', u'.'], u'char_offsets': [[22278, 22287], [22288, 22295], [22296, 22298], [22299, 22300], [22301, 22312], [22313, 22320], [22321, 22323], [22324, 22327], [22328, 22338], [22339, 22341], [22342, 22350], [22351, 22358], [22359, 22363], [22364, 22367], [22368, 22369], [22369, 22379], [22380, 22391], [22391, 22392], [22393, 22403], [22404, 22412], [22413, 22415], [22416, 22421], [22421, 22422]]}) 
answer: set([u'use', u'call', u'techniqu', u'think'])
candidate Sentence: (0.11417946964502335, {u'tokens': [u'The', u'press', u'called', u'it', u'a', u'``', u'peace', u'ray', u"''", u'or', u'death', u'ray', u'.'], u'lemmas': [u'the', u'press', u'call', u'it', u'a', u'``', u'peace', u'ray', u"''", u'or', u'death', u'ray', u'.'], u'pos': [u'DT', u'NN', u'VBD', u'PRP', u'DT', u'``', u'NN', u'NN', u"''", u'CC', u'NN', u'NN', u'.'], u'char_offsets': [[33462, 33465], [33466, 33471], [33472, 33478], [33479, 33481], [33482, 33483], [33484, 33485], [33485, 33490], [33491, 33494], [33494, 33495], [33496, 33498], [33499, 33504], [33505, 33508], [33508, 33509]]}) 
answer: set([u'use', u'pictur', u'think', u'techniqu'])
candidate Sentence: (0.11222786456346512, {u'tokens': [u'In', u'April', u'1887', u',', u'Tesla', u'began', u'investigating', u'what', u'would', u'later', u'be', u'called', u'X', u'rays', u'using', u'his', u'own', u'single', u'terminal', u'vacuum', u'tubes', u'-LRB-', u'similar', u'to', u'his', u'patent', u'-RRB-', u'.'], u'lemmas': [u'in', u'April', u'1887', u',', u'Tesla', u'begin', u'investigate', u'what', u'would', u'later', u'be', u'call', u'x', u'ray', u'use', u'he', u'own', u'single', u'terminal', u'vacuum', u'tube', u'-lrb-', u'similar', u'to', u'he', u'patent', u'-rrb-', u'.'], u'pos': [u'IN', u'NNP', u'CD', u',', u'NNP', u'VBD', u'VBG', u'WP', u'MD', u'RB', u'VB', u'VBN', u'NN', u'NNS', u'VBG', u'PRP$', u'JJ', u'JJ', u'JJ', u'NN', u'NNS', u'-LRB-', u'JJ', u'TO', u'PRP$', u'NN', u'-RRB-', u'.'], u'char_offsets': [[11071, 11073], [11074, 11079], [11080, 11084], [11084, 11085], [11086, 11091], [11092, 11097], [11098, 11111], [11112, 11116], [11117, 11122], [11123, 11128], [11129, 11131], [11132, 11138], [11139, 11140], [11141, 11145], [11146, 11151], [11152, 11155], [11156, 11159], [11160, 11166], [11167, 11175], [11176, 11182], [11183, 11188], [11189, 11190], [11190, 11197], [11198, 11200], [11201, 11204], [11205, 11211], [11213, 11214], [11214, 11215]]}) 
answer: set([u'pictur', u'think', u'techniqu'])
candidate Sentence: (0.11192049086093903, {u'tokens': [u'Belgrade', u'International', u'Airport', u'is', u'called', u'``', u'Belgrade', u'Nikola', u'Tesla', u'Airport', u"''", u'.'], u'lemmas': [u'Belgrade', u'International', u'Airport', u'be', u'call', u'``', u'Belgrade', u'Nikola', u'Tesla', u'Airport', u"''", u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'VBZ', u'VBN', u'``', u'NNP', u'NNP', u'NNP', u'NNP', u"''", u'.'], u'char_offsets': [[53191, 53199], [53200, 53213], [53214, 53221], [53222, 53224], [53225, 53231], [53232, 53233], [53233, 53241], [53242, 53248], [53249, 53254], [53255, 53262], [53262, 53263], [53263, 53264]]}) 
answer: set([u'use', u'pictur', u'think', u'techniqu'])
candidate Sentence: (0.10741657763719559, {u'tokens': [u'He', u'did', u'not', u'like', u'posing', u'for', u'portraits', u',', u'doing', u'so', u'only', u'once', u'for', u'princess', u'Vilma', u'Lwoff-Parlaghy', u'.'], u'lemmas': [u'he', u'do', u'not', u'like', u'pose', u'for', u'portrait', u',', u'do', u'so', u'only', u'once', u'for', u'princess', u'Vilma', u'Lwoff-Parlaghy', u'.'], u'pos': [u'PRP', u'VBD', u'RB', u'VB', u'VBG', u'IN', u'NNS', u',', u'VBG', u'RB', u'RB', u'RB', u'IN', u'NN', u'NNP', u'NNP', u'.'], u'char_offsets': [[46648, 46650], [46651, 46654], [46655, 46658], [46659, 46663], [46664, 46670], [46671, 46674], [46675, 46684], [46684, 46685], [46686, 46691], [46692, 46694], [46695, 46699], [46700, 46704], [46705, 46708], [46709, 46717], [46718, 46723], [46724, 46738], [46738, 46739]]}) 
answer: set([u'use', u'think', u'call', u'techniqu', u'pictur'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Did Nikola Tesla use a technique called picture thinking?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Nikola_Tesla
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set4/a3.txt

No
_____________________________ test_yesno[param253] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb31ef0>, (<src.tfidf.TF_IDF object at 0x108044450>, set(['piano'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cb31ef0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.49156421422958374, {u'tokens': [u'The', u'soft', u'pedal', u'or', u'una', u'corda', u'pedal', u'is', u'placed', u'leftmost', u'in', u'the', u'row', u'of', u'pedals', u'.'], u'lemmas': [u'the', u'soft', u'pedal', u'or', u'una', u'corda', u'pedal', u'be', u'place', u'leftmost', u'in', u'the', u'row', u'of', u'pedal', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'CC', u'FW', u'FW', u'NN', u'VBZ', u'VBN', u'JJS', u'IN', u'DT', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[22344, 22347], [22348, 22352], [22353, 22358], [22359, 22361], [22362, 22365], [22366, 22371], [22372, 22377], [22378, 22380], [22381, 22387], [22388, 22396], [22397, 22399], [22400, 22403], [22404, 22407], [22408, 22410], [22411, 22417], [22417, 22418]]}) 
answer: set([u'left-most', u'call', u'grand'])
candidate Sentence: (0.48642778396606445, {u'tokens': [u'Piano', u'pedals', u'from', u'left', u'to', u'right', u':', u'una', u'corda', u',', u'sostenuto', u',', u'and', u'damper', u'.'], u'lemmas': [u'piano', u'pedal', u'from', u'leave', u'to', u'right', u':', u'una', u'corda', u',', u'sostenuto', u',', u'and', u'damper', u'.'], u'pos': [u'NN', u'NNS', u'IN', u'VBN', u'TO', u'NN', u':', u'FW', u'FW', u',', u'NN', u',', u'CC', u'NN', u'.'], u'char_offsets': [[21565, 21570], [21571, 21577], [21578, 21582], [21583, 21587], [21588, 21590], [21591, 21596], [21596, 21597], [21598, 21601], [21602, 21607], [21607, 21608], [21609, 21618], [21618, 21619], [21620, 21623], [21624, 21630], [21630, 21631]]}) 
answer: set([u'left-most', u'call', u'grand'])
candidate Sentence: (0.43915429711341858, {u'tokens': [u'Most', u'grand', u'pianos', u'have', u'three', u'pedals', u':', u'soft', u'pedal', u'-LRB-', u'una', u'corda', u'-RRB-', u',', u'sostenuto', u',', u'and', u'sustain', u'pedal', u'-LRB-', u'from', u'left', u'to', u'right', u',', u'respectively', u'-RRB-', u'.'], u'lemmas': [u'most', u'grand', u'piano', u'have', u'three', u'pedal', u':', u'soft', u'pedal', u'-lrb-', u'una', u'corda', u'-rrb-', u',', u'sostenuto', u',', u'and', u'sustain', u'pedal', u'-lrb-', u'from', u'leave', u'to', u'right', u',', u'respectively', u'-rrb-', u'.'], u'pos': [u'JJS', u'JJ', u'NNS', u'VBP', u'CD', u'NNS', u':', u'JJ', u'NN', u'-LRB-', u'FW', u'FW', u'-RRB-', u',', u'NN', u',', u'CC', u'VB', u'NN', u'-LRB-', u'IN', u'VBN', u'TO', u'RB', u',', u'RB', u'-RRB-', u'.'], u'char_offsets': [[21809, 21813], [21814, 21819], [21820, 21826], [21827, 21831], [21832, 21837], [21838, 21844], [21844, 21845], [21846, 21850], [21851, 21856], [21857, 21858], [21858, 21861], [21862, 21867], [21867, 21868], [21868, 21869], [21870, 21879], [21879, 21880], [21881, 21884], [21885, 21892], [21893, 21898], [21899, 21900], [21900, 21904], [21905, 21909], [21910, 21912], [21913, 21918], [21918, 21919], [21920, 21932], [21932, 21933], [21933, 21934]]}) 
answer: set([u'left-most', u'call'])
candidate Sentence: (0.34400025010108948, {u'tokens': [u'On', u'grand', u'pianos', u',', u'the', u'middle', u'pedal', u'is', u'a', u'sostenuto', u'pedal', u'.'], u'lemmas': [u'on', u'grand', u'piano', u',', u'the', u'middle', u'pedal', u'be', u'a', u'sostenuto', u'pedal', u'.'], u'pos': [u'IN', u'JJ', u'NNS', u',', u'DT', u'JJ', u'NN', u'VBZ', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[22872, 22874], [22875, 22880], [22881, 22887], [22887, 22888], [22889, 22892], [22893, 22899], [22900, 22905], [22906, 22908], [22909, 22910], [22911, 22920], [22921, 22926], [22926, 22927]]}) 
answer: set([u'left-most', u'corda', u'call', u'una'])
candidate Sentence: (0.27367448806762695, {u'tokens': [u'In', u'grand', u'pianos', u',', u'it', u'shifts', u'the', u'entire', u'action', u',', u'including', u'the', u'keyboard', u',', u'to', u'the', u'right', u',', u'so', u'that', u'the', u'hammers', u'hit', u'only', u'one', u'of', u'the', u'three', u'strings', u'for', u'each', u'note', u'-LRB-', u'hence', u'the', u'name', u'una', u'corda', u',', u'or', u'`', u'one', u'string', u"'", u'-RRB-', u'.'], u'lemmas': [u'in', u'grand', u'piano', u',', u'it', u'shift', u'the', u'entire', u'action', u',', u'include', u'the', u'keyboard', u',', u'to', u'the', u'right', u',', u'so', u'that', u'the', u'hammer', u'hit', u'only', u'one', u'of', u'the', u'three', u'string', u'for', u'each', u'note', u'-lrb-', u'hence', u'the', u'name', u'una', u'corda', u',', u'or', u'`', u'one', u'string', u"'", u'-rrb-', u'.'], u'pos': [u'IN', u'JJ', u'NNS', u',', u'PRP', u'VBZ', u'DT', u'JJ', u'NN', u',', u'VBG', u'DT', u'NN', u',', u'TO', u'DT', u'NN', u',', u'RB', u'IN', u'DT', u'NNS', u'VBD', u'RB', u'CD', u'IN', u'DT', u'CD', u'NNS', u'IN', u'DT', u'NN', u'-LRB-', u'RB', u'DT', u'NN', u'FW', u'FW', u',', u'CC', u'``', u'CD', u'NN', u"''", u'-RRB-', u'.'], u'char_offsets': [[22419, 22421], [22422, 22427], [22428, 22434], [22434, 22435], [22436, 22438], [22439, 22445], [22446, 22449], [22450, 22456], [22457, 22463], [22463, 22464], [22465, 22474], [22475, 22478], [22479, 22487], [22487, 22488], [22489, 22491], [22492, 22495], [22496, 22501], [22501, 22502], [22503, 22505], [22506, 22510], [22511, 22514], [22515, 22522], [22523, 22526], [22527, 22531], [22532, 22535], [22536, 22538], [22539, 22542], [22543, 22548], [22549, 22556], [22557, 22560], [22561, 22565], [22566, 22570], [22571, 22572], [22572, 22577], [22578, 22581], [22582, 22586], [22587, 22590], [22591, 22596], [22596, 22597], [22598, 22600], [22601, 22602], [22602, 22605], [22606, 22612], [22612, 22613], [22613, 22614], [22614, 22615]]}) 
answer: set([u'left-most', u'pedal', u'call'])
candidate Sentence: (0.25456073880195618, {u'tokens': [u'On', u'many', u'upright', u'pianos', u',', u'there', u'is', u'a', u'middle', u'pedal', u'called', u'the', u'`', u'practice', u"'", u'or', u'celeste', u'pedal', u'.'], u'lemmas': [u'on', u'many', u'upright', u'piano', u',', u'there', u'be', u'a', u'middle', u'pedal', u'call', u'the', u'`', u'practice', u"'", u'or', u'celeste', u'pedal', u'.'], u'pos': [u'IN', u'JJ', u'JJ', u'NNS', u',', u'EX', u'VBZ', u'DT', u'JJ', u'NN', u'VBD', u'DT', u'``', u'NN', u"''", u'CC', u'JJ', u'NN', u'.'], u'char_offsets': [[23314, 23316], [23317, 23321], [23322, 23329], [23330, 23336], [23336, 23337], [23338, 23343], [23344, 23346], [23347, 23348], [23349, 23355], [23356, 23361], [23362, 23368], [23369, 23372], [23373, 23374], [23374, 23382], [23382, 23383], [23384, 23386], [23387, 23394], [23395, 23400], [23400, 23401]]}) 
answer: set([u'left-most', u'corda', u'grand', u'una'])
candidate Sentence: (0.23683032393455505, {u'tokens': [u'The', u'sustain', u'pedal', u'-LRB-', u'or', u',', u'damper', u'pedal', u'-RRB-', u'is', u'often', u'simply', u'called', u'``', u'the', u'pedal', u"''", u',', u'since', u'it', u'is', u'the', u'most', u'frequently', u'used', u'.'], u'lemmas': [u'the', u'sustain', u'pedal', u'-lrb-', u'or', u',', u'damper', u'pedal', u'-rrb-', u'be', u'often', u'simply', u'call', u'``', u'the', u'pedal', u"''", u',', u'since', u'it', u'be', u'the', u'most', u'frequently', u'use', u'.'], u'pos': [u'DT', u'VBP', u'NN', u'-LRB-', u'CC', u',', u'NN', u'NN', u'-RRB-', u'VBZ', u'RB', u'RB', u'VBN', u'``', u'DT', u'NN', u"''", u',', u'IN', u'PRP', u'VBZ', u'DT', u'RBS', u'RB', u'VBN', u'.'], u'char_offsets': [[22087, 22090], [22091, 22098], [22099, 22104], [22105, 22106], [22106, 22108], [22108, 22109], [22110, 22116], [22117, 22122], [22122, 22123], [22124, 22126], [22127, 22132], [22133, 22139], [22140, 22146], [22147, 22148], [22148, 22151], [22152, 22157], [22157, 22158], [22158, 22159], [22160, 22165], [22166, 22168], [22169, 22171], [22172, 22175], [22176, 22180], [22181, 22191], [22192, 22196], [22196, 22197]]}) 
answer: set([u'left-most', u'corda', u'una', u'grand'])
candidate Sentence: (0.16957953572273254, {u'tokens': [u'The', u'longer', u'strings', u'on', u'a', u'concert', u'grand', u'can', u'vibrate', u'more', u'freely', u'than', u'the', u'shorter', u',', u'thicker', u'strings', u'on', u'a', u'baby', u'grand', u',', u'which', u'means', u'that', u'a', u'concert', u'grand', u"'s", u'strings', u'will', u'have', u'truer', u'overtones', u'.'], u'lemmas': [u'the', u'longer', u'string', u'on', u'a', u'concert', u'grand', u'can', u'vibrate', u'more', u'freely', u'than', u'the', u'shorter', u',', u'thicker', u'string', u'on', u'a', u'baby', u'grand', u',', u'which', u'mean', u'that', u'a', u'concert', u'grand', u"'s", u'string', u'will', u'have', u'truer', u'overtone', u'.'], u'pos': [u'DT', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'JJ', u'MD', u'VB', u'RBR', u'RB', u'IN', u'DT', u'JJR', u',', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'JJ', u',', u'WDT', u'VBZ', u'IN', u'DT', u'NN', u'JJ', u'POS', u'NNS', u'MD', u'VB', u'JJR', u'NNS', u'.'], u'char_offsets': [[14461, 14464], [14465, 14471], [14472, 14479], [14480, 14482], [14483, 14484], [14485, 14492], [14493, 14498], [14499, 14502], [14503, 14510], [14511, 14515], [14516, 14522], [14523, 14527], [14528, 14531], [14532, 14539], [14539, 14540], [14541, 14548], [14549, 14556], [14557, 14559], [14560, 14561], [14562, 14566], [14567, 14572], [14572, 14573], [14574, 14579], [14580, 14585], [14586, 14590], [14591, 14592], [14593, 14600], [14601, 14606], [14606, 14608], [14609, 14616], [14617, 14621], [14622, 14626], [14627, 14632], [14633, 14642], [14642, 14643]]}) 
answer: set([u'left-most', u'corda', u'pedal', u'call', u'una'])
candidate Sentence: (0.15880560874938965, {u'tokens': [u'Most', u'modern', u'upright', u'pianos', u'have', u'three', u'pedals', u':', u'soft', u'pedal', u',', u'practice', u'pedal', u'and', u'sustain', u'pedal', u',', u'though', u'older', u'or', u'cheaper', u'models', u'may', u'lack', u'the', u'practice', u'pedal', u'.'], u'lemmas': [u'most', u'modern', u'upright', u'piano', u'have', u'three', u'pedal', u':', u'soft', u'pedal', u',', u'practice', u'pedal', u'and', u'sustain', u'pedal', u',', u'though', u'older', u'or', u'cheaper', u'model', u'may', u'lack', u'the', u'practice', u'pedal', u'.'], u'pos': [u'JJS', u'JJ', u'JJ', u'NNS', u'VBP', u'CD', u'NNS', u':', u'JJ', u'NN', u',', u'NN', u'NN', u'CC', u'VB', u'NN', u',', u'IN', u'JJR', u'CC', u'JJR', u'NNS', u'MD', u'VB', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[21935, 21939], [21940, 21946], [21947, 21954], [21955, 21961], [21962, 21966], [21967, 21972], [21973, 21979], [21979, 21980], [21981, 21985], [21986, 21991], [21991, 21992], [21993, 22001], [22002, 22007], [22008, 22011], [22012, 22019], [22020, 22025], [22025, 22026], [22027, 22033], [22034, 22039], [22040, 22042], [22043, 22050], [22051, 22057], [22058, 22061], [22062, 22066], [22067, 22070], [22071, 22079], [22080, 22085], [22085, 22086]]}) 
answer: set([u'left-most', u'corda', u'grand', u'call', u'una'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is the left-most pedal on a grand piano called the una corda?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Piano
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a1.txt

No
_____________________________ test_yesno[param254] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb31f38>, (<src.tfidf.TF_IDF object at 0x108044450>, set(['piano'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes, the left-most pedal on a grand piano is called the una corda.')
E            +    where 'Yes, the left-most pedal on a grand piano is called the una corda.' = <src.question_processing.Question_parser instance at 0x10cb31f38>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.49156421422958374, {u'tokens': [u'The', u'soft', u'pedal', u'or', u'una', u'corda', u'pedal', u'is', u'placed', u'leftmost', u'in', u'the', u'row', u'of', u'pedals', u'.'], u'lemmas': [u'the', u'soft', u'pedal', u'or', u'una', u'corda', u'pedal', u'be', u'place', u'leftmost', u'in', u'the', u'row', u'of', u'pedal', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'CC', u'FW', u'FW', u'NN', u'VBZ', u'VBN', u'JJS', u'IN', u'DT', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[22344, 22347], [22348, 22352], [22353, 22358], [22359, 22361], [22362, 22365], [22366, 22371], [22372, 22377], [22378, 22380], [22381, 22387], [22388, 22396], [22397, 22399], [22400, 22403], [22404, 22407], [22408, 22410], [22411, 22417], [22417, 22418]]}) 
answer: set([u'left-most', u'call', u'grand'])
candidate Sentence: (0.48642778396606445, {u'tokens': [u'Piano', u'pedals', u'from', u'left', u'to', u'right', u':', u'una', u'corda', u',', u'sostenuto', u',', u'and', u'damper', u'.'], u'lemmas': [u'piano', u'pedal', u'from', u'leave', u'to', u'right', u':', u'una', u'corda', u',', u'sostenuto', u',', u'and', u'damper', u'.'], u'pos': [u'NN', u'NNS', u'IN', u'VBN', u'TO', u'NN', u':', u'FW', u'FW', u',', u'NN', u',', u'CC', u'NN', u'.'], u'char_offsets': [[21565, 21570], [21571, 21577], [21578, 21582], [21583, 21587], [21588, 21590], [21591, 21596], [21596, 21597], [21598, 21601], [21602, 21607], [21607, 21608], [21609, 21618], [21618, 21619], [21620, 21623], [21624, 21630], [21630, 21631]]}) 
answer: set([u'left-most', u'call', u'grand'])
candidate Sentence: (0.43915429711341858, {u'tokens': [u'Most', u'grand', u'pianos', u'have', u'three', u'pedals', u':', u'soft', u'pedal', u'-LRB-', u'una', u'corda', u'-RRB-', u',', u'sostenuto', u',', u'and', u'sustain', u'pedal', u'-LRB-', u'from', u'left', u'to', u'right', u',', u'respectively', u'-RRB-', u'.'], u'lemmas': [u'most', u'grand', u'piano', u'have', u'three', u'pedal', u':', u'soft', u'pedal', u'-lrb-', u'una', u'corda', u'-rrb-', u',', u'sostenuto', u',', u'and', u'sustain', u'pedal', u'-lrb-', u'from', u'leave', u'to', u'right', u',', u'respectively', u'-rrb-', u'.'], u'pos': [u'JJS', u'JJ', u'NNS', u'VBP', u'CD', u'NNS', u':', u'JJ', u'NN', u'-LRB-', u'FW', u'FW', u'-RRB-', u',', u'NN', u',', u'CC', u'VB', u'NN', u'-LRB-', u'IN', u'VBN', u'TO', u'RB', u',', u'RB', u'-RRB-', u'.'], u'char_offsets': [[21809, 21813], [21814, 21819], [21820, 21826], [21827, 21831], [21832, 21837], [21838, 21844], [21844, 21845], [21846, 21850], [21851, 21856], [21857, 21858], [21858, 21861], [21862, 21867], [21867, 21868], [21868, 21869], [21870, 21879], [21879, 21880], [21881, 21884], [21885, 21892], [21893, 21898], [21899, 21900], [21900, 21904], [21905, 21909], [21910, 21912], [21913, 21918], [21918, 21919], [21920, 21932], [21932, 21933], [21933, 21934]]}) 
answer: set([u'left-most', u'call'])
candidate Sentence: (0.34400025010108948, {u'tokens': [u'On', u'grand', u'pianos', u',', u'the', u'middle', u'pedal', u'is', u'a', u'sostenuto', u'pedal', u'.'], u'lemmas': [u'on', u'grand', u'piano', u',', u'the', u'middle', u'pedal', u'be', u'a', u'sostenuto', u'pedal', u'.'], u'pos': [u'IN', u'JJ', u'NNS', u',', u'DT', u'JJ', u'NN', u'VBZ', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[22872, 22874], [22875, 22880], [22881, 22887], [22887, 22888], [22889, 22892], [22893, 22899], [22900, 22905], [22906, 22908], [22909, 22910], [22911, 22920], [22921, 22926], [22926, 22927]]}) 
answer: set([u'left-most', u'corda', u'call', u'una'])
candidate Sentence: (0.27367448806762695, {u'tokens': [u'In', u'grand', u'pianos', u',', u'it', u'shifts', u'the', u'entire', u'action', u',', u'including', u'the', u'keyboard', u',', u'to', u'the', u'right', u',', u'so', u'that', u'the', u'hammers', u'hit', u'only', u'one', u'of', u'the', u'three', u'strings', u'for', u'each', u'note', u'-LRB-', u'hence', u'the', u'name', u'una', u'corda', u',', u'or', u'`', u'one', u'string', u"'", u'-RRB-', u'.'], u'lemmas': [u'in', u'grand', u'piano', u',', u'it', u'shift', u'the', u'entire', u'action', u',', u'include', u'the', u'keyboard', u',', u'to', u'the', u'right', u',', u'so', u'that', u'the', u'hammer', u'hit', u'only', u'one', u'of', u'the', u'three', u'string', u'for', u'each', u'note', u'-lrb-', u'hence', u'the', u'name', u'una', u'corda', u',', u'or', u'`', u'one', u'string', u"'", u'-rrb-', u'.'], u'pos': [u'IN', u'JJ', u'NNS', u',', u'PRP', u'VBZ', u'DT', u'JJ', u'NN', u',', u'VBG', u'DT', u'NN', u',', u'TO', u'DT', u'NN', u',', u'RB', u'IN', u'DT', u'NNS', u'VBD', u'RB', u'CD', u'IN', u'DT', u'CD', u'NNS', u'IN', u'DT', u'NN', u'-LRB-', u'RB', u'DT', u'NN', u'FW', u'FW', u',', u'CC', u'``', u'CD', u'NN', u"''", u'-RRB-', u'.'], u'char_offsets': [[22419, 22421], [22422, 22427], [22428, 22434], [22434, 22435], [22436, 22438], [22439, 22445], [22446, 22449], [22450, 22456], [22457, 22463], [22463, 22464], [22465, 22474], [22475, 22478], [22479, 22487], [22487, 22488], [22489, 22491], [22492, 22495], [22496, 22501], [22501, 22502], [22503, 22505], [22506, 22510], [22511, 22514], [22515, 22522], [22523, 22526], [22527, 22531], [22532, 22535], [22536, 22538], [22539, 22542], [22543, 22548], [22549, 22556], [22557, 22560], [22561, 22565], [22566, 22570], [22571, 22572], [22572, 22577], [22578, 22581], [22582, 22586], [22587, 22590], [22591, 22596], [22596, 22597], [22598, 22600], [22601, 22602], [22602, 22605], [22606, 22612], [22612, 22613], [22613, 22614], [22614, 22615]]}) 
answer: set([u'left-most', u'pedal', u'call'])
candidate Sentence: (0.25456073880195618, {u'tokens': [u'On', u'many', u'upright', u'pianos', u',', u'there', u'is', u'a', u'middle', u'pedal', u'called', u'the', u'`', u'practice', u"'", u'or', u'celeste', u'pedal', u'.'], u'lemmas': [u'on', u'many', u'upright', u'piano', u',', u'there', u'be', u'a', u'middle', u'pedal', u'call', u'the', u'`', u'practice', u"'", u'or', u'celeste', u'pedal', u'.'], u'pos': [u'IN', u'JJ', u'JJ', u'NNS', u',', u'EX', u'VBZ', u'DT', u'JJ', u'NN', u'VBD', u'DT', u'``', u'NN', u"''", u'CC', u'JJ', u'NN', u'.'], u'char_offsets': [[23314, 23316], [23317, 23321], [23322, 23329], [23330, 23336], [23336, 23337], [23338, 23343], [23344, 23346], [23347, 23348], [23349, 23355], [23356, 23361], [23362, 23368], [23369, 23372], [23373, 23374], [23374, 23382], [23382, 23383], [23384, 23386], [23387, 23394], [23395, 23400], [23400, 23401]]}) 
answer: set([u'left-most', u'corda', u'grand', u'una'])
candidate Sentence: (0.23683032393455505, {u'tokens': [u'The', u'sustain', u'pedal', u'-LRB-', u'or', u',', u'damper', u'pedal', u'-RRB-', u'is', u'often', u'simply', u'called', u'``', u'the', u'pedal', u"''", u',', u'since', u'it', u'is', u'the', u'most', u'frequently', u'used', u'.'], u'lemmas': [u'the', u'sustain', u'pedal', u'-lrb-', u'or', u',', u'damper', u'pedal', u'-rrb-', u'be', u'often', u'simply', u'call', u'``', u'the', u'pedal', u"''", u',', u'since', u'it', u'be', u'the', u'most', u'frequently', u'use', u'.'], u'pos': [u'DT', u'VBP', u'NN', u'-LRB-', u'CC', u',', u'NN', u'NN', u'-RRB-', u'VBZ', u'RB', u'RB', u'VBN', u'``', u'DT', u'NN', u"''", u',', u'IN', u'PRP', u'VBZ', u'DT', u'RBS', u'RB', u'VBN', u'.'], u'char_offsets': [[22087, 22090], [22091, 22098], [22099, 22104], [22105, 22106], [22106, 22108], [22108, 22109], [22110, 22116], [22117, 22122], [22122, 22123], [22124, 22126], [22127, 22132], [22133, 22139], [22140, 22146], [22147, 22148], [22148, 22151], [22152, 22157], [22157, 22158], [22158, 22159], [22160, 22165], [22166, 22168], [22169, 22171], [22172, 22175], [22176, 22180], [22181, 22191], [22192, 22196], [22196, 22197]]}) 
answer: set([u'left-most', u'corda', u'una', u'grand'])
candidate Sentence: (0.16957953572273254, {u'tokens': [u'The', u'longer', u'strings', u'on', u'a', u'concert', u'grand', u'can', u'vibrate', u'more', u'freely', u'than', u'the', u'shorter', u',', u'thicker', u'strings', u'on', u'a', u'baby', u'grand', u',', u'which', u'means', u'that', u'a', u'concert', u'grand', u"'s", u'strings', u'will', u'have', u'truer', u'overtones', u'.'], u'lemmas': [u'the', u'longer', u'string', u'on', u'a', u'concert', u'grand', u'can', u'vibrate', u'more', u'freely', u'than', u'the', u'shorter', u',', u'thicker', u'string', u'on', u'a', u'baby', u'grand', u',', u'which', u'mean', u'that', u'a', u'concert', u'grand', u"'s", u'string', u'will', u'have', u'truer', u'overtone', u'.'], u'pos': [u'DT', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'JJ', u'MD', u'VB', u'RBR', u'RB', u'IN', u'DT', u'JJR', u',', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'JJ', u',', u'WDT', u'VBZ', u'IN', u'DT', u'NN', u'JJ', u'POS', u'NNS', u'MD', u'VB', u'JJR', u'NNS', u'.'], u'char_offsets': [[14461, 14464], [14465, 14471], [14472, 14479], [14480, 14482], [14483, 14484], [14485, 14492], [14493, 14498], [14499, 14502], [14503, 14510], [14511, 14515], [14516, 14522], [14523, 14527], [14528, 14531], [14532, 14539], [14539, 14540], [14541, 14548], [14549, 14556], [14557, 14559], [14560, 14561], [14562, 14566], [14567, 14572], [14572, 14573], [14574, 14579], [14580, 14585], [14586, 14590], [14591, 14592], [14593, 14600], [14601, 14606], [14606, 14608], [14609, 14616], [14617, 14621], [14622, 14626], [14627, 14632], [14633, 14642], [14642, 14643]]}) 
answer: set([u'left-most', u'corda', u'pedal', u'call', u'una'])
candidate Sentence: (0.15880560874938965, {u'tokens': [u'Most', u'modern', u'upright', u'pianos', u'have', u'three', u'pedals', u':', u'soft', u'pedal', u',', u'practice', u'pedal', u'and', u'sustain', u'pedal', u',', u'though', u'older', u'or', u'cheaper', u'models', u'may', u'lack', u'the', u'practice', u'pedal', u'.'], u'lemmas': [u'most', u'modern', u'upright', u'piano', u'have', u'three', u'pedal', u':', u'soft', u'pedal', u',', u'practice', u'pedal', u'and', u'sustain', u'pedal', u',', u'though', u'older', u'or', u'cheaper', u'model', u'may', u'lack', u'the', u'practice', u'pedal', u'.'], u'pos': [u'JJS', u'JJ', u'JJ', u'NNS', u'VBP', u'CD', u'NNS', u':', u'JJ', u'NN', u',', u'NN', u'NN', u'CC', u'VB', u'NN', u',', u'IN', u'JJR', u'CC', u'JJR', u'NNS', u'MD', u'VB', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[21935, 21939], [21940, 21946], [21947, 21954], [21955, 21961], [21962, 21966], [21967, 21972], [21973, 21979], [21979, 21980], [21981, 21985], [21986, 21991], [21991, 21992], [21993, 22001], [22002, 22007], [22008, 22011], [22012, 22019], [22020, 22025], [22025, 22026], [22027, 22033], [22034, 22039], [22040, 22042], [22043, 22050], [22051, 22057], [22058, 22061], [22062, 22066], [22067, 22070], [22071, 22079], [22080, 22085], [22085, 22086]]}) 
answer: set([u'left-most', u'corda', u'grand', u'call', u'una'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is the left-most pedal on a grand piano called the una corda?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes, the left-most pedal on a grand piano is called the una corda.
Difficulty = easy
Article_Title = Piano
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a1.txt

No
_____________________________ test_yesno[param255] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb31f80>, (<src.tfidf.TF_IDF object at 0x108044450>, set(['piano'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cb31f80>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.90349835157394409, {u'tokens': [u'It', u'is', u'advantageous', u'for', u'the', u'plate', u'to', u'be', u'quite', u'massive', u'.'], u'lemmas': [u'it', u'be', u'advantageous', u'for', u'the', u'plate', u'to', u'be', u'quite', u'massive', u'.'], u'pos': [u'PRP', u'VBZ', u'JJ', u'IN', u'DT', u'NN', u'TO', u'VB', u'RB', u'JJ', u'.'], u'char_offsets': [[26935, 26937], [26938, 26940], [26941, 26953], [26954, 26957], [26958, 26961], [26962, 26967], [26968, 26970], [26971, 26973], [26974, 26979], [26980, 26987], [26987, 26988]]}) 
answer: set([u'metal', u'grand'])
candidate Sentence: (0.21564431488513947, {u'tokens': [u'The', u'plate', u',', u'or', u'metal', u'frame', u',', u'of', u'a', u'piano', u'is', u'usually', u'made', u'of', u'cast', u'iron', u'.'], u'lemmas': [u'the', u'plate', u',', u'or', u'metal', u'frame', u',', u'of', u'a', u'piano', u'be', u'usually', u'make', u'of', u'cast', u'iron', u'.'], u'pos': [u'DT', u'NN', u',', u'CC', u'NN', u'NN', u',', u'IN', u'DT', u'NN', u'VBZ', u'RB', u'VBN', u'IN', u'NN', u'NN', u'.'], u'char_offsets': [[26867, 26870], [26871, 26876], [26876, 26877], [26878, 26880], [26881, 26886], [26887, 26892], [26892, 26893], [26894, 26896], [26897, 26898], [26899, 26904], [26905, 26907], [26908, 26915], [26916, 26920], [26921, 26923], [26924, 26928], [26929, 26933], [26933, 26934]]}) 
answer: set([u'quit', u'massiv', u'advantag', u'grand'])
candidate Sentence: (0.11836342513561249, {u'tokens': [u'The', u'inclusion', u'in', u'a', u'piano', u'of', u'an', u'extremely', u'large', u'piece', u'of', u'metal', u'is', u'potentially', u'an', u'aesthetic', u'handicap', u',', u'which', u'piano', u'makers', u'overcome', u'by', u'polishing', u',', u'painting', u'and', u'decorating', u'the', u'plate', u'.'], u'lemmas': [u'the', u'inclusion', u'in', u'a', u'piano', u'of', u'a', u'extremely', u'large', u'piece', u'of', u'metal', u'be', u'potentially', u'a', u'aesthetic', u'handicap', u',', u'which', u'piano', u'maker', u'overcome', u'by', u'polish', u',', u'painting', u'and', u'decorate', u'the', u'plate', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'RB', u'JJ', u'NN', u'IN', u'NN', u'VBZ', u'RB', u'DT', u'JJ', u'NN', u',', u'WDT', u'NN', u'NNS', u'VBN', u'IN', u'VBG', u',', u'NN', u'CC', u'VBG', u'DT', u'NN', u'.'], u'char_offsets': [[27423, 27426], [27427, 27436], [27437, 27439], [27440, 27441], [27442, 27447], [27448, 27450], [27451, 27453], [27454, 27463], [27464, 27469], [27470, 27475], [27476, 27478], [27479, 27484], [27485, 27487], [27488, 27499], [27500, 27502], [27503, 27512], [27513, 27521], [27521, 27522], [27523, 27528], [27529, 27534], [27535, 27541], [27542, 27550], [27551, 27553], [27554, 27563], [27563, 27564], [27565, 27573], [27574, 27577], [27578, 27588], [27589, 27592], [27593, 27598], [27598, 27599]]}) 
answer: set([u'quit', u'massiv', u'advantag', u'grand'])
candidate Sentence: (0.10767658054828644, {u'tokens': [u'Plates', u'often', u'include', u'the', u'manufacturer', u"'s", u'ornamental', u'medallion', u'and', u'can', u'be', u'strikingly', u'attractive', u'.'], u'lemmas': [u'plate', u'often', u'include', u'the', u'manufacturer', u"'s", u'ornamental', u'medallion', u'and', u'can', u'be', u'strikingly', u'attractive', u'.'], u'pos': [u'NNS', u'RB', u'VBP', u'DT', u'NN', u'POS', u'JJ', u'NN', u'CC', u'MD', u'VB', u'RB', u'JJ', u'.'], u'char_offsets': [[27600, 27606], [27607, 27612], [27613, 27620], [27621, 27624], [27625, 27637], [27637, 27639], [27640, 27650], [27651, 27660], [27661, 27664], [27665, 27668], [27669, 27671], [27672, 27682], [27683, 27693], [27693, 27694]]}) 
answer: set([u'quit', u'massiv', u'metal', u'advantag', u'grand'])
candidate Sentence: (0.1001773402094841, {u'tokens': [u'The', u'metal', u'rod', u'at', u'lower', u'right', u'is', u'a', u'humidity', u'control', u'device', u'.'], u'lemmas': [u'the', u'metal', u'rod', u'at', u'lower', u'right', u'be', u'a', u'humidity', u'control', u'device', u'.'], u'pos': [u'DT', u'NN', u'NN', u'IN', u'JJR', u'NN', u'VBZ', u'DT', u'NN', u'NN', u'NN', u'.'], u'char_offsets': [[25520, 25523], [25524, 25529], [25530, 25533], [25534, 25536], [25537, 25542], [25543, 25548], [25549, 25551], [25552, 25553], [25554, 25562], [25563, 25570], [25571, 25577], [25577, 25578]]}) 
answer: set([u'massiv', u'plate', u'grand', u'advantag', u'quit'])
candidate Sentence: (0.094274967908859253, {u'tokens': [u'The', u'longer', u'strings', u'on', u'a', u'concert', u'grand', u'can', u'vibrate', u'more', u'freely', u'than', u'the', u'shorter', u',', u'thicker', u'strings', u'on', u'a', u'baby', u'grand', u',', u'which', u'means', u'that', u'a', u'concert', u'grand', u"'s", u'strings', u'will', u'have', u'truer', u'overtones', u'.'], u'lemmas': [u'the', u'longer', u'string', u'on', u'a', u'concert', u'grand', u'can', u'vibrate', u'more', u'freely', u'than', u'the', u'shorter', u',', u'thicker', u'string', u'on', u'a', u'baby', u'grand', u',', u'which', u'mean', u'that', u'a', u'concert', u'grand', u"'s", u'string', u'will', u'have', u'truer', u'overtone', u'.'], u'pos': [u'DT', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'JJ', u'MD', u'VB', u'RBR', u'RB', u'IN', u'DT', u'JJR', u',', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'JJ', u',', u'WDT', u'VBZ', u'IN', u'DT', u'NN', u'JJ', u'POS', u'NNS', u'MD', u'VB', u'JJR', u'NNS', u'.'], u'char_offsets': [[14461, 14464], [14465, 14471], [14472, 14479], [14480, 14482], [14483, 14484], [14485, 14492], [14493, 14498], [14499, 14502], [14503, 14510], [14511, 14515], [14516, 14522], [14523, 14527], [14528, 14531], [14532, 14539], [14539, 14540], [14541, 14548], [14549, 14556], [14557, 14559], [14560, 14561], [14562, 14566], [14567, 14572], [14572, 14573], [14574, 14579], [14580, 14585], [14586, 14590], [14591, 14592], [14593, 14600], [14601, 14606], [14606, 14608], [14609, 14616], [14617, 14621], [14622, 14626], [14627, 14632], [14633, 14642], [14642, 14643]]}) 
answer: set([u'plate', u'massiv', u'metal', u'advantag', u'quit'])
candidate Sentence: (0.094078436493873596, {u'tokens': [u'Since', u'the', u'strings', u'are', u'attached', u'to', u'the', u'plate', u'at', u'one', u'end', u',', u'any', u'vibrations', u'transmitted', u'to', u'the', u'plate', u'will', u'result', u'in', u'loss', u'of', u'energy', u'to', u'the', u'desired', u'-LRB-', u'efficient', u'-RRB-', u'channel', u'of', u'sound', u'transmission', u',', u'namely', u'the', u'bridge', u'and', u'the', u'soundboard', u'.'], u'lemmas': [u'since', u'the', u'string', u'be', u'attach', u'to', u'the', u'plate', u'at', u'one', u'end', u',', u'any', u'vibration', u'transmit', u'to', u'the', u'plate', u'will', u'result', u'in', u'loss', u'of', u'energy', u'to', u'the', u'desire', u'-lrb-', u'efficient', u'-rrb-', u'channel', u'of', u'sound', u'transmission', u',', u'namely', u'the', u'bridge', u'and', u'the', u'soundboard', u'.'], u'pos': [u'IN', u'DT', u'NNS', u'VBP', u'VBN', u'TO', u'DT', u'NN', u'IN', u'CD', u'NN', u',', u'DT', u'NNS', u'VBD', u'TO', u'DT', u'NN', u'MD', u'VB', u'IN', u'NN', u'IN', u'NN', u'TO', u'DT', u'VBN', u'-LRB-', u'JJ', u'-RRB-', u'NN', u'IN', u'JJ', u'NN', u',', u'RB', u'DT', u'NN', u'CC', u'DT', u'NN', u'.'], u'char_offsets': [[26989, 26994], [26995, 26998], [26999, 27006], [27007, 27010], [27011, 27019], [27020, 27022], [27023, 27026], [27027, 27032], [27033, 27035], [27036, 27039], [27040, 27043], [27043, 27044], [27045, 27048], [27049, 27059], [27060, 27071], [27072, 27074], [27075, 27078], [27079, 27084], [27085, 27089], [27090, 27096], [27097, 27099], [27100, 27104], [27105, 27107], [27108, 27114], [27115, 27117], [27118, 27121], [27122, 27129], [27130, 27131], [27131, 27140], [27140, 27141], [27142, 27149], [27150, 27152], [27153, 27158], [27159, 27171], [27171, 27172], [27173, 27179], [27180, 27183], [27184, 27190], [27191, 27194], [27195, 27198], [27199, 27209], [27209, 27210]]}) 
answer: set([u'quit', u'massiv', u'metal', u'advantag', u'grand'])
candidate Sentence: (0.09238298237323761, {u'tokens': [u'Some', u'manufacturers', u'now', u'use', u'cast', u'steel', u'in', u'their', u'plates', u',', u'for', u'greater', u'strength', u'.'], u'lemmas': [u'some', u'manufacturer', u'now', u'use', u'cast', u'steel', u'in', u'they', u'plate', u',', u'for', u'greater', u'strength', u'.'], u'pos': [u'DT', u'NNS', u'RB', u'VBP', u'VBN', u'NN', u'IN', u'PRP$', u'NNS', u',', u'IN', u'JJR', u'NN', u'.'], u'char_offsets': [[27211, 27215], [27216, 27229], [27230, 27233], [27234, 27237], [27238, 27242], [27243, 27248], [27249, 27251], [27252, 27257], [27258, 27264], [27264, 27265], [27266, 27269], [27270, 27277], [27278, 27286], [27286, 27287]]}) 
answer: set([u'quit', u'massiv', u'metal', u'advantag', u'grand'])
candidate Sentence: (0.091342821717262268, {u'tokens': [u'The', u'scores', u'for', u'music', u'for', u'prepared', u'piano', u'often', u'instruct', u'the', u'pianist', u'to', u'insert', u'pieces', u'of', u'rubber', u'or', u'small', u'pieces', u'of', u'metal', u'-LRB-', u'screws', u'or', u'washers', u'-RRB-', u'in', u'between', u'the', u'strings', u'.'], u'lemmas': [u'the', u'score', u'for', u'music', u'for', u'prepared', u'piano', u'often', u'instruct', u'the', u'pianist', u'to', u'insert', u'piece', u'of', u'rubber', u'or', u'small', u'piece', u'of', u'metal', u'-lrb-', u'screw', u'or', u'washer', u'-rrb-', u'in', u'between', u'the', u'string', u'.'], u'pos': [u'DT', u'NNS', u'IN', u'NN', u'IN', u'JJ', u'NN', u'RB', u'VB', u'DT', u'NN', u'TO', u'VB', u'NNS', u'IN', u'NN', u'CC', u'JJ', u'NNS', u'IN', u'NN', u'-LRB-', u'NNS', u'CC', u'NNS', u'-RRB-', u'IN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[18066, 18069], [18070, 18076], [18077, 18080], [18081, 18086], [18087, 18090], [18091, 18099], [18100, 18105], [18106, 18111], [18112, 18120], [18121, 18124], [18125, 18132], [18133, 18135], [18136, 18142], [18143, 18149], [18150, 18152], [18153, 18159], [18160, 18162], [18163, 18168], [18169, 18175], [18176, 18178], [18179, 18184], [18185, 18186], [18186, 18192], [18193, 18195], [18196, 18203], [18203, 18204], [18205, 18207], [18208, 18215], [18216, 18219], [18220, 18227], [18227, 18228]]}) 
answer: set([u'massiv', u'plate', u'grand', u'advantag', u'quit'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is it advantageous for a grand piano's metal plate to be quite massive?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Piano
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a1.txt

No
_____________________________ test_yesno[param256] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb31fc8>, (<src.tfidf.TF_IDF object at 0x108044450>, set(['piano'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('It is advantageous for the plate to be quite massive.')
E            +    where 'It is advantageous for the plate to be quite massive.' = <src.question_processing.Question_parser instance at 0x10cb31fc8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.90349835157394409, {u'tokens': [u'It', u'is', u'advantageous', u'for', u'the', u'plate', u'to', u'be', u'quite', u'massive', u'.'], u'lemmas': [u'it', u'be', u'advantageous', u'for', u'the', u'plate', u'to', u'be', u'quite', u'massive', u'.'], u'pos': [u'PRP', u'VBZ', u'JJ', u'IN', u'DT', u'NN', u'TO', u'VB', u'RB', u'JJ', u'.'], u'char_offsets': [[26935, 26937], [26938, 26940], [26941, 26953], [26954, 26957], [26958, 26961], [26962, 26967], [26968, 26970], [26971, 26973], [26974, 26979], [26980, 26987], [26987, 26988]]}) 
answer: set([u'metal', u'grand'])
candidate Sentence: (0.21564431488513947, {u'tokens': [u'The', u'plate', u',', u'or', u'metal', u'frame', u',', u'of', u'a', u'piano', u'is', u'usually', u'made', u'of', u'cast', u'iron', u'.'], u'lemmas': [u'the', u'plate', u',', u'or', u'metal', u'frame', u',', u'of', u'a', u'piano', u'be', u'usually', u'make', u'of', u'cast', u'iron', u'.'], u'pos': [u'DT', u'NN', u',', u'CC', u'NN', u'NN', u',', u'IN', u'DT', u'NN', u'VBZ', u'RB', u'VBN', u'IN', u'NN', u'NN', u'.'], u'char_offsets': [[26867, 26870], [26871, 26876], [26876, 26877], [26878, 26880], [26881, 26886], [26887, 26892], [26892, 26893], [26894, 26896], [26897, 26898], [26899, 26904], [26905, 26907], [26908, 26915], [26916, 26920], [26921, 26923], [26924, 26928], [26929, 26933], [26933, 26934]]}) 
answer: set([u'quit', u'massiv', u'advantag', u'grand'])
candidate Sentence: (0.11836342513561249, {u'tokens': [u'The', u'inclusion', u'in', u'a', u'piano', u'of', u'an', u'extremely', u'large', u'piece', u'of', u'metal', u'is', u'potentially', u'an', u'aesthetic', u'handicap', u',', u'which', u'piano', u'makers', u'overcome', u'by', u'polishing', u',', u'painting', u'and', u'decorating', u'the', u'plate', u'.'], u'lemmas': [u'the', u'inclusion', u'in', u'a', u'piano', u'of', u'a', u'extremely', u'large', u'piece', u'of', u'metal', u'be', u'potentially', u'a', u'aesthetic', u'handicap', u',', u'which', u'piano', u'maker', u'overcome', u'by', u'polish', u',', u'painting', u'and', u'decorate', u'the', u'plate', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'RB', u'JJ', u'NN', u'IN', u'NN', u'VBZ', u'RB', u'DT', u'JJ', u'NN', u',', u'WDT', u'NN', u'NNS', u'VBN', u'IN', u'VBG', u',', u'NN', u'CC', u'VBG', u'DT', u'NN', u'.'], u'char_offsets': [[27423, 27426], [27427, 27436], [27437, 27439], [27440, 27441], [27442, 27447], [27448, 27450], [27451, 27453], [27454, 27463], [27464, 27469], [27470, 27475], [27476, 27478], [27479, 27484], [27485, 27487], [27488, 27499], [27500, 27502], [27503, 27512], [27513, 27521], [27521, 27522], [27523, 27528], [27529, 27534], [27535, 27541], [27542, 27550], [27551, 27553], [27554, 27563], [27563, 27564], [27565, 27573], [27574, 27577], [27578, 27588], [27589, 27592], [27593, 27598], [27598, 27599]]}) 
answer: set([u'quit', u'massiv', u'advantag', u'grand'])
candidate Sentence: (0.10767658054828644, {u'tokens': [u'Plates', u'often', u'include', u'the', u'manufacturer', u"'s", u'ornamental', u'medallion', u'and', u'can', u'be', u'strikingly', u'attractive', u'.'], u'lemmas': [u'plate', u'often', u'include', u'the', u'manufacturer', u"'s", u'ornamental', u'medallion', u'and', u'can', u'be', u'strikingly', u'attractive', u'.'], u'pos': [u'NNS', u'RB', u'VBP', u'DT', u'NN', u'POS', u'JJ', u'NN', u'CC', u'MD', u'VB', u'RB', u'JJ', u'.'], u'char_offsets': [[27600, 27606], [27607, 27612], [27613, 27620], [27621, 27624], [27625, 27637], [27637, 27639], [27640, 27650], [27651, 27660], [27661, 27664], [27665, 27668], [27669, 27671], [27672, 27682], [27683, 27693], [27693, 27694]]}) 
answer: set([u'quit', u'massiv', u'metal', u'advantag', u'grand'])
candidate Sentence: (0.1001773402094841, {u'tokens': [u'The', u'metal', u'rod', u'at', u'lower', u'right', u'is', u'a', u'humidity', u'control', u'device', u'.'], u'lemmas': [u'the', u'metal', u'rod', u'at', u'lower', u'right', u'be', u'a', u'humidity', u'control', u'device', u'.'], u'pos': [u'DT', u'NN', u'NN', u'IN', u'JJR', u'NN', u'VBZ', u'DT', u'NN', u'NN', u'NN', u'.'], u'char_offsets': [[25520, 25523], [25524, 25529], [25530, 25533], [25534, 25536], [25537, 25542], [25543, 25548], [25549, 25551], [25552, 25553], [25554, 25562], [25563, 25570], [25571, 25577], [25577, 25578]]}) 
answer: set([u'massiv', u'plate', u'grand', u'advantag', u'quit'])
candidate Sentence: (0.094274967908859253, {u'tokens': [u'The', u'longer', u'strings', u'on', u'a', u'concert', u'grand', u'can', u'vibrate', u'more', u'freely', u'than', u'the', u'shorter', u',', u'thicker', u'strings', u'on', u'a', u'baby', u'grand', u',', u'which', u'means', u'that', u'a', u'concert', u'grand', u"'s", u'strings', u'will', u'have', u'truer', u'overtones', u'.'], u'lemmas': [u'the', u'longer', u'string', u'on', u'a', u'concert', u'grand', u'can', u'vibrate', u'more', u'freely', u'than', u'the', u'shorter', u',', u'thicker', u'string', u'on', u'a', u'baby', u'grand', u',', u'which', u'mean', u'that', u'a', u'concert', u'grand', u"'s", u'string', u'will', u'have', u'truer', u'overtone', u'.'], u'pos': [u'DT', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'JJ', u'MD', u'VB', u'RBR', u'RB', u'IN', u'DT', u'JJR', u',', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'JJ', u',', u'WDT', u'VBZ', u'IN', u'DT', u'NN', u'JJ', u'POS', u'NNS', u'MD', u'VB', u'JJR', u'NNS', u'.'], u'char_offsets': [[14461, 14464], [14465, 14471], [14472, 14479], [14480, 14482], [14483, 14484], [14485, 14492], [14493, 14498], [14499, 14502], [14503, 14510], [14511, 14515], [14516, 14522], [14523, 14527], [14528, 14531], [14532, 14539], [14539, 14540], [14541, 14548], [14549, 14556], [14557, 14559], [14560, 14561], [14562, 14566], [14567, 14572], [14572, 14573], [14574, 14579], [14580, 14585], [14586, 14590], [14591, 14592], [14593, 14600], [14601, 14606], [14606, 14608], [14609, 14616], [14617, 14621], [14622, 14626], [14627, 14632], [14633, 14642], [14642, 14643]]}) 
answer: set([u'plate', u'massiv', u'metal', u'advantag', u'quit'])
candidate Sentence: (0.094078436493873596, {u'tokens': [u'Since', u'the', u'strings', u'are', u'attached', u'to', u'the', u'plate', u'at', u'one', u'end', u',', u'any', u'vibrations', u'transmitted', u'to', u'the', u'plate', u'will', u'result', u'in', u'loss', u'of', u'energy', u'to', u'the', u'desired', u'-LRB-', u'efficient', u'-RRB-', u'channel', u'of', u'sound', u'transmission', u',', u'namely', u'the', u'bridge', u'and', u'the', u'soundboard', u'.'], u'lemmas': [u'since', u'the', u'string', u'be', u'attach', u'to', u'the', u'plate', u'at', u'one', u'end', u',', u'any', u'vibration', u'transmit', u'to', u'the', u'plate', u'will', u'result', u'in', u'loss', u'of', u'energy', u'to', u'the', u'desire', u'-lrb-', u'efficient', u'-rrb-', u'channel', u'of', u'sound', u'transmission', u',', u'namely', u'the', u'bridge', u'and', u'the', u'soundboard', u'.'], u'pos': [u'IN', u'DT', u'NNS', u'VBP', u'VBN', u'TO', u'DT', u'NN', u'IN', u'CD', u'NN', u',', u'DT', u'NNS', u'VBD', u'TO', u'DT', u'NN', u'MD', u'VB', u'IN', u'NN', u'IN', u'NN', u'TO', u'DT', u'VBN', u'-LRB-', u'JJ', u'-RRB-', u'NN', u'IN', u'JJ', u'NN', u',', u'RB', u'DT', u'NN', u'CC', u'DT', u'NN', u'.'], u'char_offsets': [[26989, 26994], [26995, 26998], [26999, 27006], [27007, 27010], [27011, 27019], [27020, 27022], [27023, 27026], [27027, 27032], [27033, 27035], [27036, 27039], [27040, 27043], [27043, 27044], [27045, 27048], [27049, 27059], [27060, 27071], [27072, 27074], [27075, 27078], [27079, 27084], [27085, 27089], [27090, 27096], [27097, 27099], [27100, 27104], [27105, 27107], [27108, 27114], [27115, 27117], [27118, 27121], [27122, 27129], [27130, 27131], [27131, 27140], [27140, 27141], [27142, 27149], [27150, 27152], [27153, 27158], [27159, 27171], [27171, 27172], [27173, 27179], [27180, 27183], [27184, 27190], [27191, 27194], [27195, 27198], [27199, 27209], [27209, 27210]]}) 
answer: set([u'quit', u'massiv', u'metal', u'advantag', u'grand'])
candidate Sentence: (0.09238298237323761, {u'tokens': [u'Some', u'manufacturers', u'now', u'use', u'cast', u'steel', u'in', u'their', u'plates', u',', u'for', u'greater', u'strength', u'.'], u'lemmas': [u'some', u'manufacturer', u'now', u'use', u'cast', u'steel', u'in', u'they', u'plate', u',', u'for', u'greater', u'strength', u'.'], u'pos': [u'DT', u'NNS', u'RB', u'VBP', u'VBN', u'NN', u'IN', u'PRP$', u'NNS', u',', u'IN', u'JJR', u'NN', u'.'], u'char_offsets': [[27211, 27215], [27216, 27229], [27230, 27233], [27234, 27237], [27238, 27242], [27243, 27248], [27249, 27251], [27252, 27257], [27258, 27264], [27264, 27265], [27266, 27269], [27270, 27277], [27278, 27286], [27286, 27287]]}) 
answer: set([u'quit', u'massiv', u'metal', u'advantag', u'grand'])
candidate Sentence: (0.091342821717262268, {u'tokens': [u'The', u'scores', u'for', u'music', u'for', u'prepared', u'piano', u'often', u'instruct', u'the', u'pianist', u'to', u'insert', u'pieces', u'of', u'rubber', u'or', u'small', u'pieces', u'of', u'metal', u'-LRB-', u'screws', u'or', u'washers', u'-RRB-', u'in', u'between', u'the', u'strings', u'.'], u'lemmas': [u'the', u'score', u'for', u'music', u'for', u'prepared', u'piano', u'often', u'instruct', u'the', u'pianist', u'to', u'insert', u'piece', u'of', u'rubber', u'or', u'small', u'piece', u'of', u'metal', u'-lrb-', u'screw', u'or', u'washer', u'-rrb-', u'in', u'between', u'the', u'string', u'.'], u'pos': [u'DT', u'NNS', u'IN', u'NN', u'IN', u'JJ', u'NN', u'RB', u'VB', u'DT', u'NN', u'TO', u'VB', u'NNS', u'IN', u'NN', u'CC', u'JJ', u'NNS', u'IN', u'NN', u'-LRB-', u'NNS', u'CC', u'NNS', u'-RRB-', u'IN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[18066, 18069], [18070, 18076], [18077, 18080], [18081, 18086], [18087, 18090], [18091, 18099], [18100, 18105], [18106, 18111], [18112, 18120], [18121, 18124], [18125, 18132], [18133, 18135], [18136, 18142], [18143, 18149], [18150, 18152], [18153, 18159], [18160, 18162], [18163, 18168], [18169, 18175], [18176, 18178], [18179, 18184], [18185, 18186], [18186, 18192], [18193, 18195], [18196, 18203], [18203, 18204], [18205, 18207], [18208, 18215], [18216, 18219], [18220, 18227], [18227, 18228]]}) 
answer: set([u'massiv', u'plate', u'grand', u'advantag', u'quit'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is it advantageous for a grand piano's metal plate to be quite massive?
Validity= False
Question Type = NA
Answer Type = NA
Answer = It is advantageous for the plate to be quite massive.
Difficulty = easy
Article_Title = Piano
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a1.txt

No
_____________________________ test_yesno[param261] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb36170>, (<src.tfidf.TF_IDF object at 0x10b1951d0>, set(['language', 'portuguese', 'portuguese_language'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb36170>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.20858484506607056, {u'tokens': [u'Arriving', u'in', u'the', u'Iberian', u'Peninsula', u'in', u'216', u'BC', u',', u'the', u'Romans', u'brought', u'with', u'them', u'the', u'Latin', u'language', u',', u'from', u'which', u'all', u'Romance', u'languages', u'descend', u'.'], u'lemmas': [u'arrive', u'in', u'the', u'Iberian', u'Peninsula', u'in', u'216', u'bc', u',', u'the', u'Romans', u'bring', u'with', u'they', u'the', u'latin', u'language', u',', u'from', u'which', u'all', u'romance', u'language', u'descend', u'.'], u'pos': [u'VBG', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'CD', u'NN', u',', u'DT', u'NNPS', u'VBD', u'IN', u'PRP', u'DT', u'JJ', u'NN', u',', u'IN', u'WDT', u'DT', u'NN', u'NNS', u'VBP', u'.'], u'char_offsets': [[12241, 12249], [12250, 12252], [12253, 12256], [12257, 12264], [12265, 12274], [12275, 12277], [12278, 12281], [12282, 12284], [12284, 12285], [12286, 12289], [12290, 12296], [12297, 12304], [12305, 12309], [12310, 12314], [12315, 12318], [12319, 12324], [12325, 12333], [12333, 12334], [12335, 12339], [12340, 12345], [12346, 12349], [12350, 12357], [12358, 12367], [12368, 12375], [12375, 12376]]}) 
answer: set([u'portugues', u'root'])
candidate Sentence: (0.20462305843830109, {u'tokens': [u',', u'but', u'Ouviu', u'a', u'ltima', u'notcia', u'?'], u'lemmas': [u',', u'but', u'Ouviu', u'a', u'ltima', u'notcium', u'?'], u'pos': [u',', u'CC', u'NNP', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[32156, 32157], [32158, 32161], [32162, 32167], [32168, 32169], [32170, 32175], [32176, 32182], [32182, 32183]]}) 
answer: set([u'portugues', u'latin', u'root', u'languag'])
candidate Sentence: (0.17585195600986481, {u'tokens': [u'The', u'earliest', u'surviving', u'records', u'of', u'a', u'distinctively', u'Portuguese', u'language', u'are', u'administrative', u'documents', u'of', u'the', u'9th', u'century', u',', u'still', u'interspersed', u'with', u'many', u'Latin', u'phrases', u'.'], u'lemmas': [u'the', u'earliest', u'survive', u'record', u'of', u'a', u'distinctively', u'portuguese', u'language', u'be', u'administrative', u'document', u'of', u'the', u'9th', u'century', u',', u'still', u'intersperse', u'with', u'many', u'latin', u'phrase', u'.'], u'pos': [u'DT', u'JJS', u'VBG', u'NNS', u'IN', u'DT', u'RB', u'JJ', u'NN', u'VBP', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u',', u'RB', u'VBN', u'IN', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[13148, 13151], [13152, 13160], [13161, 13170], [13171, 13178], [13179, 13181], [13182, 13183], [13184, 13197], [13198, 13208], [13209, 13217], [13218, 13221], [13222, 13236], [13237, 13246], [13247, 13249], [13250, 13253], [13254, 13257], [13258, 13265], [13265, 13266], [13267, 13272], [13273, 13285], [13286, 13290], [13291, 13295], [13296, 13301], [13302, 13309], [13309, 13310]]}) 
answer: set([u'root'])
candidate Sentence: (0.17516535520553589, {u'tokens': [u'is', u'not', u'*', u'Tem', u'ouvido', u'a', u'ltima', u'notcia', u'?'], u'lemmas': [u'be', u'not', u'*', u'tem', u'ouvido', u'a', u'ltima', u'notcium', u'?'], u'pos': [u'VBZ', u'RB', u'SYM', u'FW', u'FW', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[32122, 32124], [32125, 32128], [32129, 32130], [32130, 32133], [32134, 32140], [32141, 32142], [32143, 32148], [32149, 32155], [32155, 32156]]}) 
answer: set([u'portugues', u'latin', u'root', u'languag'])
candidate Sentence: (0.16173297166824341, {u'tokens': [u'On', u'the', u'other', u'hand', u',', u'the', u'correct', u'translation', u'of', u'the', u'question', u'``', u'Have', u'you', u'heard', u'the', u'latest', u'news', u'?', u"''"], u'lemmas': [u'on', u'the', u'other', u'hand', u',', u'the', u'correct', u'translation', u'of', u'the', u'question', u'``', u'have', u'you', u'hear', u'the', u'latest', u'news', u'?', u"''"], u'pos': [u'IN', u'DT', u'JJ', u'NN', u',', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'``', u'VBP', u'PRP', u'VBD', u'DT', u'JJS', u'NN', u'.', u"''"], u'char_offsets': [[32029, 32031], [32032, 32035], [32036, 32041], [32042, 32046], [32046, 32047], [32048, 32051], [32052, 32059], [32060, 32071], [32072, 32074], [32075, 32078], [32079, 32087], [32088, 32089], [32089, 32093], [32094, 32097], [32098, 32103], [32104, 32107], [32108, 32114], [32115, 32119], [32119, 32120], [32120, 32121]]}) 
answer: set([u'portugues', u'latin', u'root', u'languag'])
candidate Sentence: (0.1289825439453125, {u'tokens': [u'Portuguese', u'belongs', u'to', u'the', u'West', u'Iberian', u'branch', u'of', u'the', u'Romance', u'languages', u',', u'and', u'it', u'has', u'special', u'ties', u'with', u'the', u'following', u'members', u'of', u'this', u'group', u':', u'*', u'Galician', u'and', u'Fala', u',', u'its', u'closest', u'relatives', u'.'], u'lemmas': [u'portuguese', u'belong', u'to', u'the', u'West', u'Iberian', u'branch', u'of', u'the', u'romance', u'language', u',', u'and', u'it', u'have', u'special', u'tie', u'with', u'the', u'follow', u'member', u'of', u'this', u'group', u':', u'*', u'galician', u'and', u'Fala', u',', u'its', u'closest', u'relative', u'.'], u'pos': [u'NN', u'VBZ', u'TO', u'DT', u'NNP', u'NNP', u'NN', u'IN', u'DT', u'NN', u'NNS', u',', u'CC', u'PRP', u'VBZ', u'JJ', u'NNS', u'IN', u'DT', u'VBG', u'NNS', u'IN', u'DT', u'NN', u':', u'SYM', u'JJ', u'CC', u'NNP', u',', u'PRP$', u'JJS', u'NNS', u'.'], u'char_offsets': [[20479, 20489], [20490, 20497], [20498, 20500], [20501, 20504], [20505, 20509], [20510, 20517], [20518, 20524], [20525, 20527], [20528, 20531], [20532, 20539], [20540, 20549], [20549, 20550], [20551, 20554], [20555, 20557], [20558, 20561], [20562, 20569], [20570, 20574], [20575, 20579], [20580, 20583], [20584, 20593], [20594, 20601], [20602, 20604], [20605, 20609], [20610, 20615], [20615, 20616], [20617, 20618], [20619, 20627], [20628, 20631], [20632, 20636], [20636, 20637], [20638, 20641], [20642, 20649], [20650, 20659], [20659, 20660]]}) 
answer: set([u'latin', u'root'])
candidate Sentence: (0.12231578677892685, {u'tokens': [u'#', u'Gacho', u'Rio', u'Grande', u'do', u'Sul', u'.'], u'lemmas': [u'#', u'Gacho', u'Rio', u'Grande', u'do', u'Sul', u'.'], u'pos': [u'#', u'NNP', u'NNP', u'NNP', u'VBP', u'NNP', u'.'], u'char_offsets': [[9649, 9650], [9651, 9656], [9659, 9662], [9663, 9669], [9670, 9672], [9673, 9676], [9676, 9677]]}) 
answer: set([u'portugues', u'latin', u'root', u'languag'])
candidate Sentence: (0.12083900719881058, {u'tokens': [u'Its', u'spread', u'was', u'helped', u'by', u'mixed', u'marriages', u'between', u'Portuguese', u'and', u'local', u'people', u',', u'and', u'by', u'its', u'association', u'with', u'Roman', u'Catholic', u'missionary', u'efforts', u',', u'which', u'led', u'to', u'the', u'formation', u'of', u'a', u'creole', u'language', u'called', u'Kristang', u'in', u'many', u'parts', u'of', u'Asia', u'-LRB-', u'from', u'the', u'word', u'cristo', u',', u'``', u'Christian', u"''", u'-RRB-', u'.'], u'lemmas': [u'its', u'spread', u'be', u'help', u'by', u'mixed', u'marriage', u'between', u'Portuguese', u'and', u'local', u'people', u',', u'and', u'by', u'its', u'association', u'with', u'Roman', u'Catholic', u'missionary', u'effort', u',', u'which', u'lead', u'to', u'the', u'formation', u'of', u'a', u'creole', u'language', u'call', u'Kristang', u'in', u'many', u'part', u'of', u'Asia', u'-lrb-', u'from', u'the', u'word', u'cristo', u',', u'``', u'Christian', u"''", u'-rrb-', u'.'], u'pos': [u'PRP$', u'NN', u'VBD', u'VBN', u'IN', u'JJ', u'NNS', u'IN', u'NNP', u'CC', u'JJ', u'NNS', u',', u'CC', u'IN', u'PRP$', u'NN', u'IN', u'NNP', u'NNP', u'JJ', u'NNS', u',', u'WDT', u'VBD', u'TO', u'DT', u'NN', u'IN', u'DT', u'NN', u'NN', u'VBN', u'NNP', u'IN', u'JJ', u'NNS', u'IN', u'NNP', u'-LRB-', u'IN', u'DT', u'NN', u'NN', u',', u'``', u'NNP', u"''", u'-RRB-', u'.'], u'char_offsets': [[14553, 14556], [14557, 14563], [14564, 14567], [14568, 14574], [14575, 14577], [14578, 14583], [14584, 14593], [14594, 14601], [14602, 14612], [14613, 14616], [14617, 14622], [14623, 14629], [14629, 14630], [14631, 14634], [14635, 14637], [14638, 14641], [14642, 14653], [14654, 14658], [14659, 14664], [14665, 14673], [14674, 14684], [14685, 14692], [14692, 14693], [14694, 14699], [14700, 14703], [14704, 14706], [14707, 14710], [14711, 14720], [14721, 14723], [14724, 14725], [14726, 14732], [14733, 14741], [14742, 14748], [14749, 14757], [14758, 14760], [14761, 14765], [14766, 14771], [14772, 14774], [14775, 14779], [14780, 14781], [14781, 14785], [14786, 14789], [14790, 14794], [14795, 14801], [14801, 14802], [14803, 14804], [14804, 14813], [14813, 14814], [14814, 14815], [14815, 14816]]}) 
answer: set([u'latin', u'root'])
candidate Sentence: (0.11842282116413116, {u'tokens': [u'Romulo', u'Alexandre', u'Soares', u',', u'president', u'of', u'the', u'Brazil-Portugal', u'Chamber', u'highlights', u'that', u'the', u'positioning', u'of', u'Brazil', u'in', u'the', u'international', u'arena', u'as', u'one', u'of', u'the', u'emergent', u'powers', u'of', u'the', u'21st', u'century', u',', u'the', u'size', u'of', u'its', u'population', u',', u'and', u'the', u'presence', u'of', u'the', u'language', u'around', u'the', u'world', u'provides', u'legitimacy', u'and', u'justifies', u'a', u'petition', u'to', u'the', u'UN', u'to', u'make', u'the', u'Portuguese', u'language', u'an', u'official', u'language', u'of', u'the', u'UN', u'.'], u'lemmas': [u'Romulo', u'Alexandre', u'Soares', u',', u'president', u'of', u'the', u'Brazil-Portugal', u'Chamber', u'highlight', u'that', u'the', u'positioning', u'of', u'Brazil', u'in', u'the', u'international', u'arena', u'as', u'one', u'of', u'the', u'emergent', u'power', u'of', u'the', u'21st', u'century', u',', u'the', u'size', u'of', u'its', u'population', u',', u'and', u'the', u'presence', u'of', u'the', u'language', u'around', u'the', u'world', u'provide', u'legitimacy', u'and', u'justify', u'a', u'petition', u'to', u'the', u'UN', u'to', u'make', u'the', u'portuguese', u'language', u'a', u'official', u'language', u'of', u'the', u'UN', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u',', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'VBZ', u'IN', u'DT', u'NN', u'IN', u'NNP', u'IN', u'DT', u'JJ', u'NN', u'IN', u'CD', u'IN', u'DT', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u',', u'DT', u'NN', u'IN', u'PRP$', u'NN', u',', u'CC', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'NN', u'CC', u'VBZ', u'DT', u'NN', u'TO', u'DT', u'NNP', u'TO', u'VB', u'DT', u'JJ', u'NN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'.'], u'char_offsets': [[25658, 25664], [25665, 25674], [25675, 25681], [25681, 25682], [25683, 25692], [25693, 25695], [25696, 25699], [25700, 25715], [25716, 25723], [25724, 25734], [25735, 25739], [25740, 25743], [25744, 25755], [25756, 25758], [25759, 25765], [25766, 25768], [25769, 25772], [25773, 25786], [25787, 25792], [25793, 25795], [25796, 25799], [25800, 25802], [25803, 25806], [25807, 25815], [25816, 25822], [25823, 25825], [25826, 25829], [25830, 25834], [25835, 25842], [25842, 25843], [25844, 25847], [25848, 25852], [25853, 25855], [25856, 25859], [25860, 25870], [25870, 25871], [25872, 25875], [25876, 25879], [25880, 25888], [25889, 25891], [25892, 25895], [25896, 25904], [25905, 25911], [25912, 25915], [25916, 25921], [25922, 25930], [25931, 25941], [25942, 25945], [25946, 25955], [25956, 25957], [25958, 25966], [25967, 25969], [25970, 25973], [25974, 25976], [25977, 25979], [25980, 25984], [25985, 25988], [25989, 25999], [26000, 26008], [26009, 26011], [26012, 26020], [26021, 26029], [26030, 26032], [26033, 26036], [26037, 26039], [26039, 26040]]}) 
answer: set([u'latin', u'root'])
candidate Sentence: (0.11159998178482056, {u'tokens': [u'Finally', u'in', u'Asia', u',', u'a', u'continent', u'with', u'several', u'languages', u'that', u'have', u'hundreds', u'of', u'millions', u'of', u'speakers', u',', u'the', u'only', u'sovereign', u'state', u'with', u'Portuguese', u'as', u'an', u'official', u'language', u'is', u'East', u'Timor', u',', u'which', u'has', u'only', u'a', u'million', u'people', u'.'], u'lemmas': [u'finally', u'in', u'Asia', u',', u'a', u'continent', u'with', u'several', u'language', u'that', u'have', u'hundred', u'of', u'million', u'of', u'speaker', u',', u'the', u'only', u'sovereign', u'state', u'with', u'portuguese', u'as', u'a', u'official', u'language', u'be', u'East', u'Timor', u',', u'which', u'have', u'only', u'a', u'million', u'people', u'.'], u'pos': [u'RB', u'IN', u'NNP', u',', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'WDT', u'VBP', u'NNS', u'IN', u'NNS', u'IN', u'NNS', u',', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'VBZ', u'NNP', u'NNP', u',', u'WDT', u'VBZ', u'RB', u'DT', u'CD', u'NNS', u'.'], u'char_offsets': [[28039, 28046], [28047, 28049], [28050, 28054], [28054, 28055], [28056, 28057], [28058, 28067], [28068, 28072], [28073, 28080], [28081, 28090], [28091, 28095], [28096, 28100], [28101, 28109], [28110, 28112], [28113, 28121], [28122, 28124], [28125, 28133], [28133, 28134], [28135, 28138], [28139, 28143], [28144, 28153], [28154, 28159], [28160, 28164], [28165, 28175], [28176, 28178], [28179, 28181], [28182, 28190], [28191, 28199], [28200, 28202], [28203, 28207], [28208, 28213], [28213, 28214], [28215, 28220], [28221, 28224], [28225, 28229], [28230, 28231], [28232, 28239], [28240, 28246], [28246, 28247]]}) 
answer: set([u'latin', u'root'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Does the Portuguese language have its roots in the Latin language?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Portuguese_language
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set5/a1.txt

No
_____________________________ test_yesno[param262] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb361b8>, (<src.tfidf.TF_IDF object at 0x10b1951d0>, set(['language', 'portuguese', 'portuguese_language'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes, Portuguese is derived from Latin.')
E            +    where 'Yes, Portuguese is derived from Latin.' = <src.question_processing.Question_parser instance at 0x10cb361b8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.20858484506607056, {u'tokens': [u'Arriving', u'in', u'the', u'Iberian', u'Peninsula', u'in', u'216', u'BC', u',', u'the', u'Romans', u'brought', u'with', u'them', u'the', u'Latin', u'language', u',', u'from', u'which', u'all', u'Romance', u'languages', u'descend', u'.'], u'lemmas': [u'arrive', u'in', u'the', u'Iberian', u'Peninsula', u'in', u'216', u'bc', u',', u'the', u'Romans', u'bring', u'with', u'they', u'the', u'latin', u'language', u',', u'from', u'which', u'all', u'romance', u'language', u'descend', u'.'], u'pos': [u'VBG', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'CD', u'NN', u',', u'DT', u'NNPS', u'VBD', u'IN', u'PRP', u'DT', u'JJ', u'NN', u',', u'IN', u'WDT', u'DT', u'NN', u'NNS', u'VBP', u'.'], u'char_offsets': [[12241, 12249], [12250, 12252], [12253, 12256], [12257, 12264], [12265, 12274], [12275, 12277], [12278, 12281], [12282, 12284], [12284, 12285], [12286, 12289], [12290, 12296], [12297, 12304], [12305, 12309], [12310, 12314], [12315, 12318], [12319, 12324], [12325, 12333], [12333, 12334], [12335, 12339], [12340, 12345], [12346, 12349], [12350, 12357], [12358, 12367], [12368, 12375], [12375, 12376]]}) 
answer: set([u'portugues', u'root'])
candidate Sentence: (0.20462305843830109, {u'tokens': [u',', u'but', u'Ouviu', u'a', u'ltima', u'notcia', u'?'], u'lemmas': [u',', u'but', u'Ouviu', u'a', u'ltima', u'notcium', u'?'], u'pos': [u',', u'CC', u'NNP', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[32156, 32157], [32158, 32161], [32162, 32167], [32168, 32169], [32170, 32175], [32176, 32182], [32182, 32183]]}) 
answer: set([u'portugues', u'latin', u'root', u'languag'])
candidate Sentence: (0.17585195600986481, {u'tokens': [u'The', u'earliest', u'surviving', u'records', u'of', u'a', u'distinctively', u'Portuguese', u'language', u'are', u'administrative', u'documents', u'of', u'the', u'9th', u'century', u',', u'still', u'interspersed', u'with', u'many', u'Latin', u'phrases', u'.'], u'lemmas': [u'the', u'earliest', u'survive', u'record', u'of', u'a', u'distinctively', u'portuguese', u'language', u'be', u'administrative', u'document', u'of', u'the', u'9th', u'century', u',', u'still', u'intersperse', u'with', u'many', u'latin', u'phrase', u'.'], u'pos': [u'DT', u'JJS', u'VBG', u'NNS', u'IN', u'DT', u'RB', u'JJ', u'NN', u'VBP', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u',', u'RB', u'VBN', u'IN', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[13148, 13151], [13152, 13160], [13161, 13170], [13171, 13178], [13179, 13181], [13182, 13183], [13184, 13197], [13198, 13208], [13209, 13217], [13218, 13221], [13222, 13236], [13237, 13246], [13247, 13249], [13250, 13253], [13254, 13257], [13258, 13265], [13265, 13266], [13267, 13272], [13273, 13285], [13286, 13290], [13291, 13295], [13296, 13301], [13302, 13309], [13309, 13310]]}) 
answer: set([u'root'])
candidate Sentence: (0.17516535520553589, {u'tokens': [u'is', u'not', u'*', u'Tem', u'ouvido', u'a', u'ltima', u'notcia', u'?'], u'lemmas': [u'be', u'not', u'*', u'tem', u'ouvido', u'a', u'ltima', u'notcium', u'?'], u'pos': [u'VBZ', u'RB', u'SYM', u'FW', u'FW', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[32122, 32124], [32125, 32128], [32129, 32130], [32130, 32133], [32134, 32140], [32141, 32142], [32143, 32148], [32149, 32155], [32155, 32156]]}) 
answer: set([u'portugues', u'latin', u'root', u'languag'])
candidate Sentence: (0.16173297166824341, {u'tokens': [u'On', u'the', u'other', u'hand', u',', u'the', u'correct', u'translation', u'of', u'the', u'question', u'``', u'Have', u'you', u'heard', u'the', u'latest', u'news', u'?', u"''"], u'lemmas': [u'on', u'the', u'other', u'hand', u',', u'the', u'correct', u'translation', u'of', u'the', u'question', u'``', u'have', u'you', u'hear', u'the', u'latest', u'news', u'?', u"''"], u'pos': [u'IN', u'DT', u'JJ', u'NN', u',', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'``', u'VBP', u'PRP', u'VBD', u'DT', u'JJS', u'NN', u'.', u"''"], u'char_offsets': [[32029, 32031], [32032, 32035], [32036, 32041], [32042, 32046], [32046, 32047], [32048, 32051], [32052, 32059], [32060, 32071], [32072, 32074], [32075, 32078], [32079, 32087], [32088, 32089], [32089, 32093], [32094, 32097], [32098, 32103], [32104, 32107], [32108, 32114], [32115, 32119], [32119, 32120], [32120, 32121]]}) 
answer: set([u'portugues', u'latin', u'root', u'languag'])
candidate Sentence: (0.1289825439453125, {u'tokens': [u'Portuguese', u'belongs', u'to', u'the', u'West', u'Iberian', u'branch', u'of', u'the', u'Romance', u'languages', u',', u'and', u'it', u'has', u'special', u'ties', u'with', u'the', u'following', u'members', u'of', u'this', u'group', u':', u'*', u'Galician', u'and', u'Fala', u',', u'its', u'closest', u'relatives', u'.'], u'lemmas': [u'portuguese', u'belong', u'to', u'the', u'West', u'Iberian', u'branch', u'of', u'the', u'romance', u'language', u',', u'and', u'it', u'have', u'special', u'tie', u'with', u'the', u'follow', u'member', u'of', u'this', u'group', u':', u'*', u'galician', u'and', u'Fala', u',', u'its', u'closest', u'relative', u'.'], u'pos': [u'NN', u'VBZ', u'TO', u'DT', u'NNP', u'NNP', u'NN', u'IN', u'DT', u'NN', u'NNS', u',', u'CC', u'PRP', u'VBZ', u'JJ', u'NNS', u'IN', u'DT', u'VBG', u'NNS', u'IN', u'DT', u'NN', u':', u'SYM', u'JJ', u'CC', u'NNP', u',', u'PRP$', u'JJS', u'NNS', u'.'], u'char_offsets': [[20479, 20489], [20490, 20497], [20498, 20500], [20501, 20504], [20505, 20509], [20510, 20517], [20518, 20524], [20525, 20527], [20528, 20531], [20532, 20539], [20540, 20549], [20549, 20550], [20551, 20554], [20555, 20557], [20558, 20561], [20562, 20569], [20570, 20574], [20575, 20579], [20580, 20583], [20584, 20593], [20594, 20601], [20602, 20604], [20605, 20609], [20610, 20615], [20615, 20616], [20617, 20618], [20619, 20627], [20628, 20631], [20632, 20636], [20636, 20637], [20638, 20641], [20642, 20649], [20650, 20659], [20659, 20660]]}) 
answer: set([u'latin', u'root'])
candidate Sentence: (0.12231578677892685, {u'tokens': [u'#', u'Gacho', u'Rio', u'Grande', u'do', u'Sul', u'.'], u'lemmas': [u'#', u'Gacho', u'Rio', u'Grande', u'do', u'Sul', u'.'], u'pos': [u'#', u'NNP', u'NNP', u'NNP', u'VBP', u'NNP', u'.'], u'char_offsets': [[9649, 9650], [9651, 9656], [9659, 9662], [9663, 9669], [9670, 9672], [9673, 9676], [9676, 9677]]}) 
answer: set([u'portugues', u'latin', u'root', u'languag'])
candidate Sentence: (0.12083900719881058, {u'tokens': [u'Its', u'spread', u'was', u'helped', u'by', u'mixed', u'marriages', u'between', u'Portuguese', u'and', u'local', u'people', u',', u'and', u'by', u'its', u'association', u'with', u'Roman', u'Catholic', u'missionary', u'efforts', u',', u'which', u'led', u'to', u'the', u'formation', u'of', u'a', u'creole', u'language', u'called', u'Kristang', u'in', u'many', u'parts', u'of', u'Asia', u'-LRB-', u'from', u'the', u'word', u'cristo', u',', u'``', u'Christian', u"''", u'-RRB-', u'.'], u'lemmas': [u'its', u'spread', u'be', u'help', u'by', u'mixed', u'marriage', u'between', u'Portuguese', u'and', u'local', u'people', u',', u'and', u'by', u'its', u'association', u'with', u'Roman', u'Catholic', u'missionary', u'effort', u',', u'which', u'lead', u'to', u'the', u'formation', u'of', u'a', u'creole', u'language', u'call', u'Kristang', u'in', u'many', u'part', u'of', u'Asia', u'-lrb-', u'from', u'the', u'word', u'cristo', u',', u'``', u'Christian', u"''", u'-rrb-', u'.'], u'pos': [u'PRP$', u'NN', u'VBD', u'VBN', u'IN', u'JJ', u'NNS', u'IN', u'NNP', u'CC', u'JJ', u'NNS', u',', u'CC', u'IN', u'PRP$', u'NN', u'IN', u'NNP', u'NNP', u'JJ', u'NNS', u',', u'WDT', u'VBD', u'TO', u'DT', u'NN', u'IN', u'DT', u'NN', u'NN', u'VBN', u'NNP', u'IN', u'JJ', u'NNS', u'IN', u'NNP', u'-LRB-', u'IN', u'DT', u'NN', u'NN', u',', u'``', u'NNP', u"''", u'-RRB-', u'.'], u'char_offsets': [[14553, 14556], [14557, 14563], [14564, 14567], [14568, 14574], [14575, 14577], [14578, 14583], [14584, 14593], [14594, 14601], [14602, 14612], [14613, 14616], [14617, 14622], [14623, 14629], [14629, 14630], [14631, 14634], [14635, 14637], [14638, 14641], [14642, 14653], [14654, 14658], [14659, 14664], [14665, 14673], [14674, 14684], [14685, 14692], [14692, 14693], [14694, 14699], [14700, 14703], [14704, 14706], [14707, 14710], [14711, 14720], [14721, 14723], [14724, 14725], [14726, 14732], [14733, 14741], [14742, 14748], [14749, 14757], [14758, 14760], [14761, 14765], [14766, 14771], [14772, 14774], [14775, 14779], [14780, 14781], [14781, 14785], [14786, 14789], [14790, 14794], [14795, 14801], [14801, 14802], [14803, 14804], [14804, 14813], [14813, 14814], [14814, 14815], [14815, 14816]]}) 
answer: set([u'latin', u'root'])
candidate Sentence: (0.11842282116413116, {u'tokens': [u'Romulo', u'Alexandre', u'Soares', u',', u'president', u'of', u'the', u'Brazil-Portugal', u'Chamber', u'highlights', u'that', u'the', u'positioning', u'of', u'Brazil', u'in', u'the', u'international', u'arena', u'as', u'one', u'of', u'the', u'emergent', u'powers', u'of', u'the', u'21st', u'century', u',', u'the', u'size', u'of', u'its', u'population', u',', u'and', u'the', u'presence', u'of', u'the', u'language', u'around', u'the', u'world', u'provides', u'legitimacy', u'and', u'justifies', u'a', u'petition', u'to', u'the', u'UN', u'to', u'make', u'the', u'Portuguese', u'language', u'an', u'official', u'language', u'of', u'the', u'UN', u'.'], u'lemmas': [u'Romulo', u'Alexandre', u'Soares', u',', u'president', u'of', u'the', u'Brazil-Portugal', u'Chamber', u'highlight', u'that', u'the', u'positioning', u'of', u'Brazil', u'in', u'the', u'international', u'arena', u'as', u'one', u'of', u'the', u'emergent', u'power', u'of', u'the', u'21st', u'century', u',', u'the', u'size', u'of', u'its', u'population', u',', u'and', u'the', u'presence', u'of', u'the', u'language', u'around', u'the', u'world', u'provide', u'legitimacy', u'and', u'justify', u'a', u'petition', u'to', u'the', u'UN', u'to', u'make', u'the', u'portuguese', u'language', u'a', u'official', u'language', u'of', u'the', u'UN', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u',', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'VBZ', u'IN', u'DT', u'NN', u'IN', u'NNP', u'IN', u'DT', u'JJ', u'NN', u'IN', u'CD', u'IN', u'DT', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u',', u'DT', u'NN', u'IN', u'PRP$', u'NN', u',', u'CC', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'NN', u'CC', u'VBZ', u'DT', u'NN', u'TO', u'DT', u'NNP', u'TO', u'VB', u'DT', u'JJ', u'NN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'.'], u'char_offsets': [[25658, 25664], [25665, 25674], [25675, 25681], [25681, 25682], [25683, 25692], [25693, 25695], [25696, 25699], [25700, 25715], [25716, 25723], [25724, 25734], [25735, 25739], [25740, 25743], [25744, 25755], [25756, 25758], [25759, 25765], [25766, 25768], [25769, 25772], [25773, 25786], [25787, 25792], [25793, 25795], [25796, 25799], [25800, 25802], [25803, 25806], [25807, 25815], [25816, 25822], [25823, 25825], [25826, 25829], [25830, 25834], [25835, 25842], [25842, 25843], [25844, 25847], [25848, 25852], [25853, 25855], [25856, 25859], [25860, 25870], [25870, 25871], [25872, 25875], [25876, 25879], [25880, 25888], [25889, 25891], [25892, 25895], [25896, 25904], [25905, 25911], [25912, 25915], [25916, 25921], [25922, 25930], [25931, 25941], [25942, 25945], [25946, 25955], [25956, 25957], [25958, 25966], [25967, 25969], [25970, 25973], [25974, 25976], [25977, 25979], [25980, 25984], [25985, 25988], [25989, 25999], [26000, 26008], [26009, 26011], [26012, 26020], [26021, 26029], [26030, 26032], [26033, 26036], [26037, 26039], [26039, 26040]]}) 
answer: set([u'latin', u'root'])
candidate Sentence: (0.11159998178482056, {u'tokens': [u'Finally', u'in', u'Asia', u',', u'a', u'continent', u'with', u'several', u'languages', u'that', u'have', u'hundreds', u'of', u'millions', u'of', u'speakers', u',', u'the', u'only', u'sovereign', u'state', u'with', u'Portuguese', u'as', u'an', u'official', u'language', u'is', u'East', u'Timor', u',', u'which', u'has', u'only', u'a', u'million', u'people', u'.'], u'lemmas': [u'finally', u'in', u'Asia', u',', u'a', u'continent', u'with', u'several', u'language', u'that', u'have', u'hundred', u'of', u'million', u'of', u'speaker', u',', u'the', u'only', u'sovereign', u'state', u'with', u'portuguese', u'as', u'a', u'official', u'language', u'be', u'East', u'Timor', u',', u'which', u'have', u'only', u'a', u'million', u'people', u'.'], u'pos': [u'RB', u'IN', u'NNP', u',', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'WDT', u'VBP', u'NNS', u'IN', u'NNS', u'IN', u'NNS', u',', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'VBZ', u'NNP', u'NNP', u',', u'WDT', u'VBZ', u'RB', u'DT', u'CD', u'NNS', u'.'], u'char_offsets': [[28039, 28046], [28047, 28049], [28050, 28054], [28054, 28055], [28056, 28057], [28058, 28067], [28068, 28072], [28073, 28080], [28081, 28090], [28091, 28095], [28096, 28100], [28101, 28109], [28110, 28112], [28113, 28121], [28122, 28124], [28125, 28133], [28133, 28134], [28135, 28138], [28139, 28143], [28144, 28153], [28154, 28159], [28160, 28164], [28165, 28175], [28176, 28178], [28179, 28181], [28182, 28190], [28191, 28199], [28200, 28202], [28203, 28207], [28208, 28213], [28213, 28214], [28215, 28220], [28221, 28224], [28225, 28229], [28230, 28231], [28232, 28239], [28240, 28246], [28246, 28247]]}) 
answer: set([u'latin', u'root'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Does the Portuguese language have its roots in the Latin language?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes, Portuguese is derived from Latin.
Difficulty = easy
Article_Title = Portuguese_language
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set5/a1.txt

No
_____________________________ test_yesno[param263] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb36200>, (<src.tfidf.TF_IDF object at 0x10b1951d0>, set(['language', 'portuguese', 'portuguese_language'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb36200>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.25976064801216125, {u'tokens': [u'Partial', u'preview', u'available', u'on', u'Google', u'Books', u'See', u'also', u'List', u'of', u'English', u'words', u'of', u'Portuguese', u'origin', u',', u'Loan', u'words', u'in', u'Indonesian', u',', u'Japanese', u'words', u'of', u'Portuguese', u'origin', u',', u'Borrowed', u'words', u'in', u'Malay', u',', u'Sinhala', u'words', u'of', u'Portuguese', u'origin', u',', u'Loan', u'words', u'from', u'Portuguese', u'in', u'Sri', u'Lankan', u'Tamil', u'.'], u'lemmas': [u'partial', u'preview', u'available', u'on', u'Google', u'Books', u'see', u'also', u'list', u'of', u'English', u'word', u'of', u'portuguese', u'origin', u',', u'loan', u'word', u'in', u'indonesian', u',', u'japanese', u'word', u'of', u'portuguese', u'origin', u',', u'borrow', u'word', u'in', u'Malay', u',', u'Sinhala', u'word', u'of', u'portuguese', u'origin', u',', u'loan', u'word', u'from', u'Portuguese', u'in', u'Sri', u'Lankan', u'Tamil', u'.'], u'pos': [u'JJ', u'NN', u'JJ', u'IN', u'NNP', u'NNPS', u'VB', u'RB', u'NN', u'IN', u'NNP', u'NNS', u'IN', u'JJ', u'NN', u',', u'NN', u'NNS', u'IN', u'JJ', u',', u'JJ', u'NNS', u'IN', u'JJ', u'NN', u',', u'VBN', u'NNS', u'IN', u'NNP', u',', u'NNP', u'NNS', u'IN', u'JJ', u'NN', u',', u'NN', u'NNS', u'IN', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[24171, 24178], [24179, 24186], [24187, 24196], [24197, 24199], [24200, 24206], [24207, 24212], [24213, 24216], [24217, 24221], [24222, 24226], [24227, 24229], [24230, 24237], [24238, 24243], [24244, 24246], [24247, 24257], [24258, 24264], [24264, 24265], [24266, 24270], [24271, 24276], [24277, 24279], [24280, 24290], [24290, 24291], [24292, 24300], [24301, 24306], [24307, 24309], [24310, 24320], [24321, 24327], [24327, 24328], [24329, 24337], [24338, 24343], [24344, 24346], [24347, 24352], [24352, 24353], [24354, 24361], [24362, 24367], [24368, 24370], [24371, 24381], [24382, 24388], [24388, 24389], [24390, 24394], [24395, 24400], [24401, 24405], [24406, 24416], [24417, 24419], [24420, 24423], [24424, 24430], [24431, 24436], [24436, 24437]]}) 
answer: set([u'arab', u'doe', u'languag', u'contain'])
candidate Sentence: (0.25362968444824219, {u'tokens': [u'Between', u'the', u'9th', u'and', u'13th', u'centuries', u',', u'Portuguese', u'acquired', u'about', u'800', u'words', u'from', u'Arabic', u'by', u'influence', u'of', u'Moorish', u'Iberia', u'.'], u'lemmas': [u'between', u'the', u'9th', u'and', u'13th', u'century', u',', u'Portuguese', u'acquire', u'about', u'800', u'word', u'from', u'arabic', u'by', u'influence', u'of', u'Moorish', u'Iberia', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'CC', u'JJ', u'NNS', u',', u'NNP', u'VBD', u'IN', u'CD', u'NNS', u'IN', u'JJ', u'IN', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[18091, 18098], [18099, 18102], [18103, 18106], [18107, 18110], [18111, 18115], [18116, 18125], [18125, 18126], [18127, 18137], [18138, 18146], [18147, 18152], [18153, 18156], [18157, 18162], [18163, 18167], [18168, 18174], [18175, 18177], [18178, 18187], [18188, 18190], [18191, 18198], [18199, 18205], [18205, 18206]]}) 
answer: set([u'contain', u'languag', u'doe'])
candidate Sentence: (0.25256037712097168, {u'tokens': [u',', u'but', u'Ouviu', u'a', u'ltima', u'notcia', u'?'], u'lemmas': [u',', u'but', u'Ouviu', u'a', u'ltima', u'notcium', u'?'], u'pos': [u',', u'CC', u'NNP', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[32156, 32157], [32158, 32161], [32162, 32167], [32168, 32169], [32170, 32175], [32176, 32182], [32182, 32183]]}) 
answer: set([u'word', u'doe', u'arab', u'portugues', u'contain', u'languag'])
candidate Sentence: (0.24671110510826111, {u'tokens': [u'The', u'word', u'Mozambique', u'itself', u'is', u'from', u'the', u'Arabic', u'name', u'of', u'sultan', u'Mua', u'Alebique', u'-LRB-', u'Musa', u'Alibiki', u'-RRB-', u'.'], u'lemmas': [u'the', u'word', u'Mozambique', u'itself', u'be', u'from', u'the', u'arabic', u'name', u'of', u'sultan', u'mua', u'alebique', u'-lrb-', u'Musa', u'Alibiki', u'-rrb-', u'.'], u'pos': [u'DT', u'NN', u'NNP', u'PRP', u'VBZ', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'NN', u'NN', u'-LRB-', u'NNP', u'NNP', u'-RRB-', u'.'], u'char_offsets': [[18610, 18613], [18614, 18618], [18619, 18629], [18630, 18636], [18637, 18639], [18640, 18644], [18645, 18648], [18649, 18655], [18656, 18660], [18661, 18663], [18664, 18670], [18671, 18674], [18675, 18683], [18684, 18685], [18685, 18689], [18690, 18697], [18697, 18698], [18698, 18699]]}) 
answer: set([u'contain', u'portugues', u'languag', u'doe'])
candidate Sentence: (0.21620157361030579, {u'tokens': [u'is', u'not', u'*', u'Tem', u'ouvido', u'a', u'ltima', u'notcia', u'?'], u'lemmas': [u'be', u'not', u'*', u'tem', u'ouvido', u'a', u'ltima', u'notcium', u'?'], u'pos': [u'VBZ', u'RB', u'SYM', u'FW', u'FW', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[32122, 32124], [32125, 32128], [32129, 32130], [32130, 32133], [32134, 32140], [32141, 32142], [32143, 32148], [32149, 32155], [32155, 32156]]}) 
answer: set([u'word', u'doe', u'arab', u'portugues', u'contain', u'languag'])
candidate Sentence: (0.17420333623886108, {u'tokens': [u'They', u'are', u'often', u'recognizable', u'by', u'the', u'initial', u'Arabic', u'article', u'a', u'-LRB-', u'l', u'-RRB-', u'-', u',', u'and', u'include', u'many', u'common', u'words', u'such', u'as', u'aldeia', u'``', u'village', u"''", u'from', u'aldaya', u',', u'alface', u'``', u'lettuce', u"''", u'from', u'alkhass', u',', u'armazm', u'``', u'warehouse', u"''", u'from', u'almahazan', u',', u'and', u'azeite', u'``', u'olive', u'oil', u"''", u'from', u'azzait', u'.'], u'lemmas': [u'they', u'be', u'often', u'recognizable', u'by', u'the', u'initial', u'arabic', u'article', u'a', u'-lrb-', u'l', u'-rrb-', u'-', u',', u'and', u'include', u'many', u'common', u'word', u'such', u'as', u'aldeium', u'``', u'village', u"''", u'from', u'aldaya', u',', u'alface', u'``', u'lettuce', u"''", u'from', u'alkhass', u',', u'armazm', u'``', u'warehouse', u"''", u'from', u'almahazan', u',', u'and', u'azeite', u'``', u'olive', u'oil', u"''", u'from', u'azzait', u'.'], u'pos': [u'PRP', u'VBP', u'RB', u'JJ', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'DT', u'-LRB-', u'NN', u'-RRB-', u':', u',', u'CC', u'VBP', u'JJ', u'JJ', u'NNS', u'JJ', u'IN', u'NN', u'``', u'NN', u"''", u'IN', u'NN', u',', u'IN', u'``', u'NN', u"''", u'IN', u'NN', u',', u'NN', u'``', u'NN', u"''", u'IN', u'NN', u',', u'CC', u'NN', u'``', u'JJ', u'NN', u"''", u'IN', u'JJ', u'.'], u'char_offsets': [[18207, 18211], [18212, 18215], [18216, 18221], [18222, 18234], [18235, 18237], [18238, 18241], [18242, 18249], [18250, 18256], [18257, 18264], [18265, 18266], [18266, 18267], [18267, 18268], [18268, 18269], [18269, 18270], [18270, 18271], [18272, 18275], [18276, 18283], [18284, 18288], [18289, 18295], [18296, 18301], [18302, 18306], [18307, 18309], [18310, 18316], [18317, 18318], [18318, 18325], [18325, 18326], [18327, 18331], [18333, 18339], [18339, 18340], [18341, 18347], [18348, 18349], [18349, 18356], [18356, 18357], [18358, 18362], [18364, 18371], [18371, 18372], [18373, 18379], [18380, 18381], [18381, 18390], [18390, 18391], [18392, 18396], [18398, 18407], [18407, 18408], [18409, 18412], [18413, 18419], [18420, 18421], [18421, 18426], [18427, 18430], [18430, 18431], [18432, 18436], [18438, 18444], [18444, 18445]]}) 
answer: set([u'contain', u'portugues', u'languag', u'doe'])
candidate Sentence: (0.16133089363574982, {u'tokens': [u'On', u'the', u'other', u'hand', u',', u'the', u'correct', u'translation', u'of', u'the', u'question', u'``', u'Have', u'you', u'heard', u'the', u'latest', u'news', u'?', u"''"], u'lemmas': [u'on', u'the', u'other', u'hand', u',', u'the', u'correct', u'translation', u'of', u'the', u'question', u'``', u'have', u'you', u'hear', u'the', u'latest', u'news', u'?', u"''"], u'pos': [u'IN', u'DT', u'JJ', u'NN', u',', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'``', u'VBP', u'PRP', u'VBD', u'DT', u'JJS', u'NN', u'.', u"''"], u'char_offsets': [[32029, 32031], [32032, 32035], [32036, 32041], [32042, 32046], [32046, 32047], [32048, 32051], [32052, 32059], [32060, 32071], [32072, 32074], [32075, 32078], [32079, 32087], [32088, 32089], [32089, 32093], [32094, 32097], [32098, 32103], [32104, 32107], [32108, 32114], [32115, 32119], [32119, 32120], [32120, 32121]]}) 
answer: set([u'word', u'doe', u'arab', u'portugues', u'contain', u'languag'])
candidate Sentence: (0.1370847076177597, {u'tokens': [u'The', u'influence', u'exerted', u'by', u'Arabic', u'on', u'the', u'Romance', u'dialects', u'spoken', u'in', u'the', u'Christian', u'kingdoms', u'of', u'the', u'north', u'was', u'small', u',', u'affecting', u'mainly', u'their', u'lexicon', u'.'], u'lemmas': [u'the', u'influence', u'exert', u'by', u'arabic', u'on', u'the', u'romance', u'dialect', u'speak', u'in', u'the', u'Christian', u'kingdom', u'of', u'the', u'north', u'be', u'small', u',', u'affect', u'mainly', u'they', u'lexicon', u'.'], u'pos': [u'DT', u'NN', u'VBN', u'IN', u'JJ', u'IN', u'DT', u'NN', u'NNS', u'VBN', u'IN', u'DT', u'NNP', u'NNS', u'IN', u'DT', u'NN', u'VBD', u'JJ', u',', u'VBG', u'RB', u'PRP$', u'NN', u'.'], u'char_offsets': [[13003, 13006], [13007, 13016], [13017, 13024], [13025, 13027], [13028, 13034], [13035, 13037], [13038, 13041], [13042, 13049], [13050, 13058], [13059, 13065], [13066, 13068], [13069, 13072], [13073, 13082], [13083, 13091], [13092, 13094], [13095, 13098], [13099, 13104], [13105, 13108], [13109, 13114], [13114, 13115], [13116, 13125], [13126, 13132], [13133, 13138], [13139, 13146], [13146, 13147]]}) 
answer: set([u'contain', u'portugues', u'word', u'languag', u'doe'])
candidate Sentence: (0.13045057654380798, {u'tokens': [u'After', u'the', u'Moorish', u'invasion', u'of', u'711', u',', u'Arabic', u'became', u'the', u'administrative', u'language', u'in', u'the', u'conquered', u'regions', u',', u'but', u'most', u'of', u'the', u'population', u'continued', u'to', u'speak', u'a', u'form', u'of', u'Romance', u'commonly', u'known', u'as', u'Mozarabic', u'.'], u'lemmas': [u'after', u'the', u'moorish', u'invasion', u'of', u'711', u',', u'arabic', u'become', u'the', u'administrative', u'language', u'in', u'the', u'conquer', u'region', u',', u'but', u'most', u'of', u'the', u'population', u'continue', u'to', u'speak', u'a', u'form', u'of', u'romance', u'commonly', u'know', u'as', u'Mozarabic', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'NN', u'IN', u'CD', u',', u'JJ', u'VBD', u'DT', u'JJ', u'NN', u'IN', u'DT', u'VBN', u'NNS', u',', u'CC', u'JJS', u'IN', u'DT', u'NN', u'VBD', u'TO', u'VB', u'DT', u'NN', u'IN', u'NN', u'RB', u'VBN', u'IN', u'NNP', u'.'], u'char_offsets': [[12807, 12812], [12813, 12816], [12817, 12824], [12825, 12833], [12834, 12836], [12837, 12840], [12840, 12841], [12842, 12848], [12849, 12855], [12856, 12859], [12860, 12874], [12875, 12883], [12884, 12886], [12887, 12890], [12891, 12900], [12901, 12908], [12908, 12909], [12910, 12913], [12914, 12918], [12919, 12921], [12922, 12925], [12926, 12936], [12937, 12946], [12947, 12949], [12950, 12955], [12956, 12957], [12958, 12962], [12963, 12965], [12966, 12973], [12974, 12982], [12983, 12988], [12989, 12991], [12992, 13001], [13001, 13002]]}) 
answer: set([u'doe', u'portugues', u'word', u'contain'])
candidate Sentence: (0.12908081710338593, {u'tokens': [u'From', u'Arabic', u'came', u'also', u'the', u'grammatically', u'peculiar', u'word', u'oxal', u'``', u'hopefully', u"''", u'.'], u'lemmas': [u'from', u'Arabic', u'come', u'also', u'the', u'grammatically', u'peculiar', u'word', u'oxal', u'``', u'hopefully', u"''", u'.'], u'pos': [u'IN', u'NNP', u'VBD', u'RB', u'DT', u'RB', u'JJ', u'NN', u'JJ', u'``', u'RB', u"''", u'.'], u'char_offsets': [[18446, 18450], [18451, 18457], [18458, 18462], [18463, 18467], [18468, 18471], [18472, 18485], [18486, 18494], [18495, 18499], [18500, 18504], [18508, 18509], [18509, 18518], [18518, 18519], [18519, 18520]]}) 
answer: set([u'contain', u'portugues', u'languag', u'doe'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Does Portuguese contain words from the Arabic language?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Portuguese_language
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set5/a1.txt

No
_____________________________ test_yesno[param264] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb36248>, (<src.tfidf.TF_IDF object at 0x10b1951d0>, set(['language', 'portuguese', 'portuguese_language'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes, Portuguese contains words from the Arabic language.')
E            +    where 'Yes, Portuguese contains words from the Arabic language.' = <src.question_processing.Question_parser instance at 0x10cb36248>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.25976064801216125, {u'tokens': [u'Partial', u'preview', u'available', u'on', u'Google', u'Books', u'See', u'also', u'List', u'of', u'English', u'words', u'of', u'Portuguese', u'origin', u',', u'Loan', u'words', u'in', u'Indonesian', u',', u'Japanese', u'words', u'of', u'Portuguese', u'origin', u',', u'Borrowed', u'words', u'in', u'Malay', u',', u'Sinhala', u'words', u'of', u'Portuguese', u'origin', u',', u'Loan', u'words', u'from', u'Portuguese', u'in', u'Sri', u'Lankan', u'Tamil', u'.'], u'lemmas': [u'partial', u'preview', u'available', u'on', u'Google', u'Books', u'see', u'also', u'list', u'of', u'English', u'word', u'of', u'portuguese', u'origin', u',', u'loan', u'word', u'in', u'indonesian', u',', u'japanese', u'word', u'of', u'portuguese', u'origin', u',', u'borrow', u'word', u'in', u'Malay', u',', u'Sinhala', u'word', u'of', u'portuguese', u'origin', u',', u'loan', u'word', u'from', u'Portuguese', u'in', u'Sri', u'Lankan', u'Tamil', u'.'], u'pos': [u'JJ', u'NN', u'JJ', u'IN', u'NNP', u'NNPS', u'VB', u'RB', u'NN', u'IN', u'NNP', u'NNS', u'IN', u'JJ', u'NN', u',', u'NN', u'NNS', u'IN', u'JJ', u',', u'JJ', u'NNS', u'IN', u'JJ', u'NN', u',', u'VBN', u'NNS', u'IN', u'NNP', u',', u'NNP', u'NNS', u'IN', u'JJ', u'NN', u',', u'NN', u'NNS', u'IN', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[24171, 24178], [24179, 24186], [24187, 24196], [24197, 24199], [24200, 24206], [24207, 24212], [24213, 24216], [24217, 24221], [24222, 24226], [24227, 24229], [24230, 24237], [24238, 24243], [24244, 24246], [24247, 24257], [24258, 24264], [24264, 24265], [24266, 24270], [24271, 24276], [24277, 24279], [24280, 24290], [24290, 24291], [24292, 24300], [24301, 24306], [24307, 24309], [24310, 24320], [24321, 24327], [24327, 24328], [24329, 24337], [24338, 24343], [24344, 24346], [24347, 24352], [24352, 24353], [24354, 24361], [24362, 24367], [24368, 24370], [24371, 24381], [24382, 24388], [24388, 24389], [24390, 24394], [24395, 24400], [24401, 24405], [24406, 24416], [24417, 24419], [24420, 24423], [24424, 24430], [24431, 24436], [24436, 24437]]}) 
answer: set([u'arab', u'doe', u'languag', u'contain'])
candidate Sentence: (0.25362968444824219, {u'tokens': [u'Between', u'the', u'9th', u'and', u'13th', u'centuries', u',', u'Portuguese', u'acquired', u'about', u'800', u'words', u'from', u'Arabic', u'by', u'influence', u'of', u'Moorish', u'Iberia', u'.'], u'lemmas': [u'between', u'the', u'9th', u'and', u'13th', u'century', u',', u'Portuguese', u'acquire', u'about', u'800', u'word', u'from', u'arabic', u'by', u'influence', u'of', u'Moorish', u'Iberia', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'CC', u'JJ', u'NNS', u',', u'NNP', u'VBD', u'IN', u'CD', u'NNS', u'IN', u'JJ', u'IN', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[18091, 18098], [18099, 18102], [18103, 18106], [18107, 18110], [18111, 18115], [18116, 18125], [18125, 18126], [18127, 18137], [18138, 18146], [18147, 18152], [18153, 18156], [18157, 18162], [18163, 18167], [18168, 18174], [18175, 18177], [18178, 18187], [18188, 18190], [18191, 18198], [18199, 18205], [18205, 18206]]}) 
answer: set([u'contain', u'languag', u'doe'])
candidate Sentence: (0.25256037712097168, {u'tokens': [u',', u'but', u'Ouviu', u'a', u'ltima', u'notcia', u'?'], u'lemmas': [u',', u'but', u'Ouviu', u'a', u'ltima', u'notcium', u'?'], u'pos': [u',', u'CC', u'NNP', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[32156, 32157], [32158, 32161], [32162, 32167], [32168, 32169], [32170, 32175], [32176, 32182], [32182, 32183]]}) 
answer: set([u'word', u'doe', u'arab', u'portugues', u'contain', u'languag'])
candidate Sentence: (0.24671110510826111, {u'tokens': [u'The', u'word', u'Mozambique', u'itself', u'is', u'from', u'the', u'Arabic', u'name', u'of', u'sultan', u'Mua', u'Alebique', u'-LRB-', u'Musa', u'Alibiki', u'-RRB-', u'.'], u'lemmas': [u'the', u'word', u'Mozambique', u'itself', u'be', u'from', u'the', u'arabic', u'name', u'of', u'sultan', u'mua', u'alebique', u'-lrb-', u'Musa', u'Alibiki', u'-rrb-', u'.'], u'pos': [u'DT', u'NN', u'NNP', u'PRP', u'VBZ', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'NN', u'NN', u'-LRB-', u'NNP', u'NNP', u'-RRB-', u'.'], u'char_offsets': [[18610, 18613], [18614, 18618], [18619, 18629], [18630, 18636], [18637, 18639], [18640, 18644], [18645, 18648], [18649, 18655], [18656, 18660], [18661, 18663], [18664, 18670], [18671, 18674], [18675, 18683], [18684, 18685], [18685, 18689], [18690, 18697], [18697, 18698], [18698, 18699]]}) 
answer: set([u'contain', u'portugues', u'languag', u'doe'])
candidate Sentence: (0.21620157361030579, {u'tokens': [u'is', u'not', u'*', u'Tem', u'ouvido', u'a', u'ltima', u'notcia', u'?'], u'lemmas': [u'be', u'not', u'*', u'tem', u'ouvido', u'a', u'ltima', u'notcium', u'?'], u'pos': [u'VBZ', u'RB', u'SYM', u'FW', u'FW', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[32122, 32124], [32125, 32128], [32129, 32130], [32130, 32133], [32134, 32140], [32141, 32142], [32143, 32148], [32149, 32155], [32155, 32156]]}) 
answer: set([u'word', u'doe', u'arab', u'portugues', u'contain', u'languag'])
candidate Sentence: (0.17420333623886108, {u'tokens': [u'They', u'are', u'often', u'recognizable', u'by', u'the', u'initial', u'Arabic', u'article', u'a', u'-LRB-', u'l', u'-RRB-', u'-', u',', u'and', u'include', u'many', u'common', u'words', u'such', u'as', u'aldeia', u'``', u'village', u"''", u'from', u'aldaya', u',', u'alface', u'``', u'lettuce', u"''", u'from', u'alkhass', u',', u'armazm', u'``', u'warehouse', u"''", u'from', u'almahazan', u',', u'and', u'azeite', u'``', u'olive', u'oil', u"''", u'from', u'azzait', u'.'], u'lemmas': [u'they', u'be', u'often', u'recognizable', u'by', u'the', u'initial', u'arabic', u'article', u'a', u'-lrb-', u'l', u'-rrb-', u'-', u',', u'and', u'include', u'many', u'common', u'word', u'such', u'as', u'aldeium', u'``', u'village', u"''", u'from', u'aldaya', u',', u'alface', u'``', u'lettuce', u"''", u'from', u'alkhass', u',', u'armazm', u'``', u'warehouse', u"''", u'from', u'almahazan', u',', u'and', u'azeite', u'``', u'olive', u'oil', u"''", u'from', u'azzait', u'.'], u'pos': [u'PRP', u'VBP', u'RB', u'JJ', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'DT', u'-LRB-', u'NN', u'-RRB-', u':', u',', u'CC', u'VBP', u'JJ', u'JJ', u'NNS', u'JJ', u'IN', u'NN', u'``', u'NN', u"''", u'IN', u'NN', u',', u'IN', u'``', u'NN', u"''", u'IN', u'NN', u',', u'NN', u'``', u'NN', u"''", u'IN', u'NN', u',', u'CC', u'NN', u'``', u'JJ', u'NN', u"''", u'IN', u'JJ', u'.'], u'char_offsets': [[18207, 18211], [18212, 18215], [18216, 18221], [18222, 18234], [18235, 18237], [18238, 18241], [18242, 18249], [18250, 18256], [18257, 18264], [18265, 18266], [18266, 18267], [18267, 18268], [18268, 18269], [18269, 18270], [18270, 18271], [18272, 18275], [18276, 18283], [18284, 18288], [18289, 18295], [18296, 18301], [18302, 18306], [18307, 18309], [18310, 18316], [18317, 18318], [18318, 18325], [18325, 18326], [18327, 18331], [18333, 18339], [18339, 18340], [18341, 18347], [18348, 18349], [18349, 18356], [18356, 18357], [18358, 18362], [18364, 18371], [18371, 18372], [18373, 18379], [18380, 18381], [18381, 18390], [18390, 18391], [18392, 18396], [18398, 18407], [18407, 18408], [18409, 18412], [18413, 18419], [18420, 18421], [18421, 18426], [18427, 18430], [18430, 18431], [18432, 18436], [18438, 18444], [18444, 18445]]}) 
answer: set([u'contain', u'portugues', u'languag', u'doe'])
candidate Sentence: (0.16133089363574982, {u'tokens': [u'On', u'the', u'other', u'hand', u',', u'the', u'correct', u'translation', u'of', u'the', u'question', u'``', u'Have', u'you', u'heard', u'the', u'latest', u'news', u'?', u"''"], u'lemmas': [u'on', u'the', u'other', u'hand', u',', u'the', u'correct', u'translation', u'of', u'the', u'question', u'``', u'have', u'you', u'hear', u'the', u'latest', u'news', u'?', u"''"], u'pos': [u'IN', u'DT', u'JJ', u'NN', u',', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'``', u'VBP', u'PRP', u'VBD', u'DT', u'JJS', u'NN', u'.', u"''"], u'char_offsets': [[32029, 32031], [32032, 32035], [32036, 32041], [32042, 32046], [32046, 32047], [32048, 32051], [32052, 32059], [32060, 32071], [32072, 32074], [32075, 32078], [32079, 32087], [32088, 32089], [32089, 32093], [32094, 32097], [32098, 32103], [32104, 32107], [32108, 32114], [32115, 32119], [32119, 32120], [32120, 32121]]}) 
answer: set([u'word', u'doe', u'arab', u'portugues', u'contain', u'languag'])
candidate Sentence: (0.1370847076177597, {u'tokens': [u'The', u'influence', u'exerted', u'by', u'Arabic', u'on', u'the', u'Romance', u'dialects', u'spoken', u'in', u'the', u'Christian', u'kingdoms', u'of', u'the', u'north', u'was', u'small', u',', u'affecting', u'mainly', u'their', u'lexicon', u'.'], u'lemmas': [u'the', u'influence', u'exert', u'by', u'arabic', u'on', u'the', u'romance', u'dialect', u'speak', u'in', u'the', u'Christian', u'kingdom', u'of', u'the', u'north', u'be', u'small', u',', u'affect', u'mainly', u'they', u'lexicon', u'.'], u'pos': [u'DT', u'NN', u'VBN', u'IN', u'JJ', u'IN', u'DT', u'NN', u'NNS', u'VBN', u'IN', u'DT', u'NNP', u'NNS', u'IN', u'DT', u'NN', u'VBD', u'JJ', u',', u'VBG', u'RB', u'PRP$', u'NN', u'.'], u'char_offsets': [[13003, 13006], [13007, 13016], [13017, 13024], [13025, 13027], [13028, 13034], [13035, 13037], [13038, 13041], [13042, 13049], [13050, 13058], [13059, 13065], [13066, 13068], [13069, 13072], [13073, 13082], [13083, 13091], [13092, 13094], [13095, 13098], [13099, 13104], [13105, 13108], [13109, 13114], [13114, 13115], [13116, 13125], [13126, 13132], [13133, 13138], [13139, 13146], [13146, 13147]]}) 
answer: set([u'contain', u'portugues', u'word', u'languag', u'doe'])
candidate Sentence: (0.13045057654380798, {u'tokens': [u'After', u'the', u'Moorish', u'invasion', u'of', u'711', u',', u'Arabic', u'became', u'the', u'administrative', u'language', u'in', u'the', u'conquered', u'regions', u',', u'but', u'most', u'of', u'the', u'population', u'continued', u'to', u'speak', u'a', u'form', u'of', u'Romance', u'commonly', u'known', u'as', u'Mozarabic', u'.'], u'lemmas': [u'after', u'the', u'moorish', u'invasion', u'of', u'711', u',', u'arabic', u'become', u'the', u'administrative', u'language', u'in', u'the', u'conquer', u'region', u',', u'but', u'most', u'of', u'the', u'population', u'continue', u'to', u'speak', u'a', u'form', u'of', u'romance', u'commonly', u'know', u'as', u'Mozarabic', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'NN', u'IN', u'CD', u',', u'JJ', u'VBD', u'DT', u'JJ', u'NN', u'IN', u'DT', u'VBN', u'NNS', u',', u'CC', u'JJS', u'IN', u'DT', u'NN', u'VBD', u'TO', u'VB', u'DT', u'NN', u'IN', u'NN', u'RB', u'VBN', u'IN', u'NNP', u'.'], u'char_offsets': [[12807, 12812], [12813, 12816], [12817, 12824], [12825, 12833], [12834, 12836], [12837, 12840], [12840, 12841], [12842, 12848], [12849, 12855], [12856, 12859], [12860, 12874], [12875, 12883], [12884, 12886], [12887, 12890], [12891, 12900], [12901, 12908], [12908, 12909], [12910, 12913], [12914, 12918], [12919, 12921], [12922, 12925], [12926, 12936], [12937, 12946], [12947, 12949], [12950, 12955], [12956, 12957], [12958, 12962], [12963, 12965], [12966, 12973], [12974, 12982], [12983, 12988], [12989, 12991], [12992, 13001], [13001, 13002]]}) 
answer: set([u'doe', u'portugues', u'word', u'contain'])
candidate Sentence: (0.12908081710338593, {u'tokens': [u'From', u'Arabic', u'came', u'also', u'the', u'grammatically', u'peculiar', u'word', u'oxal', u'``', u'hopefully', u"''", u'.'], u'lemmas': [u'from', u'Arabic', u'come', u'also', u'the', u'grammatically', u'peculiar', u'word', u'oxal', u'``', u'hopefully', u"''", u'.'], u'pos': [u'IN', u'NNP', u'VBD', u'RB', u'DT', u'RB', u'JJ', u'NN', u'JJ', u'``', u'RB', u"''", u'.'], u'char_offsets': [[18446, 18450], [18451, 18457], [18458, 18462], [18463, 18467], [18468, 18471], [18472, 18485], [18486, 18494], [18495, 18499], [18500, 18504], [18508, 18509], [18509, 18518], [18518, 18519], [18519, 18520]]}) 
answer: set([u'contain', u'portugues', u'languag', u'doe'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Does Portuguese contain words from the Arabic language?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes, Portuguese contains words from the Arabic language.
Difficulty = easy
Article_Title = Portuguese_language
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set5/a1.txt

No
_____________________________ test_yesno[param269] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb363b0>, (<src.tfidf.TF_IDF object at 0x1069b5450>, set(['francisco', 'san', 'san_francisco'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes, San Francisco is characterized by a high standard of living.')
E            +    where 'Yes, San Francisco is characterized by a high standard of living.' = <src.question_processing.Question_parser instance at 0x10cb363b0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.79865384101867676, {u'tokens': [u'San', u'Francisco', u'is', u'characterized', u'by', u'a', u'high', u'standard', u'of', u'living', u'.'], u'lemmas': [u'San', u'Francisco', u'be', u'characterize', u'by', u'a', u'high', u'standard', u'of', u'living', u'.'], u'pos': [u'NNP', u'NNP', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[22097, 22100], [22101, 22110], [22111, 22113], [22114, 22127], [22128, 22130], [22131, 22132], [22133, 22137], [22138, 22146], [22147, 22149], [22150, 22156], [22156, 22157]]}) 
answer: set([u'franciscio'])
candidate Sentence: (0.23348376154899597, {u'tokens': [u'Because', u'the', u'cost', u'of', u'living', u'in', u'San', u'Francisco', u'is', u'exceptionally', u'high', u',', u'many', u'middle', u'class', u'families', u'have', u'decided', u'they', u'can', u'no', u'longer', u'afford', u'to', u'live', u'within', u'the', u'city', u'and', u'have', u'left', u'.'], u'lemmas': [u'because', u'the', u'cost', u'of', u'living', u'in', u'San', u'Francisco', u'be', u'exceptionally', u'high', u',', u'many', u'middle', u'class', u'family', u'have', u'decide', u'they', u'can', u'no', u'longer', u'afford', u'to', u'live', u'within', u'the', u'city', u'and', u'have', u'leave', u'.'], u'pos': [u'IN', u'DT', u'NN', u'IN', u'NN', u'IN', u'NNP', u'NNP', u'VBZ', u'RB', u'JJ', u',', u'JJ', u'JJ', u'NN', u'NNS', u'VBP', u'VBN', u'PRP', u'MD', u'RB', u'RB', u'VB', u'TO', u'VB', u'IN', u'DT', u'NN', u'CC', u'VBP', u'VBN', u'.'], u'char_offsets': [[22798, 22805], [22806, 22809], [22810, 22814], [22815, 22817], [22818, 22824], [22825, 22827], [22828, 22831], [22832, 22841], [22842, 22844], [22845, 22858], [22859, 22863], [22863, 22864], [22865, 22869], [22870, 22876], [22877, 22882], [22883, 22891], [22892, 22896], [22897, 22904], [22905, 22909], [22910, 22913], [22914, 22916], [22917, 22923], [22924, 22930], [22931, 22933], [22934, 22938], [22939, 22945], [22946, 22949], [22950, 22954], [22955, 22958], [22959, 22963], [22964, 22968], [22968, 22969]]}) 
answer: set([u'franciscio', u'standard'])
candidate Sentence: (0.19697828590869904, {u'tokens': [u'Its', u'current', u'structure', u',', u'featuring', u'a', u'living', u'roof', u',', u'is', u'an', u'example', u'of', u'sustainable', u'architecture', u'and', u'opened', u'in', u'2008', u'.'], u'lemmas': [u'its', u'current', u'structure', u',', u'feature', u'a', u'living', u'roof', u',', u'be', u'a', u'example', u'of', u'sustainable', u'architecture', u'and', u'open', u'in', u'2008', u'.'], u'pos': [u'PRP$', u'JJ', u'NN', u',', u'VBG', u'DT', u'NN', u'NN', u',', u'VBZ', u'DT', u'NN', u'IN', u'JJ', u'NN', u'CC', u'VBD', u'IN', u'CD', u'.'], u'char_offsets': [[28208, 28211], [28212, 28219], [28220, 28229], [28229, 28230], [28231, 28240], [28241, 28242], [28243, 28249], [28250, 28254], [28254, 28255], [28256, 28258], [28259, 28261], [28262, 28269], [28270, 28272], [28273, 28284], [28285, 28297], [28298, 28301], [28302, 28308], [28309, 28311], [28312, 28316], [28316, 28317]]}) 
answer: set([u'high', u'franciscio', u'standard'])
candidate Sentence: (0.15126241743564606, {u'tokens': [u'The', u'city', u'has', u'repeatedly', u'upgraded', u'its', u'building', u'codes', u',', u'requiring', u'retrofits', u'for', u'older', u'buildings', u'and', u'higher', u'engineering', u'standards', u'for', u'new', u'construction', u'.'], u'lemmas': [u'the', u'city', u'have', u'repeatedly', u'upgrade', u'its', u'building', u'code', u',', u'require', u'retrofit', u'for', u'older', u'building', u'and', u'higher', u'engineering', u'standard', u'for', u'new', u'construction', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'RB', u'VBN', u'PRP$', u'NN', u'NNS', u',', u'VBG', u'NNS', u'IN', u'JJR', u'NNS', u'CC', u'JJR', u'NN', u'NNS', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[13340, 13343], [13344, 13348], [13349, 13352], [13353, 13363], [13364, 13372], [13373, 13376], [13377, 13385], [13386, 13391], [13391, 13392], [13393, 13402], [13403, 13412], [13413, 13416], [13417, 13422], [13423, 13432], [13433, 13436], [13437, 13443], [13444, 13455], [13456, 13465], [13466, 13469], [13470, 13473], [13474, 13486], [13486, 13487]]}) 
answer: set([u'high', u'franciscio', u'live'])
candidate Sentence: (0.12335614860057831, {u'tokens': [u'The', u'rainy', u'period', u'of', u'November', u'to', u'April', u'is', u'cool', u'with', u'high', u'temperatures', u'of', u'and', u'lows', u'of', u'.'], u'lemmas': [u'the', u'rainy', u'period', u'of', u'November', u'to', u'April', u'be', u'cool', u'with', u'high', u'temperature', u'of', u'and', u'low', u'of', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'NNP', u'TO', u'NNP', u'VBZ', u'JJ', u'IN', u'JJ', u'NNS', u'IN', u'CC', u'NNS', u'IN', u'.'], u'char_offsets': [[15114, 15117], [15118, 15123], [15124, 15130], [15131, 15133], [15134, 15142], [15143, 15145], [15146, 15151], [15152, 15154], [15155, 15159], [15160, 15164], [15165, 15169], [15170, 15182], [15183, 15185], [15188, 15191], [15192, 15196], [15197, 15199], [15201, 15202]]}) 
answer: set([u'franciscio', u'live', u'standard'])
candidate Sentence: (0.1122157946228981, {u'tokens': [u'The', u'city-owned', u'system', u'operates', u'both', u'a', u'combined', u'light', u'rail', u'and', u'subway', u'system', u'-LRB-', u'the', u'Muni', u'Metro', u'-RRB-', u'and', u'a', u'bus', u'network', u'that', u'includes', u'trolleybuses', u',', u'standard', u'diesel', u'motorcoaches', u'and', u'diesel', u'hybrid', u'buses', u'.'], u'lemmas': [u'the', u'city-owned', u'system', u'operate', u'both', u'a', u'combined', u'light', u'rail', u'and', u'subway', u'system', u'-lrb-', u'the', u'muni', u'Metro', u'-rrb-', u'and', u'a', u'bus', u'network', u'that', u'include', u'trolleybus', u',', u'standard', u'diesel', u'motorcoach', u'and', u'diesel', u'hybrid', u'bus', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VBZ', u'CC', u'DT', u'JJ', u'JJ', u'NN', u'CC', u'NN', u'NN', u'-LRB-', u'DT', u'JJ', u'NNP', u'-RRB-', u'CC', u'DT', u'NN', u'NN', u'WDT', u'VBZ', u'NNS', u',', u'JJ', u'NN', u'NNS', u'CC', u'NN', u'NN', u'NNS', u'.'], u'char_offsets': [[47967, 47970], [47971, 47981], [47982, 47988], [47989, 47997], [47998, 48002], [48003, 48004], [48005, 48013], [48014, 48019], [48020, 48024], [48025, 48028], [48029, 48035], [48036, 48042], [48043, 48044], [48044, 48047], [48048, 48052], [48053, 48058], [48058, 48059], [48060, 48063], [48064, 48065], [48066, 48069], [48070, 48077], [48078, 48082], [48083, 48091], [48092, 48104], [48104, 48105], [48106, 48114], [48115, 48121], [48122, 48134], [48135, 48138], [48139, 48145], [48146, 48152], [48153, 48158], [48158, 48159]]}) 
answer: set([u'high', u'franciscio', u'live'])
candidate Sentence: (0.10970102250576019, {u'tokens': [u'The', u'dry', u'period', u'of', u'May', u'to', u'October', u'is', u'mild', u'to', u'warm', u',', u'with', u'average', u'high', u'temperatures', u'of', u'and', u'lows', u'of', u'.'], u'lemmas': [u'the', u'dry', u'period', u'of', u'May', u'to', u'October', u'be', u'mild', u'to', u'warm', u',', u'with', u'average', u'high', u'temperature', u'of', u'and', u'low', u'of', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'NNP', u'TO', u'NNP', u'VBZ', u'JJ', u'TO', u'JJ', u',', u'IN', u'JJ', u'JJ', u'NNS', u'IN', u'CC', u'NNS', u'IN', u'.'], u'char_offsets': [[15013, 15016], [15017, 15020], [15021, 15027], [15028, 15030], [15031, 15034], [15035, 15037], [15038, 15045], [15046, 15048], [15049, 15053], [15054, 15056], [15057, 15061], [15061, 15062], [15063, 15067], [15068, 15075], [15076, 15080], [15081, 15093], [15094, 15096], [15099, 15102], [15103, 15107], [15108, 15110], [15112, 15113]]}) 
answer: set([u'franciscio', u'live', u'standard'])
candidate Sentence: (0.10880656540393829, {u'tokens': [u'The', u'high', u'hills', u'in', u'the', u'geographic', u'center', u'of', u'the', u'city', u'are', u'responsible', u'for', u'a', u'20', u'%', u'variance', u'in', u'annual', u'rainfall', u'between', u'different', u'parts', u'of', u'the', u'city', u'.'], u'lemmas': [u'the', u'high', u'hill', u'in', u'the', u'geographic', u'center', u'of', u'the', u'city', u'be', u'responsible', u'for', u'a', u'20', u'%', u'variance', u'in', u'annual', u'rainfall', u'between', u'different', u'part', u'of', u'the', u'city', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'VBP', u'JJ', u'IN', u'DT', u'CD', u'NN', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[15905, 15908], [15909, 15913], [15914, 15919], [15920, 15922], [15923, 15926], [15927, 15937], [15938, 15944], [15945, 15947], [15948, 15951], [15952, 15956], [15957, 15960], [15961, 15972], [15973, 15976], [15977, 15978], [15979, 15981], [15981, 15982], [15983, 15991], [15992, 15994], [15995, 16001], [16002, 16010], [16011, 16018], [16019, 16028], [16029, 16034], [16035, 16037], [16038, 16041], [16042, 16046], [16046, 16047]]}) 
answer: set([u'franciscio', u'live', u'standard'])
candidate Sentence: (0.10846321284770966, {u'tokens': [u'San', u'Francisco', u"'s", u'tallest', u'hill', u',', u'Mount', u'Davidson', u',', u'is', u'high', u'and', u'is', u'capped', u'with', u'a', u'tall', u'cross', u'built', u'in', u'1934', u'.'], u'lemmas': [u'San', u'Francisco', u"'s", u'tallest', u'hill', u',', u'Mount', u'Davidson', u',', u'be', u'high', u'and', u'be', u'cap', u'with', u'a', u'tall', u'cross', u'build', u'in', u'1934', u'.'], u'pos': [u'NNP', u'NNP', u'POS', u'JJS', u'NN', u',', u'NNP', u'NNP', u',', u'VBZ', u'JJ', u'CC', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'VBN', u'IN', u'CD', u'.'], u'char_offsets': [[12758, 12761], [12762, 12771], [12771, 12773], [12774, 12781], [12782, 12786], [12786, 12787], [12788, 12793], [12794, 12802], [12802, 12803], [12804, 12806], [12809, 12813], [12814, 12817], [12818, 12820], [12821, 12827], [12828, 12832], [12833, 12834], [12837, 12841], [12842, 12847], [12848, 12853], [12854, 12856], [12857, 12861], [12861, 12862]]}) 
answer: set([u'franciscio', u'live', u'standard'])
candidate Sentence: (0.094473108649253845, {u'tokens': [u'Bayview-Hunters', u'Point', u'in', u'the', u'southeast', u'section', u'of', u'the', u'city', u'is', u'one', u'of', u'the', u'poorest', u'neighborhoods', u'and', u'suffers', u'from', u'a', u'high', u'rate', u'of', u'crime', u',', u'though', u'the', u'area', u'has', u'been', u'the', u'focus', u'of', u'controversial', u'plans', u'for', u'urban', u'renewal', u'.'], u'lemmas': [u'Bayview-Hunters', u'Point', u'in', u'the', u'southeast', u'section', u'of', u'the', u'city', u'be', u'one', u'of', u'the', u'poorest', u'neighborhood', u'and', u'suffer', u'from', u'a', u'high', u'rate', u'of', u'crime', u',', u'though', u'the', u'area', u'have', u'be', u'the', u'focus', u'of', u'controversial', u'plan', u'for', u'urban', u'renewal', u'.'], u'pos': [u'NNP', u'NNP', u'IN', u'DT', u'NN', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'CD', u'IN', u'DT', u'JJS', u'NNS', u'CC', u'VBZ', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u',', u'IN', u'DT', u'NN', u'VBZ', u'VBN', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[19323, 19338], [19339, 19344], [19345, 19347], [19348, 19351], [19352, 19361], [19362, 19369], [19370, 19372], [19373, 19376], [19377, 19381], [19382, 19384], [19385, 19388], [19389, 19391], [19392, 19395], [19396, 19403], [19404, 19417], [19418, 19421], [19422, 19429], [19430, 19434], [19435, 19436], [19437, 19441], [19442, 19446], [19447, 19449], [19450, 19455], [19455, 19456], [19457, 19463], [19464, 19467], [19468, 19472], [19473, 19476], [19477, 19481], [19482, 19485], [19486, 19491], [19492, 19494], [19495, 19508], [19509, 19514], [19515, 19518], [19519, 19524], [19525, 19532], [19532, 19533]]}) 
answer: set([u'franciscio', u'live', u'standard'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is the standard of living in San Franciscio high?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes, San Francisco is characterized by a high standard of living.
Difficulty = easy
Article_Title = San_Francisco
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set3/a8.txt

No
_____________________________ test_yesno[param270] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb363f8>, (<src.tfidf.TF_IDF object at 0x1069b5450>, set(['francisco', 'san', 'san_francisco'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb363f8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.79865384101867676, {u'tokens': [u'San', u'Francisco', u'is', u'characterized', u'by', u'a', u'high', u'standard', u'of', u'living', u'.'], u'lemmas': [u'San', u'Francisco', u'be', u'characterize', u'by', u'a', u'high', u'standard', u'of', u'living', u'.'], u'pos': [u'NNP', u'NNP', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[22097, 22100], [22101, 22110], [22111, 22113], [22114, 22127], [22128, 22130], [22131, 22132], [22133, 22137], [22138, 22146], [22147, 22149], [22150, 22156], [22156, 22157]]}) 
answer: set([u'franciscio'])
candidate Sentence: (0.23348376154899597, {u'tokens': [u'Because', u'the', u'cost', u'of', u'living', u'in', u'San', u'Francisco', u'is', u'exceptionally', u'high', u',', u'many', u'middle', u'class', u'families', u'have', u'decided', u'they', u'can', u'no', u'longer', u'afford', u'to', u'live', u'within', u'the', u'city', u'and', u'have', u'left', u'.'], u'lemmas': [u'because', u'the', u'cost', u'of', u'living', u'in', u'San', u'Francisco', u'be', u'exceptionally', u'high', u',', u'many', u'middle', u'class', u'family', u'have', u'decide', u'they', u'can', u'no', u'longer', u'afford', u'to', u'live', u'within', u'the', u'city', u'and', u'have', u'leave', u'.'], u'pos': [u'IN', u'DT', u'NN', u'IN', u'NN', u'IN', u'NNP', u'NNP', u'VBZ', u'RB', u'JJ', u',', u'JJ', u'JJ', u'NN', u'NNS', u'VBP', u'VBN', u'PRP', u'MD', u'RB', u'RB', u'VB', u'TO', u'VB', u'IN', u'DT', u'NN', u'CC', u'VBP', u'VBN', u'.'], u'char_offsets': [[22798, 22805], [22806, 22809], [22810, 22814], [22815, 22817], [22818, 22824], [22825, 22827], [22828, 22831], [22832, 22841], [22842, 22844], [22845, 22858], [22859, 22863], [22863, 22864], [22865, 22869], [22870, 22876], [22877, 22882], [22883, 22891], [22892, 22896], [22897, 22904], [22905, 22909], [22910, 22913], [22914, 22916], [22917, 22923], [22924, 22930], [22931, 22933], [22934, 22938], [22939, 22945], [22946, 22949], [22950, 22954], [22955, 22958], [22959, 22963], [22964, 22968], [22968, 22969]]}) 
answer: set([u'franciscio', u'standard'])
candidate Sentence: (0.19697828590869904, {u'tokens': [u'Its', u'current', u'structure', u',', u'featuring', u'a', u'living', u'roof', u',', u'is', u'an', u'example', u'of', u'sustainable', u'architecture', u'and', u'opened', u'in', u'2008', u'.'], u'lemmas': [u'its', u'current', u'structure', u',', u'feature', u'a', u'living', u'roof', u',', u'be', u'a', u'example', u'of', u'sustainable', u'architecture', u'and', u'open', u'in', u'2008', u'.'], u'pos': [u'PRP$', u'JJ', u'NN', u',', u'VBG', u'DT', u'NN', u'NN', u',', u'VBZ', u'DT', u'NN', u'IN', u'JJ', u'NN', u'CC', u'VBD', u'IN', u'CD', u'.'], u'char_offsets': [[28208, 28211], [28212, 28219], [28220, 28229], [28229, 28230], [28231, 28240], [28241, 28242], [28243, 28249], [28250, 28254], [28254, 28255], [28256, 28258], [28259, 28261], [28262, 28269], [28270, 28272], [28273, 28284], [28285, 28297], [28298, 28301], [28302, 28308], [28309, 28311], [28312, 28316], [28316, 28317]]}) 
answer: set([u'high', u'franciscio', u'standard'])
candidate Sentence: (0.15126241743564606, {u'tokens': [u'The', u'city', u'has', u'repeatedly', u'upgraded', u'its', u'building', u'codes', u',', u'requiring', u'retrofits', u'for', u'older', u'buildings', u'and', u'higher', u'engineering', u'standards', u'for', u'new', u'construction', u'.'], u'lemmas': [u'the', u'city', u'have', u'repeatedly', u'upgrade', u'its', u'building', u'code', u',', u'require', u'retrofit', u'for', u'older', u'building', u'and', u'higher', u'engineering', u'standard', u'for', u'new', u'construction', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'RB', u'VBN', u'PRP$', u'NN', u'NNS', u',', u'VBG', u'NNS', u'IN', u'JJR', u'NNS', u'CC', u'JJR', u'NN', u'NNS', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[13340, 13343], [13344, 13348], [13349, 13352], [13353, 13363], [13364, 13372], [13373, 13376], [13377, 13385], [13386, 13391], [13391, 13392], [13393, 13402], [13403, 13412], [13413, 13416], [13417, 13422], [13423, 13432], [13433, 13436], [13437, 13443], [13444, 13455], [13456, 13465], [13466, 13469], [13470, 13473], [13474, 13486], [13486, 13487]]}) 
answer: set([u'high', u'franciscio', u'live'])
candidate Sentence: (0.12335614860057831, {u'tokens': [u'The', u'rainy', u'period', u'of', u'November', u'to', u'April', u'is', u'cool', u'with', u'high', u'temperatures', u'of', u'and', u'lows', u'of', u'.'], u'lemmas': [u'the', u'rainy', u'period', u'of', u'November', u'to', u'April', u'be', u'cool', u'with', u'high', u'temperature', u'of', u'and', u'low', u'of', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'NNP', u'TO', u'NNP', u'VBZ', u'JJ', u'IN', u'JJ', u'NNS', u'IN', u'CC', u'NNS', u'IN', u'.'], u'char_offsets': [[15114, 15117], [15118, 15123], [15124, 15130], [15131, 15133], [15134, 15142], [15143, 15145], [15146, 15151], [15152, 15154], [15155, 15159], [15160, 15164], [15165, 15169], [15170, 15182], [15183, 15185], [15188, 15191], [15192, 15196], [15197, 15199], [15201, 15202]]}) 
answer: set([u'franciscio', u'live', u'standard'])
candidate Sentence: (0.1122157946228981, {u'tokens': [u'The', u'city-owned', u'system', u'operates', u'both', u'a', u'combined', u'light', u'rail', u'and', u'subway', u'system', u'-LRB-', u'the', u'Muni', u'Metro', u'-RRB-', u'and', u'a', u'bus', u'network', u'that', u'includes', u'trolleybuses', u',', u'standard', u'diesel', u'motorcoaches', u'and', u'diesel', u'hybrid', u'buses', u'.'], u'lemmas': [u'the', u'city-owned', u'system', u'operate', u'both', u'a', u'combined', u'light', u'rail', u'and', u'subway', u'system', u'-lrb-', u'the', u'muni', u'Metro', u'-rrb-', u'and', u'a', u'bus', u'network', u'that', u'include', u'trolleybus', u',', u'standard', u'diesel', u'motorcoach', u'and', u'diesel', u'hybrid', u'bus', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VBZ', u'CC', u'DT', u'JJ', u'JJ', u'NN', u'CC', u'NN', u'NN', u'-LRB-', u'DT', u'JJ', u'NNP', u'-RRB-', u'CC', u'DT', u'NN', u'NN', u'WDT', u'VBZ', u'NNS', u',', u'JJ', u'NN', u'NNS', u'CC', u'NN', u'NN', u'NNS', u'.'], u'char_offsets': [[47967, 47970], [47971, 47981], [47982, 47988], [47989, 47997], [47998, 48002], [48003, 48004], [48005, 48013], [48014, 48019], [48020, 48024], [48025, 48028], [48029, 48035], [48036, 48042], [48043, 48044], [48044, 48047], [48048, 48052], [48053, 48058], [48058, 48059], [48060, 48063], [48064, 48065], [48066, 48069], [48070, 48077], [48078, 48082], [48083, 48091], [48092, 48104], [48104, 48105], [48106, 48114], [48115, 48121], [48122, 48134], [48135, 48138], [48139, 48145], [48146, 48152], [48153, 48158], [48158, 48159]]}) 
answer: set([u'high', u'franciscio', u'live'])
candidate Sentence: (0.10970102250576019, {u'tokens': [u'The', u'dry', u'period', u'of', u'May', u'to', u'October', u'is', u'mild', u'to', u'warm', u',', u'with', u'average', u'high', u'temperatures', u'of', u'and', u'lows', u'of', u'.'], u'lemmas': [u'the', u'dry', u'period', u'of', u'May', u'to', u'October', u'be', u'mild', u'to', u'warm', u',', u'with', u'average', u'high', u'temperature', u'of', u'and', u'low', u'of', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'NNP', u'TO', u'NNP', u'VBZ', u'JJ', u'TO', u'JJ', u',', u'IN', u'JJ', u'JJ', u'NNS', u'IN', u'CC', u'NNS', u'IN', u'.'], u'char_offsets': [[15013, 15016], [15017, 15020], [15021, 15027], [15028, 15030], [15031, 15034], [15035, 15037], [15038, 15045], [15046, 15048], [15049, 15053], [15054, 15056], [15057, 15061], [15061, 15062], [15063, 15067], [15068, 15075], [15076, 15080], [15081, 15093], [15094, 15096], [15099, 15102], [15103, 15107], [15108, 15110], [15112, 15113]]}) 
answer: set([u'franciscio', u'live', u'standard'])
candidate Sentence: (0.10880656540393829, {u'tokens': [u'The', u'high', u'hills', u'in', u'the', u'geographic', u'center', u'of', u'the', u'city', u'are', u'responsible', u'for', u'a', u'20', u'%', u'variance', u'in', u'annual', u'rainfall', u'between', u'different', u'parts', u'of', u'the', u'city', u'.'], u'lemmas': [u'the', u'high', u'hill', u'in', u'the', u'geographic', u'center', u'of', u'the', u'city', u'be', u'responsible', u'for', u'a', u'20', u'%', u'variance', u'in', u'annual', u'rainfall', u'between', u'different', u'part', u'of', u'the', u'city', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'VBP', u'JJ', u'IN', u'DT', u'CD', u'NN', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[15905, 15908], [15909, 15913], [15914, 15919], [15920, 15922], [15923, 15926], [15927, 15937], [15938, 15944], [15945, 15947], [15948, 15951], [15952, 15956], [15957, 15960], [15961, 15972], [15973, 15976], [15977, 15978], [15979, 15981], [15981, 15982], [15983, 15991], [15992, 15994], [15995, 16001], [16002, 16010], [16011, 16018], [16019, 16028], [16029, 16034], [16035, 16037], [16038, 16041], [16042, 16046], [16046, 16047]]}) 
answer: set([u'franciscio', u'live', u'standard'])
candidate Sentence: (0.10846321284770966, {u'tokens': [u'San', u'Francisco', u"'s", u'tallest', u'hill', u',', u'Mount', u'Davidson', u',', u'is', u'high', u'and', u'is', u'capped', u'with', u'a', u'tall', u'cross', u'built', u'in', u'1934', u'.'], u'lemmas': [u'San', u'Francisco', u"'s", u'tallest', u'hill', u',', u'Mount', u'Davidson', u',', u'be', u'high', u'and', u'be', u'cap', u'with', u'a', u'tall', u'cross', u'build', u'in', u'1934', u'.'], u'pos': [u'NNP', u'NNP', u'POS', u'JJS', u'NN', u',', u'NNP', u'NNP', u',', u'VBZ', u'JJ', u'CC', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'VBN', u'IN', u'CD', u'.'], u'char_offsets': [[12758, 12761], [12762, 12771], [12771, 12773], [12774, 12781], [12782, 12786], [12786, 12787], [12788, 12793], [12794, 12802], [12802, 12803], [12804, 12806], [12809, 12813], [12814, 12817], [12818, 12820], [12821, 12827], [12828, 12832], [12833, 12834], [12837, 12841], [12842, 12847], [12848, 12853], [12854, 12856], [12857, 12861], [12861, 12862]]}) 
answer: set([u'franciscio', u'live', u'standard'])
candidate Sentence: (0.094473108649253845, {u'tokens': [u'Bayview-Hunters', u'Point', u'in', u'the', u'southeast', u'section', u'of', u'the', u'city', u'is', u'one', u'of', u'the', u'poorest', u'neighborhoods', u'and', u'suffers', u'from', u'a', u'high', u'rate', u'of', u'crime', u',', u'though', u'the', u'area', u'has', u'been', u'the', u'focus', u'of', u'controversial', u'plans', u'for', u'urban', u'renewal', u'.'], u'lemmas': [u'Bayview-Hunters', u'Point', u'in', u'the', u'southeast', u'section', u'of', u'the', u'city', u'be', u'one', u'of', u'the', u'poorest', u'neighborhood', u'and', u'suffer', u'from', u'a', u'high', u'rate', u'of', u'crime', u',', u'though', u'the', u'area', u'have', u'be', u'the', u'focus', u'of', u'controversial', u'plan', u'for', u'urban', u'renewal', u'.'], u'pos': [u'NNP', u'NNP', u'IN', u'DT', u'NN', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'CD', u'IN', u'DT', u'JJS', u'NNS', u'CC', u'VBZ', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u',', u'IN', u'DT', u'NN', u'VBZ', u'VBN', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[19323, 19338], [19339, 19344], [19345, 19347], [19348, 19351], [19352, 19361], [19362, 19369], [19370, 19372], [19373, 19376], [19377, 19381], [19382, 19384], [19385, 19388], [19389, 19391], [19392, 19395], [19396, 19403], [19404, 19417], [19418, 19421], [19422, 19429], [19430, 19434], [19435, 19436], [19437, 19441], [19442, 19446], [19447, 19449], [19450, 19455], [19455, 19456], [19457, 19463], [19464, 19467], [19468, 19472], [19473, 19476], [19477, 19481], [19482, 19485], [19486, 19491], [19492, 19494], [19495, 19508], [19509, 19514], [19515, 19518], [19519, 19524], [19525, 19532], [19532, 19533]]}) 
answer: set([u'franciscio', u'live', u'standard'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is the standard of living in San Franciscio high?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = San_Francisco
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set3/a8.txt

No
_____________________________ test_yesno[param271] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb36440>, (<src.tfidf.TF_IDF object at 0x1069b5450>, set(['francisco', 'san', 'san_francisco'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes, according to the 2005 American Community Survey, San Francisco has the highest percentage of gay and lesbian individuals of any of the 50 largest U.S. cities, at 15.4%.')
E            +    where 'Yes, according to the 2005 American Community Survey, San Francisco has the highest percentage of gay and lesbian individuals of any of the 50 largest U.S. cities, at 15.4%.' = <src.question_processing.Question_parser instance at 0x10cb36440>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.45208191871643066, {u'tokens': [u'According', u'to', u'the', u'2005', u'American', u'Community', u'Survey', u',', u'San', u'Francisco', u'has', u'the', u'highest', u'percentage', u'of', u'gay', u'and', u'lesbian', u'individuals', u'of', u'any', u'of', u'the', u'50', u'largest', u'U.S.', u'cities', u',', u'at', u'15.4', u'%', u'.'], u'lemmas': [u'accord', u'to', u'the', u'2005', u'American', u'Community', u'Survey', u',', u'San', u'Francisco', u'have', u'the', u'highest', u'percentage', u'of', u'gay', u'and', u'lesbian', u'individual', u'of', u'any', u'of', u'the', u'50', u'largest', u'U.S.', u'city', u',', u'at', u'15.4', u'%', u'.'], u'pos': [u'VBG', u'TO', u'DT', u'CD', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'VBZ', u'DT', u'JJS', u'NN', u'IN', u'JJ', u'CC', u'JJ', u'NNS', u'IN', u'DT', u'IN', u'DT', u'CD', u'JJS', u'NNP', u'NNS', u',', u'IN', u'CD', u'NN', u'.'], u'char_offsets': [[40557, 40566], [40567, 40569], [40570, 40573], [40574, 40578], [40579, 40587], [40588, 40597], [40598, 40604], [40604, 40605], [40606, 40609], [40610, 40619], [40620, 40623], [40624, 40627], [40628, 40635], [40636, 40646], [40647, 40649], [40650, 40653], [40654, 40657], [40658, 40665], [40666, 40677], [40678, 40680], [40681, 40684], [40685, 40687], [40688, 40691], [40692, 40694], [40695, 40702], [40703, 40707], [40708, 40714], [40714, 40715], [40716, 40718], [40719, 40723], [40723, 40724], [40724, 40725]]}) 
answer: set([u'high'])
candidate Sentence: (0.16250663995742798, {u'tokens': [u'The', u'current', u'percentage', u'of', u'African', u'Americans', u'in', u'San', u'Francisco', u'is', u'similar', u'to', u'that', u'of', u'the', u'state', u'of', u'California', u';', u'conversely', u',', u'the', u'city', u"'s", u'percentage', u'of', u'Hispanic', u'residents', u'is', u'less', u'than', u'half', u'of', u'that', u'of', u'the', u'state', u'.'], u'lemmas': [u'the', u'current', u'percentage', u'of', u'african', u'Americans', u'in', u'San', u'Francisco', u'be', u'similar', u'to', u'that', u'of', u'the', u'state', u'of', u'California', u';', u'conversely', u',', u'the', u'city', u"'s", u'percentage', u'of', u'hispanic', u'resident', u'be', u'less', u'than', u'half', u'of', u'that', u'of', u'the', u'state', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'JJ', u'NNPS', u'IN', u'NNP', u'NNP', u'VBZ', u'JJ', u'TO', u'DT', u'IN', u'DT', u'NN', u'IN', u'NNP', u':', u'RB', u',', u'DT', u'NN', u'POS', u'NN', u'IN', u'JJ', u'NNS', u'VBZ', u'JJR', u'IN', u'NN', u'IN', u'DT', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[40085, 40088], [40089, 40096], [40097, 40107], [40108, 40110], [40111, 40118], [40119, 40128], [40129, 40131], [40132, 40135], [40136, 40145], [40146, 40148], [40149, 40156], [40157, 40159], [40160, 40164], [40165, 40167], [40168, 40171], [40172, 40177], [40178, 40180], [40181, 40191], [40191, 40192], [40194, 40204], [40204, 40205], [40206, 40209], [40210, 40214], [40214, 40216], [40217, 40227], [40228, 40230], [40231, 40239], [40240, 40249], [40250, 40252], [40253, 40257], [40258, 40262], [40263, 40267], [40268, 40270], [40271, 40275], [40276, 40278], [40279, 40282], [40283, 40288], [40288, 40289]]}) 
answer: set([u'high', u'individu', u'lesbian', u'gay'])
candidate Sentence: (0.12906543910503387, {u'tokens': [u'San', u'Francisco', u'also', u'has', u'the', u'highest', u'percentage', u'of', u'same-sex', u'households', u'of', u'any', u'American', u'county', u',', u'with', u'the', u'Bay', u'Area', u'having', u'a', u'higher', u'concentration', u'than', u'any', u'other', u'metropolitan', u'area', u'.'], u'lemmas': [u'San', u'Francisco', u'also', u'have', u'the', u'highest', u'percentage', u'of', u'same-sex', u'household', u'of', u'any', u'american', u'county', u',', u'with', u'the', u'Bay', u'Area', u'have', u'a', u'higher', u'concentration', u'than', u'any', u'other', u'metropolitan', u'area', u'.'], u'pos': [u'NNP', u'NNP', u'RB', u'VBZ', u'DT', u'JJS', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u',', u'IN', u'DT', u'NNP', u'NNP', u'VBG', u'DT', u'JJR', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[40729, 40732], [40733, 40742], [40743, 40747], [40748, 40751], [40752, 40755], [40756, 40763], [40764, 40774], [40775, 40777], [40778, 40786], [40787, 40797], [40798, 40800], [40801, 40804], [40805, 40813], [40814, 40820], [40820, 40821], [40822, 40826], [40827, 40830], [40831, 40834], [40835, 40839], [40840, 40846], [40847, 40848], [40849, 40855], [40856, 40869], [40870, 40874], [40875, 40878], [40879, 40884], [40885, 40897], [40898, 40902], [40902, 40903]]}) 
answer: set([u'high', u'individu', u'lesbian', u'gay'])
candidate Sentence: (0.12625987827777863, {u'tokens': [u'Upon', u'the', u'death', u'or', u'resignation', u'of', u'mayor', u',', u'the', u'President', u'of', u'the', u'Board', u'of', u'Supervisors', u'assumes', u'that', u'office', u',', u'as', u'did', u'Dianne', u'Feinstein', u'after', u'the', u'assassination', u'of', u'George', u'Moscone', u'in', u'1978', u'.'], u'lemmas': [u'upon', u'the', u'death', u'or', u'resignation', u'of', u'mayor', u',', u'the', u'President', u'of', u'the', u'Board', u'of', u'Supervisors', u'assume', u'that', u'office', u',', u'as', u'do', u'Dianne', u'Feinstein', u'after', u'the', u'assassination', u'of', u'George', u'Moscone', u'in', u'1978', u'.'], u'pos': [u'IN', u'DT', u'NN', u'CC', u'NN', u'IN', u'NN', u',', u'DT', u'NNP', u'IN', u'DT', u'NNP', u'IN', u'NNPS', u'VBZ', u'IN', u'NN', u',', u'IN', u'VBD', u'NNP', u'NNP', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[37251, 37255], [37256, 37259], [37260, 37265], [37266, 37268], [37269, 37280], [37281, 37283], [37284, 37289], [37289, 37290], [37291, 37294], [37295, 37304], [37305, 37307], [37308, 37311], [37312, 37317], [37318, 37320], [37321, 37332], [37333, 37340], [37341, 37345], [37346, 37352], [37352, 37353], [37354, 37356], [37357, 37360], [37361, 37367], [37368, 37377], [37378, 37383], [37384, 37387], [37388, 37401], [37402, 37404], [37405, 37411], [37412, 37419], [37420, 37422], [37423, 37427], [37427, 37428]]}) 
answer: set([u'high', u'individu', u'percentag', u'gay', u'lesbian'])
candidate Sentence: (0.11994434893131256, {u'tokens': [u'San', u'Francisco', u'is', u'characterized', u'by', u'a', u'high', u'standard', u'of', u'living', u'.'], u'lemmas': [u'San', u'Francisco', u'be', u'characterize', u'by', u'a', u'high', u'standard', u'of', u'living', u'.'], u'pos': [u'NNP', u'NNP', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[22097, 22100], [22101, 22110], [22111, 22113], [22114, 22127], [22128, 22130], [22131, 22132], [22133, 22137], [22138, 22146], [22147, 22149], [22150, 22156], [22156, 22157]]}) 
answer: set([u'individu', u'gay', u'percentag', u'lesbian'])
candidate Sentence: (0.11938505619764328, {u'tokens': [u'In', u'the', u'1970s', u',', u'the', u'city', u'became', u'a', u'center', u'of', u'the', u'gay', u'rights', u'movement', u',', u'with', u'the', u'emergence', u'of', u'The', u'Castro', u'as', u'an', u'urban', u'gay', u'village', u',', u'the', u'election', u'of', u'Harvey', u'Milk', u'to', u'the', u'Board', u'of', u'Supervisors', u',', u'and', u'his', u'assassination', u',', u'along', u'with', u'that', u'of', u'Mayor', u'George', u'Moscone', u',', u'in', u'1978', u'.'], u'lemmas': [u'in', u'the', u'1970', u',', u'the', u'city', u'become', u'a', u'center', u'of', u'the', u'gay', u'rights', u'movement', u',', u'with', u'the', u'emergence', u'of', u'the', u'Castro', u'as', u'a', u'urban', u'gay', u'village', u',', u'the', u'election', u'of', u'Harvey', u'milk', u'to', u'the', u'Board', u'of', u'Supervisors', u',', u'and', u'he', u'assassination', u',', u'along', u'with', u'that', u'of', u'Mayor', u'George', u'Moscone', u',', u'in', u'1978', u'.'], u'pos': [u'IN', u'DT', u'NNS', u',', u'DT', u'NN', u'VBD', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'NN', u',', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'IN', u'DT', u'JJ', u'JJ', u'NN', u',', u'DT', u'NN', u'IN', u'NNP', u'NN', u'TO', u'DT', u'NNP', u'IN', u'NNPS', u',', u'CC', u'PRP$', u'NN', u',', u'IN', u'IN', u'DT', u'IN', u'NNP', u'NNP', u'NNP', u',', u'IN', u'CD', u'.'], u'char_offsets': [[10493, 10495], [10496, 10499], [10500, 10505], [10505, 10506], [10507, 10510], [10511, 10515], [10516, 10522], [10523, 10524], [10525, 10531], [10532, 10534], [10535, 10538], [10539, 10542], [10543, 10549], [10550, 10558], [10558, 10559], [10560, 10564], [10565, 10568], [10569, 10578], [10579, 10581], [10582, 10585], [10586, 10592], [10593, 10595], [10596, 10598], [10599, 10604], [10605, 10608], [10609, 10616], [10616, 10617], [10618, 10621], [10622, 10630], [10631, 10633], [10634, 10640], [10641, 10645], [10646, 10648], [10649, 10652], [10653, 10658], [10659, 10661], [10662, 10673], [10673, 10674], [10675, 10678], [10679, 10682], [10683, 10696], [10696, 10697], [10698, 10703], [10704, 10708], [10709, 10713], [10714, 10716], [10717, 10722], [10723, 10729], [10730, 10737], [10737, 10738], [10739, 10741], [10742, 10746], [10746, 10747]]}) 
answer: set([u'high', u'individu', u'lesbian', u'percentag'])
candidate Sentence: (0.11283182352781296, {u'tokens': [u'A', u'popular', u'destination', u'for', u'gay', u'tourists', u',', u'the', u'city', u'hosts', u'San', u'Francisco', u'Pride', u',', u'an', u'annual', u'parade', u'and', u'festival', u'.'], u'lemmas': [u'a', u'popular', u'destination', u'for', u'gay', u'tourist', u',', u'the', u'city', u'host', u'San', u'Francisco', u'pride', u',', u'a', u'annual', u'parade', u'and', u'festival', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'JJ', u'NNS', u',', u'DT', u'NN', u'NNS', u'NNP', u'NNP', u'NN', u',', u'DT', u'JJ', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[25332, 25333], [25334, 25341], [25342, 25353], [25354, 25357], [25358, 25361], [25362, 25370], [25370, 25371], [25372, 25375], [25376, 25380], [25381, 25386], [25387, 25390], [25391, 25400], [25401, 25406], [25406, 25407], [25408, 25410], [25411, 25417], [25418, 25424], [25425, 25428], [25429, 25437], [25437, 25438]]}) 
answer: set([u'high', u'individu', u'lesbian', u'percentag'])
candidate Sentence: (0.098076753318309784, {u'tokens': [u'The', u'city', u"'s", u'large', u'gay', u'population', u'has', u'created', u'and', u'sustained', u'a', u'politically', u'and', u'culturally', u'active', u'community', u'over', u'many', u'decades', u',', u'developing', u'a', u'powerful', u'presence', u'in', u'San', u'Francisco', u"'s", u'civic', u'life', u'.'], u'lemmas': [u'the', u'city', u"'s", u'large', u'gay', u'population', u'have', u'create', u'and', u'sustain', u'a', u'politically', u'and', u'culturally', u'active', u'community', u'over', u'many', u'decade', u',', u'develop', u'a', u'powerful', u'presence', u'in', u'San', u'Francisco', u"'s", u'civic', u'life', u'.'], u'pos': [u'DT', u'NN', u'POS', u'JJ', u'JJ', u'NN', u'VBZ', u'VBN', u'CC', u'VBN', u'DT', u'RB', u'CC', u'RB', u'JJ', u'NN', u'IN', u'JJ', u'NNS', u',', u'VBG', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'POS', u'JJ', u'NN', u'.'], u'char_offsets': [[25147, 25150], [25151, 25155], [25155, 25157], [25158, 25163], [25164, 25167], [25168, 25178], [25179, 25182], [25183, 25190], [25191, 25194], [25195, 25204], [25205, 25206], [25207, 25218], [25219, 25222], [25223, 25233], [25234, 25240], [25241, 25250], [25251, 25255], [25256, 25260], [25261, 25268], [25268, 25269], [25270, 25280], [25281, 25282], [25283, 25291], [25292, 25300], [25301, 25303], [25304, 25307], [25308, 25317], [25317, 25319], [25320, 25325], [25326, 25330], [25330, 25331]]}) 
answer: set([u'high', u'individu', u'lesbian', u'percentag'])
candidate Sentence: (0.085039786994457245, {u'tokens': [u'Historically', u'known', u'as', u'Eureka', u'Valley', u',', u'the', u'area', u'now', u'popularly', u'called', u'the', u'Castro', u'is', u'the', u'center', u'of', u'gay', u'life', u'in', u'the', u'city', u'.'], u'lemmas': [u'Historically', u'know', u'as', u'Eureka', u'Valley', u',', u'the', u'area', u'now', u'popularly', u'call', u'the', u'Castro', u'be', u'the', u'center', u'of', u'gay', u'life', u'in', u'the', u'city', u'.'], u'pos': [u'NNP', u'VBN', u'IN', u'NNP', u'NNP', u',', u'DT', u'NN', u'RB', u'RB', u'VBN', u'DT', u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'JJ', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[17905, 17917], [17918, 17923], [17924, 17926], [17927, 17933], [17934, 17940], [17940, 17941], [17942, 17945], [17946, 17950], [17951, 17954], [17955, 17964], [17965, 17971], [17972, 17975], [17976, 17982], [17983, 17985], [17986, 17989], [17990, 17996], [17997, 17999], [18000, 18003], [18004, 18008], [18009, 18011], [18012, 18015], [18016, 18020], [18020, 18021]]}) 
answer: set([u'high', u'individu', u'lesbian', u'percentag'])
candidate Sentence: (0.08409930020570755, {u'tokens': [u'Native', u'San', u'Franciscans', u'form', u'a', u'relatively', u'small', u'percentage', u'of', u'the', u'city', u"'s", u'population', u':', u'only', u'37.7', u'%', u'of', u'its', u'residents', u'were', u'born', u'in', u'California', u',', u'while', u'25.2', u'%', u'were', u'born', u'in', u'a', u'different', u'U.S.', u'state', u'.'], u'lemmas': [u'native', u'San', u'Franciscans', u'form', u'a', u'relatively', u'small', u'percentage', u'of', u'the', u'city', u"'s", u'population', u':', u'only', u'37.7', u'%', u'of', u'its', u'resident', u'be', u'bear', u'in', u'California', u',', u'while', u'25.2', u'%', u'be', u'bear', u'in', u'a', u'different', u'U.S.', u'state', u'.'], u'pos': [u'JJ', u'NNP', u'NNP', u'VB', u'DT', u'RB', u'JJ', u'NN', u'IN', u'DT', u'NN', u'POS', u'NN', u':', u'RB', u'CD', u'NN', u'IN', u'PRP$', u'NNS', u'VBD', u'VBN', u'IN', u'NNP', u',', u'IN', u'CD', u'NN', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NNP', u'NN', u'.'], u'char_offsets': [[40290, 40296], [40297, 40300], [40301, 40312], [40313, 40317], [40318, 40319], [40320, 40330], [40331, 40336], [40337, 40347], [40348, 40350], [40351, 40354], [40355, 40359], [40359, 40361], [40362, 40372], [40372, 40373], [40374, 40378], [40379, 40383], [40383, 40384], [40385, 40387], [40388, 40391], [40392, 40401], [40402, 40406], [40407, 40411], [40412, 40414], [40415, 40425], [40425, 40426], [40427, 40432], [40433, 40437], [40437, 40438], [40439, 40443], [40444, 40448], [40449, 40451], [40452, 40453], [40454, 40463], [40464, 40468], [40469, 40474], [40474, 40475]]}) 
answer: set([u'high', u'individu', u'lesbian', u'gay'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Does San Francisco have a high percentage of gay and lesbian individuals?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes, according to the 2005 American Community Survey, San Francisco has the highest percentage of gay and lesbian individuals of any of the 50 largest U.S. cities, at 15.4%.
Difficulty = easy
Article_Title = San_Francisco
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set3/a8.txt

No
_____________________________ test_yesno[param272] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb36488>, (<src.tfidf.TF_IDF object at 0x1069b5450>, set(['francisco', 'san', 'san_francisco'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb36488>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.45208191871643066, {u'tokens': [u'According', u'to', u'the', u'2005', u'American', u'Community', u'Survey', u',', u'San', u'Francisco', u'has', u'the', u'highest', u'percentage', u'of', u'gay', u'and', u'lesbian', u'individuals', u'of', u'any', u'of', u'the', u'50', u'largest', u'U.S.', u'cities', u',', u'at', u'15.4', u'%', u'.'], u'lemmas': [u'accord', u'to', u'the', u'2005', u'American', u'Community', u'Survey', u',', u'San', u'Francisco', u'have', u'the', u'highest', u'percentage', u'of', u'gay', u'and', u'lesbian', u'individual', u'of', u'any', u'of', u'the', u'50', u'largest', u'U.S.', u'city', u',', u'at', u'15.4', u'%', u'.'], u'pos': [u'VBG', u'TO', u'DT', u'CD', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'VBZ', u'DT', u'JJS', u'NN', u'IN', u'JJ', u'CC', u'JJ', u'NNS', u'IN', u'DT', u'IN', u'DT', u'CD', u'JJS', u'NNP', u'NNS', u',', u'IN', u'CD', u'NN', u'.'], u'char_offsets': [[40557, 40566], [40567, 40569], [40570, 40573], [40574, 40578], [40579, 40587], [40588, 40597], [40598, 40604], [40604, 40605], [40606, 40609], [40610, 40619], [40620, 40623], [40624, 40627], [40628, 40635], [40636, 40646], [40647, 40649], [40650, 40653], [40654, 40657], [40658, 40665], [40666, 40677], [40678, 40680], [40681, 40684], [40685, 40687], [40688, 40691], [40692, 40694], [40695, 40702], [40703, 40707], [40708, 40714], [40714, 40715], [40716, 40718], [40719, 40723], [40723, 40724], [40724, 40725]]}) 
answer: set([u'high'])
candidate Sentence: (0.16250663995742798, {u'tokens': [u'The', u'current', u'percentage', u'of', u'African', u'Americans', u'in', u'San', u'Francisco', u'is', u'similar', u'to', u'that', u'of', u'the', u'state', u'of', u'California', u';', u'conversely', u',', u'the', u'city', u"'s", u'percentage', u'of', u'Hispanic', u'residents', u'is', u'less', u'than', u'half', u'of', u'that', u'of', u'the', u'state', u'.'], u'lemmas': [u'the', u'current', u'percentage', u'of', u'african', u'Americans', u'in', u'San', u'Francisco', u'be', u'similar', u'to', u'that', u'of', u'the', u'state', u'of', u'California', u';', u'conversely', u',', u'the', u'city', u"'s", u'percentage', u'of', u'hispanic', u'resident', u'be', u'less', u'than', u'half', u'of', u'that', u'of', u'the', u'state', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'JJ', u'NNPS', u'IN', u'NNP', u'NNP', u'VBZ', u'JJ', u'TO', u'DT', u'IN', u'DT', u'NN', u'IN', u'NNP', u':', u'RB', u',', u'DT', u'NN', u'POS', u'NN', u'IN', u'JJ', u'NNS', u'VBZ', u'JJR', u'IN', u'NN', u'IN', u'DT', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[40085, 40088], [40089, 40096], [40097, 40107], [40108, 40110], [40111, 40118], [40119, 40128], [40129, 40131], [40132, 40135], [40136, 40145], [40146, 40148], [40149, 40156], [40157, 40159], [40160, 40164], [40165, 40167], [40168, 40171], [40172, 40177], [40178, 40180], [40181, 40191], [40191, 40192], [40194, 40204], [40204, 40205], [40206, 40209], [40210, 40214], [40214, 40216], [40217, 40227], [40228, 40230], [40231, 40239], [40240, 40249], [40250, 40252], [40253, 40257], [40258, 40262], [40263, 40267], [40268, 40270], [40271, 40275], [40276, 40278], [40279, 40282], [40283, 40288], [40288, 40289]]}) 
answer: set([u'high', u'individu', u'lesbian', u'gay'])
candidate Sentence: (0.12906543910503387, {u'tokens': [u'San', u'Francisco', u'also', u'has', u'the', u'highest', u'percentage', u'of', u'same-sex', u'households', u'of', u'any', u'American', u'county', u',', u'with', u'the', u'Bay', u'Area', u'having', u'a', u'higher', u'concentration', u'than', u'any', u'other', u'metropolitan', u'area', u'.'], u'lemmas': [u'San', u'Francisco', u'also', u'have', u'the', u'highest', u'percentage', u'of', u'same-sex', u'household', u'of', u'any', u'american', u'county', u',', u'with', u'the', u'Bay', u'Area', u'have', u'a', u'higher', u'concentration', u'than', u'any', u'other', u'metropolitan', u'area', u'.'], u'pos': [u'NNP', u'NNP', u'RB', u'VBZ', u'DT', u'JJS', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u',', u'IN', u'DT', u'NNP', u'NNP', u'VBG', u'DT', u'JJR', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[40729, 40732], [40733, 40742], [40743, 40747], [40748, 40751], [40752, 40755], [40756, 40763], [40764, 40774], [40775, 40777], [40778, 40786], [40787, 40797], [40798, 40800], [40801, 40804], [40805, 40813], [40814, 40820], [40820, 40821], [40822, 40826], [40827, 40830], [40831, 40834], [40835, 40839], [40840, 40846], [40847, 40848], [40849, 40855], [40856, 40869], [40870, 40874], [40875, 40878], [40879, 40884], [40885, 40897], [40898, 40902], [40902, 40903]]}) 
answer: set([u'high', u'individu', u'lesbian', u'gay'])
candidate Sentence: (0.12625987827777863, {u'tokens': [u'Upon', u'the', u'death', u'or', u'resignation', u'of', u'mayor', u',', u'the', u'President', u'of', u'the', u'Board', u'of', u'Supervisors', u'assumes', u'that', u'office', u',', u'as', u'did', u'Dianne', u'Feinstein', u'after', u'the', u'assassination', u'of', u'George', u'Moscone', u'in', u'1978', u'.'], u'lemmas': [u'upon', u'the', u'death', u'or', u'resignation', u'of', u'mayor', u',', u'the', u'President', u'of', u'the', u'Board', u'of', u'Supervisors', u'assume', u'that', u'office', u',', u'as', u'do', u'Dianne', u'Feinstein', u'after', u'the', u'assassination', u'of', u'George', u'Moscone', u'in', u'1978', u'.'], u'pos': [u'IN', u'DT', u'NN', u'CC', u'NN', u'IN', u'NN', u',', u'DT', u'NNP', u'IN', u'DT', u'NNP', u'IN', u'NNPS', u'VBZ', u'IN', u'NN', u',', u'IN', u'VBD', u'NNP', u'NNP', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[37251, 37255], [37256, 37259], [37260, 37265], [37266, 37268], [37269, 37280], [37281, 37283], [37284, 37289], [37289, 37290], [37291, 37294], [37295, 37304], [37305, 37307], [37308, 37311], [37312, 37317], [37318, 37320], [37321, 37332], [37333, 37340], [37341, 37345], [37346, 37352], [37352, 37353], [37354, 37356], [37357, 37360], [37361, 37367], [37368, 37377], [37378, 37383], [37384, 37387], [37388, 37401], [37402, 37404], [37405, 37411], [37412, 37419], [37420, 37422], [37423, 37427], [37427, 37428]]}) 
answer: set([u'high', u'individu', u'percentag', u'gay', u'lesbian'])
candidate Sentence: (0.11994434893131256, {u'tokens': [u'San', u'Francisco', u'is', u'characterized', u'by', u'a', u'high', u'standard', u'of', u'living', u'.'], u'lemmas': [u'San', u'Francisco', u'be', u'characterize', u'by', u'a', u'high', u'standard', u'of', u'living', u'.'], u'pos': [u'NNP', u'NNP', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[22097, 22100], [22101, 22110], [22111, 22113], [22114, 22127], [22128, 22130], [22131, 22132], [22133, 22137], [22138, 22146], [22147, 22149], [22150, 22156], [22156, 22157]]}) 
answer: set([u'individu', u'gay', u'percentag', u'lesbian'])
candidate Sentence: (0.11938505619764328, {u'tokens': [u'In', u'the', u'1970s', u',', u'the', u'city', u'became', u'a', u'center', u'of', u'the', u'gay', u'rights', u'movement', u',', u'with', u'the', u'emergence', u'of', u'The', u'Castro', u'as', u'an', u'urban', u'gay', u'village', u',', u'the', u'election', u'of', u'Harvey', u'Milk', u'to', u'the', u'Board', u'of', u'Supervisors', u',', u'and', u'his', u'assassination', u',', u'along', u'with', u'that', u'of', u'Mayor', u'George', u'Moscone', u',', u'in', u'1978', u'.'], u'lemmas': [u'in', u'the', u'1970', u',', u'the', u'city', u'become', u'a', u'center', u'of', u'the', u'gay', u'rights', u'movement', u',', u'with', u'the', u'emergence', u'of', u'the', u'Castro', u'as', u'a', u'urban', u'gay', u'village', u',', u'the', u'election', u'of', u'Harvey', u'milk', u'to', u'the', u'Board', u'of', u'Supervisors', u',', u'and', u'he', u'assassination', u',', u'along', u'with', u'that', u'of', u'Mayor', u'George', u'Moscone', u',', u'in', u'1978', u'.'], u'pos': [u'IN', u'DT', u'NNS', u',', u'DT', u'NN', u'VBD', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'NN', u',', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'IN', u'DT', u'JJ', u'JJ', u'NN', u',', u'DT', u'NN', u'IN', u'NNP', u'NN', u'TO', u'DT', u'NNP', u'IN', u'NNPS', u',', u'CC', u'PRP$', u'NN', u',', u'IN', u'IN', u'DT', u'IN', u'NNP', u'NNP', u'NNP', u',', u'IN', u'CD', u'.'], u'char_offsets': [[10493, 10495], [10496, 10499], [10500, 10505], [10505, 10506], [10507, 10510], [10511, 10515], [10516, 10522], [10523, 10524], [10525, 10531], [10532, 10534], [10535, 10538], [10539, 10542], [10543, 10549], [10550, 10558], [10558, 10559], [10560, 10564], [10565, 10568], [10569, 10578], [10579, 10581], [10582, 10585], [10586, 10592], [10593, 10595], [10596, 10598], [10599, 10604], [10605, 10608], [10609, 10616], [10616, 10617], [10618, 10621], [10622, 10630], [10631, 10633], [10634, 10640], [10641, 10645], [10646, 10648], [10649, 10652], [10653, 10658], [10659, 10661], [10662, 10673], [10673, 10674], [10675, 10678], [10679, 10682], [10683, 10696], [10696, 10697], [10698, 10703], [10704, 10708], [10709, 10713], [10714, 10716], [10717, 10722], [10723, 10729], [10730, 10737], [10737, 10738], [10739, 10741], [10742, 10746], [10746, 10747]]}) 
answer: set([u'high', u'individu', u'lesbian', u'percentag'])
candidate Sentence: (0.11283182352781296, {u'tokens': [u'A', u'popular', u'destination', u'for', u'gay', u'tourists', u',', u'the', u'city', u'hosts', u'San', u'Francisco', u'Pride', u',', u'an', u'annual', u'parade', u'and', u'festival', u'.'], u'lemmas': [u'a', u'popular', u'destination', u'for', u'gay', u'tourist', u',', u'the', u'city', u'host', u'San', u'Francisco', u'pride', u',', u'a', u'annual', u'parade', u'and', u'festival', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'JJ', u'NNS', u',', u'DT', u'NN', u'NNS', u'NNP', u'NNP', u'NN', u',', u'DT', u'JJ', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[25332, 25333], [25334, 25341], [25342, 25353], [25354, 25357], [25358, 25361], [25362, 25370], [25370, 25371], [25372, 25375], [25376, 25380], [25381, 25386], [25387, 25390], [25391, 25400], [25401, 25406], [25406, 25407], [25408, 25410], [25411, 25417], [25418, 25424], [25425, 25428], [25429, 25437], [25437, 25438]]}) 
answer: set([u'high', u'individu', u'lesbian', u'percentag'])
candidate Sentence: (0.098076753318309784, {u'tokens': [u'The', u'city', u"'s", u'large', u'gay', u'population', u'has', u'created', u'and', u'sustained', u'a', u'politically', u'and', u'culturally', u'active', u'community', u'over', u'many', u'decades', u',', u'developing', u'a', u'powerful', u'presence', u'in', u'San', u'Francisco', u"'s", u'civic', u'life', u'.'], u'lemmas': [u'the', u'city', u"'s", u'large', u'gay', u'population', u'have', u'create', u'and', u'sustain', u'a', u'politically', u'and', u'culturally', u'active', u'community', u'over', u'many', u'decade', u',', u'develop', u'a', u'powerful', u'presence', u'in', u'San', u'Francisco', u"'s", u'civic', u'life', u'.'], u'pos': [u'DT', u'NN', u'POS', u'JJ', u'JJ', u'NN', u'VBZ', u'VBN', u'CC', u'VBN', u'DT', u'RB', u'CC', u'RB', u'JJ', u'NN', u'IN', u'JJ', u'NNS', u',', u'VBG', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'POS', u'JJ', u'NN', u'.'], u'char_offsets': [[25147, 25150], [25151, 25155], [25155, 25157], [25158, 25163], [25164, 25167], [25168, 25178], [25179, 25182], [25183, 25190], [25191, 25194], [25195, 25204], [25205, 25206], [25207, 25218], [25219, 25222], [25223, 25233], [25234, 25240], [25241, 25250], [25251, 25255], [25256, 25260], [25261, 25268], [25268, 25269], [25270, 25280], [25281, 25282], [25283, 25291], [25292, 25300], [25301, 25303], [25304, 25307], [25308, 25317], [25317, 25319], [25320, 25325], [25326, 25330], [25330, 25331]]}) 
answer: set([u'high', u'individu', u'lesbian', u'percentag'])
candidate Sentence: (0.085039786994457245, {u'tokens': [u'Historically', u'known', u'as', u'Eureka', u'Valley', u',', u'the', u'area', u'now', u'popularly', u'called', u'the', u'Castro', u'is', u'the', u'center', u'of', u'gay', u'life', u'in', u'the', u'city', u'.'], u'lemmas': [u'Historically', u'know', u'as', u'Eureka', u'Valley', u',', u'the', u'area', u'now', u'popularly', u'call', u'the', u'Castro', u'be', u'the', u'center', u'of', u'gay', u'life', u'in', u'the', u'city', u'.'], u'pos': [u'NNP', u'VBN', u'IN', u'NNP', u'NNP', u',', u'DT', u'NN', u'RB', u'RB', u'VBN', u'DT', u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'JJ', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[17905, 17917], [17918, 17923], [17924, 17926], [17927, 17933], [17934, 17940], [17940, 17941], [17942, 17945], [17946, 17950], [17951, 17954], [17955, 17964], [17965, 17971], [17972, 17975], [17976, 17982], [17983, 17985], [17986, 17989], [17990, 17996], [17997, 17999], [18000, 18003], [18004, 18008], [18009, 18011], [18012, 18015], [18016, 18020], [18020, 18021]]}) 
answer: set([u'high', u'individu', u'lesbian', u'percentag'])
candidate Sentence: (0.08409930020570755, {u'tokens': [u'Native', u'San', u'Franciscans', u'form', u'a', u'relatively', u'small', u'percentage', u'of', u'the', u'city', u"'s", u'population', u':', u'only', u'37.7', u'%', u'of', u'its', u'residents', u'were', u'born', u'in', u'California', u',', u'while', u'25.2', u'%', u'were', u'born', u'in', u'a', u'different', u'U.S.', u'state', u'.'], u'lemmas': [u'native', u'San', u'Franciscans', u'form', u'a', u'relatively', u'small', u'percentage', u'of', u'the', u'city', u"'s", u'population', u':', u'only', u'37.7', u'%', u'of', u'its', u'resident', u'be', u'bear', u'in', u'California', u',', u'while', u'25.2', u'%', u'be', u'bear', u'in', u'a', u'different', u'U.S.', u'state', u'.'], u'pos': [u'JJ', u'NNP', u'NNP', u'VB', u'DT', u'RB', u'JJ', u'NN', u'IN', u'DT', u'NN', u'POS', u'NN', u':', u'RB', u'CD', u'NN', u'IN', u'PRP$', u'NNS', u'VBD', u'VBN', u'IN', u'NNP', u',', u'IN', u'CD', u'NN', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NNP', u'NN', u'.'], u'char_offsets': [[40290, 40296], [40297, 40300], [40301, 40312], [40313, 40317], [40318, 40319], [40320, 40330], [40331, 40336], [40337, 40347], [40348, 40350], [40351, 40354], [40355, 40359], [40359, 40361], [40362, 40372], [40372, 40373], [40374, 40378], [40379, 40383], [40383, 40384], [40385, 40387], [40388, 40391], [40392, 40401], [40402, 40406], [40407, 40411], [40412, 40414], [40415, 40425], [40425, 40426], [40427, 40432], [40433, 40437], [40437, 40438], [40439, 40443], [40444, 40448], [40449, 40451], [40452, 40453], [40454, 40463], [40464, 40468], [40469, 40474], [40474, 40475]]}) 
answer: set([u'high', u'individu', u'lesbian', u'gay'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Does San Francisco have a high percentage of gay and lesbian individuals?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = San_Francisco
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set3/a8.txt

No
----------------------------- Captured stderr call -----------------------------
INFO:CoreNLP_JavaServer: INPUT: 700 documents, 1411071 characters, 264832 tokens, 2015.8 char/doc, 378.3 tok/doc RATES: 17.772 doc/sec, 6723.8 tok/sec

_____________________________ test_yesno[param280] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb366c8>, (<src.tfidf.TF_IDF object at 0x1080441d0>, set(['language', 'swahili', 'swahili_language'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes, Swahili has diphthongs. (Typo)')
E            +    where 'Yes, Swahili has diphthongs. (Typo)' = <src.question_processing.Question_parser instance at 0x10cb366c8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.43506705760955811, {u'tokens': [u'Education', u'for', u'all', u'in', u'whose', u'language', u'?'], u'lemmas': [u'education', u'for', u'all', u'in', u'whose', u'language', u'?'], u'pos': [u'NN', u'IN', u'DT', u'IN', u'WP$', u'NN', u'.'], u'char_offsets': [[29558, 29567], [29568, 29571], [29572, 29575], [29577, 29579], [29580, 29585], [29586, 29594], [29594, 29595]]}) 
answer: set([u'dipthong'])
candidate Sentence: (0.17212721705436707, {u'tokens': [u'However', u',', u'elsewhere', u'this', u'does', u"n't", u'happen', u':', u'ndizi', u'``', u'banana', u"''", u'has', u'two', u'syllables', u',', u',', u'as', u'does', u'nenda', u'-LRB-', u'not', u'-RRB-', u'``', u'go', u"''", u'.'], u'lemmas': [u'however', u',', u'elsewhere', u'this', u'do', u'not', u'happen', u':', u'ndizus', u'``', u'banana', u"''", u'have', u'two', u'syllable', u',', u',', u'as', u'do', u'nenda', u'-lrb-', u'not', u'-rrb-', u'``', u'go', u"''", u'.'], u'pos': [u'RB', u',', u'RB', u'DT', u'VBZ', u'RB', u'VB', u':', u'NNS', u'``', u'NN', u"''", u'VBZ', u'CD', u'NNS', u',', u',', u'IN', u'VBZ', u'NN', u'-LRB-', u'RB', u'-RRB-', u'``', u'VB', u"''", u'.'], u'char_offsets': [[6430, 6437], [6437, 6438], [6439, 6448], [6449, 6453], [6454, 6458], [6458, 6461], [6462, 6468], [6468, 6469], [6470, 6475], [6476, 6477], [6477, 6483], [6483, 6484], [6485, 6488], [6489, 6492], [6493, 6502], [6502, 6503], [6505, 6506], [6507, 6509], [6510, 6514], [6515, 6520], [6523, 6524], [6524, 6527], [6529, 6530], [6531, 6532], [6532, 6534], [6534, 6535], [6535, 6536]]}) 
answer: set([u'dipthong'])
candidate Sentence: (0.16226218640804291, {u'tokens': [u'When', u'the', u'noun', u'itself', u'does', u'not', u'make', u'clear', u'which', u'class', u'it', u'belongs', u'to', u',', u'its', u'concords', u'do', u'.'], u'lemmas': [u'when', u'the', u'noun', u'itself', u'do', u'not', u'make', u'clear', u'which', u'class', u'it', u'belong', u'to', u',', u'its', u'concord', u'do', u'.'], u'pos': [u'WRB', u'DT', u'NN', u'PRP', u'VBZ', u'RB', u'VB', u'JJ', u'WDT', u'NN', u'PRP', u'VBZ', u'TO', u',', u'PRP$', u'NNS', u'VBP', u'.'], u'char_offsets': [[8908, 8912], [8913, 8916], [8917, 8921], [8922, 8928], [8929, 8933], [8934, 8937], [8938, 8942], [8943, 8948], [8949, 8954], [8955, 8960], [8961, 8963], [8964, 8971], [8972, 8974], [8974, 8975], [8976, 8979], [8980, 8988], [8989, 8991], [8991, 8992]]}) 
answer: set([u'dipthong'])
candidate Sentence: (0.14757236838340759, {u'tokens': [u'The', u'British', u'did', u'not', u'do', u'so', u'in', u'neighbouring', u'Kenya', u',', u'even', u'though', u'they', u'made', u'moves', u'in', u'that', u'direction', u'.'], u'lemmas': [u'the', u'British', u'do', u'not', u'do', u'so', u'in', u'neighbour', u'Kenya', u',', u'even', u'though', u'they', u'make', u'move', u'in', u'that', u'direction', u'.'], u'pos': [u'DT', u'NNP', u'VBD', u'RB', u'VB', u'RB', u'IN', u'VBG', u'NNP', u',', u'RB', u'IN', u'PRP', u'VBD', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[26378, 26381], [26382, 26389], [26390, 26393], [26394, 26397], [26398, 26400], [26401, 26403], [26404, 26406], [26407, 26419], [26420, 26425], [26425, 26426], [26427, 26431], [26432, 26438], [26439, 26443], [26444, 26448], [26449, 26454], [26455, 26457], [26458, 26462], [26463, 26472], [26472, 26473]]}) 
answer: set([u'dipthong'])
candidate Sentence: (0.13057674467563629, {u'tokens': [u'Standard', u'Swahili', u'has', u'five', u'vowel', u'phonemes', u':', u',', u',', u',', u',', u'and', u'.'], u'lemmas': [u'Standard', u'Swahili', u'have', u'five', u'vowel', u'phoneme', u':', u',', u',', u',', u',', u'and', u'.'], u'pos': [u'NNP', u'NNP', u'VBZ', u'CD', u'NN', u'NNS', u':', u',', u',', u',', u',', u'CC', u'.'], u'char_offsets': [[5479, 5487], [5488, 5495], [5496, 5499], [5500, 5504], [5505, 5510], [5511, 5519], [5519, 5520], [5522, 5523], [5525, 5526], [5528, 5529], [5531, 5532], [5533, 5536], [5538, 5539]]}) 
answer: set([u'dipthong'])
candidate Sentence: (0.12812960147857666, {u'tokens': [u'This', u'is', u'often', u'called', u'the', u'`', u'tree', u"'", u'class', u',', u'because', u'mti', u',', u'miti', u'``', u'tree', u'-LRB-', u's', u'-RRB-', u"''", u'is', u'the', u'prototypical', u'example', u',', u'but', u'that', u'does', u"n't", u'do', u'it', u'justice', u'.'], u'lemmas': [u'this', u'be', u'often', u'call', u'the', u'`', u'tree', u"'", u'class', u',', u'because', u'mtus', u',', u'mitus', u'``', u'tree', u'-lrb-', u's', u'-rrb-', u"''", u'be', u'the', u'prototypical', u'example', u',', u'but', u'that', u'do', u'not', u'do', u'it', u'justice', u'.'], u'pos': [u'DT', u'VBZ', u'RB', u'VBN', u'DT', u'``', u'NN', u"''", u'NN', u',', u'IN', u'NNS', u',', u'NNS', u'``', u'NN', u'-LRB-', u'NNS', u'-RRB-', u"''", u'VBZ', u'DT', u'JJ', u'NN', u',', u'CC', u'IN', u'VBZ', u'RB', u'VB', u'PRP', u'NN', u'.'], u'char_offsets': [[12079, 12083], [12084, 12086], [12087, 12092], [12093, 12099], [12100, 12103], [12104, 12105], [12105, 12109], [12109, 12110], [12111, 12116], [12116, 12117], [12118, 12125], [12126, 12129], [12129, 12130], [12131, 12135], [12136, 12137], [12137, 12141], [12141, 12142], [12142, 12143], [12143, 12144], [12144, 12145], [12146, 12148], [12149, 12152], [12153, 12165], [12166, 12173], [12173, 12174], [12175, 12178], [12179, 12183], [12184, 12188], [12188, 12191], [12192, 12194], [12195, 12197], [12198, 12205], [12205, 12206]]}) 
answer: set([u'dipthong'])
candidate Sentence: (0.093603543937206268, {u'tokens': [u'*', u'Swahili', u'orthography', u'does', u'not', u'distinguish', u'aspirate', u'from', u'tenuis', u'consonants', u'.'], u'lemmas': [u'*', u'swahilus', u'orthography', u'do', u'not', u'distinguish', u'aspirate', u'from', u'tenuis', u'consonant', u'.'], u'pos': [u'SYM', u'NNS', u'NN', u'VBZ', u'RB', u'VB', u'VB', u'IN', u'FW', u'NNS', u'.'], u'char_offsets': [[6666, 6667], [6668, 6675], [6676, 6687], [6688, 6692], [6693, 6696], [6697, 6708], [6709, 6717], [6718, 6722], [6723, 6729], [6730, 6740], [6740, 6741]]}) 
answer: set([u'dipthong'])
candidate Sentence: (0.092780403792858124, {u'tokens': [u'For', u'the', u'most', u'part', u',', u'this', u'process', u'did', u'not', u'lead', u'to', u'genuine', u'colonization', u'.'], u'lemmas': [u'for', u'the', u'most', u'part', u',', u'this', u'process', u'do', u'not', u'lead', u'to', u'genuine', u'colonization', u'.'], u'pos': [u'IN', u'DT', u'JJS', u'NN', u',', u'DT', u'NN', u'VBD', u'RB', u'VB', u'TO', u'JJ', u'NN', u'.'], u'char_offsets': [[25892, 25895], [25896, 25899], [25900, 25904], [25905, 25909], [25909, 25910], [25911, 25915], [25916, 25923], [25924, 25927], [25928, 25931], [25932, 25936], [25937, 25939], [25940, 25947], [25948, 25960], [25960, 25961]]}) 
answer: set([u'dipthong'])
candidate Sentence: (0.083252690732479095, {u'tokens': [u'Swahili', u'has', u'no', u'diphthongs', u';', u'in', u'vowel', u'combinations', u',', u'each', u'letter', u'is', u'pronounced', u'separately', u'.'], u'lemmas': [u'Swahili', u'have', u'no', u'diphthong', u';', u'in', u'vowel', u'combination', u',', u'each', u'letter', u'be', u'pronounced', u'separately', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'NNS', u':', u'IN', u'NN', u'NNS', u',', u'DT', u'NN', u'VBZ', u'JJ', u'RB', u'.'], u'char_offsets': [[6019, 6026], [6027, 6030], [6031, 6033], [6034, 6044], [6044, 6045], [6046, 6048], [6049, 6054], [6055, 6067], [6067, 6068], [6069, 6073], [6074, 6080], [6081, 6083], [6084, 6094], [6095, 6105], [6105, 6106]]}) 
answer: set([u'dipthong'])
candidate Sentence: (0.081109941005706787, {u'tokens': [u'Many', u'of', u'the', u'world', u"'s", u'institutions', u'have', u'responded', u'to', u'Swahili', u"'s", u'growing', u'prominence', u'.'], u'lemmas': [u'many', u'of', u'the', u'world', u"'s", u'institution', u'have', u'respond', u'to', u'Swahili', u"'s", u'grow', u'prominence', u'.'], u'pos': [u'JJ', u'IN', u'DT', u'NN', u'POS', u'NNS', u'VBP', u'VBN', u'TO', u'NNP', u'POS', u'VBG', u'NN', u'.'], u'char_offsets': [[29096, 29100], [29101, 29103], [29104, 29107], [29108, 29113], [29113, 29115], [29116, 29128], [29129, 29133], [29134, 29143], [29144, 29146], [29147, 29154], [29154, 29156], [29157, 29164], [29165, 29175], [29175, 29176]]}) 
answer: set([u'dipthong'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Does Swahili have dipthongs?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes, Swahili has diphthongs. (Typo)
Difficulty = easy
Article_Title = Swahili_language
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set5/a4.txt

No
_____________________________ test_yesno[param283] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb36878>, (<src.tfidf.TF_IDF object at 0x1080441d0>, set(['language', 'swahili', 'swahili_language'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes, Uganda made Swahili a required subject in primary schools.')
E            +    where 'Yes, Uganda made Swahili a required subject in primary schools.' = <src.question_processing.Question_parser instance at 0x10cb36878>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.43180447816848755, {u'tokens': [u'The', u'neighboring', u'nation', u'of', u'Uganda', u'made', u'Swahili', u'a', u'required', u'subject', u'in', u'primary', u'schools', u'in', u'1992although', u'this', u'mandate', u'has', u'not', u'been', u'well', u'implementedand', u'declared', u'it', u'an', u'official', u'language', u'in', u'2005', u'in', u'preparation', u'for', u'the', u'East', u'African', u'Federation', u'.'], u'lemmas': [u'the', u'neighboring', u'nation', u'of', u'Uganda', u'make', u'Swahili', u'a', u'require', u'subject', u'in', u'primary', u'school', u'in', u'1992although', u'this', u'mandate', u'have', u'not', u'be', u'well', u'implementedand', u'declare', u'it', u'a', u'official', u'language', u'in', u'2005', u'in', u'preparation', u'for', u'the', u'east', u'african', u'Federation', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'NNP', u'VBD', u'NNP', u'DT', u'VBN', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'JJ', u'DT', u'NN', u'VBZ', u'RB', u'VBN', u'RB', u'JJ', u'VBD', u'PRP', u'DT', u'JJ', u'NN', u'IN', u'CD', u'IN', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'NNP', u'.'], u'char_offsets': [[1240, 1243], [1244, 1255], [1256, 1262], [1263, 1265], [1266, 1272], [1273, 1277], [1278, 1285], [1286, 1287], [1288, 1296], [1297, 1304], [1305, 1307], [1308, 1315], [1316, 1323], [1324, 1326], [1327, 1339], [1340, 1344], [1345, 1352], [1353, 1356], [1357, 1360], [1361, 1365], [1366, 1370], [1371, 1385], [1386, 1394], [1395, 1397], [1398, 1400], [1401, 1409], [1410, 1418], [1419, 1421], [1422, 1426], [1427, 1429], [1430, 1441], [1442, 1445], [1446, 1449], [1450, 1454], [1455, 1462], [1463, 1473], [1473, 1474]]}) 
answer: set([u'swahilu'])
candidate Sentence: (0.24170054495334625, {u'tokens': [u'Education', u'for', u'all', u'in', u'whose', u'language', u'?'], u'lemmas': [u'education', u'for', u'all', u'in', u'whose', u'language', u'?'], u'pos': [u'NN', u'IN', u'DT', u'IN', u'WP$', u'NN', u'.'], u'char_offsets': [[29558, 29567], [29568, 29571], [29572, 29575], [29577, 29579], [29580, 29585], [29586, 29594], [29594, 29595]]}) 
answer: set([u'school', u'make', u'uganda', u'swahilu', u'primari', u'requir', u'subject'])
candidate Sentence: (0.19277186691761017, {u'tokens': [u'In', u'Uganda', u',', u'the', u'Baganda', u'generally', u'do', u"n't", u'speak', u'Swahili', u',', u'but', u'it', u'is', u'in', u'common', u'use', u'among', u'the', u'25', u'million', u'people', u'elsewhere', u'in', u'the', u'country', u',', u'and', u'is', u'currently', u'being', u'implemented', u'in', u'schools', u'nationwide', u'in', u'preparation', u'for', u'the', u'East', u'African', u'Community', u'.'], u'lemmas': [u'in', u'Uganda', u',', u'the', u'Baganda', u'generally', u'do', u'not', u'speak', u'Swahili', u',', u'but', u'it', u'be', u'in', u'common', u'use', u'among', u'the', u'25', u'million', u'people', u'elsewhere', u'in', u'the', u'country', u',', u'and', u'be', u'currently', u'be', u'implement', u'in', u'school', u'nationwide', u'in', u'preparation', u'for', u'the', u'east', u'African', u'Community', u'.'], u'pos': [u'IN', u'NNP', u',', u'DT', u'NNP', u'RB', u'VBP', u'RB', u'VB', u'NNP', u',', u'CC', u'PRP', u'VBZ', u'IN', u'JJ', u'NN', u'IN', u'DT', u'CD', u'CD', u'NNS', u'RB', u'IN', u'DT', u'NN', u',', u'CC', u'VBZ', u'RB', u'VBG', u'VBN', u'IN', u'NNS', u'JJ', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NNP', u'NNP', u'.'], u'char_offsets': [[28421, 28423], [28424, 28430], [28430, 28431], [28432, 28435], [28436, 28443], [28444, 28453], [28454, 28456], [28456, 28459], [28460, 28465], [28466, 28473], [28473, 28474], [28475, 28478], [28479, 28481], [28482, 28484], [28485, 28487], [28488, 28494], [28495, 28498], [28499, 28504], [28505, 28508], [28509, 28511], [28512, 28519], [28520, 28526], [28527, 28536], [28537, 28539], [28540, 28543], [28544, 28551], [28551, 28552], [28553, 28556], [28557, 28559], [28560, 28569], [28570, 28575], [28576, 28587], [28588, 28590], [28591, 28598], [28599, 28609], [28610, 28612], [28613, 28624], [28625, 28628], [28629, 28632], [28633, 28637], [28638, 28645], [28646, 28655], [28655, 28656]]}) 
answer: set([u'make', u'swahilu', u'primari', u'requir', u'subject'])
candidate Sentence: (0.16386735439300537, {u'tokens': [u'When', u'the', u'noun', u'itself', u'does', u'not', u'make', u'clear', u'which', u'class', u'it', u'belongs', u'to', u',', u'its', u'concords', u'do', u'.'], u'lemmas': [u'when', u'the', u'noun', u'itself', u'do', u'not', u'make', u'clear', u'which', u'class', u'it', u'belong', u'to', u',', u'its', u'concord', u'do', u'.'], u'pos': [u'WRB', u'DT', u'NN', u'PRP', u'VBZ', u'RB', u'VB', u'JJ', u'WDT', u'NN', u'PRP', u'VBZ', u'TO', u',', u'PRP$', u'NNS', u'VBP', u'.'], u'char_offsets': [[8908, 8912], [8913, 8916], [8917, 8921], [8922, 8928], [8929, 8933], [8934, 8937], [8938, 8942], [8943, 8948], [8949, 8954], [8955, 8960], [8961, 8963], [8964, 8971], [8972, 8974], [8974, 8975], [8976, 8979], [8980, 8988], [8989, 8991], [8991, 8992]]}) 
answer: set([u'school', u'uganda', u'swahilu', u'primari', u'requir', u'subject'])
candidate Sentence: (0.16231720149517059, {u'tokens': [u'Most', u'educated', u'Kenyans', u'are', u'able', u'to', u'communicate', u'fluently', u'in', u'Swahili', u',', u'since', u'it', u'is', u'a', u'compulsory', u'subject', u'in', u'school', u'from', u'grade', u'one', u'.'], u'lemmas': [u'most', u'educate', u'kenyan', u'be', u'able', u'to', u'communicate', u'fluently', u'in', u'Swahili', u',', u'since', u'it', u'be', u'a', u'compulsory', u'subject', u'in', u'school', u'from', u'grade', u'one', u'.'], u'pos': [u'JJS', u'VBN', u'NNS', u'VBP', u'JJ', u'TO', u'VB', u'RB', u'IN', u'NNP', u',', u'IN', u'PRP', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'NN', u'IN', u'NN', u'CD', u'.'], u'char_offsets': [[28028, 28032], [28033, 28041], [28042, 28049], [28050, 28053], [28054, 28058], [28059, 28061], [28062, 28073], [28075, 28083], [28084, 28086], [28087, 28094], [28094, 28095], [28096, 28101], [28102, 28104], [28105, 28107], [28108, 28109], [28110, 28120], [28121, 28128], [28129, 28131], [28132, 28138], [28139, 28143], [28144, 28149], [28150, 28153], [28153, 28154]]}) 
answer: set([u'make', u'swahilu', u'uganda', u'requir', u'primari'])
candidate Sentence: (0.1597314178943634, {u'tokens': [u'The', u'British', u'did', u'not', u'do', u'so', u'in', u'neighbouring', u'Kenya', u',', u'even', u'though', u'they', u'made', u'moves', u'in', u'that', u'direction', u'.'], u'lemmas': [u'the', u'British', u'do', u'not', u'do', u'so', u'in', u'neighbour', u'Kenya', u',', u'even', u'though', u'they', u'make', u'move', u'in', u'that', u'direction', u'.'], u'pos': [u'DT', u'NNP', u'VBD', u'RB', u'VB', u'RB', u'IN', u'VBG', u'NNP', u',', u'RB', u'IN', u'PRP', u'VBD', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[26378, 26381], [26382, 26389], [26390, 26393], [26394, 26397], [26398, 26400], [26401, 26403], [26404, 26406], [26407, 26419], [26420, 26425], [26425, 26426], [26427, 26431], [26432, 26438], [26439, 26443], [26444, 26448], [26449, 26454], [26455, 26457], [26458, 26462], [26463, 26472], [26472, 26473]]}) 
answer: set([u'school', u'uganda', u'swahilu', u'primari', u'requir', u'subject'])
candidate Sentence: (0.15489920973777771, {u'tokens': [u'The', u'end', u'result', u'is', u'a', u'semantic', u'net', u'that', u'made', u'sense', u'at', u'the', u'time', u',', u'and', u'often', u'still', u'does', u'make', u'sense', u',', u'but', u'which', u'can', u'be', u'confusing', u'to', u'a', u'non-speaker', u'.'], u'lemmas': [u'the', u'end', u'result', u'be', u'a', u'semantic', u'net', u'that', u'make', u'sense', u'at', u'the', u'time', u',', u'and', u'often', u'still', u'do', u'make', u'sense', u',', u'but', u'which', u'can', u'be', u'confuse', u'to', u'a', u'non-speaker', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBZ', u'DT', u'JJ', u'NN', u'WDT', u'VBD', u'NN', u'IN', u'DT', u'NN', u',', u'CC', u'RB', u'RB', u'VBZ', u'VB', u'NN', u',', u'CC', u'WDT', u'MD', u'VB', u'VBG', u'TO', u'DT', u'JJ', u'.'], u'char_offsets': [[10009, 10012], [10013, 10016], [10017, 10023], [10024, 10026], [10027, 10028], [10029, 10037], [10038, 10041], [10042, 10046], [10047, 10051], [10052, 10057], [10058, 10060], [10061, 10064], [10065, 10069], [10069, 10070], [10071, 10074], [10075, 10080], [10081, 10086], [10087, 10091], [10092, 10096], [10097, 10102], [10102, 10103], [10104, 10107], [10108, 10113], [10114, 10117], [10118, 10120], [10121, 10130], [10131, 10133], [10134, 10135], [10136, 10147], [10147, 10148]]}) 
answer: set([u'school', u'uganda', u'swahilu', u'primari', u'requir', u'subject'])
candidate Sentence: (0.13706207275390625, {u'tokens': [u'The', u'British', u'authorities', u',', u'with', u'the', u'collaboration', u'of', u'British', u'Christian', u'missionary', u'institutions', u'active', u'in', u'these', u'colonies', u',', u'increased', u'their', u'resolve', u'to', u'institute', u'Swahili', u'as', u'a', u'common', u'language', u'for', u'primary', u'education', u'and', u'low', u'level', u'governance', u'throughout', u'their', u'East', u'African', u'colonies', u'-LRB-', u'Uganda', u',', u'Tanganyika', u',', u'Zanzibar', u',', u'and', u'Kenya', u'-RRB-', u'.'], u'lemmas': [u'the', u'british', u'authority', u',', u'with', u'the', u'collaboration', u'of', u'british', u'christian', u'missionary', u'institution', u'active', u'in', u'these', u'colony', u',', u'increase', u'they', u'resolve', u'to', u'institute', u'Swahili', u'as', u'a', u'common', u'language', u'for', u'primary', u'education', u'and', u'low', u'level', u'governance', u'throughout', u'they', u'east', u'african', u'colony', u'-lrb-', u'Uganda', u',', u'Tanganyika', u',', u'Zanzibar', u',', u'and', u'Kenya', u'-rrb-', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u',', u'IN', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'JJ', u'NNS', u'JJ', u'IN', u'DT', u'NNS', u',', u'VBD', u'PRP$', u'NN', u'TO', u'VB', u'NNP', u'IN', u'DT', u'JJ', u'NN', u'IN', u'JJ', u'NN', u'CC', u'JJ', u'NN', u'NN', u'IN', u'PRP$', u'JJ', u'JJ', u'NNS', u'-LRB-', u'NNP', u',', u'NNP', u',', u'NNP', u',', u'CC', u'NNP', u'-RRB-', u'.'], u'char_offsets': [[26876, 26879], [26880, 26887], [26888, 26899], [26899, 26900], [26901, 26905], [26906, 26909], [26910, 26923], [26924, 26926], [26927, 26934], [26935, 26944], [26945, 26955], [26956, 26968], [26969, 26975], [26976, 26978], [26979, 26984], [26985, 26993], [26993, 26994], [26995, 27004], [27005, 27010], [27011, 27018], [27019, 27021], [27022, 27031], [27032, 27039], [27040, 27042], [27043, 27044], [27045, 27051], [27052, 27060], [27061, 27064], [27065, 27072], [27073, 27082], [27083, 27086], [27087, 27090], [27091, 27096], [27097, 27107], [27108, 27118], [27119, 27124], [27125, 27129], [27130, 27137], [27138, 27146], [27147, 27148], [27148, 27154], [27154, 27155], [27156, 27166], [27166, 27167], [27168, 27176], [27176, 27177], [27178, 27181], [27182, 27187], [27187, 27188], [27188, 27189]]}) 
answer: set([u'school', u'swahilu', u'make', u'requir', u'subject'])
candidate Sentence: (0.11412924528121948, {u'tokens': [u'Swahili', u'verbs', u'consist', u'of', u'a', u'root', u'and', u'a', u'number', u'of', u'affixes', u'-LRB-', u'mostly', u'prefixes', u'-RRB-', u'which', u'can', u'be', u'attached', u'to', u'express', u'grammatical', u'persons', u',', u'tense', u',', u'and', u'subordinate', u'clauses', u',', u'which', u'require', u'a', u'conjunction', u'in', u'languages', u'such', u'as', u'English', u'.'], u'lemmas': [u'swahili', u'verb', u'consist', u'of', u'a', u'root', u'and', u'a', u'number', u'of', u'affix', u'-lrb-', u'mostly', u'prefix', u'-rrb-', u'which', u'can', u'be', u'attach', u'to', u'express', u'grammatical', u'person', u',', u'tense', u',', u'and', u'subordinate', u'clause', u',', u'which', u'require', u'a', u'conjunction', u'in', u'language', u'such', u'as', u'English', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'IN', u'DT', u'NN', u'CC', u'DT', u'NN', u'IN', u'NNS', u'-LRB-', u'RB', u'NNS', u'-RRB-', u'WDT', u'MD', u'VB', u'VBN', u'TO', u'VB', u'JJ', u'NNS', u',', u'JJ', u',', u'CC', u'JJ', u'NNS', u',', u'WDT', u'VBP', u'DT', u'NN', u'IN', u'NNS', u'JJ', u'IN', u'NNP', u'.'], u'char_offsets': [[17799, 17806], [17807, 17812], [17813, 17820], [17821, 17823], [17824, 17825], [17826, 17830], [17831, 17834], [17835, 17836], [17837, 17843], [17844, 17846], [17847, 17854], [17855, 17856], [17856, 17862], [17863, 17871], [17871, 17872], [17873, 17878], [17879, 17882], [17883, 17885], [17886, 17894], [17895, 17897], [17898, 17905], [17906, 17917], [17918, 17925], [17925, 17926], [17927, 17932], [17932, 17933], [17934, 17937], [17938, 17949], [17950, 17957], [17957, 17958], [17959, 17964], [17965, 17972], [17973, 17974], [17975, 17986], [17987, 17989], [17990, 17999], [18000, 18004], [18005, 18007], [18008, 18015], [18015, 18016]]}) 
answer: set([u'school', u'make', u'uganda', u'swahilu', u'primari', u'subject'])
candidate Sentence: (0.10527436435222626, {u'tokens': [u'In', u'Standard', u'Swahili', u',', u'human', u'subjects', u'and', u'objects', u'of', u'whatever', u'class', u'trigger', u'animacy', u'concord', u'in', u'a', u'-', u',', u'wa', u'-', u'and', u'm', u'-', u',', u'wa', u'-', u',', u'while', u'non-human', u'subjects', u'and', u'objects', u'trigger', u'a', u'variety', u'of', u'gender-concord', u'prefixes', u'.'], u'lemmas': [u'in', u'Standard', u'Swahili', u',', u'human', u'subject', u'and', u'object', u'of', u'whatever', u'class', u'trigger', u'animacy', u'concord', u'in', u'a', u'-', u',', u'wa', u'-', u'and', u'm', u'-', u',', u'wa', u'-', u',', u'while', u'non-human', u'subject', u'and', u'object', u'trigger', u'a', u'variety', u'of', u'gender-concord', u'prefix', u'.'], u'pos': [u'IN', u'NNP', u'NNP', u',', u'JJ', u'NNS', u'CC', u'NNS', u'IN', u'WDT', u'NN', u'NN', u'NN', u'NN', u'IN', u'DT', u':', u',', u'SYM', u':', u'CC', u'NN', u':', u',', u'SYM', u':', u',', u'IN', u'JJ', u'NNS', u'CC', u'NNS', u'VBP', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[20702, 20704], [20705, 20713], [20714, 20721], [20721, 20722], [20723, 20728], [20729, 20737], [20738, 20741], [20742, 20749], [20750, 20752], [20753, 20761], [20762, 20767], [20768, 20775], [20776, 20783], [20784, 20791], [20792, 20794], [20795, 20796], [20796, 20797], [20797, 20798], [20799, 20801], [20801, 20802], [20803, 20806], [20807, 20808], [20808, 20809], [20809, 20810], [20811, 20813], [20813, 20814], [20814, 20815], [20816, 20821], [20822, 20831], [20832, 20840], [20841, 20844], [20845, 20852], [20853, 20860], [20861, 20862], [20863, 20870], [20871, 20873], [20874, 20888], [20889, 20897], [20897, 20898]]}) 
answer: set([u'school', u'make', u'uganda', u'swahilu', u'primari', u'requir'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Did Uganda make Swahili a required subject in primary schools?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes, Uganda made Swahili a required subject in primary schools.
Difficulty = easy
Article_Title = Swahili_language
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set5/a4.txt

No
_____________________________ test_yesno[param284] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb36908>, (<src.tfidf.TF_IDF object at 0x1080441d0>, set(['language', 'swahili', 'swahili_language'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x10cb36908>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.43180447816848755, {u'tokens': [u'The', u'neighboring', u'nation', u'of', u'Uganda', u'made', u'Swahili', u'a', u'required', u'subject', u'in', u'primary', u'schools', u'in', u'1992although', u'this', u'mandate', u'has', u'not', u'been', u'well', u'implementedand', u'declared', u'it', u'an', u'official', u'language', u'in', u'2005', u'in', u'preparation', u'for', u'the', u'East', u'African', u'Federation', u'.'], u'lemmas': [u'the', u'neighboring', u'nation', u'of', u'Uganda', u'make', u'Swahili', u'a', u'require', u'subject', u'in', u'primary', u'school', u'in', u'1992although', u'this', u'mandate', u'have', u'not', u'be', u'well', u'implementedand', u'declare', u'it', u'a', u'official', u'language', u'in', u'2005', u'in', u'preparation', u'for', u'the', u'east', u'african', u'Federation', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'NNP', u'VBD', u'NNP', u'DT', u'VBN', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'JJ', u'DT', u'NN', u'VBZ', u'RB', u'VBN', u'RB', u'JJ', u'VBD', u'PRP', u'DT', u'JJ', u'NN', u'IN', u'CD', u'IN', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'NNP', u'.'], u'char_offsets': [[1240, 1243], [1244, 1255], [1256, 1262], [1263, 1265], [1266, 1272], [1273, 1277], [1278, 1285], [1286, 1287], [1288, 1296], [1297, 1304], [1305, 1307], [1308, 1315], [1316, 1323], [1324, 1326], [1327, 1339], [1340, 1344], [1345, 1352], [1353, 1356], [1357, 1360], [1361, 1365], [1366, 1370], [1371, 1385], [1386, 1394], [1395, 1397], [1398, 1400], [1401, 1409], [1410, 1418], [1419, 1421], [1422, 1426], [1427, 1429], [1430, 1441], [1442, 1445], [1446, 1449], [1450, 1454], [1455, 1462], [1463, 1473], [1473, 1474]]}) 
answer: set([u'swahilu'])
candidate Sentence: (0.24170054495334625, {u'tokens': [u'Education', u'for', u'all', u'in', u'whose', u'language', u'?'], u'lemmas': [u'education', u'for', u'all', u'in', u'whose', u'language', u'?'], u'pos': [u'NN', u'IN', u'DT', u'IN', u'WP$', u'NN', u'.'], u'char_offsets': [[29558, 29567], [29568, 29571], [29572, 29575], [29577, 29579], [29580, 29585], [29586, 29594], [29594, 29595]]}) 
answer: set([u'school', u'make', u'uganda', u'swahilu', u'primari', u'requir', u'subject'])
candidate Sentence: (0.19277186691761017, {u'tokens': [u'In', u'Uganda', u',', u'the', u'Baganda', u'generally', u'do', u"n't", u'speak', u'Swahili', u',', u'but', u'it', u'is', u'in', u'common', u'use', u'among', u'the', u'25', u'million', u'people', u'elsewhere', u'in', u'the', u'country', u',', u'and', u'is', u'currently', u'being', u'implemented', u'in', u'schools', u'nationwide', u'in', u'preparation', u'for', u'the', u'East', u'African', u'Community', u'.'], u'lemmas': [u'in', u'Uganda', u',', u'the', u'Baganda', u'generally', u'do', u'not', u'speak', u'Swahili', u',', u'but', u'it', u'be', u'in', u'common', u'use', u'among', u'the', u'25', u'million', u'people', u'elsewhere', u'in', u'the', u'country', u',', u'and', u'be', u'currently', u'be', u'implement', u'in', u'school', u'nationwide', u'in', u'preparation', u'for', u'the', u'east', u'African', u'Community', u'.'], u'pos': [u'IN', u'NNP', u',', u'DT', u'NNP', u'RB', u'VBP', u'RB', u'VB', u'NNP', u',', u'CC', u'PRP', u'VBZ', u'IN', u'JJ', u'NN', u'IN', u'DT', u'CD', u'CD', u'NNS', u'RB', u'IN', u'DT', u'NN', u',', u'CC', u'VBZ', u'RB', u'VBG', u'VBN', u'IN', u'NNS', u'JJ', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NNP', u'NNP', u'.'], u'char_offsets': [[28421, 28423], [28424, 28430], [28430, 28431], [28432, 28435], [28436, 28443], [28444, 28453], [28454, 28456], [28456, 28459], [28460, 28465], [28466, 28473], [28473, 28474], [28475, 28478], [28479, 28481], [28482, 28484], [28485, 28487], [28488, 28494], [28495, 28498], [28499, 28504], [28505, 28508], [28509, 28511], [28512, 28519], [28520, 28526], [28527, 28536], [28537, 28539], [28540, 28543], [28544, 28551], [28551, 28552], [28553, 28556], [28557, 28559], [28560, 28569], [28570, 28575], [28576, 28587], [28588, 28590], [28591, 28598], [28599, 28609], [28610, 28612], [28613, 28624], [28625, 28628], [28629, 28632], [28633, 28637], [28638, 28645], [28646, 28655], [28655, 28656]]}) 
answer: set([u'make', u'swahilu', u'primari', u'requir', u'subject'])
candidate Sentence: (0.16386735439300537, {u'tokens': [u'When', u'the', u'noun', u'itself', u'does', u'not', u'make', u'clear', u'which', u'class', u'it', u'belongs', u'to', u',', u'its', u'concords', u'do', u'.'], u'lemmas': [u'when', u'the', u'noun', u'itself', u'do', u'not', u'make', u'clear', u'which', u'class', u'it', u'belong', u'to', u',', u'its', u'concord', u'do', u'.'], u'pos': [u'WRB', u'DT', u'NN', u'PRP', u'VBZ', u'RB', u'VB', u'JJ', u'WDT', u'NN', u'PRP', u'VBZ', u'TO', u',', u'PRP$', u'NNS', u'VBP', u'.'], u'char_offsets': [[8908, 8912], [8913, 8916], [8917, 8921], [8922, 8928], [8929, 8933], [8934, 8937], [8938, 8942], [8943, 8948], [8949, 8954], [8955, 8960], [8961, 8963], [8964, 8971], [8972, 8974], [8974, 8975], [8976, 8979], [8980, 8988], [8989, 8991], [8991, 8992]]}) 
answer: set([u'school', u'uganda', u'swahilu', u'primari', u'requir', u'subject'])
candidate Sentence: (0.16231720149517059, {u'tokens': [u'Most', u'educated', u'Kenyans', u'are', u'able', u'to', u'communicate', u'fluently', u'in', u'Swahili', u',', u'since', u'it', u'is', u'a', u'compulsory', u'subject', u'in', u'school', u'from', u'grade', u'one', u'.'], u'lemmas': [u'most', u'educate', u'kenyan', u'be', u'able', u'to', u'communicate', u'fluently', u'in', u'Swahili', u',', u'since', u'it', u'be', u'a', u'compulsory', u'subject', u'in', u'school', u'from', u'grade', u'one', u'.'], u'pos': [u'JJS', u'VBN', u'NNS', u'VBP', u'JJ', u'TO', u'VB', u'RB', u'IN', u'NNP', u',', u'IN', u'PRP', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'NN', u'IN', u'NN', u'CD', u'.'], u'char_offsets': [[28028, 28032], [28033, 28041], [28042, 28049], [28050, 28053], [28054, 28058], [28059, 28061], [28062, 28073], [28075, 28083], [28084, 28086], [28087, 28094], [28094, 28095], [28096, 28101], [28102, 28104], [28105, 28107], [28108, 28109], [28110, 28120], [28121, 28128], [28129, 28131], [28132, 28138], [28139, 28143], [28144, 28149], [28150, 28153], [28153, 28154]]}) 
answer: set([u'make', u'swahilu', u'uganda', u'requir', u'primari'])
candidate Sentence: (0.1597314178943634, {u'tokens': [u'The', u'British', u'did', u'not', u'do', u'so', u'in', u'neighbouring', u'Kenya', u',', u'even', u'though', u'they', u'made', u'moves', u'in', u'that', u'direction', u'.'], u'lemmas': [u'the', u'British', u'do', u'not', u'do', u'so', u'in', u'neighbour', u'Kenya', u',', u'even', u'though', u'they', u'make', u'move', u'in', u'that', u'direction', u'.'], u'pos': [u'DT', u'NNP', u'VBD', u'RB', u'VB', u'RB', u'IN', u'VBG', u'NNP', u',', u'RB', u'IN', u'PRP', u'VBD', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[26378, 26381], [26382, 26389], [26390, 26393], [26394, 26397], [26398, 26400], [26401, 26403], [26404, 26406], [26407, 26419], [26420, 26425], [26425, 26426], [26427, 26431], [26432, 26438], [26439, 26443], [26444, 26448], [26449, 26454], [26455, 26457], [26458, 26462], [26463, 26472], [26472, 26473]]}) 
answer: set([u'school', u'uganda', u'swahilu', u'primari', u'requir', u'subject'])
candidate Sentence: (0.15489920973777771, {u'tokens': [u'The', u'end', u'result', u'is', u'a', u'semantic', u'net', u'that', u'made', u'sense', u'at', u'the', u'time', u',', u'and', u'often', u'still', u'does', u'make', u'sense', u',', u'but', u'which', u'can', u'be', u'confusing', u'to', u'a', u'non-speaker', u'.'], u'lemmas': [u'the', u'end', u'result', u'be', u'a', u'semantic', u'net', u'that', u'make', u'sense', u'at', u'the', u'time', u',', u'and', u'often', u'still', u'do', u'make', u'sense', u',', u'but', u'which', u'can', u'be', u'confuse', u'to', u'a', u'non-speaker', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBZ', u'DT', u'JJ', u'NN', u'WDT', u'VBD', u'NN', u'IN', u'DT', u'NN', u',', u'CC', u'RB', u'RB', u'VBZ', u'VB', u'NN', u',', u'CC', u'WDT', u'MD', u'VB', u'VBG', u'TO', u'DT', u'JJ', u'.'], u'char_offsets': [[10009, 10012], [10013, 10016], [10017, 10023], [10024, 10026], [10027, 10028], [10029, 10037], [10038, 10041], [10042, 10046], [10047, 10051], [10052, 10057], [10058, 10060], [10061, 10064], [10065, 10069], [10069, 10070], [10071, 10074], [10075, 10080], [10081, 10086], [10087, 10091], [10092, 10096], [10097, 10102], [10102, 10103], [10104, 10107], [10108, 10113], [10114, 10117], [10118, 10120], [10121, 10130], [10131, 10133], [10134, 10135], [10136, 10147], [10147, 10148]]}) 
answer: set([u'school', u'uganda', u'swahilu', u'primari', u'requir', u'subject'])
candidate Sentence: (0.13706207275390625, {u'tokens': [u'The', u'British', u'authorities', u',', u'with', u'the', u'collaboration', u'of', u'British', u'Christian', u'missionary', u'institutions', u'active', u'in', u'these', u'colonies', u',', u'increased', u'their', u'resolve', u'to', u'institute', u'Swahili', u'as', u'a', u'common', u'language', u'for', u'primary', u'education', u'and', u'low', u'level', u'governance', u'throughout', u'their', u'East', u'African', u'colonies', u'-LRB-', u'Uganda', u',', u'Tanganyika', u',', u'Zanzibar', u',', u'and', u'Kenya', u'-RRB-', u'.'], u'lemmas': [u'the', u'british', u'authority', u',', u'with', u'the', u'collaboration', u'of', u'british', u'christian', u'missionary', u'institution', u'active', u'in', u'these', u'colony', u',', u'increase', u'they', u'resolve', u'to', u'institute', u'Swahili', u'as', u'a', u'common', u'language', u'for', u'primary', u'education', u'and', u'low', u'level', u'governance', u'throughout', u'they', u'east', u'african', u'colony', u'-lrb-', u'Uganda', u',', u'Tanganyika', u',', u'Zanzibar', u',', u'and', u'Kenya', u'-rrb-', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u',', u'IN', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'JJ', u'NNS', u'JJ', u'IN', u'DT', u'NNS', u',', u'VBD', u'PRP$', u'NN', u'TO', u'VB', u'NNP', u'IN', u'DT', u'JJ', u'NN', u'IN', u'JJ', u'NN', u'CC', u'JJ', u'NN', u'NN', u'IN', u'PRP$', u'JJ', u'JJ', u'NNS', u'-LRB-', u'NNP', u',', u'NNP', u',', u'NNP', u',', u'CC', u'NNP', u'-RRB-', u'.'], u'char_offsets': [[26876, 26879], [26880, 26887], [26888, 26899], [26899, 26900], [26901, 26905], [26906, 26909], [26910, 26923], [26924, 26926], [26927, 26934], [26935, 26944], [26945, 26955], [26956, 26968], [26969, 26975], [26976, 26978], [26979, 26984], [26985, 26993], [26993, 26994], [26995, 27004], [27005, 27010], [27011, 27018], [27019, 27021], [27022, 27031], [27032, 27039], [27040, 27042], [27043, 27044], [27045, 27051], [27052, 27060], [27061, 27064], [27065, 27072], [27073, 27082], [27083, 27086], [27087, 27090], [27091, 27096], [27097, 27107], [27108, 27118], [27119, 27124], [27125, 27129], [27130, 27137], [27138, 27146], [27147, 27148], [27148, 27154], [27154, 27155], [27156, 27166], [27166, 27167], [27168, 27176], [27176, 27177], [27178, 27181], [27182, 27187], [27187, 27188], [27188, 27189]]}) 
answer: set([u'school', u'swahilu', u'make', u'requir', u'subject'])
candidate Sentence: (0.11412924528121948, {u'tokens': [u'Swahili', u'verbs', u'consist', u'of', u'a', u'root', u'and', u'a', u'number', u'of', u'affixes', u'-LRB-', u'mostly', u'prefixes', u'-RRB-', u'which', u'can', u'be', u'attached', u'to', u'express', u'grammatical', u'persons', u',', u'tense', u',', u'and', u'subordinate', u'clauses', u',', u'which', u'require', u'a', u'conjunction', u'in', u'languages', u'such', u'as', u'English', u'.'], u'lemmas': [u'swahili', u'verb', u'consist', u'of', u'a', u'root', u'and', u'a', u'number', u'of', u'affix', u'-lrb-', u'mostly', u'prefix', u'-rrb-', u'which', u'can', u'be', u'attach', u'to', u'express', u'grammatical', u'person', u',', u'tense', u',', u'and', u'subordinate', u'clause', u',', u'which', u'require', u'a', u'conjunction', u'in', u'language', u'such', u'as', u'English', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'IN', u'DT', u'NN', u'CC', u'DT', u'NN', u'IN', u'NNS', u'-LRB-', u'RB', u'NNS', u'-RRB-', u'WDT', u'MD', u'VB', u'VBN', u'TO', u'VB', u'JJ', u'NNS', u',', u'JJ', u',', u'CC', u'JJ', u'NNS', u',', u'WDT', u'VBP', u'DT', u'NN', u'IN', u'NNS', u'JJ', u'IN', u'NNP', u'.'], u'char_offsets': [[17799, 17806], [17807, 17812], [17813, 17820], [17821, 17823], [17824, 17825], [17826, 17830], [17831, 17834], [17835, 17836], [17837, 17843], [17844, 17846], [17847, 17854], [17855, 17856], [17856, 17862], [17863, 17871], [17871, 17872], [17873, 17878], [17879, 17882], [17883, 17885], [17886, 17894], [17895, 17897], [17898, 17905], [17906, 17917], [17918, 17925], [17925, 17926], [17927, 17932], [17932, 17933], [17934, 17937], [17938, 17949], [17950, 17957], [17957, 17958], [17959, 17964], [17965, 17972], [17973, 17974], [17975, 17986], [17987, 17989], [17990, 17999], [18000, 18004], [18005, 18007], [18008, 18015], [18015, 18016]]}) 
answer: set([u'school', u'make', u'uganda', u'swahilu', u'primari', u'subject'])
candidate Sentence: (0.10527436435222626, {u'tokens': [u'In', u'Standard', u'Swahili', u',', u'human', u'subjects', u'and', u'objects', u'of', u'whatever', u'class', u'trigger', u'animacy', u'concord', u'in', u'a', u'-', u',', u'wa', u'-', u'and', u'm', u'-', u',', u'wa', u'-', u',', u'while', u'non-human', u'subjects', u'and', u'objects', u'trigger', u'a', u'variety', u'of', u'gender-concord', u'prefixes', u'.'], u'lemmas': [u'in', u'Standard', u'Swahili', u',', u'human', u'subject', u'and', u'object', u'of', u'whatever', u'class', u'trigger', u'animacy', u'concord', u'in', u'a', u'-', u',', u'wa', u'-', u'and', u'm', u'-', u',', u'wa', u'-', u',', u'while', u'non-human', u'subject', u'and', u'object', u'trigger', u'a', u'variety', u'of', u'gender-concord', u'prefix', u'.'], u'pos': [u'IN', u'NNP', u'NNP', u',', u'JJ', u'NNS', u'CC', u'NNS', u'IN', u'WDT', u'NN', u'NN', u'NN', u'NN', u'IN', u'DT', u':', u',', u'SYM', u':', u'CC', u'NN', u':', u',', u'SYM', u':', u',', u'IN', u'JJ', u'NNS', u'CC', u'NNS', u'VBP', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[20702, 20704], [20705, 20713], [20714, 20721], [20721, 20722], [20723, 20728], [20729, 20737], [20738, 20741], [20742, 20749], [20750, 20752], [20753, 20761], [20762, 20767], [20768, 20775], [20776, 20783], [20784, 20791], [20792, 20794], [20795, 20796], [20796, 20797], [20797, 20798], [20799, 20801], [20801, 20802], [20803, 20806], [20807, 20808], [20808, 20809], [20809, 20810], [20811, 20813], [20813, 20814], [20814, 20815], [20816, 20821], [20822, 20831], [20832, 20840], [20841, 20844], [20845, 20852], [20853, 20860], [20861, 20862], [20863, 20870], [20871, 20873], [20874, 20888], [20889, 20897], [20897, 20898]]}) 
answer: set([u'school', u'make', u'uganda', u'swahilu', u'primari', u'requir'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Did Uganda make Swahili a required subject in primary schools?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Swahili_language
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set5/a4.txt

No
_____________________________ test_yesno[param318] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb3ac68>, (<src.tfidf.TF_IDF object at 0x108044210>, set(['language', 'vietnamese', 'vietnamese_language'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb3ac68>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.36891907453536987, {u'tokens': [u'While', u'spoken', u'by', u'the', u'Vietnamese', u'people', u'for', u'millennia', u',', u'written', u'Vietnamese', u'did', u'not', u'become', u'the', u'official', u'administrative', u'language', u'of', u'Vietnam', u'until', u'the', u'20th', u'century', u'.'], u'lemmas': [u'while', u'speak', u'by', u'the', u'vietnamese', u'people', u'for', u'millennium', u',', u'write', u'vietnamese', u'do', u'not', u'become', u'the', u'official', u'administrative', u'language', u'of', u'Vietnam', u'until', u'the', u'20th', u'century', u'.'], u'pos': [u'IN', u'VBN', u'IN', u'DT', u'JJ', u'NNS', u'IN', u'NNS', u',', u'VBN', u'NNS', u'VBD', u'RB', u'VB', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'NNP', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[3059, 3064], [3065, 3071], [3072, 3074], [3075, 3078], [3079, 3089], [3090, 3096], [3097, 3100], [3101, 3110], [3110, 3111], [3112, 3119], [3120, 3130], [3131, 3134], [3135, 3138], [3139, 3145], [3146, 3149], [3150, 3158], [3159, 3173], [3174, 3182], [3183, 3185], [3186, 3193], [3194, 3199], [3200, 3203], [3204, 3208], [3209, 3216], [3216, 3217]]}) 
answer: set([])
candidate Sentence: (0.29377144575119019, {u'tokens': [u'``', u'What', u"'s", u'so', u'Chinese', u'about', u'Vietnamese', u'?', u"''"], u'lemmas': [u'``', u'what', u'be', u'so', u'chinese', u'about', u'vietnamese', u'?', u"''"], u'pos': [u'``', u'WP', u'VBZ', u'RB', u'JJ', u'IN', u'NNS', u'.', u"''"], u'char_offsets': [[30010, 30011], [30011, 30015], [30015, 30017], [30018, 30020], [30021, 30028], [30029, 30034], [30035, 30045], [30045, 30046], [30046, 30047]]}) 
answer: set([u'offici', u'vietnam', u'administr', u'languag'])
candidate Sentence: (0.2220272421836853, {u'tokens': [u'It', u'is', u'the', u'language', u'of', u'instruction', u'in', u'schools', u'and', u'universities', u'and', u'is', u'the', u'language', u'for', u'official', u'business', u'.'], u'lemmas': [u'it', u'be', u'the', u'language', u'of', u'instruction', u'in', u'school', u'and', u'university', u'and', u'be', u'the', u'language', u'for', u'official', u'business', u'.'], u'pos': [u'PRP', u'VBZ', u'DT', u'NN', u'IN', u'NN', u'IN', u'NNS', u'CC', u'NNS', u'CC', u'VBZ', u'DT', u'NN', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[3653, 3655], [3656, 3658], [3659, 3662], [3663, 3671], [3672, 3674], [3675, 3686], [3687, 3689], [3690, 3697], [3698, 3701], [3702, 3714], [3715, 3718], [3719, 3721], [3722, 3725], [3726, 3734], [3735, 3738], [3739, 3747], [3748, 3756], [3756, 3757]]}) 
answer: set([u'vietnames', u'vietnam', u'administr'])
candidate Sentence: (0.21150992810726166, {u'tokens': [u',', u'formerly', u'known', u'under', u'French', u'colonization', u'as', u'Annamese', u'-LRB-', u'see', u'Annam', u'-RRB-', u',', u'is', u'the', u'national', u'and', u'official', u'language', u'of', u'Vietnam', u'.'], u'lemmas': [u',', u'formerly', u'know', u'under', u'french', u'colonization', u'as', u'annamese', u'-lrb-', u'see', u'Annam', u'-rrb-', u',', u'be', u'the', u'national', u'and', u'official', u'language', u'of', u'Vietnam', u'.'], u'pos': [u',', u'RB', u'VBN', u'IN', u'JJ', u'NN', u'IN', u'NN', u'-LRB-', u'VB', u'NNP', u'-RRB-', u',', u'VBZ', u'DT', u'JJ', u'CC', u'JJ', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[299, 300], [301, 309], [310, 315], [316, 321], [322, 328], [329, 341], [342, 344], [345, 353], [354, 355], [355, 358], [359, 364], [364, 365], [365, 366], [367, 369], [370, 373], [374, 382], [383, 386], [387, 395], [396, 404], [405, 407], [408, 415], [415, 416]]}) 
answer: set([u'vietnames', u'administr'])
candidate Sentence: (0.17956605553627014, {u'tokens': [u'It', u'was', u'also', u'used', u'for', u'administrative', u'purposes', u'during', u'the', u'brief', u'Ho', u'and', u'Tay', u'Son', u'Dynasties', u'.'], u'lemmas': [u'it', u'be', u'also', u'use', u'for', u'administrative', u'purpose', u'during', u'the', u'brief', u'Ho', u'and', u'Tay', u'Son', u'Dynasties', u'.'], u'pos': [u'PRP', u'VBD', u'RB', u'VBN', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NNP', u'CC', u'NNP', u'NNP', u'NNPS', u'.'], u'char_offsets': [[3414, 3416], [3417, 3420], [3421, 3425], [3426, 3430], [3431, 3434], [3435, 3449], [3450, 3458], [3459, 3465], [3466, 3469], [3470, 3475], [3476, 3478], [3479, 3482], [3483, 3486], [3487, 3490], [3491, 3500], [3500, 3501]]}) 
answer: set([u'vietnames', u'offici', u'vietnam', u'languag'])
candidate Sentence: (0.17753496766090393, {u'tokens': [u'When', u'France', u'invaded', u'Vietnam', u'in', u'the', u'late', u'19th', u'century', u',', u'French', u'gradually', u'replaced', u'Chinese', u'as', u'the', u'official', u'language', u'in', u'education', u'and', u'government', u'.'], u'lemmas': [u'when', u'France', u'invade', u'Vietnam', u'in', u'the', u'late', u'19th', u'century', u',', u'french', u'gradually', u'replace', u'chinese', u'as', u'the', u'official', u'language', u'in', u'education', u'and', u'government', u'.'], u'pos': [u'WRB', u'NNP', u'VBD', u'NNP', u'IN', u'DT', u'JJ', u'JJ', u'NN', u',', u'JJ', u'RB', u'VBN', u'JJ', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[6555, 6559], [6560, 6566], [6567, 6574], [6575, 6582], [6583, 6585], [6586, 6589], [6590, 6594], [6595, 6599], [6600, 6607], [6607, 6608], [6609, 6615], [6616, 6625], [6626, 6634], [6635, 6642], [6643, 6645], [6646, 6649], [6650, 6658], [6659, 6667], [6668, 6670], [6671, 6680], [6681, 6684], [6685, 6695], [6695, 6696]]}) 
answer: set([u'vietnames', u'administr'])
candidate Sentence: (0.13530032336711884, {u'tokens': [u'The', u'ancestor', u'of', u'the', u'Vietnamese', u'language', u'was', u'originally', u'based', u'in', u'the', u'area', u'of', u'the', u'Red', u'River', u'in', u'what', u'is', u'now', u'northern', u'Vietnam', u',', u'and', u'during', u'the', u'subsequent', u'expansion', u'of', u'the', u'Vietnamese', u'language', u'and', u'people', u'into', u'what', u'is', u'now', u'central', u'and', u'southern', u'Vietnam', u'-LRB-', u'through', u'conquest', u'of', u'the', u'ancient', u'nation', u'of', u'Champa', u'and', u'the', u'Khmer', u'people', u'of', u'the', u'Mekong', u'Delta', u'in', u'the', u'vicinity', u'of', u'present-day', u'Ho', u'Chi', u'Minh', u'City', u'-LRB-', u'Saigon', u'-RRB-', u',', u'characteristic', u'tonal', u'variations', u'have', u'emerged', u'.'], u'lemmas': [u'the', u'ancestor', u'of', u'the', u'vietnamese', u'language', u'be', u'originally', u'base', u'in', u'the', u'area', u'of', u'the', u'Red', u'River', u'in', u'what', u'be', u'now', u'northern', u'Vietnam', u',', u'and', u'during', u'the', u'subsequent', u'expansion', u'of', u'the', u'vietnamese', u'language', u'and', u'people', u'into', u'what', u'be', u'now', u'central', u'and', u'southern', u'Vietnam', u'-lrb-', u'through', u'conquest', u'of', u'the', u'ancient', u'nation', u'of', u'Champa', u'and', u'the', u'Khmer', u'people', u'of', u'the', u'Mekong', u'Delta', u'in', u'the', u'vicinity', u'of', u'present-day', u'Ho', u'Chi', u'Minh', u'City', u'-lrb-', u'Saigon', u'-rrb-', u',', u'characteristic', u'tonal', u'variation', u'have', u'emerge', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'VBD', u'RB', u'VBN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'WP', u'VBZ', u'RB', u'JJ', u'NNP', u',', u'CC', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'JJ', u'NN', u'CC', u'NNS', u'IN', u'WP', u'VBZ', u'RB', u'JJ', u'CC', u'JJ', u'NNP', u'-LRB-', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'CC', u'DT', u'NNP', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NN', u'IN', u'JJ', u'NNP', u'NNP', u'NNP', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u',', u'JJ', u'JJ', u'NNS', u'VBP', u'VBN', u'.'], u'char_offsets': [[4800, 4803], [4804, 4812], [4813, 4815], [4816, 4819], [4820, 4830], [4831, 4839], [4840, 4843], [4844, 4854], [4855, 4860], [4861, 4863], [4864, 4867], [4868, 4872], [4873, 4875], [4876, 4879], [4880, 4883], [4884, 4889], [4890, 4892], [4893, 4897], [4898, 4900], [4901, 4904], [4905, 4913], [4914, 4921], [4921, 4922], [4923, 4926], [4927, 4933], [4934, 4937], [4938, 4948], [4949, 4958], [4959, 4961], [4962, 4965], [4966, 4976], [4977, 4985], [4986, 4989], [4990, 4996], [4997, 5001], [5002, 5006], [5007, 5009], [5010, 5013], [5014, 5021], [5022, 5025], [5026, 5034], [5035, 5042], [5043, 5044], [5044, 5051], [5052, 5060], [5061, 5063], [5064, 5067], [5068, 5075], [5076, 5082], [5083, 5085], [5086, 5092], [5093, 5096], [5097, 5100], [5101, 5106], [5107, 5113], [5114, 5116], [5117, 5120], [5121, 5127], [5128, 5133], [5134, 5136], [5137, 5140], [5141, 5149], [5150, 5152], [5153, 5164], [5165, 5167], [5168, 5171], [5172, 5176], [5177, 5181], [5182, 5183], [5183, 5189], [5189, 5190], [5190, 5191], [5192, 5206], [5207, 5212], [5213, 5223], [5224, 5228], [5229, 5236], [5236, 5237]]}) 
answer: set([u'offici', u'administr'])
candidate Sentence: (0.12861435115337372, {u'tokens': [u'It', u'is', u'also', u'spoken', u'as', u'a', u'second', u'language', u'by', u'many', u'ethnic', u'minorities', u'of', u'Vietnam', u'.'], u'lemmas': [u'it', u'be', u'also', u'speak', u'as', u'a', u'second', u'language', u'by', u'many', u'ethnic', u'minority', u'of', u'Vietnam', u'.'], u'pos': [u'PRP', u'VBZ', u'RB', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'JJ', u'JJ', u'NNS', u'IN', u'NNP', u'.'], u'char_offsets': [[581, 583], [584, 586], [587, 591], [592, 598], [599, 601], [602, 603], [604, 610], [611, 619], [620, 622], [623, 627], [628, 634], [635, 645], [646, 648], [649, 656], [656, 657]]}) 
answer: set([u'vietnames', u'offici', u'administr'])
candidate Sentence: (0.11551769822835922, {u'tokens': [u'A', u'study', u'of', u'Middle', u'Vietnamese', u'phonology', u'.'], u'lemmas': [u'a', u'study', u'of', u'Middle', u'Vietnamese', u'phonology', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NNP', u'NNP', u'NN', u'.'], u'char_offsets': [[30393, 30394], [30395, 30400], [30401, 30403], [30404, 30410], [30411, 30421], [30422, 30431], [30431, 30432]]}) 
answer: set([u'offici', u'vietnam', u'administr', u'languag'])
candidate Sentence: (0.10933420062065125, {u'tokens': [u'Below', u'is', u'a', u'vowel', u'diagram', u'of', u'Hanoi', u'Vietnamese', u'.'], u'lemmas': [u'Below', u'be', u'a', u'vowel', u'diagram', u'of', u'Hanoi', u'Vietnamese', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'NN', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[8376, 8381], [8382, 8384], [8385, 8386], [8387, 8392], [8393, 8400], [8401, 8403], [8404, 8409], [8410, 8420], [8420, 8421]]}) 
answer: set([u'offici', u'vietnam', u'administr', u'languag'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is Vietnamese the official administrative language of Vietnam?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Vietnamese_language
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set5/a10.txt

No
_____________________________ test_yesno[param319] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb3acf8>, (<src.tfidf.TF_IDF object at 0x108044210>, set(['language', 'vietnamese', 'vietnamese_language'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x10cb3acf8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.36891907453536987, {u'tokens': [u'While', u'spoken', u'by', u'the', u'Vietnamese', u'people', u'for', u'millennia', u',', u'written', u'Vietnamese', u'did', u'not', u'become', u'the', u'official', u'administrative', u'language', u'of', u'Vietnam', u'until', u'the', u'20th', u'century', u'.'], u'lemmas': [u'while', u'speak', u'by', u'the', u'vietnamese', u'people', u'for', u'millennium', u',', u'write', u'vietnamese', u'do', u'not', u'become', u'the', u'official', u'administrative', u'language', u'of', u'Vietnam', u'until', u'the', u'20th', u'century', u'.'], u'pos': [u'IN', u'VBN', u'IN', u'DT', u'JJ', u'NNS', u'IN', u'NNS', u',', u'VBN', u'NNS', u'VBD', u'RB', u'VB', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'NNP', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[3059, 3064], [3065, 3071], [3072, 3074], [3075, 3078], [3079, 3089], [3090, 3096], [3097, 3100], [3101, 3110], [3110, 3111], [3112, 3119], [3120, 3130], [3131, 3134], [3135, 3138], [3139, 3145], [3146, 3149], [3150, 3158], [3159, 3173], [3174, 3182], [3183, 3185], [3186, 3193], [3194, 3199], [3200, 3203], [3204, 3208], [3209, 3216], [3216, 3217]]}) 
answer: set([])
candidate Sentence: (0.29377144575119019, {u'tokens': [u'``', u'What', u"'s", u'so', u'Chinese', u'about', u'Vietnamese', u'?', u"''"], u'lemmas': [u'``', u'what', u'be', u'so', u'chinese', u'about', u'vietnamese', u'?', u"''"], u'pos': [u'``', u'WP', u'VBZ', u'RB', u'JJ', u'IN', u'NNS', u'.', u"''"], u'char_offsets': [[30010, 30011], [30011, 30015], [30015, 30017], [30018, 30020], [30021, 30028], [30029, 30034], [30035, 30045], [30045, 30046], [30046, 30047]]}) 
answer: set([u'offici', u'vietnam', u'administr', u'languag'])
candidate Sentence: (0.2220272421836853, {u'tokens': [u'It', u'is', u'the', u'language', u'of', u'instruction', u'in', u'schools', u'and', u'universities', u'and', u'is', u'the', u'language', u'for', u'official', u'business', u'.'], u'lemmas': [u'it', u'be', u'the', u'language', u'of', u'instruction', u'in', u'school', u'and', u'university', u'and', u'be', u'the', u'language', u'for', u'official', u'business', u'.'], u'pos': [u'PRP', u'VBZ', u'DT', u'NN', u'IN', u'NN', u'IN', u'NNS', u'CC', u'NNS', u'CC', u'VBZ', u'DT', u'NN', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[3653, 3655], [3656, 3658], [3659, 3662], [3663, 3671], [3672, 3674], [3675, 3686], [3687, 3689], [3690, 3697], [3698, 3701], [3702, 3714], [3715, 3718], [3719, 3721], [3722, 3725], [3726, 3734], [3735, 3738], [3739, 3747], [3748, 3756], [3756, 3757]]}) 
answer: set([u'vietnames', u'vietnam', u'administr'])
candidate Sentence: (0.21150992810726166, {u'tokens': [u',', u'formerly', u'known', u'under', u'French', u'colonization', u'as', u'Annamese', u'-LRB-', u'see', u'Annam', u'-RRB-', u',', u'is', u'the', u'national', u'and', u'official', u'language', u'of', u'Vietnam', u'.'], u'lemmas': [u',', u'formerly', u'know', u'under', u'french', u'colonization', u'as', u'annamese', u'-lrb-', u'see', u'Annam', u'-rrb-', u',', u'be', u'the', u'national', u'and', u'official', u'language', u'of', u'Vietnam', u'.'], u'pos': [u',', u'RB', u'VBN', u'IN', u'JJ', u'NN', u'IN', u'NN', u'-LRB-', u'VB', u'NNP', u'-RRB-', u',', u'VBZ', u'DT', u'JJ', u'CC', u'JJ', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[299, 300], [301, 309], [310, 315], [316, 321], [322, 328], [329, 341], [342, 344], [345, 353], [354, 355], [355, 358], [359, 364], [364, 365], [365, 366], [367, 369], [370, 373], [374, 382], [383, 386], [387, 395], [396, 404], [405, 407], [408, 415], [415, 416]]}) 
answer: set([u'vietnames', u'administr'])
candidate Sentence: (0.17956605553627014, {u'tokens': [u'It', u'was', u'also', u'used', u'for', u'administrative', u'purposes', u'during', u'the', u'brief', u'Ho', u'and', u'Tay', u'Son', u'Dynasties', u'.'], u'lemmas': [u'it', u'be', u'also', u'use', u'for', u'administrative', u'purpose', u'during', u'the', u'brief', u'Ho', u'and', u'Tay', u'Son', u'Dynasties', u'.'], u'pos': [u'PRP', u'VBD', u'RB', u'VBN', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NNP', u'CC', u'NNP', u'NNP', u'NNPS', u'.'], u'char_offsets': [[3414, 3416], [3417, 3420], [3421, 3425], [3426, 3430], [3431, 3434], [3435, 3449], [3450, 3458], [3459, 3465], [3466, 3469], [3470, 3475], [3476, 3478], [3479, 3482], [3483, 3486], [3487, 3490], [3491, 3500], [3500, 3501]]}) 
answer: set([u'vietnames', u'offici', u'vietnam', u'languag'])
candidate Sentence: (0.17753496766090393, {u'tokens': [u'When', u'France', u'invaded', u'Vietnam', u'in', u'the', u'late', u'19th', u'century', u',', u'French', u'gradually', u'replaced', u'Chinese', u'as', u'the', u'official', u'language', u'in', u'education', u'and', u'government', u'.'], u'lemmas': [u'when', u'France', u'invade', u'Vietnam', u'in', u'the', u'late', u'19th', u'century', u',', u'french', u'gradually', u'replace', u'chinese', u'as', u'the', u'official', u'language', u'in', u'education', u'and', u'government', u'.'], u'pos': [u'WRB', u'NNP', u'VBD', u'NNP', u'IN', u'DT', u'JJ', u'JJ', u'NN', u',', u'JJ', u'RB', u'VBN', u'JJ', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[6555, 6559], [6560, 6566], [6567, 6574], [6575, 6582], [6583, 6585], [6586, 6589], [6590, 6594], [6595, 6599], [6600, 6607], [6607, 6608], [6609, 6615], [6616, 6625], [6626, 6634], [6635, 6642], [6643, 6645], [6646, 6649], [6650, 6658], [6659, 6667], [6668, 6670], [6671, 6680], [6681, 6684], [6685, 6695], [6695, 6696]]}) 
answer: set([u'vietnames', u'administr'])
candidate Sentence: (0.13530032336711884, {u'tokens': [u'The', u'ancestor', u'of', u'the', u'Vietnamese', u'language', u'was', u'originally', u'based', u'in', u'the', u'area', u'of', u'the', u'Red', u'River', u'in', u'what', u'is', u'now', u'northern', u'Vietnam', u',', u'and', u'during', u'the', u'subsequent', u'expansion', u'of', u'the', u'Vietnamese', u'language', u'and', u'people', u'into', u'what', u'is', u'now', u'central', u'and', u'southern', u'Vietnam', u'-LRB-', u'through', u'conquest', u'of', u'the', u'ancient', u'nation', u'of', u'Champa', u'and', u'the', u'Khmer', u'people', u'of', u'the', u'Mekong', u'Delta', u'in', u'the', u'vicinity', u'of', u'present-day', u'Ho', u'Chi', u'Minh', u'City', u'-LRB-', u'Saigon', u'-RRB-', u',', u'characteristic', u'tonal', u'variations', u'have', u'emerged', u'.'], u'lemmas': [u'the', u'ancestor', u'of', u'the', u'vietnamese', u'language', u'be', u'originally', u'base', u'in', u'the', u'area', u'of', u'the', u'Red', u'River', u'in', u'what', u'be', u'now', u'northern', u'Vietnam', u',', u'and', u'during', u'the', u'subsequent', u'expansion', u'of', u'the', u'vietnamese', u'language', u'and', u'people', u'into', u'what', u'be', u'now', u'central', u'and', u'southern', u'Vietnam', u'-lrb-', u'through', u'conquest', u'of', u'the', u'ancient', u'nation', u'of', u'Champa', u'and', u'the', u'Khmer', u'people', u'of', u'the', u'Mekong', u'Delta', u'in', u'the', u'vicinity', u'of', u'present-day', u'Ho', u'Chi', u'Minh', u'City', u'-lrb-', u'Saigon', u'-rrb-', u',', u'characteristic', u'tonal', u'variation', u'have', u'emerge', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'VBD', u'RB', u'VBN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'WP', u'VBZ', u'RB', u'JJ', u'NNP', u',', u'CC', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'JJ', u'NN', u'CC', u'NNS', u'IN', u'WP', u'VBZ', u'RB', u'JJ', u'CC', u'JJ', u'NNP', u'-LRB-', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'CC', u'DT', u'NNP', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NN', u'IN', u'JJ', u'NNP', u'NNP', u'NNP', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u',', u'JJ', u'JJ', u'NNS', u'VBP', u'VBN', u'.'], u'char_offsets': [[4800, 4803], [4804, 4812], [4813, 4815], [4816, 4819], [4820, 4830], [4831, 4839], [4840, 4843], [4844, 4854], [4855, 4860], [4861, 4863], [4864, 4867], [4868, 4872], [4873, 4875], [4876, 4879], [4880, 4883], [4884, 4889], [4890, 4892], [4893, 4897], [4898, 4900], [4901, 4904], [4905, 4913], [4914, 4921], [4921, 4922], [4923, 4926], [4927, 4933], [4934, 4937], [4938, 4948], [4949, 4958], [4959, 4961], [4962, 4965], [4966, 4976], [4977, 4985], [4986, 4989], [4990, 4996], [4997, 5001], [5002, 5006], [5007, 5009], [5010, 5013], [5014, 5021], [5022, 5025], [5026, 5034], [5035, 5042], [5043, 5044], [5044, 5051], [5052, 5060], [5061, 5063], [5064, 5067], [5068, 5075], [5076, 5082], [5083, 5085], [5086, 5092], [5093, 5096], [5097, 5100], [5101, 5106], [5107, 5113], [5114, 5116], [5117, 5120], [5121, 5127], [5128, 5133], [5134, 5136], [5137, 5140], [5141, 5149], [5150, 5152], [5153, 5164], [5165, 5167], [5168, 5171], [5172, 5176], [5177, 5181], [5182, 5183], [5183, 5189], [5189, 5190], [5190, 5191], [5192, 5206], [5207, 5212], [5213, 5223], [5224, 5228], [5229, 5236], [5236, 5237]]}) 
answer: set([u'offici', u'administr'])
candidate Sentence: (0.12861435115337372, {u'tokens': [u'It', u'is', u'also', u'spoken', u'as', u'a', u'second', u'language', u'by', u'many', u'ethnic', u'minorities', u'of', u'Vietnam', u'.'], u'lemmas': [u'it', u'be', u'also', u'speak', u'as', u'a', u'second', u'language', u'by', u'many', u'ethnic', u'minority', u'of', u'Vietnam', u'.'], u'pos': [u'PRP', u'VBZ', u'RB', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'JJ', u'JJ', u'NNS', u'IN', u'NNP', u'.'], u'char_offsets': [[581, 583], [584, 586], [587, 591], [592, 598], [599, 601], [602, 603], [604, 610], [611, 619], [620, 622], [623, 627], [628, 634], [635, 645], [646, 648], [649, 656], [656, 657]]}) 
answer: set([u'vietnames', u'offici', u'administr'])
candidate Sentence: (0.11551769822835922, {u'tokens': [u'A', u'study', u'of', u'Middle', u'Vietnamese', u'phonology', u'.'], u'lemmas': [u'a', u'study', u'of', u'Middle', u'Vietnamese', u'phonology', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NNP', u'NNP', u'NN', u'.'], u'char_offsets': [[30393, 30394], [30395, 30400], [30401, 30403], [30404, 30410], [30411, 30421], [30422, 30431], [30431, 30432]]}) 
answer: set([u'offici', u'vietnam', u'administr', u'languag'])
candidate Sentence: (0.10933420062065125, {u'tokens': [u'Below', u'is', u'a', u'vowel', u'diagram', u'of', u'Hanoi', u'Vietnamese', u'.'], u'lemmas': [u'Below', u'be', u'a', u'vowel', u'diagram', u'of', u'Hanoi', u'Vietnamese', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'NN', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[8376, 8381], [8382, 8384], [8385, 8386], [8387, 8392], [8393, 8400], [8401, 8403], [8404, 8409], [8410, 8420], [8420, 8421]]}) 
answer: set([u'offici', u'vietnam', u'administr', u'languag'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is Vietnamese the official administrative language of Vietnam?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Vietnamese_language
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set5/a10.txt

No
_____________________________ test_yesno[param320] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb3ad88>, (<src.tfidf.TF_IDF object at 0x108044210>, set(['language', 'vietnamese', 'vietnamese_language'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes, Vietnamese was *formerly* written using the Chinese writing system.')
E            +    where 'Yes, Vietnamese was *formerly* written using the Chinese writing system.' = <src.question_processing.Question_parser instance at 0x10cb3ad88>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.41666293144226074, {u'tokens': [u'``', u'What', u"'s", u'so', u'Chinese', u'about', u'Vietnamese', u'?', u"''"], u'lemmas': [u'``', u'what', u'be', u'so', u'chinese', u'about', u'vietnamese', u'?', u"''"], u'pos': [u'``', u'WP', u'VBZ', u'RB', u'JJ', u'IN', u'NNS', u'.', u"''"], u'char_offsets': [[30010, 30011], [30011, 30015], [30015, 30017], [30018, 30020], [30021, 30028], [30029, 30034], [30035, 30045], [30045, 30046], [30046, 30047]]}) 
answer: set([u'write', u'use', u'system', u'formal'])
candidate Sentence: (0.3000950813293457, {u'tokens': [u'Quc-ng', u':', u'The', u'modern', u'writing', u'system', u'in', u'Vietnam', u'.'], u'lemmas': [u'quc-ng', u':', u'the', u'modern', u'writing', u'system', u'in', u'Vietnam', u'.'], u'pos': [u'JJ', u':', u'DT', u'JJ', u'NN', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[31023, 31029], [31029, 31030], [31031, 31034], [31035, 31041], [31042, 31049], [31050, 31056], [31057, 31059], [31060, 31067], [31067, 31068]]}) 
answer: set([u'vietnames', u'use', u'chines', u'formal'])
candidate Sentence: (0.27460452914237976, {u'tokens': [u'Much', u'vocabulary', u'has', u'been', u'borrowed', u'from', u'Chinese', u',', u'especially', u'words', u'that', u'denote', u'abstract', u'ideas', u'in', u'the', u'same', u'way', u'European', u'languages', u'borrow', u'from', u'Latin', u'and', u'Greek', u',', u'and', u'it', u'was', u'formerly', u'written', u'using', u'the', u'Chinese', u'writing', u'system', u',', u'albeit', u'in', u'a', u'modified', u'format', u'and', u'was', u'given', u'vernacular', u'pronunciation', u'.'], u'lemmas': [u'much', u'vocabulary', u'have', u'be', u'borrow', u'from', u'chinese', u',', u'especially', u'word', u'that', u'denote', u'abstract', u'idea', u'in', u'the', u'same', u'way', u'european', u'language', u'borrow', u'from', u'Latin', u'and', u'greek', u',', u'and', u'it', u'be', u'formerly', u'write', u'use', u'the', u'chinese', u'writing', u'system', u',', u'albeit', u'in', u'a', u'modify', u'format', u'and', u'be', u'give', u'vernacular', u'pronunciation', u'.'], u'pos': [u'JJ', u'NN', u'VBZ', u'VBN', u'VBN', u'IN', u'JJ', u',', u'RB', u'NNS', u'WDT', u'VBP', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'JJ', u'NNS', u'VB', u'IN', u'NNP', u'CC', u'JJ', u',', u'CC', u'PRP', u'VBD', u'RB', u'VBN', u'VBG', u'DT', u'JJ', u'NN', u'NN', u',', u'IN', u'IN', u'DT', u'VBN', u'NN', u'CC', u'VBD', u'VBN', u'JJ', u'NN', u'.'], u'char_offsets': [[841, 845], [846, 856], [857, 860], [861, 865], [866, 874], [875, 879], [880, 887], [887, 888], [889, 899], [900, 905], [906, 910], [911, 917], [918, 926], [927, 932], [933, 935], [936, 939], [940, 944], [945, 948], [949, 957], [958, 967], [968, 974], [975, 979], [980, 985], [986, 989], [990, 995], [995, 996], [997, 1000], [1001, 1003], [1004, 1007], [1008, 1016], [1017, 1024], [1025, 1030], [1031, 1034], [1035, 1042], [1043, 1050], [1051, 1057], [1057, 1058], [1059, 1065], [1066, 1068], [1069, 1070], [1071, 1079], [1080, 1086], [1087, 1090], [1091, 1094], [1095, 1100], [1101, 1111], [1112, 1125], [1125, 1126]]}) 
answer: set([u'vietnames', u'formal'])
candidate Sentence: (0.26720252633094788, {u'tokens': [u'Before', u'French', u'rule', u',', u'the', u'first', u'two', u'Vietnamese', u'writing', u'systems', u'were', u'based', u'on', u'Chinese', u'script', u':', u'*', u'the', u'standard', u'Chinese', u'character', u'set', u'called', u'ch', u'nho', u'-LRB-', u'scholar', u"'s", u'characters', u',', u'-RRB-', u':', u'used', u'to', u'write', u'Literary', u'Chinese', u'*', u'a', u'complicated', u'variant', u'form', u'known', u'as', u'ch', u'nm', u'-LRB-', u'southern/vernacular', u'characters', u',', u'-RRB-', u'with', u'characters', u'not', u'found', u'in', u'the', u'Chinese', u'character', u'set', u';', u'this', u'system', u'was', u'better', u'adapted', u'to', u'the', u'unique', u'phonetic', u'aspects', u'of', u'Vietnamese', u'which', u'differed', u'from', u'Chinese', u'The', u'authentic', u'Chinese', u'writing', u',', u'ch', u'nho', u',', u'was', u'in', u'more', u'common', u'usage', u',', u'whereas', u'ch', u'nm', u'was', u'used', u'by', u'members', u'of', u'the', u'educated', u'elite', u'-LRB-', u'one', u'needs', u'to', u'be', u'able', u'to', u'read', u'ch', u'nho', u'in', u'order', u'to', u'read', u'ch', u'nm', u'-RRB-', u'.'], u'lemmas': [u'before', u'french', u'rule', u',', u'the', u'first', u'two', u'vietnamese', u'write', u'system', u'be', u'base', u'on', u'chinese', u'script', u':', u'*', u'the', u'standard', u'chinese', u'character', u'set', u'call', u'ch', u'nho', u'-lrb-', u'scholar', u"'s", u'character', u',', u'-rrb-', u':', u'use', u'to', u'write', u'Literary', u'Chinese', u'*', u'a', u'complicated', u'variant', u'form', u'know', u'as', u'ch', u'nm', u'-lrb-', u'southern/vernacular', u'character', u',', u'-rrb-', u'with', u'character', u'not', u'find', u'in', u'the', u'chinese', u'character', u'set', u';', u'this', u'system', u'be', u'better', u'adapt', u'to', u'the', u'unique', u'phonetic', u'aspect', u'of', u'vietnamese', u'which', u'differ', u'from', u'chinese', u'the', u'authentic', u'chinese', u'writing', u',', u'ch', u'nho', u',', u'be', u'in', u'more', u'common', u'usage', u',', u'whereas', u'ch', u'nm', u'be', u'use', u'by', u'member', u'of', u'the', u'educate', u'elite', u'-lrb-', u'one', u'need', u'to', u'be', u'able', u'to', u'read', u'ch', u'nho', u'in', u'order', u'to', u'read', u'ch', u'nm', u'-rrb-', u'.'], u'pos': [u'IN', u'JJ', u'NN', u',', u'DT', u'JJ', u'CD', u'JJ', u'VBG', u'NNS', u'VBD', u'VBN', u'IN', u'JJ', u'NN', u':', u'SYM', u'DT', u'JJ', u'JJ', u'NN', u'NN', u'VBN', u'NN', u'NN', u'-LRB-', u'NN', u'POS', u'NNS', u',', u'-RRB-', u':', u'VBN', u'TO', u'VB', u'NNP', u'NNP', u'SYM', u'DT', u'JJ', u'JJ', u'NN', u'VBN', u'IN', u'NN', u'NN', u'-LRB-', u'JJ', u'NNS', u',', u'-RRB-', u'IN', u'NNS', u'RB', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'NN', u':', u'DT', u'NN', u'VBD', u'RBR', u'VBN', u'TO', u'DT', u'JJ', u'JJ', u'NNS', u'IN', u'NNS', u'WDT', u'VBD', u'IN', u'JJ', u'DT', u'JJ', u'JJ', u'NN', u',', u'NN', u'NN', u',', u'VBD', u'IN', u'RBR', u'JJ', u'NN', u',', u'IN', u'NN', u'NN', u'VBD', u'VBN', u'IN', u'NNS', u'IN', u'DT', u'VBN', u'NN', u'-LRB-', u'CD', u'VBZ', u'TO', u'VB', u'JJ', u'TO', u'VB', u'NN', u'NN', u'IN', u'NN', u'TO', u'VB', u'NN', u'NN', u'-RRB-', u'.'], u'char_offsets': [[21973, 21979], [21980, 21986], [21987, 21991], [21991, 21992], [21993, 21996], [21997, 22002], [22003, 22006], [22007, 22017], [22018, 22025], [22026, 22033], [22034, 22038], [22039, 22044], [22045, 22047], [22048, 22055], [22056, 22062], [22062, 22063], [22064, 22065], [22066, 22069], [22070, 22078], [22079, 22086], [22087, 22096], [22097, 22100], [22101, 22107], [22108, 22110], [22111, 22114], [22115, 22116], [22116, 22123], [22123, 22125], [22126, 22136], [22136, 22137], [22139, 22140], [22140, 22141], [22142, 22146], [22147, 22149], [22150, 22155], [22156, 22164], [22165, 22172], [22173, 22174], [22175, 22176], [22177, 22188], [22189, 22196], [22197, 22201], [22202, 22207], [22208, 22210], [22211, 22213], [22214, 22216], [22217, 22218], [22218, 22237], [22238, 22248], [22248, 22249], [22251, 22252], [22253, 22257], [22258, 22268], [22269, 22272], [22273, 22278], [22279, 22281], [22282, 22285], [22286, 22293], [22294, 22303], [22304, 22307], [22307, 22308], [22309, 22313], [22314, 22320], [22321, 22324], [22325, 22331], [22332, 22339], [22340, 22342], [22343, 22346], [22347, 22353], [22354, 22362], [22363, 22370], [22371, 22373], [22374, 22384], [22385, 22390], [22391, 22399], [22400, 22404], [22405, 22412], [22413, 22416], [22417, 22426], [22427, 22434], [22435, 22442], [22442, 22443], [22444, 22446], [22447, 22450], [22450, 22451], [22452, 22455], [22456, 22458], [22459, 22463], [22464, 22470], [22471, 22476], [22476, 22477], [22478, 22485], [22486, 22488], [22489, 22491], [22492, 22495], [22496, 22500], [22501, 22503], [22504, 22511], [22512, 22514], [22515, 22518], [22519, 22527], [22528, 22533], [22534, 22535], [22535, 22538], [22539, 22544], [22545, 22547], [22548, 22550], [22551, 22555], [22556, 22558], [22559, 22563], [22564, 22566], [22567, 22570], [22571, 22573], [22574, 22579], [22580, 22582], [22583, 22587], [22588, 22590], [22591, 22593], [22593, 22594], [22594, 22595]]}) 
answer: set([u'formal'])
candidate Sentence: (0.24813827872276306, {u'tokens': [u'The', u'Vietnamese', u'writing', u'system', u'in', u'use', u'today', u'is', u'an', u'adapted', u'version', u'of', u'the', u'Latin', u'alphabet', u',', u'with', u'additional', u'diacritics', u'for', u'tones', u'and', u'certain', u'letters', u'.'], u'lemmas': [u'the', u'vietnamese', u'writing', u'system', u'in', u'use', u'today', u'be', u'a', u'adapt', u'version', u'of', u'the', u'Latin', u'alphabet', u',', u'with', u'additional', u'diacritic', u'for', u'tone', u'and', u'certain', u'letter', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NN', u'IN', u'NN', u'NN', u'VBZ', u'DT', u'VBN', u'NN', u'IN', u'DT', u'NNP', u'NN', u',', u'IN', u'JJ', u'NNS', u'IN', u'NNS', u'CC', u'JJ', u'NNS', u'.'], u'char_offsets': [[1127, 1130], [1131, 1141], [1142, 1149], [1150, 1156], [1157, 1159], [1160, 1163], [1164, 1169], [1170, 1172], [1173, 1175], [1176, 1183], [1184, 1191], [1192, 1194], [1195, 1198], [1199, 1204], [1205, 1213], [1213, 1214], [1215, 1219], [1220, 1230], [1231, 1241], [1242, 1245], [1246, 1251], [1252, 1255], [1256, 1263], [1264, 1271], [1271, 1272]]}) 
answer: set([u'chines', u'formal'])
candidate Sentence: (0.24280445277690887, {u'tokens': [u'For', u'most', u'of', u'its', u'history', u',', u'the', u'entity', u'now', u'known', u'as', u'Vietnam', u'used', u'written', u'classical', u'Chinese', u'for', u'governing', u'purposes', u',', u'whereas', u'written', u'Vietnamese', u'in', u'the', u'form', u'of', u'Ch', u'nm', u'was', u'used', u'for', u'poetry', u'and', u'literature', u'.'], u'lemmas': [u'for', u'most', u'of', u'its', u'history', u',', u'the', u'entity', u'now', u'know', u'as', u'Vietnam', u'use', u'write', u'classical', u'chinese', u'for', u'govern', u'purpose', u',', u'whereas', u'write', u'vietnamese', u'in', u'the', u'form', u'of', u'Ch', u'nm', u'be', u'use', u'for', u'poetry', u'and', u'literature', u'.'], u'pos': [u'IN', u'JJS', u'IN', u'PRP$', u'NN', u',', u'DT', u'NN', u'RB', u'VBN', u'IN', u'NNP', u'VBD', u'VBN', u'JJ', u'JJ', u'IN', u'VBG', u'NNS', u',', u'IN', u'VBN', u'NNS', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NN', u'VBD', u'VBN', u'IN', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[3218, 3221], [3222, 3226], [3227, 3229], [3230, 3233], [3234, 3241], [3241, 3242], [3243, 3246], [3247, 3253], [3254, 3257], [3258, 3263], [3264, 3266], [3267, 3274], [3275, 3279], [3280, 3287], [3288, 3297], [3298, 3305], [3306, 3309], [3310, 3319], [3320, 3328], [3328, 3329], [3330, 3337], [3338, 3345], [3346, 3356], [3357, 3359], [3360, 3363], [3364, 3368], [3369, 3371], [3372, 3374], [3375, 3377], [3378, 3381], [3382, 3386], [3387, 3390], [3391, 3397], [3398, 3401], [3402, 3412], [3412, 3413]]}) 
answer: set([u'system', u'formal'])
candidate Sentence: (0.23837180435657501, {u'tokens': [u'In', u'fact', u',', u'as', u'the', u'vernacular', u'language', u'of', u'Vietnam', u'gradually', u'grew', u'in', u'prestige', u'toward', u'the', u'beginning', u'of', u'the', u'second', u'millennium', u',', u'the', u'Vietnamese', u'language', u'was', u'written', u'using', u'Chinese', u'characters', u'-LRB-', u'using', u'both', u'the', u'original', u'Chinese', u'characters', u',', u'called', u'Hn', u't', u',', u'as', u'well', u'as', u'a', u'system', u'of', u'newly', u'created', u'and', u'modified', u'characters', u'called', u'Ch', u'nm', u'-RRB-', u'adapted', u'to', u'write', u'Vietnamese', u',', u'in', u'a', u'similar', u'pattern', u'as', u'used', u'in', u'Japan', u'-LRB-', u'kanji', u'-RRB-', u',', u'Korea', u'-LRB-', u'hanja', u'-RRB-', u',', u'and', u'other', u'countries', u'in', u'the', u'Sinosphere', u'.'], u'lemmas': [u'in', u'fact', u',', u'as', u'the', u'vernacular', u'language', u'of', u'Vietnam', u'gradually', u'grow', u'in', u'prestige', u'toward', u'the', u'beginning', u'of', u'the', u'second', u'millennium', u',', u'the', u'vietnamese', u'language', u'be', u'write', u'use', u'chinese', u'character', u'-lrb-', u'use', u'both', u'the', u'original', u'chinese', u'character', u',', u'call', u'Hn', u't', u',', u'as', u'well', u'as', u'a', u'system', u'of', u'newly', u'create', u'and', u'modify', u'character', u'call', u'Ch', u'nm', u'-rrb-', u'adapt', u'to', u'write', u'vietnamese', u',', u'in', u'a', u'similar', u'pattern', u'as', u'use', u'in', u'Japan', u'-lrb-', u'kanji', u'-rrb-', u',', u'Korea', u'-lrb-', u'hanja', u'-rrb-', u',', u'and', u'other', u'country', u'in', u'the', u'Sinosphere', u'.'], u'pos': [u'IN', u'NN', u',', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'RB', u'VBD', u'IN', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NNP', u',', u'DT', u'JJ', u'NN', u'VBD', u'VBN', u'VBG', u'JJ', u'NNS', u'-LRB-', u'VBG', u'CC', u'DT', u'JJ', u'JJ', u'NNS', u',', u'VBN', u'NNP', u'NN', u',', u'RB', u'RB', u'IN', u'DT', u'NN', u'IN', u'RB', u'VBN', u'CC', u'VBN', u'NNS', u'VBD', u'NNP', u'NN', u'-RRB-', u'VBD', u'TO', u'VB', u'JJ', u',', u'IN', u'DT', u'JJ', u'NN', u'IN', u'VBN', u'IN', u'NNP', u'-LRB-', u'FW', u'-RRB-', u',', u'NNP', u'-LRB-', u'NN', u'-RRB-', u',', u'CC', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'.'], u'char_offsets': [[5729, 5731], [5732, 5736], [5736, 5737], [5738, 5740], [5741, 5744], [5745, 5755], [5756, 5764], [5765, 5767], [5768, 5775], [5776, 5785], [5786, 5790], [5791, 5793], [5794, 5802], [5803, 5809], [5810, 5813], [5814, 5823], [5824, 5826], [5827, 5830], [5831, 5837], [5838, 5848], [5848, 5849], [5850, 5853], [5854, 5864], [5865, 5873], [5874, 5877], [5878, 5885], [5886, 5891], [5892, 5899], [5900, 5910], [5911, 5912], [5912, 5917], [5918, 5922], [5923, 5926], [5927, 5935], [5936, 5943], [5944, 5954], [5954, 5955], [5956, 5962], [5963, 5965], [5966, 5967], [5967, 5968], [5969, 5971], [5972, 5976], [5977, 5979], [5980, 5981], [5982, 5988], [5989, 5991], [5992, 5997], [5998, 6005], [6006, 6009], [6010, 6018], [6019, 6029], [6030, 6036], [6037, 6039], [6040, 6042], [6042, 6043], [6044, 6051], [6052, 6054], [6055, 6060], [6061, 6071], [6071, 6072], [6073, 6075], [6076, 6077], [6078, 6085], [6086, 6093], [6094, 6096], [6097, 6101], [6102, 6104], [6105, 6110], [6111, 6112], [6112, 6117], [6117, 6118], [6118, 6119], [6120, 6125], [6126, 6127], [6127, 6132], [6132, 6133], [6133, 6134], [6135, 6138], [6139, 6144], [6145, 6154], [6155, 6157], [6158, 6161], [6162, 6172], [6172, 6173]]}) 
answer: set([u'formal'])
candidate Sentence: (0.20254814624786377, {u'tokens': [u',', u'The', u'world', u"'s", u'writing', u'systems', u',', u'-LRB-', u'pp.', u'691-699', u'-RRB-', u'.'], u'lemmas': [u',', u'the', u'world', u"'s", u'write', u'system', u',', u'-lrb-', u'pp.', u'691-699', u'-rrb-', u'.'], u'pos': [u',', u'DT', u'NN', u'POS', u'VBG', u'NNS', u',', u'-LRB-', u'FW', u'CD', u'-RRB-', u'.'], u'char_offsets': [[31355, 31356], [31357, 31360], [31361, 31366], [31366, 31368], [31369, 31376], [31377, 31384], [31384, 31385], [31386, 31387], [31387, 31390], [31391, 31398], [31398, 31399], [31399, 31400]]}) 
answer: set([u'vietnames', u'use', u'chines', u'formal'])
candidate Sentence: (0.14939886331558228, {u'tokens': [u'As', u'contact', u'with', u'the', u'West', u'grew', u',', u'the', u'Quc', u'Ng', u'system', u'of', u'Romanized', u'writing', u'was', u'developed', u'in', u'the', u'17th', u'century', u'by', u'Portuguese', u'and', u'other', u'Europeans', u'involved', u'in', u'proselytizing', u'and', u'trade', u'in', u'Vietnam', u'.'], u'lemmas': [u'as', u'contact', u'with', u'the', u'West', u'grow', u',', u'the', u'Quc', u'ng', u'system', u'of', u'romanized', u'writing', u'be', u'develop', u'in', u'the', u'17th', u'century', u'by', u'portuguese', u'and', u'other', u'european', u'involve', u'in', u'proselytize', u'and', u'trade', u'in', u'Vietnam', u'.'], u'pos': [u'IN', u'NN', u'IN', u'DT', u'NNP', u'VBD', u',', u'DT', u'NNP', u'NN', u'NN', u'IN', u'JJ', u'NN', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'CC', u'JJ', u'NNS', u'VBN', u'IN', u'VBG', u'CC', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[6369, 6371], [6372, 6379], [6380, 6384], [6385, 6388], [6389, 6393], [6394, 6398], [6398, 6399], [6400, 6403], [6404, 6407], [6408, 6410], [6411, 6417], [6418, 6420], [6421, 6430], [6431, 6438], [6439, 6442], [6443, 6452], [6453, 6455], [6456, 6459], [6460, 6464], [6465, 6472], [6473, 6475], [6476, 6486], [6487, 6490], [6491, 6496], [6497, 6506], [6507, 6515], [6516, 6518], [6519, 6532], [6533, 6536], [6537, 6542], [6543, 6545], [6546, 6553], [6553, 6554]]}) 
answer: set([u'vietnames', u'use', u'chines', u'formal'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Was Vietnamese formally written using the Chinese writing system?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes, Vietnamese was *formerly* written using the Chinese writing system.
Difficulty = easy
Article_Title = Vietnamese_language
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set5/a10.txt

No
_____________________________ test_yesno[param326] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb3d128>, (<src.tfidf.TF_IDF object at 0x109b86150>, set(['violin'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x10cb3d128>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.3285260796546936, {u'tokens': [u'A', u'distinctive', u'feature', u'of', u'a', u'violin', u'body', u'is', u'its', u'``', u'hourglass', u"''", u'shape', u'and', u'the', u'arching', u'of', u'its', u'top', u'and', u'back', u'.'], u'lemmas': [u'a', u'distinctive', u'feature', u'of', u'a', u'violin', u'body', u'be', u'its', u'``', u'hourglass', u"''", u'shape', u'and', u'the', u'arching', u'of', u'its', u'top', u'and', u'back', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'NN', u'VBZ', u'PRP$', u'``', u'NN', u"''", u'NN', u'CC', u'DT', u'NN', u'IN', u'PRP$', u'JJ', u'CC', u'RB', u'.'], u'char_offsets': [[5547, 5548], [5549, 5560], [5561, 5568], [5569, 5571], [5572, 5573], [5574, 5580], [5581, 5585], [5586, 5588], [5589, 5592], [5593, 5594], [5594, 5603], [5603, 5604], [5605, 5610], [5611, 5614], [5615, 5618], [5619, 5626], [5627, 5629], [5630, 5633], [5634, 5637], [5638, 5641], [5642, 5646], [5646, 5647]]}) 
answer: set([u'like'])
candidate Sentence: (0.32379016280174255, {u'tokens': [u'*', u'Why', u'is', u'the', u'violin', u'so', u'hard', u'to', u'play', u'?'], u'lemmas': [u'*', u'why', u'be', u'the', u'violin', u'so', u'hard', u'to', u'play', u'?'], u'pos': [u'SYM', u'WRB', u'VBZ', u'DT', u'NN', u'RB', u'JJ', u'TO', u'VB', u'.'], u'char_offsets': [[44817, 44818], [44820, 44823], [44824, 44826], [44827, 44830], [44831, 44837], [44838, 44840], [44841, 44845], [44846, 44848], [44849, 44853], [44853, 44854]]}) 
answer: set([u'shape', u'like', u'hourglass'])
candidate Sentence: (0.20850390195846558, {u'tokens': [u'The', u'hourglass', u'shape', u'comprises', u'two', u'upper', u'bouts', u',', u'two', u'lower', u'bouts', u',', u'and', u'two', u'concave', u'C-bouts', u'at', u'the', u'``', u'waist', u',', u"''", u'providing', u'clearance', u'for', u'the', u'bow', u'.'], u'lemmas': [u'the', u'hourglass', u'shape', u'comprise', u'two', u'upper', u'bout', u',', u'two', u'lower', u'bout', u',', u'and', u'two', u'concave', u'c-bout', u'at', u'the', u'``', u'waist', u',', u"''", u'provide', u'clearance', u'for', u'the', u'bow', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBZ', u'CD', u'JJ', u'NNS', u',', u'CD', u'JJR', u'NNS', u',', u'CC', u'CD', u'JJ', u'NNS', u'IN', u'DT', u'``', u'NN', u',', u"''", u'VBG', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[5648, 5651], [5652, 5661], [5662, 5667], [5668, 5677], [5678, 5681], [5682, 5687], [5688, 5693], [5693, 5694], [5695, 5698], [5699, 5704], [5705, 5710], [5710, 5711], [5712, 5715], [5716, 5719], [5720, 5727], [5728, 5735], [5736, 5738], [5739, 5742], [5743, 5744], [5744, 5749], [5749, 5750], [5750, 5751], [5752, 5761], [5762, 5771], [5772, 5775], [5776, 5779], [5780, 5783], [5783, 5784]]}) 
answer: set([u'like'])
candidate Sentence: (0.15763877332210541, {u'tokens': [u'The', u'arched', u'shape', u',', u'the', u'thickness', u'of', u'the', u'wood', u',', u'and', u'its', u'physical', u'qualities', u'govern', u'the', u'sound', u'of', u'a', u'violin', u'.'], u'lemmas': [u'the', u'arched', u'shape', u',', u'the', u'thickness', u'of', u'the', u'wood', u',', u'and', u'its', u'physical', u'quality', u'govern', u'the', u'sound', u'of', u'a', u'violin', u'.'], u'pos': [u'DT', u'JJ', u'NN', u',', u'DT', u'NN', u'IN', u'DT', u'NN', u',', u'CC', u'PRP$', u'JJ', u'NNS', u'VBP', u'DT', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[10171, 10174], [10175, 10181], [10182, 10187], [10187, 10188], [10189, 10192], [10193, 10202], [10203, 10205], [10206, 10209], [10210, 10214], [10214, 10215], [10216, 10219], [10220, 10223], [10224, 10232], [10233, 10242], [10243, 10249], [10250, 10253], [10254, 10259], [10260, 10262], [10263, 10264], [10265, 10271], [10271, 10272]]}) 
answer: set([u'like', u'hourglass'])
candidate Sentence: (0.12673331797122955, {u'tokens': [u'The', u'electric', u'violin', u'has', u'even', u'been', u'used', u'by', u'bands', u'like', u'The', u'Crxshadows', u'within', u'the', u'context', u'of', u'keyboard', u'based', u'music', u'.'], u'lemmas': [u'the', u'electric', u'violin', u'have', u'even', u'be', u'use', u'by', u'band', u'like', u'the', u'crxshadow', u'within', u'the', u'context', u'of', u'keyboard', u'base', u'music', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VBZ', u'RB', u'VBN', u'VBN', u'IN', u'NNS', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NN', u'IN', u'NN', u'VBN', u'NN', u'.'], u'char_offsets': [[37823, 37826], [37827, 37835], [37836, 37842], [37843, 37846], [37847, 37851], [37852, 37856], [37857, 37861], [37862, 37864], [37865, 37870], [37871, 37875], [37876, 37879], [37880, 37890], [37891, 37897], [37898, 37901], [37902, 37909], [37910, 37912], [37913, 37921], [37922, 37927], [37928, 37933], [37933, 37934]]}) 
answer: set([u'shape', u'hourglass'])
candidate Sentence: (0.11969494819641113, {u'tokens': [u'The', u'oldest', u'documented', u'violin', u'to', u'have', u'four', u'strings', u',', u'like', u'the', u'modern', u'violin', u',', u'is', u'supposed', u'to', u'have', u'been', u'constructed', u'in', u'1555', u'by', u'Andrea', u'Amati', u',', u'but', u'the', u'date', u'is', u'doubtuful', u'.'], u'lemmas': [u'the', u'oldest', u'document', u'violin', u'to', u'have', u'four', u'string', u',', u'like', u'the', u'modern', u'violin', u',', u'be', u'suppose', u'to', u'have', u'be', u'construct', u'in', u'1555', u'by', u'Andrea', u'Amati', u',', u'but', u'the', u'date', u'be', u'doubtuful', u'.'], u'pos': [u'DT', u'JJS', u'VBN', u'NN', u'TO', u'VB', u'CD', u'NNS', u',', u'IN', u'DT', u'JJ', u'NN', u',', u'VBZ', u'VBN', u'TO', u'VB', u'VBN', u'VBN', u'IN', u'CD', u'IN', u'NNP', u'NNP', u',', u'CC', u'DT', u'NN', u'VBZ', u'JJ', u'.'], u'char_offsets': [[3273, 3276], [3277, 3283], [3284, 3294], [3295, 3301], [3302, 3304], [3305, 3309], [3310, 3314], [3315, 3322], [3322, 3323], [3324, 3328], [3329, 3332], [3333, 3339], [3340, 3346], [3346, 3347], [3348, 3350], [3351, 3359], [3360, 3362], [3363, 3367], [3368, 3372], [3373, 3384], [3385, 3387], [3388, 3392], [3393, 3395], [3396, 3402], [3403, 3408], [3408, 3409], [3410, 3413], [3414, 3417], [3418, 3422], [3423, 3425], [3426, 3435], [3435, 3436]]}) 
answer: set([u'shape', u'hourglass'])
candidate Sentence: (0.10749715566635132, {u'tokens': [u'The', u'``', u'voice', u"''", u'of', u'a', u'violin', u'depends', u'on', u'its', u'shape', u',', u'the', u'wood', u'it', u'is', u'made', u'from', u',', u'the', u'graduation', u'-LRB-', u'the', u'thickness', u'profile', u'-RRB-', u'of', u'both', u'the', u'top', u'and', u'back', u',', u'and', u'the', u'varnish', u'which', u'coats', u'its', u'outside', u'surface', u'.'], u'lemmas': [u'the', u'``', u'voice', u"''", u'of', u'a', u'violin', u'depend', u'on', u'its', u'shape', u',', u'the', u'wood', u'it', u'be', u'make', u'from', u',', u'the', u'graduation', u'-lrb-', u'the', u'thickness', u'profile', u'-rrb-', u'of', u'both', u'the', u'top', u'and', u'back', u',', u'and', u'the', u'varnish', u'which', u'coat', u'its', u'outside', u'surface', u'.'], u'pos': [u'DT', u'``', u'NN', u"''", u'IN', u'DT', u'NN', u'VBZ', u'IN', u'PRP$', u'NN', u',', u'DT', u'NN', u'PRP', u'VBZ', u'VBN', u'IN', u',', u'DT', u'NN', u'-LRB-', u'DT', u'NN', u'NN', u'-RRB-', u'IN', u'CC', u'DT', u'JJ', u'CC', u'RB', u',', u'CC', u'DT', u'NN', u'WDT', u'NNS', u'PRP$', u'JJ', u'NN', u'.'], u'char_offsets': [[5785, 5788], [5789, 5790], [5790, 5795], [5795, 5796], [5797, 5799], [5800, 5801], [5802, 5808], [5809, 5816], [5817, 5819], [5820, 5823], [5824, 5829], [5829, 5830], [5831, 5834], [5835, 5839], [5840, 5842], [5843, 5845], [5846, 5850], [5851, 5855], [5855, 5856], [5857, 5860], [5861, 5871], [5872, 5873], [5873, 5876], [5877, 5886], [5887, 5894], [5894, 5895], [5896, 5898], [5899, 5903], [5904, 5907], [5908, 5911], [5912, 5915], [5916, 5920], [5920, 5921], [5922, 5925], [5926, 5929], [5930, 5937], [5938, 5943], [5944, 5949], [5950, 5953], [5954, 5961], [5962, 5969], [5969, 5970]]}) 
answer: set([u'like', u'hourglass'])
candidate Sentence: (0.10012640058994293, {u'tokens': [u'Hins-Anders', u'painted', u'by', u'Anders', u'Zorn', u',', u'1904', u'Like', u'many', u'other', u'instruments', u'used', u'in', u'classical', u'music', u',', u'the', u'violin', u'descends', u'from', u'remote', u'ancestors', u'that', u'were', u'used', u'for', u'folk', u'music', u'.'], u'lemmas': [u'Hins-Anders', u'paint', u'by', u'Anders', u'Zorn', u',', u'1904', u'like', u'many', u'other', u'instrument', u'use', u'in', u'classical', u'music', u',', u'the', u'violin', u'descend', u'from', u'remote', u'ancestor', u'that', u'be', u'use', u'for', u'folk', u'music', u'.'], u'pos': [u'NNP', u'VBN', u'IN', u'NNP', u'NNP', u',', u'CD', u'IN', u'JJ', u'JJ', u'NNS', u'VBN', u'IN', u'JJ', u'NN', u',', u'DT', u'NN', u'VBZ', u'IN', u'JJ', u'NNS', u'WDT', u'VBD', u'VBN', u'IN', u'NN', u'NN', u'.'], u'char_offsets': [[38491, 38502], [38503, 38510], [38511, 38513], [38514, 38520], [38521, 38525], [38525, 38526], [38527, 38531], [38532, 38536], [38537, 38541], [38542, 38547], [38548, 38559], [38560, 38564], [38565, 38567], [38568, 38577], [38578, 38583], [38583, 38584], [38585, 38588], [38589, 38595], [38596, 38604], [38605, 38609], [38610, 38616], [38617, 38626], [38627, 38631], [38632, 38636], [38637, 38641], [38642, 38645], [38646, 38650], [38651, 38656], [38656, 38657]]}) 
answer: set([u'shape', u'hourglass'])
candidate Sentence: (0.082919992506504059, {u'tokens': [u'An', u'electric', u'violin', u'is', u'a', u'violin', u'equipped', u'with', u'an', u'electric', u'signal', u'output', u'of', u'its', u'sound', u',', u'and', u'is', u'generally', u'considered', u'to', u'be', u'a', u'specially', u'constructed', u'instrument', u'which', u'can', u'either', u'be', u':', u'*', u'an', u'electro-acoustic', u'violin', u'capable', u'of', u'producing', u'both', u'acoustic', u'sound', u'and', u'electric', u'signal', u'*', u'an', u'electric', u'violin', u'capable', u'of', u'producing', u'only', u'electric', u'signal', u'To', u'be', u'effective', u'as', u'an', u'acoustic', u'violin', u',', u'electro-acoustic', u'violins', u'retain', u'much', u'of', u'the', u'resonating', u'body', u'of', u'the', u'violin', u',', u'often', u'looking', u'very', u'much', u'like', u',', u'sometimes', u'even', u'identical', u'to', u',', u'an', u'acoustic', u'violin', u'or', u'fiddle', u'.'], u'lemmas': [u'a', u'electric', u'violin', u'be', u'a', u'violin', u'equip', u'with', u'a', u'electric', u'signal', u'output', u'of', u'its', u'sound', u',', u'and', u'be', u'generally', u'consider', u'to', u'be', u'a', u'specially', u'construct', u'instrument', u'which', u'can', u'either', u'be', u':', u'*', u'a', u'electro-acoustic', u'violin', u'capable', u'of', u'produce', u'both', u'acoustic', u'sound', u'and', u'electric', u'signal', u'*', u'a', u'electric', u'violin', u'capable', u'of', u'produce', u'only', u'electric', u'signal', u'to', u'be', u'effective', u'as', u'a', u'acoustic', u'violin', u',', u'electro-acoustic', u'violin', u'retain', u'much', u'of', u'the', u'resonate', u'body', u'of', u'the', u'violin', u',', u'often', u'look', u'very', u'much', u'like', u',', u'sometimes', u'even', u'identical', u'to', u',', u'a', u'acoustic', u'violin', u'or', u'fiddle', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VBZ', u'DT', u'NN', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'NN', u'IN', u'PRP$', u'NN', u',', u'CC', u'VBZ', u'RB', u'VBN', u'TO', u'VB', u'DT', u'RB', u'VBN', u'NN', u'WDT', u'MD', u'RB', u'VB', u':', u'SYM', u'DT', u'JJ', u'NN', u'JJ', u'IN', u'VBG', u'CC', u'JJ', u'NN', u'CC', u'JJ', u'NN', u'SYM', u'DT', u'JJ', u'NN', u'JJ', u'IN', u'VBG', u'RB', u'JJ', u'NN', u'TO', u'VB', u'JJ', u'IN', u'DT', u'JJ', u'NN', u',', u'JJ', u'NNS', u'VBP', u'RB', u'IN', u'DT', u'VBG', u'NN', u'IN', u'DT', u'NN', u',', u'RB', u'VBG', u'RB', u'RB', u'IN', u',', u'RB', u'RB', u'JJ', u'TO', u',', u'DT', u'JJ', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[40025, 40027], [40028, 40036], [40037, 40043], [40044, 40046], [40047, 40048], [40049, 40055], [40056, 40064], [40065, 40069], [40070, 40072], [40073, 40081], [40082, 40088], [40089, 40095], [40096, 40098], [40099, 40102], [40103, 40108], [40108, 40109], [40110, 40113], [40114, 40116], [40117, 40126], [40127, 40137], [40138, 40140], [40141, 40143], [40144, 40145], [40146, 40155], [40156, 40167], [40168, 40178], [40179, 40184], [40185, 40188], [40189, 40195], [40196, 40198], [40198, 40199], [40200, 40201], [40202, 40204], [40205, 40221], [40222, 40228], [40229, 40236], [40237, 40239], [40240, 40249], [40250, 40254], [40255, 40263], [40264, 40269], [40270, 40273], [40274, 40282], [40283, 40289], [40290, 40291], [40292, 40294], [40295, 40303], [40304, 40310], [40311, 40318], [40319, 40321], [40322, 40331], [40332, 40336], [40337, 40345], [40346, 40352], [40353, 40355], [40356, 40358], [40359, 40368], [40369, 40371], [40372, 40374], [40375, 40383], [40384, 40390], [40390, 40391], [40392, 40408], [40409, 40416], [40417, 40423], [40424, 40428], [40429, 40431], [40432, 40435], [40436, 40446], [40447, 40451], [40452, 40454], [40455, 40458], [40459, 40465], [40465, 40466], [40467, 40472], [40473, 40480], [40481, 40485], [40486, 40490], [40491, 40495], [40495, 40496], [40497, 40506], [40507, 40511], [40512, 40521], [40522, 40524], [40524, 40525], [40526, 40528], [40529, 40537], [40538, 40544], [40545, 40547], [40548, 40554], [40554, 40555]]}) 
answer: set([u'shape', u'hourglass'])
candidate Sentence: (0.079025343060493469, {u'tokens': [u'The', u'tailpiece', u'anchors', u'the', u'strings', u'to', u'the', u'lower', u'bout', u'of', u'the', u'violin', u'by', u'means', u'of', u'the', u'tailgut', u',', u'which', u'loops', u'around', u'an', u'ebony', u'button', u'called', u'the', u'tailpin', u'-LRB-', u'sometimes', u'confusingly', u'called', u'``', u'endpin', u"''", u'like', u'the', u'cello', u"'s", u'spike', u'-RRB-', u',', u'which', u'fits', u'into', u'a', u'tapered', u'hole', u'in', u'the', u'bottom', u'block', u'.'], u'lemmas': [u'the', u'tailpiece', u'anchor', u'the', u'string', u'to', u'the', u'lower', u'bout', u'of', u'the', u'violin', u'by', u'means', u'of', u'the', u'tailgut', u',', u'which', u'loop', u'around', u'a', u'ebony', u'button', u'call', u'the', u'tailpin', u'-lrb-', u'sometimes', u'confusingly', u'call', u'``', u'endpin', u"''", u'like', u'the', u'cello', u"'s", u'spike', u'-rrb-', u',', u'which', u'fit', u'into', u'a', u'tapered', u'hole', u'in', u'the', u'bottom', u'block', u'.'], u'pos': [u'DT', u'NN', u'NNS', u'DT', u'NNS', u'TO', u'DT', u'JJR', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNS', u'IN', u'DT', u'NN', u',', u'WDT', u'NNS', u'IN', u'DT', u'NN', u'NN', u'VBD', u'DT', u'NN', u'-LRB-', u'RB', u'RB', u'VBN', u'``', u'NN', u"''", u'IN', u'DT', u'NN', u'POS', u'NN', u'-RRB-', u',', u'WDT', u'VBZ', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[8427, 8430], [8431, 8440], [8441, 8448], [8449, 8452], [8453, 8460], [8461, 8463], [8464, 8467], [8468, 8473], [8474, 8478], [8479, 8481], [8482, 8485], [8486, 8492], [8493, 8495], [8496, 8501], [8502, 8504], [8505, 8508], [8509, 8516], [8516, 8517], [8518, 8523], [8524, 8529], [8530, 8536], [8537, 8539], [8540, 8545], [8546, 8552], [8553, 8559], [8560, 8563], [8564, 8571], [8572, 8573], [8573, 8582], [8583, 8594], [8595, 8601], [8602, 8603], [8603, 8609], [8609, 8610], [8611, 8615], [8616, 8619], [8620, 8625], [8625, 8627], [8628, 8633], [8633, 8634], [8634, 8635], [8636, 8641], [8642, 8646], [8647, 8651], [8652, 8653], [8654, 8661], [8662, 8666], [8667, 8669], [8670, 8673], [8674, 8680], [8681, 8686], [8686, 8687]]}) 
answer: set([u'shape', u'hourglass'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is the violin shaped like an hourglass?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Violin
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a2.txt

No
_____________________________ test_yesno[param327] _____________________________

param = (<src.question_processing.Question_parser instance at 0x10cb3d1b8>, (<src.tfidf.TF_IDF object at 0x109b86150>, set(['violin'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x10cb3d1b8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.3285260796546936, {u'tokens': [u'A', u'distinctive', u'feature', u'of', u'a', u'violin', u'body', u'is', u'its', u'``', u'hourglass', u"''", u'shape', u'and', u'the', u'arching', u'of', u'its', u'top', u'and', u'back', u'.'], u'lemmas': [u'a', u'distinctive', u'feature', u'of', u'a', u'violin', u'body', u'be', u'its', u'``', u'hourglass', u"''", u'shape', u'and', u'the', u'arching', u'of', u'its', u'top', u'and', u'back', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'NN', u'VBZ', u'PRP$', u'``', u'NN', u"''", u'NN', u'CC', u'DT', u'NN', u'IN', u'PRP$', u'JJ', u'CC', u'RB', u'.'], u'char_offsets': [[5547, 5548], [5549, 5560], [5561, 5568], [5569, 5571], [5572, 5573], [5574, 5580], [5581, 5585], [5586, 5588], [5589, 5592], [5593, 5594], [5594, 5603], [5603, 5604], [5605, 5610], [5611, 5614], [5615, 5618], [5619, 5626], [5627, 5629], [5630, 5633], [5634, 5637], [5638, 5641], [5642, 5646], [5646, 5647]]}) 
answer: set([u'like'])
candidate Sentence: (0.32379016280174255, {u'tokens': [u'*', u'Why', u'is', u'the', u'violin', u'so', u'hard', u'to', u'play', u'?'], u'lemmas': [u'*', u'why', u'be', u'the', u'violin', u'so', u'hard', u'to', u'play', u'?'], u'pos': [u'SYM', u'WRB', u'VBZ', u'DT', u'NN', u'RB', u'JJ', u'TO', u'VB', u'.'], u'char_offsets': [[44817, 44818], [44820, 44823], [44824, 44826], [44827, 44830], [44831, 44837], [44838, 44840], [44841, 44845], [44846, 44848], [44849, 44853], [44853, 44854]]}) 
answer: set([u'shape', u'like', u'hourglass'])
candidate Sentence: (0.20850390195846558, {u'tokens': [u'The', u'hourglass', u'shape', u'comprises', u'two', u'upper', u'bouts', u',', u'two', u'lower', u'bouts', u',', u'and', u'two', u'concave', u'C-bouts', u'at', u'the', u'``', u'waist', u',', u"''", u'providing', u'clearance', u'for', u'the', u'bow', u'.'], u'lemmas': [u'the', u'hourglass', u'shape', u'comprise', u'two', u'upper', u'bout', u',', u'two', u'lower', u'bout', u',', u'and', u'two', u'concave', u'c-bout', u'at', u'the', u'``', u'waist', u',', u"''", u'provide', u'clearance', u'for', u'the', u'bow', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBZ', u'CD', u'JJ', u'NNS', u',', u'CD', u'JJR', u'NNS', u',', u'CC', u'CD', u'JJ', u'NNS', u'IN', u'DT', u'``', u'NN', u',', u"''", u'VBG', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[5648, 5651], [5652, 5661], [5662, 5667], [5668, 5677], [5678, 5681], [5682, 5687], [5688, 5693], [5693, 5694], [5695, 5698], [5699, 5704], [5705, 5710], [5710, 5711], [5712, 5715], [5716, 5719], [5720, 5727], [5728, 5735], [5736, 5738], [5739, 5742], [5743, 5744], [5744, 5749], [5749, 5750], [5750, 5751], [5752, 5761], [5762, 5771], [5772, 5775], [5776, 5779], [5780, 5783], [5783, 5784]]}) 
answer: set([u'like'])
candidate Sentence: (0.15763877332210541, {u'tokens': [u'The', u'arched', u'shape', u',', u'the', u'thickness', u'of', u'the', u'wood', u',', u'and', u'its', u'physical', u'qualities', u'govern', u'the', u'sound', u'of', u'a', u'violin', u'.'], u'lemmas': [u'the', u'arched', u'shape', u',', u'the', u'thickness', u'of', u'the', u'wood', u',', u'and', u'its', u'physical', u'quality', u'govern', u'the', u'sound', u'of', u'a', u'violin', u'.'], u'pos': [u'DT', u'JJ', u'NN', u',', u'DT', u'NN', u'IN', u'DT', u'NN', u',', u'CC', u'PRP$', u'JJ', u'NNS', u'VBP', u'DT', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[10171, 10174], [10175, 10181], [10182, 10187], [10187, 10188], [10189, 10192], [10193, 10202], [10203, 10205], [10206, 10209], [10210, 10214], [10214, 10215], [10216, 10219], [10220, 10223], [10224, 10232], [10233, 10242], [10243, 10249], [10250, 10253], [10254, 10259], [10260, 10262], [10263, 10264], [10265, 10271], [10271, 10272]]}) 
answer: set([u'like', u'hourglass'])
candidate Sentence: (0.12673331797122955, {u'tokens': [u'The', u'electric', u'violin', u'has', u'even', u'been', u'used', u'by', u'bands', u'like', u'The', u'Crxshadows', u'within', u'the', u'context', u'of', u'keyboard', u'based', u'music', u'.'], u'lemmas': [u'the', u'electric', u'violin', u'have', u'even', u'be', u'use', u'by', u'band', u'like', u'the', u'crxshadow', u'within', u'the', u'context', u'of', u'keyboard', u'base', u'music', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VBZ', u'RB', u'VBN', u'VBN', u'IN', u'NNS', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NN', u'IN', u'NN', u'VBN', u'NN', u'.'], u'char_offsets': [[37823, 37826], [37827, 37835], [37836, 37842], [37843, 37846], [37847, 37851], [37852, 37856], [37857, 37861], [37862, 37864], [37865, 37870], [37871, 37875], [37876, 37879], [37880, 37890], [37891, 37897], [37898, 37901], [37902, 37909], [37910, 37912], [37913, 37921], [37922, 37927], [37928, 37933], [37933, 37934]]}) 
answer: set([u'shape', u'hourglass'])
candidate Sentence: (0.11969494819641113, {u'tokens': [u'The', u'oldest', u'documented', u'violin', u'to', u'have', u'four', u'strings', u',', u'like', u'the', u'modern', u'violin', u',', u'is', u'supposed', u'to', u'have', u'been', u'constructed', u'in', u'1555', u'by', u'Andrea', u'Amati', u',', u'but', u'the', u'date', u'is', u'doubtuful', u'.'], u'lemmas': [u'the', u'oldest', u'document', u'violin', u'to', u'have', u'four', u'string', u',', u'like', u'the', u'modern', u'violin', u',', u'be', u'suppose', u'to', u'have', u'be', u'construct', u'in', u'1555', u'by', u'Andrea', u'Amati', u',', u'but', u'the', u'date', u'be', u'doubtuful', u'.'], u'pos': [u'DT', u'JJS', u'VBN', u'NN', u'TO', u'VB', u'CD', u'NNS', u',', u'IN', u'DT', u'JJ', u'NN', u',', u'VBZ', u'VBN', u'TO', u'VB', u'VBN', u'VBN', u'IN', u'CD', u'IN', u'NNP', u'NNP', u',', u'CC', u'DT', u'NN', u'VBZ', u'JJ', u'.'], u'char_offsets': [[3273, 3276], [3277, 3283], [3284, 3294], [3295, 3301], [3302, 3304], [3305, 3309], [3310, 3314], [3315, 3322], [3322, 3323], [3324, 3328], [3329, 3332], [3333, 3339], [3340, 3346], [3346, 3347], [3348, 3350], [3351, 3359], [3360, 3362], [3363, 3367], [3368, 3372], [3373, 3384], [3385, 3387], [3388, 3392], [3393, 3395], [3396, 3402], [3403, 3408], [3408, 3409], [3410, 3413], [3414, 3417], [3418, 3422], [3423, 3425], [3426, 3435], [3435, 3436]]}) 
answer: set([u'shape', u'hourglass'])
candidate Sentence: (0.10749715566635132, {u'tokens': [u'The', u'``', u'voice', u"''", u'of', u'a', u'violin', u'depends', u'on', u'its', u'shape', u',', u'the', u'wood', u'it', u'is', u'made', u'from', u',', u'the', u'graduation', u'-LRB-', u'the', u'thickness', u'profile', u'-RRB-', u'of', u'both', u'the', u'top', u'and', u'back', u',', u'and', u'the', u'varnish', u'which', u'coats', u'its', u'outside', u'surface', u'.'], u'lemmas': [u'the', u'``', u'voice', u"''", u'of', u'a', u'violin', u'depend', u'on', u'its', u'shape', u',', u'the', u'wood', u'it', u'be', u'make', u'from', u',', u'the', u'graduation', u'-lrb-', u'the', u'thickness', u'profile', u'-rrb-', u'of', u'both', u'the', u'top', u'and', u'back', u',', u'and', u'the', u'varnish', u'which', u'coat', u'its', u'outside', u'surface', u'.'], u'pos': [u'DT', u'``', u'NN', u"''", u'IN', u'DT', u'NN', u'VBZ', u'IN', u'PRP$', u'NN', u',', u'DT', u'NN', u'PRP', u'VBZ', u'VBN', u'IN', u',', u'DT', u'NN', u'-LRB-', u'DT', u'NN', u'NN', u'-RRB-', u'IN', u'CC', u'DT', u'JJ', u'CC', u'RB', u',', u'CC', u'DT', u'NN', u'WDT', u'NNS', u'PRP$', u'JJ', u'NN', u'.'], u'char_offsets': [[5785, 5788], [5789, 5790], [5790, 5795], [5795, 5796], [5797, 5799], [5800, 5801], [5802, 5808], [5809, 5816], [5817, 5819], [5820, 5823], [5824, 5829], [5829, 5830], [5831, 5834], [5835, 5839], [5840, 5842], [5843, 5845], [5846, 5850], [5851, 5855], [5855, 5856], [5857, 5860], [5861, 5871], [5872, 5873], [5873, 5876], [5877, 5886], [5887, 5894], [5894, 5895], [5896, 5898], [5899, 5903], [5904, 5907], [5908, 5911], [5912, 5915], [5916, 5920], [5920, 5921], [5922, 5925], [5926, 5929], [5930, 5937], [5938, 5943], [5944, 5949], [5950, 5953], [5954, 5961], [5962, 5969], [5969, 5970]]}) 
answer: set([u'like', u'hourglass'])
candidate Sentence: (0.10012640058994293, {u'tokens': [u'Hins-Anders', u'painted', u'by', u'Anders', u'Zorn', u',', u'1904', u'Like', u'many', u'other', u'instruments', u'used', u'in', u'classical', u'music', u',', u'the', u'violin', u'descends', u'from', u'remote', u'ancestors', u'that', u'were', u'used', u'for', u'folk', u'music', u'.'], u'lemmas': [u'Hins-Anders', u'paint', u'by', u'Anders', u'Zorn', u',', u'1904', u'like', u'many', u'other', u'instrument', u'use', u'in', u'classical', u'music', u',', u'the', u'violin', u'descend', u'from', u'remote', u'ancestor', u'that', u'be', u'use', u'for', u'folk', u'music', u'.'], u'pos': [u'NNP', u'VBN', u'IN', u'NNP', u'NNP', u',', u'CD', u'IN', u'JJ', u'JJ', u'NNS', u'VBN', u'IN', u'JJ', u'NN', u',', u'DT', u'NN', u'VBZ', u'IN', u'JJ', u'NNS', u'WDT', u'VBD', u'VBN', u'IN', u'NN', u'NN', u'.'], u'char_offsets': [[38491, 38502], [38503, 38510], [38511, 38513], [38514, 38520], [38521, 38525], [38525, 38526], [38527, 38531], [38532, 38536], [38537, 38541], [38542, 38547], [38548, 38559], [38560, 38564], [38565, 38567], [38568, 38577], [38578, 38583], [38583, 38584], [38585, 38588], [38589, 38595], [38596, 38604], [38605, 38609], [38610, 38616], [38617, 38626], [38627, 38631], [38632, 38636], [38637, 38641], [38642, 38645], [38646, 38650], [38651, 38656], [38656, 38657]]}) 
answer: set([u'shape', u'hourglass'])
candidate Sentence: (0.082919992506504059, {u'tokens': [u'An', u'electric', u'violin', u'is', u'a', u'violin', u'equipped', u'with', u'an', u'electric', u'signal', u'output', u'of', u'its', u'sound', u',', u'and', u'is', u'generally', u'considered', u'to', u'be', u'a', u'specially', u'constructed', u'instrument', u'which', u'can', u'either', u'be', u':', u'*', u'an', u'electro-acoustic', u'violin', u'capable', u'of', u'producing', u'both', u'acoustic', u'sound', u'and', u'electric', u'signal', u'*', u'an', u'electric', u'violin', u'capable', u'of', u'producing', u'only', u'electric', u'signal', u'To', u'be', u'effective', u'as', u'an', u'acoustic', u'violin', u',', u'electro-acoustic', u'violins', u'retain', u'much', u'of', u'the', u'resonating', u'body', u'of', u'the', u'violin', u',', u'often', u'looking', u'very', u'much', u'like', u',', u'sometimes', u'even', u'identical', u'to', u',', u'an', u'acoustic', u'violin', u'or', u'fiddle', u'.'], u'lemmas': [u'a', u'electric', u'violin', u'be', u'a', u'violin', u'equip', u'with', u'a', u'electric', u'signal', u'output', u'of', u'its', u'sound', u',', u'and', u'be', u'generally', u'consider', u'to', u'be', u'a', u'specially', u'construct', u'instrument', u'which', u'can', u'either', u'be', u':', u'*', u'a', u'electro-acoustic', u'violin', u'capable', u'of', u'produce', u'both', u'acoustic', u'sound', u'and', u'electric', u'signal', u'*', u'a', u'electric', u'violin', u'capable', u'of', u'produce', u'only', u'electric', u'signal', u'to', u'be', u'effective', u'as', u'a', u'acoustic', u'violin', u',', u'electro-acoustic', u'violin', u'retain', u'much', u'of', u'the', u'resonate', u'body', u'of', u'the', u'violin', u',', u'often', u'look', u'very', u'much', u'like', u',', u'sometimes', u'even', u'identical', u'to', u',', u'a', u'acoustic', u'violin', u'or', u'fiddle', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VBZ', u'DT', u'NN', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'NN', u'IN', u'PRP$', u'NN', u',', u'CC', u'VBZ', u'RB', u'VBN', u'TO', u'VB', u'DT', u'RB', u'VBN', u'NN', u'WDT', u'MD', u'RB', u'VB', u':', u'SYM', u'DT', u'JJ', u'NN', u'JJ', u'IN', u'VBG', u'CC', u'JJ', u'NN', u'CC', u'JJ', u'NN', u'SYM', u'DT', u'JJ', u'NN', u'JJ', u'IN', u'VBG', u'RB', u'JJ', u'NN', u'TO', u'VB', u'JJ', u'IN', u'DT', u'JJ', u'NN', u',', u'JJ', u'NNS', u'VBP', u'RB', u'IN', u'DT', u'VBG', u'NN', u'IN', u'DT', u'NN', u',', u'RB', u'VBG', u'RB', u'RB', u'IN', u',', u'RB', u'RB', u'JJ', u'TO', u',', u'DT', u'JJ', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[40025, 40027], [40028, 40036], [40037, 40043], [40044, 40046], [40047, 40048], [40049, 40055], [40056, 40064], [40065, 40069], [40070, 40072], [40073, 40081], [40082, 40088], [40089, 40095], [40096, 40098], [40099, 40102], [40103, 40108], [40108, 40109], [40110, 40113], [40114, 40116], [40117, 40126], [40127, 40137], [40138, 40140], [40141, 40143], [40144, 40145], [40146, 40155], [40156, 40167], [40168, 40178], [40179, 40184], [40185, 40188], [40189, 40195], [40196, 40198], [40198, 40199], [40200, 40201], [40202, 40204], [40205, 40221], [40222, 40228], [40229, 40236], [40237, 40239], [40240, 40249], [40250, 40254], [40255, 40263], [40264, 40269], [40270, 40273], [40274, 40282], [40283, 40289], [40290, 40291], [40292, 40294], [40295, 40303], [40304, 40310], [40311, 40318], [40319, 40321], [40322, 40331], [40332, 40336], [40337, 40345], [40346, 40352], [40353, 40355], [40356, 40358], [40359, 40368], [40369, 40371], [40372, 40374], [40375, 40383], [40384, 40390], [40390, 40391], [40392, 40408], [40409, 40416], [40417, 40423], [40424, 40428], [40429, 40431], [40432, 40435], [40436, 40446], [40447, 40451], [40452, 40454], [40455, 40458], [40459, 40465], [40465, 40466], [40467, 40472], [40473, 40480], [40481, 40485], [40486, 40490], [40491, 40495], [40495, 40496], [40497, 40506], [40507, 40511], [40512, 40521], [40522, 40524], [40524, 40525], [40526, 40528], [40529, 40537], [40538, 40544], [40545, 40547], [40548, 40554], [40554, 40555]]}) 
answer: set([u'shape', u'hourglass'])
candidate Sentence: (0.079025343060493469, {u'tokens': [u'The', u'tailpiece', u'anchors', u'the', u'strings', u'to', u'the', u'lower', u'bout', u'of', u'the', u'violin', u'by', u'means', u'of', u'the', u'tailgut', u',', u'which', u'loops', u'around', u'an', u'ebony', u'button', u'called', u'the', u'tailpin', u'-LRB-', u'sometimes', u'confusingly', u'called', u'``', u'endpin', u"''", u'like', u'the', u'cello', u"'s", u'spike', u'-RRB-', u',', u'which', u'fits', u'into', u'a', u'tapered', u'hole', u'in', u'the', u'bottom', u'block', u'.'], u'lemmas': [u'the', u'tailpiece', u'anchor', u'the', u'string', u'to', u'the', u'lower', u'bout', u'of', u'the', u'violin', u'by', u'means', u'of', u'the', u'tailgut', u',', u'which', u'loop', u'around', u'a', u'ebony', u'button', u'call', u'the', u'tailpin', u'-lrb-', u'sometimes', u'confusingly', u'call', u'``', u'endpin', u"''", u'like', u'the', u'cello', u"'s", u'spike', u'-rrb-', u',', u'which', u'fit', u'into', u'a', u'tapered', u'hole', u'in', u'the', u'bottom', u'block', u'.'], u'pos': [u'DT', u'NN', u'NNS', u'DT', u'NNS', u'TO', u'DT', u'JJR', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNS', u'IN', u'DT', u'NN', u',', u'WDT', u'NNS', u'IN', u'DT', u'NN', u'NN', u'VBD', u'DT', u'NN', u'-LRB-', u'RB', u'RB', u'VBN', u'``', u'NN', u"''", u'IN', u'DT', u'NN', u'POS', u'NN', u'-RRB-', u',', u'WDT', u'VBZ', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[8427, 8430], [8431, 8440], [8441, 8448], [8449, 8452], [8453, 8460], [8461, 8463], [8464, 8467], [8468, 8473], [8474, 8478], [8479, 8481], [8482, 8485], [8486, 8492], [8493, 8495], [8496, 8501], [8502, 8504], [8505, 8508], [8509, 8516], [8516, 8517], [8518, 8523], [8524, 8529], [8530, 8536], [8537, 8539], [8540, 8545], [8546, 8552], [8553, 8559], [8560, 8563], [8564, 8571], [8572, 8573], [8573, 8582], [8583, 8594], [8595, 8601], [8602, 8603], [8603, 8609], [8609, 8610], [8611, 8615], [8616, 8619], [8620, 8625], [8625, 8627], [8628, 8633], [8633, 8634], [8634, 8635], [8636, 8641], [8642, 8646], [8647, 8651], [8652, 8653], [8654, 8661], [8662, 8666], [8667, 8669], [8670, 8673], [8674, 8680], [8681, 8686], [8686, 8687]]}) 
answer: set([u'shape', u'hourglass'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']

Is the violin shaped like an hourglass?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Violin
Dataset = ../Question_Answer_Dataset_v1.2/S10/data/set2/a2.txt

No
=============== 58 failed, 282 passed, 2 error in 42.88 seconds ================
