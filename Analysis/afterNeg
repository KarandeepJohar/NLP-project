============================= test session starts ==============================
platform darwin -- Python 2.7.8, pytest-2.9.1, py-1.4.31, pluggy-0.3.1
rootdir: /Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests, inifile: 
collected 387 items

test_compute.py ..FF....FFFF.......FFFF....F......FFFFF..F...FF.......F..FF..........FF......FF..F............F..................FF..........F......................F..................FF.....FF..FF.................FF....FF.....FF..........FF....FF..............FF..FFFF..FF..FF.............F.FFFF..FF........FF..FF...............F..FF...FF..FF......FF........F..........FF....FF..........FF....FF......EE

==================================== ERRORS ====================================
_____________________ ERROR at setup of test_yesno_helper ______________________
file /Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py, line 27
  def test_yesno_helper(yesno_param):
        fixture 'yesno_param' not found
        available fixtures: tmpdir_factory, pytestconfig, cache, recwarn, monkeypatch, record_xml_property, capfd, capsys, tmpdir
        use 'py.test --fixtures [testpath]' for help on them.

/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py:27
________________________ ERROR at setup of test_factoid ________________________
file /Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py, line 48
  def test_factoid(param_factoid):
        fixture 'param_factoid' not found
        available fixtures: tmpdir_factory, pytestconfig, cache, recwarn, monkeypatch, record_xml_property, capfd, capsys, tmpdir
        use 'py.test --fixtures [testpath]' for help on them.

/Users/dhruv/Documents/Acads/sem2/nlp/NLP-project/tests/test_compute.py:48
=================================== FAILURES ===================================
______________________________ test_yesno[param2] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156d4998>, (<src.tfidf.TF_IDF object at 0x11240da10>, set(['.', 'abraham', 'lincoln'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156d4998>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.21005533635616302, {u'tokens': [u'Also', u'included', u'was', u'the', u'creation', u'of', u'the', u'system', u'of', u'national', u'banks', u'by', u'the', u'National', u'Banking', u'Acts', u'of', u'1863', u',', u'1864', u',', u'and', u'1865', u',', u'which', u'allowed', u'the', u'creation', u'of', u'a', u'strong', u'national', u'financial', u'system', u'.'], u'lemmas': [u'also', u'include', u'be', u'the', u'creation', u'of', u'the', u'system', u'of', u'national', u'bank', u'by', u'the', u'National', u'Banking', u'Acts', u'of', u'1863', u',', u'1864', u',', u'and', u'1865', u',', u'which', u'allow', u'the', u'creation', u'of', u'a', u'strong', u'national', u'financial', u'system', u'.'], u'pos': [u'RB', u'VBN', u'VBD', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'NNPS', u'IN', u'CD', u',', u'CD', u',', u'CC', u'CD', u',', u'WDT', u'VBD', u'DT', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[46959, 46963], [46964, 46972], [46973, 46976], [46977, 46980], [46981, 46989], [46990, 46992], [46993, 46996], [46997, 47003], [47004, 47006], [47007, 47015], [47016, 47021], [47022, 47024], [47025, 47028], [47029, 47037], [47038, 47045], [47046, 47050], [47051, 47053], [47054, 47058], [47058, 47059], [47060, 47064], [47064, 47065], [47066, 47069], [47070, 47074], [47074, 47075], [47076, 47081], [47082, 47089], [47090, 47093], [47094, 47102], [47103, 47105], [47106, 47107], [47108, 47114], [47115, 47123], [47124, 47133], [47134, 47140], [47140, 47141]]}) 
answer: set([u'sign'])
candidate Sentence: (0.19889551401138306, {u'tokens': [u'Gabor', u'S.', u'Boritt', u',', u"''", u'`', u'And', u'the', u'War', u'Came', u"'", u'?'], u'lemmas': [u'Gabor', u'S.', u'Boritt', u',', u"''", u'`', u'and', u'the', u'War', u'Came', u"'", u'?'], u'pos': [u'NNP', u'NNP', u'NNP', u',', u"''", u'``', u'CC', u'DT', u'NNP', u'NNP', u'POS', u'.'], u'char_offsets': [[22643, 22648], [22649, 22651], [22652, 22658], [22658, 22659], [22660, 22661], [22661, 22662], [22662, 22665], [22666, 22669], [22670, 22673], [22674, 22678], [22678, 22679], [22679, 22680]]}) 
answer: set([u'1863', u'nation', u'act', u'bank', u'sign'])
candidate Sentence: (0.18412096798419952, {u'tokens': [u'Abraham', u'Lincoln', u"'s", u'official', u'White', u'House', u'portrait', u'Lincoln', u'appointed', u'the', u'following', u'Justices', u'to', u'the', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u':', u'*', u'Noah', u'Haynes', u'Swayne', u'1862', u'*', u'Samuel', u'Freeman', u'Miller', u'1862', u'*', u'Stephen', u'Johnson', u'Field', u'1863', u'*', u'Salmon', u'P.', u'Chase', u'Chief', u'Justice', u'1864', u'*', u'Pacific', u'Railway', u'Acts', u'of', u'1862', u'and', u'1864', u'*', u'United', u'States', u'Department', u'of', u'Agriculture', u'-LRB-', u'1862', u'-RRB-', u'*', u'National', u'Banking', u'Act', u'of', u'1863', u'In', u'March', u'1860', u'in', u'a', u'speech', u'in', u'New', u'Haven', u',', u'Connecticut', u',', u'Lincoln', u'said', u',', u'with', u'respect', u'to', u'slavery', u',', u'Whenever', u'this', u'question', u'shall', u'be', u'settled', u',', u'it', u'must', u'be', u'settled', u'on', u'some', u'philosophical', u'basis', u'.'], u'lemmas': [u'Abraham', u'Lincoln', u"'s", u'official', u'White', u'House', u'portrait', u'Lincoln', u'appoint', u'the', u'follow', u'Justices', u'to', u'the', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u':', u'*', u'Noah', u'Haynes', u'Swayne', u'1862', u'*', u'Samuel', u'Freeman', u'Miller', u'1862', u'*', u'Stephen', u'Johnson', u'Field', u'1863', u'*', u'Salmon', u'P.', u'Chase', u'Chief', u'Justice', u'1864', u'*', u'Pacific', u'Railway', u'act', u'of', u'1862', u'and', u'1864', u'*', u'United', u'States', u'Department', u'of', u'Agriculture', u'-lrb-', u'1862', u'-rrb-', u'*', u'National', u'Banking', u'Act', u'of', u'1863', u'in', u'March', u'1860', u'in', u'a', u'speech', u'in', u'New', u'Haven', u',', u'Connecticut', u',', u'Lincoln', u'say', u',', u'with', u'respect', u'to', u'slavery', u',', u'Whenever', u'this', u'question', u'shall', u'be', u'settle', u',', u'it', u'must', u'be', u'settle', u'on', u'some', u'philosophical', u'basis', u'.'], u'pos': [u'NNP', u'NNP', u'POS', u'JJ', u'NNP', u'NNP', u'NN', u'NNP', u'VBD', u'DT', u'VBG', u'NNPS', u'TO', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u':', u'SYM', u'NNP', u'NNP', u'NNP', u'CD', u'SYM', u'NNP', u'NNP', u'NNP', u'CD', u'SYM', u'NNP', u'NNP', u'NNP', u'CD', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'CD', u'SYM', u'NNP', u'NNP', u'NNS', u'IN', u'CD', u'CC', u'CD', u'SYM', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'SYM', u'NNP', u'NNP', u'NNP', u'IN', u'CD', u'IN', u'NNP', u'CD', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u',', u'NNP', u',', u'NNP', u'VBD', u',', u'IN', u'NN', u'TO', u'NN', u',', u'NNP', u'DT', u'NN', u'MD', u'VB', u'VBN', u',', u'PRP', u'MD', u'VB', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[52381, 52388], [52389, 52396], [52396, 52398], [52399, 52407], [52408, 52413], [52414, 52419], [52420, 52428], [52429, 52436], [52437, 52446], [52447, 52450], [52451, 52460], [52461, 52469], [52470, 52472], [52473, 52476], [52477, 52484], [52485, 52490], [52491, 52493], [52494, 52497], [52498, 52504], [52505, 52511], [52511, 52512], [52513, 52514], [52515, 52519], [52520, 52526], [52527, 52533], [52535, 52539], [52540, 52541], [52542, 52548], [52549, 52556], [52557, 52563], [52565, 52569], [52570, 52571], [52572, 52579], [52580, 52587], [52588, 52593], [52595, 52599], [52600, 52601], [52602, 52608], [52609, 52611], [52612, 52617], [52619, 52624], [52625, 52632], [52634, 52638], [52639, 52640], [52640, 52647], [52648, 52655], [52656, 52660], [52661, 52663], [52664, 52668], [52669, 52672], [52673, 52677], [52678, 52679], [52679, 52685], [52686, 52692], [52693, 52703], [52704, 52706], [52707, 52718], [52719, 52720], [52720, 52724], [52724, 52725], [52726, 52727], [52727, 52735], [52736, 52743], [52744, 52747], [52748, 52750], [52751, 52755], [52756, 52758], [52759, 52764], [52765, 52769], [52770, 52772], [52773, 52774], [52775, 52781], [52782, 52784], [52785, 52788], [52789, 52794], [52794, 52795], [52796, 52807], [52807, 52808], [52809, 52816], [52817, 52821], [52821, 52822], [52823, 52827], [52828, 52835], [52836, 52838], [52839, 52846], [52846, 52847], [52848, 52856], [52857, 52861], [52862, 52870], [52871, 52876], [52877, 52879], [52880, 52887], [52887, 52888], [52889, 52891], [52892, 52896], [52897, 52899], [52900, 52907], [52908, 52910], [52911, 52915], [52916, 52929], [52930, 52935], [52935, 52936]]}) 
answer: set([u'sign'])
candidate Sentence: (0.18314650654792786, {u'tokens': [u'While', u'it', u'did', u'not', u'abolish', u'the', u'legal', u'institution', u'of', u'slavery', u'-LRB-', u'the', u'Thirteenth', u'Amendment', u'did', u'that', u'-RRB-', u',', u'the', u'Act', u'showed', u'that', u'Lincoln', u'had', u'the', u'support', u'of', u'Congress', u'in', u'liberating', u'slaves', u'owned', u'by', u'rebels', u'.'], u'lemmas': [u'while', u'it', u'do', u'not', u'abolish', u'the', u'legal', u'institution', u'of', u'slavery', u'-lrb-', u'the', u'Thirteenth', u'Amendment', u'do', u'that', u'-rrb-', u',', u'the', u'Act', u'show', u'that', u'Lincoln', u'have', u'the', u'support', u'of', u'Congress', u'in', u'liberating', u'slave', u'own', u'by', u'rebel', u'.'], u'pos': [u'IN', u'PRP', u'VBD', u'RB', u'VB', u'DT', u'JJ', u'NN', u'IN', u'NN', u'-LRB-', u'DT', u'NNP', u'NNP', u'VBD', u'IN', u'-RRB-', u',', u'DT', u'NNP', u'VBD', u'IN', u'NNP', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'IN', u'JJ', u'NNS', u'VBN', u'IN', u'NNS', u'.'], u'char_offsets': [[30173, 30178], [30179, 30181], [30182, 30185], [30186, 30189], [30190, 30197], [30198, 30201], [30202, 30207], [30208, 30219], [30220, 30222], [30223, 30230], [30231, 30232], [30232, 30235], [30236, 30246], [30247, 30256], [30257, 30260], [30261, 30265], [30265, 30266], [30266, 30267], [30268, 30271], [30272, 30275], [30276, 30282], [30283, 30287], [30288, 30295], [30296, 30299], [30300, 30303], [30304, 30311], [30312, 30314], [30315, 30323], [30324, 30326], [30327, 30337], [30338, 30344], [30345, 30350], [30351, 30353], [30354, 30360], [30360, 30361]]}) 
answer: set([u'1863', u'nation', u'bank', u'sign'])
candidate Sentence: (0.1660742461681366, {u'tokens': [u'Lincoln', u'later', u'said', u':', u'``', u'I', u'never', u',', u'in', u'my', u'life', u',', u'felt', u'more', u'certain', u'that', u'I', u'was', u'doing', u'right', u',', u'than', u'I', u'do', u'in', u'signing', u'this', u'paper', u'.', u"''"], u'lemmas': [u'Lincoln', u'later', u'say', u':', u'``', u'I', u'never', u',', u'in', u'my', u'life', u',', u'feel', u'more', u'certain', u'that', u'I', u'be', u'do', u'right', u',', u'than', u'I', u'do', u'in', u'sign', u'this', u'paper', u'.', u"''"], u'pos': [u'NNP', u'RB', u'VBD', u':', u'``', u'PRP', u'RB', u',', u'IN', u'PRP$', u'NN', u',', u'VBD', u'RBR', u'JJ', u'IN', u'PRP', u'VBD', u'VBG', u'RB', u',', u'IN', u'PRP', u'VBP', u'IN', u'VBG', u'DT', u'NN', u'.', u"''"], u'char_offsets': [[31157, 31164], [31165, 31170], [31171, 31175], [31175, 31176], [31177, 31178], [31178, 31179], [31180, 31185], [31185, 31186], [31187, 31189], [31190, 31192], [31193, 31197], [31197, 31198], [31199, 31203], [31204, 31208], [31209, 31216], [31217, 31221], [31222, 31223], [31224, 31227], [31228, 31233], [31234, 31239], [31239, 31240], [31241, 31245], [31246, 31247], [31248, 31250], [31251, 31253], [31254, 31261], [31262, 31266], [31267, 31272], [31272, 31273], [31273, 31274]]}) 
answer: set([u'1863', u'act', u'bank', u'nation'])
candidate Sentence: (0.15986849367618561, {u'tokens': [u'The', u'Morrill', u'Land-Grant', u'Colleges', u'Act', u',', u'also', u'signed', u'in', u'1862', u',', u'provided', u'government', u'grants', u'for', u'agricultural', u'universities', u'in', u'each', u'state', u'.'], u'lemmas': [u'the', u'Morrill', u'Land-Grant', u'Colleges', u'Act', u',', u'also', u'sign', u'in', u'1862', u',', u'provide', u'government', u'grant', u'for', u'agricultural', u'university', u'in', u'each', u'state', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'RB', u'VBN', u'IN', u'CD', u',', u'VBN', u'NN', u'NNS', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[46552, 46555], [46556, 46563], [46564, 46574], [46575, 46583], [46584, 46587], [46587, 46588], [46589, 46593], [46594, 46600], [46601, 46603], [46604, 46608], [46608, 46609], [46610, 46618], [46619, 46629], [46630, 46636], [46637, 46640], [46641, 46653], [46654, 46666], [46667, 46669], [46670, 46674], [46675, 46680], [46680, 46681]]}) 
answer: set([u'1863', u'bank', u'nation'])
candidate Sentence: (0.15045711398124695, {u'tokens': [u'Thus', u',', u'he', u'signed', u'the', u'Homestead', u'Act', u'in', u'1862', u',', u'making', u'millions', u'of', u'acres', u'of', u'government-held', u'land', u'in', u'the', u'West', u'available', u'for', u'purchase', u'at', u'very', u'low', u'cost', u'.'], u'lemmas': [u'thus', u',', u'he', u'sign', u'the', u'Homestead', u'Act', u'in', u'1862', u',', u'make', u'million', u'of', u'acre', u'of', u'government-held', u'land', u'in', u'the', u'West', u'available', u'for', u'purchase', u'at', u'very', u'low', u'cost', u'.'], u'pos': [u'RB', u',', u'PRP', u'VBD', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u',', u'VBG', u'NNS', u'IN', u'NNS', u'IN', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'JJ', u'IN', u'NN', u'IN', u'RB', u'JJ', u'NN', u'.'], u'char_offsets': [[46407, 46411], [46411, 46412], [46413, 46415], [46416, 46422], [46423, 46426], [46427, 46436], [46437, 46440], [46441, 46443], [46444, 46448], [46448, 46449], [46450, 46456], [46457, 46465], [46466, 46468], [46469, 46474], [46475, 46477], [46478, 46493], [46494, 46498], [46499, 46501], [46502, 46505], [46506, 46510], [46511, 46520], [46521, 46524], [46525, 46533], [46534, 46536], [46537, 46541], [46542, 46545], [46546, 46550], [46550, 46551]]}) 
answer: set([u'1863', u'bank', u'nation'])
candidate Sentence: (0.13801385462284088, {u'tokens': [u'He', u'asked', u'rhetorically', u'that', u'even', u'were', u'the', u'Constitution', u'a', u'simple', u'contract', u',', u'would', u'it', u'not', u'require', u'the', u'agreement', u'of', u'all', u'parties', u'to', u'rescind', u'it', u'?'], u'lemmas': [u'he', u'ask', u'rhetorically', u'that', u'even', u'be', u'the', u'Constitution', u'a', u'simple', u'contract', u',', u'would', u'it', u'not', u'require', u'the', u'agreement', u'of', u'all', u'party', u'to', u'rescind', u'it', u'?'], u'pos': [u'PRP', u'VBD', u'RB', u'IN', u'RB', u'VBD', u'DT', u'NNP', u'DT', u'JJ', u'NN', u',', u'MD', u'PRP', u'RB', u'VB', u'DT', u'NN', u'IN', u'DT', u'NNS', u'TO', u'VB', u'PRP', u'.'], u'char_offsets': [[26493, 26495], [26496, 26501], [26502, 26514], [26515, 26519], [26520, 26524], [26525, 26529], [26530, 26533], [26534, 26546], [26547, 26548], [26549, 26555], [26556, 26564], [26564, 26565], [26566, 26571], [26572, 26574], [26575, 26578], [26579, 26586], [26587, 26590], [26591, 26600], [26601, 26603], [26604, 26607], [26608, 26615], [26616, 26618], [26619, 26626], [26627, 26629], [26629, 26630]]}) 
answer: set([u'1863', u'sign', u'act', u'bank', u'nation'])
candidate Sentence: (0.13410711288452148, {u'tokens': [u'His', u'Amnesty', u'Proclamation', u'of', u'December', u'8', u',', u'1863', u',', u'offered', u'pardons', u'to', u'those', u'who', u'had', u'not', u'held', u'a', u'Confederate', u'civil', u'office', u',', u'had', u'not', u'mistreated', u'Union', u'prisoners', u',', u'and', u'would', u'sign', u'an', u'oath', u'of', u'allegiance', u'.'], u'lemmas': [u'he', u'Amnesty', u'Proclamation', u'of', u'December', u'8', u',', u'1863', u',', u'offer', u'pardon', u'to', u'those', u'who', u'have', u'not', u'hold', u'a', u'confederate', u'civil', u'office', u',', u'have', u'not', u'mistreat', u'Union', u'prisoner', u',', u'and', u'would', u'sign', u'a', u'oath', u'of', u'allegiance', u'.'], u'pos': [u'PRP$', u'NNP', u'NNP', u'IN', u'NNP', u'CD', u',', u'CD', u',', u'VBD', u'NNS', u'TO', u'DT', u'WP', u'VBD', u'RB', u'VBN', u'DT', u'JJ', u'JJ', u'NN', u',', u'VBD', u'RB', u'VBN', u'NNP', u'NNS', u',', u'CC', u'MD', u'VB', u'DT', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[40783, 40786], [40787, 40794], [40795, 40807], [40808, 40810], [40811, 40819], [40820, 40821], [40821, 40822], [40823, 40827], [40827, 40828], [40829, 40836], [40837, 40844], [40845, 40847], [40848, 40853], [40854, 40857], [40858, 40861], [40862, 40865], [40866, 40870], [40871, 40872], [40873, 40884], [40885, 40890], [40891, 40897], [40897, 40898], [40899, 40902], [40903, 40906], [40907, 40917], [40918, 40923], [40924, 40933], [40933, 40934], [40935, 40938], [40939, 40944], [40945, 40949], [40950, 40952], [40953, 40957], [40958, 40960], [40961, 40971], [40971, 40972]]}) 
answer: set([u'act', u'bank', u'nation'])
candidate Sentence: (0.13406330347061157, {u'tokens': [u'The', u'Collapse', u'of', u'the', u'Confederacy', u'-LRB-', u'2001', u'-RRB-', u'p', u'80', u'Lincoln', u'did', u'not', u'show', u'the', u'pledge', u'to', u'his', u'cabinet', u',', u'but', u'asked', u'them', u'to', u'sign', u'the', u'sealed', u'envelope', u'.'], u'lemmas': [u'the', u'Collapse', u'of', u'the', u'Confederacy', u'-lrb-', u'2001', u'-rrb-', u'p', u'80', u'Lincoln', u'do', u'not', u'show', u'the', u'pledge', u'to', u'he', u'cabinet', u',', u'but', u'ask', u'they', u'to', u'sign', u'the', u'seal', u'envelope', u'.'], u'pos': [u'DT', u'NNP', u'IN', u'DT', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'NN', u'CD', u'NNP', u'VBD', u'RB', u'VB', u'DT', u'NN', u'TO', u'PRP$', u'NN', u',', u'CC', u'VBD', u'PRP', u'TO', u'VB', u'DT', u'VBN', u'NN', u'.'], u'char_offsets': [[33653, 33656], [33657, 33665], [33666, 33668], [33669, 33672], [33673, 33684], [33685, 33686], [33686, 33690], [33690, 33691], [33692, 33693], [33694, 33696], [33697, 33704], [33705, 33708], [33709, 33712], [33713, 33717], [33718, 33721], [33722, 33728], [33729, 33731], [33732, 33735], [33736, 33743], [33743, 33744], [33745, 33748], [33749, 33754], [33755, 33759], [33760, 33762], [33763, 33767], [33768, 33771], [33772, 33778], [33779, 33787], [33787, 33788]]}) 
answer: set([u'1863', u'nation', u'bank', u'act'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'lincoln', u'abraham', u'.'])

Did Lincoln sign the National Banking Act of 1863?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Abraham_Lincoln
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a4.txt

No
----------------------------- Captured stderr call -----------------------------
INFO:CoreNLP_JavaServer: INPUT: 5 documents, 310 characters, 54 tokens, 62.0 char/doc, 10.8 tok/doc RATES: 3.274 doc/sec, 35.4 tok/sec

INFO:CoreNLP_JavaServer: INPUT: 6 documents, 360 characters, 64 tokens, 60.0 char/doc, 10.7 tok/doc RATES: 3.676 doc/sec, 39.2 tok/sec

______________________________ test_yesno[param3] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156d4b48>, (<src.tfidf.TF_IDF object at 0x11240da10>, set(['.', 'abraham', 'lincoln'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x1156d4b48>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.21005533635616302, {u'tokens': [u'Also', u'included', u'was', u'the', u'creation', u'of', u'the', u'system', u'of', u'national', u'banks', u'by', u'the', u'National', u'Banking', u'Acts', u'of', u'1863', u',', u'1864', u',', u'and', u'1865', u',', u'which', u'allowed', u'the', u'creation', u'of', u'a', u'strong', u'national', u'financial', u'system', u'.'], u'lemmas': [u'also', u'include', u'be', u'the', u'creation', u'of', u'the', u'system', u'of', u'national', u'bank', u'by', u'the', u'National', u'Banking', u'Acts', u'of', u'1863', u',', u'1864', u',', u'and', u'1865', u',', u'which', u'allow', u'the', u'creation', u'of', u'a', u'strong', u'national', u'financial', u'system', u'.'], u'pos': [u'RB', u'VBN', u'VBD', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'NNPS', u'IN', u'CD', u',', u'CD', u',', u'CC', u'CD', u',', u'WDT', u'VBD', u'DT', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[46959, 46963], [46964, 46972], [46973, 46976], [46977, 46980], [46981, 46989], [46990, 46992], [46993, 46996], [46997, 47003], [47004, 47006], [47007, 47015], [47016, 47021], [47022, 47024], [47025, 47028], [47029, 47037], [47038, 47045], [47046, 47050], [47051, 47053], [47054, 47058], [47058, 47059], [47060, 47064], [47064, 47065], [47066, 47069], [47070, 47074], [47074, 47075], [47076, 47081], [47082, 47089], [47090, 47093], [47094, 47102], [47103, 47105], [47106, 47107], [47108, 47114], [47115, 47123], [47124, 47133], [47134, 47140], [47140, 47141]]}) 
answer: set([u'sign'])
candidate Sentence: (0.19889551401138306, {u'tokens': [u'Gabor', u'S.', u'Boritt', u',', u"''", u'`', u'And', u'the', u'War', u'Came', u"'", u'?'], u'lemmas': [u'Gabor', u'S.', u'Boritt', u',', u"''", u'`', u'and', u'the', u'War', u'Came', u"'", u'?'], u'pos': [u'NNP', u'NNP', u'NNP', u',', u"''", u'``', u'CC', u'DT', u'NNP', u'NNP', u'POS', u'.'], u'char_offsets': [[22643, 22648], [22649, 22651], [22652, 22658], [22658, 22659], [22660, 22661], [22661, 22662], [22662, 22665], [22666, 22669], [22670, 22673], [22674, 22678], [22678, 22679], [22679, 22680]]}) 
answer: set([u'1863', u'nation', u'act', u'bank', u'sign'])
candidate Sentence: (0.18412096798419952, {u'tokens': [u'Abraham', u'Lincoln', u"'s", u'official', u'White', u'House', u'portrait', u'Lincoln', u'appointed', u'the', u'following', u'Justices', u'to', u'the', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u':', u'*', u'Noah', u'Haynes', u'Swayne', u'1862', u'*', u'Samuel', u'Freeman', u'Miller', u'1862', u'*', u'Stephen', u'Johnson', u'Field', u'1863', u'*', u'Salmon', u'P.', u'Chase', u'Chief', u'Justice', u'1864', u'*', u'Pacific', u'Railway', u'Acts', u'of', u'1862', u'and', u'1864', u'*', u'United', u'States', u'Department', u'of', u'Agriculture', u'-LRB-', u'1862', u'-RRB-', u'*', u'National', u'Banking', u'Act', u'of', u'1863', u'In', u'March', u'1860', u'in', u'a', u'speech', u'in', u'New', u'Haven', u',', u'Connecticut', u',', u'Lincoln', u'said', u',', u'with', u'respect', u'to', u'slavery', u',', u'Whenever', u'this', u'question', u'shall', u'be', u'settled', u',', u'it', u'must', u'be', u'settled', u'on', u'some', u'philosophical', u'basis', u'.'], u'lemmas': [u'Abraham', u'Lincoln', u"'s", u'official', u'White', u'House', u'portrait', u'Lincoln', u'appoint', u'the', u'follow', u'Justices', u'to', u'the', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u':', u'*', u'Noah', u'Haynes', u'Swayne', u'1862', u'*', u'Samuel', u'Freeman', u'Miller', u'1862', u'*', u'Stephen', u'Johnson', u'Field', u'1863', u'*', u'Salmon', u'P.', u'Chase', u'Chief', u'Justice', u'1864', u'*', u'Pacific', u'Railway', u'act', u'of', u'1862', u'and', u'1864', u'*', u'United', u'States', u'Department', u'of', u'Agriculture', u'-lrb-', u'1862', u'-rrb-', u'*', u'National', u'Banking', u'Act', u'of', u'1863', u'in', u'March', u'1860', u'in', u'a', u'speech', u'in', u'New', u'Haven', u',', u'Connecticut', u',', u'Lincoln', u'say', u',', u'with', u'respect', u'to', u'slavery', u',', u'Whenever', u'this', u'question', u'shall', u'be', u'settle', u',', u'it', u'must', u'be', u'settle', u'on', u'some', u'philosophical', u'basis', u'.'], u'pos': [u'NNP', u'NNP', u'POS', u'JJ', u'NNP', u'NNP', u'NN', u'NNP', u'VBD', u'DT', u'VBG', u'NNPS', u'TO', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u':', u'SYM', u'NNP', u'NNP', u'NNP', u'CD', u'SYM', u'NNP', u'NNP', u'NNP', u'CD', u'SYM', u'NNP', u'NNP', u'NNP', u'CD', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'CD', u'SYM', u'NNP', u'NNP', u'NNS', u'IN', u'CD', u'CC', u'CD', u'SYM', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'SYM', u'NNP', u'NNP', u'NNP', u'IN', u'CD', u'IN', u'NNP', u'CD', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u',', u'NNP', u',', u'NNP', u'VBD', u',', u'IN', u'NN', u'TO', u'NN', u',', u'NNP', u'DT', u'NN', u'MD', u'VB', u'VBN', u',', u'PRP', u'MD', u'VB', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[52381, 52388], [52389, 52396], [52396, 52398], [52399, 52407], [52408, 52413], [52414, 52419], [52420, 52428], [52429, 52436], [52437, 52446], [52447, 52450], [52451, 52460], [52461, 52469], [52470, 52472], [52473, 52476], [52477, 52484], [52485, 52490], [52491, 52493], [52494, 52497], [52498, 52504], [52505, 52511], [52511, 52512], [52513, 52514], [52515, 52519], [52520, 52526], [52527, 52533], [52535, 52539], [52540, 52541], [52542, 52548], [52549, 52556], [52557, 52563], [52565, 52569], [52570, 52571], [52572, 52579], [52580, 52587], [52588, 52593], [52595, 52599], [52600, 52601], [52602, 52608], [52609, 52611], [52612, 52617], [52619, 52624], [52625, 52632], [52634, 52638], [52639, 52640], [52640, 52647], [52648, 52655], [52656, 52660], [52661, 52663], [52664, 52668], [52669, 52672], [52673, 52677], [52678, 52679], [52679, 52685], [52686, 52692], [52693, 52703], [52704, 52706], [52707, 52718], [52719, 52720], [52720, 52724], [52724, 52725], [52726, 52727], [52727, 52735], [52736, 52743], [52744, 52747], [52748, 52750], [52751, 52755], [52756, 52758], [52759, 52764], [52765, 52769], [52770, 52772], [52773, 52774], [52775, 52781], [52782, 52784], [52785, 52788], [52789, 52794], [52794, 52795], [52796, 52807], [52807, 52808], [52809, 52816], [52817, 52821], [52821, 52822], [52823, 52827], [52828, 52835], [52836, 52838], [52839, 52846], [52846, 52847], [52848, 52856], [52857, 52861], [52862, 52870], [52871, 52876], [52877, 52879], [52880, 52887], [52887, 52888], [52889, 52891], [52892, 52896], [52897, 52899], [52900, 52907], [52908, 52910], [52911, 52915], [52916, 52929], [52930, 52935], [52935, 52936]]}) 
answer: set([u'sign'])
candidate Sentence: (0.18314650654792786, {u'tokens': [u'While', u'it', u'did', u'not', u'abolish', u'the', u'legal', u'institution', u'of', u'slavery', u'-LRB-', u'the', u'Thirteenth', u'Amendment', u'did', u'that', u'-RRB-', u',', u'the', u'Act', u'showed', u'that', u'Lincoln', u'had', u'the', u'support', u'of', u'Congress', u'in', u'liberating', u'slaves', u'owned', u'by', u'rebels', u'.'], u'lemmas': [u'while', u'it', u'do', u'not', u'abolish', u'the', u'legal', u'institution', u'of', u'slavery', u'-lrb-', u'the', u'Thirteenth', u'Amendment', u'do', u'that', u'-rrb-', u',', u'the', u'Act', u'show', u'that', u'Lincoln', u'have', u'the', u'support', u'of', u'Congress', u'in', u'liberating', u'slave', u'own', u'by', u'rebel', u'.'], u'pos': [u'IN', u'PRP', u'VBD', u'RB', u'VB', u'DT', u'JJ', u'NN', u'IN', u'NN', u'-LRB-', u'DT', u'NNP', u'NNP', u'VBD', u'IN', u'-RRB-', u',', u'DT', u'NNP', u'VBD', u'IN', u'NNP', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'IN', u'JJ', u'NNS', u'VBN', u'IN', u'NNS', u'.'], u'char_offsets': [[30173, 30178], [30179, 30181], [30182, 30185], [30186, 30189], [30190, 30197], [30198, 30201], [30202, 30207], [30208, 30219], [30220, 30222], [30223, 30230], [30231, 30232], [30232, 30235], [30236, 30246], [30247, 30256], [30257, 30260], [30261, 30265], [30265, 30266], [30266, 30267], [30268, 30271], [30272, 30275], [30276, 30282], [30283, 30287], [30288, 30295], [30296, 30299], [30300, 30303], [30304, 30311], [30312, 30314], [30315, 30323], [30324, 30326], [30327, 30337], [30338, 30344], [30345, 30350], [30351, 30353], [30354, 30360], [30360, 30361]]}) 
answer: set([u'1863', u'nation', u'bank', u'sign'])
candidate Sentence: (0.1660742461681366, {u'tokens': [u'Lincoln', u'later', u'said', u':', u'``', u'I', u'never', u',', u'in', u'my', u'life', u',', u'felt', u'more', u'certain', u'that', u'I', u'was', u'doing', u'right', u',', u'than', u'I', u'do', u'in', u'signing', u'this', u'paper', u'.', u"''"], u'lemmas': [u'Lincoln', u'later', u'say', u':', u'``', u'I', u'never', u',', u'in', u'my', u'life', u',', u'feel', u'more', u'certain', u'that', u'I', u'be', u'do', u'right', u',', u'than', u'I', u'do', u'in', u'sign', u'this', u'paper', u'.', u"''"], u'pos': [u'NNP', u'RB', u'VBD', u':', u'``', u'PRP', u'RB', u',', u'IN', u'PRP$', u'NN', u',', u'VBD', u'RBR', u'JJ', u'IN', u'PRP', u'VBD', u'VBG', u'RB', u',', u'IN', u'PRP', u'VBP', u'IN', u'VBG', u'DT', u'NN', u'.', u"''"], u'char_offsets': [[31157, 31164], [31165, 31170], [31171, 31175], [31175, 31176], [31177, 31178], [31178, 31179], [31180, 31185], [31185, 31186], [31187, 31189], [31190, 31192], [31193, 31197], [31197, 31198], [31199, 31203], [31204, 31208], [31209, 31216], [31217, 31221], [31222, 31223], [31224, 31227], [31228, 31233], [31234, 31239], [31239, 31240], [31241, 31245], [31246, 31247], [31248, 31250], [31251, 31253], [31254, 31261], [31262, 31266], [31267, 31272], [31272, 31273], [31273, 31274]]}) 
answer: set([u'1863', u'act', u'bank', u'nation'])
candidate Sentence: (0.15986849367618561, {u'tokens': [u'The', u'Morrill', u'Land-Grant', u'Colleges', u'Act', u',', u'also', u'signed', u'in', u'1862', u',', u'provided', u'government', u'grants', u'for', u'agricultural', u'universities', u'in', u'each', u'state', u'.'], u'lemmas': [u'the', u'Morrill', u'Land-Grant', u'Colleges', u'Act', u',', u'also', u'sign', u'in', u'1862', u',', u'provide', u'government', u'grant', u'for', u'agricultural', u'university', u'in', u'each', u'state', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'RB', u'VBN', u'IN', u'CD', u',', u'VBN', u'NN', u'NNS', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[46552, 46555], [46556, 46563], [46564, 46574], [46575, 46583], [46584, 46587], [46587, 46588], [46589, 46593], [46594, 46600], [46601, 46603], [46604, 46608], [46608, 46609], [46610, 46618], [46619, 46629], [46630, 46636], [46637, 46640], [46641, 46653], [46654, 46666], [46667, 46669], [46670, 46674], [46675, 46680], [46680, 46681]]}) 
answer: set([u'1863', u'bank', u'nation'])
candidate Sentence: (0.15045711398124695, {u'tokens': [u'Thus', u',', u'he', u'signed', u'the', u'Homestead', u'Act', u'in', u'1862', u',', u'making', u'millions', u'of', u'acres', u'of', u'government-held', u'land', u'in', u'the', u'West', u'available', u'for', u'purchase', u'at', u'very', u'low', u'cost', u'.'], u'lemmas': [u'thus', u',', u'he', u'sign', u'the', u'Homestead', u'Act', u'in', u'1862', u',', u'make', u'million', u'of', u'acre', u'of', u'government-held', u'land', u'in', u'the', u'West', u'available', u'for', u'purchase', u'at', u'very', u'low', u'cost', u'.'], u'pos': [u'RB', u',', u'PRP', u'VBD', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u',', u'VBG', u'NNS', u'IN', u'NNS', u'IN', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'JJ', u'IN', u'NN', u'IN', u'RB', u'JJ', u'NN', u'.'], u'char_offsets': [[46407, 46411], [46411, 46412], [46413, 46415], [46416, 46422], [46423, 46426], [46427, 46436], [46437, 46440], [46441, 46443], [46444, 46448], [46448, 46449], [46450, 46456], [46457, 46465], [46466, 46468], [46469, 46474], [46475, 46477], [46478, 46493], [46494, 46498], [46499, 46501], [46502, 46505], [46506, 46510], [46511, 46520], [46521, 46524], [46525, 46533], [46534, 46536], [46537, 46541], [46542, 46545], [46546, 46550], [46550, 46551]]}) 
answer: set([u'1863', u'bank', u'nation'])
candidate Sentence: (0.13801385462284088, {u'tokens': [u'He', u'asked', u'rhetorically', u'that', u'even', u'were', u'the', u'Constitution', u'a', u'simple', u'contract', u',', u'would', u'it', u'not', u'require', u'the', u'agreement', u'of', u'all', u'parties', u'to', u'rescind', u'it', u'?'], u'lemmas': [u'he', u'ask', u'rhetorically', u'that', u'even', u'be', u'the', u'Constitution', u'a', u'simple', u'contract', u',', u'would', u'it', u'not', u'require', u'the', u'agreement', u'of', u'all', u'party', u'to', u'rescind', u'it', u'?'], u'pos': [u'PRP', u'VBD', u'RB', u'IN', u'RB', u'VBD', u'DT', u'NNP', u'DT', u'JJ', u'NN', u',', u'MD', u'PRP', u'RB', u'VB', u'DT', u'NN', u'IN', u'DT', u'NNS', u'TO', u'VB', u'PRP', u'.'], u'char_offsets': [[26493, 26495], [26496, 26501], [26502, 26514], [26515, 26519], [26520, 26524], [26525, 26529], [26530, 26533], [26534, 26546], [26547, 26548], [26549, 26555], [26556, 26564], [26564, 26565], [26566, 26571], [26572, 26574], [26575, 26578], [26579, 26586], [26587, 26590], [26591, 26600], [26601, 26603], [26604, 26607], [26608, 26615], [26616, 26618], [26619, 26626], [26627, 26629], [26629, 26630]]}) 
answer: set([u'1863', u'sign', u'act', u'bank', u'nation'])
candidate Sentence: (0.13410711288452148, {u'tokens': [u'His', u'Amnesty', u'Proclamation', u'of', u'December', u'8', u',', u'1863', u',', u'offered', u'pardons', u'to', u'those', u'who', u'had', u'not', u'held', u'a', u'Confederate', u'civil', u'office', u',', u'had', u'not', u'mistreated', u'Union', u'prisoners', u',', u'and', u'would', u'sign', u'an', u'oath', u'of', u'allegiance', u'.'], u'lemmas': [u'he', u'Amnesty', u'Proclamation', u'of', u'December', u'8', u',', u'1863', u',', u'offer', u'pardon', u'to', u'those', u'who', u'have', u'not', u'hold', u'a', u'confederate', u'civil', u'office', u',', u'have', u'not', u'mistreat', u'Union', u'prisoner', u',', u'and', u'would', u'sign', u'a', u'oath', u'of', u'allegiance', u'.'], u'pos': [u'PRP$', u'NNP', u'NNP', u'IN', u'NNP', u'CD', u',', u'CD', u',', u'VBD', u'NNS', u'TO', u'DT', u'WP', u'VBD', u'RB', u'VBN', u'DT', u'JJ', u'JJ', u'NN', u',', u'VBD', u'RB', u'VBN', u'NNP', u'NNS', u',', u'CC', u'MD', u'VB', u'DT', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[40783, 40786], [40787, 40794], [40795, 40807], [40808, 40810], [40811, 40819], [40820, 40821], [40821, 40822], [40823, 40827], [40827, 40828], [40829, 40836], [40837, 40844], [40845, 40847], [40848, 40853], [40854, 40857], [40858, 40861], [40862, 40865], [40866, 40870], [40871, 40872], [40873, 40884], [40885, 40890], [40891, 40897], [40897, 40898], [40899, 40902], [40903, 40906], [40907, 40917], [40918, 40923], [40924, 40933], [40933, 40934], [40935, 40938], [40939, 40944], [40945, 40949], [40950, 40952], [40953, 40957], [40958, 40960], [40961, 40971], [40971, 40972]]}) 
answer: set([u'act', u'bank', u'nation'])
candidate Sentence: (0.13406330347061157, {u'tokens': [u'The', u'Collapse', u'of', u'the', u'Confederacy', u'-LRB-', u'2001', u'-RRB-', u'p', u'80', u'Lincoln', u'did', u'not', u'show', u'the', u'pledge', u'to', u'his', u'cabinet', u',', u'but', u'asked', u'them', u'to', u'sign', u'the', u'sealed', u'envelope', u'.'], u'lemmas': [u'the', u'Collapse', u'of', u'the', u'Confederacy', u'-lrb-', u'2001', u'-rrb-', u'p', u'80', u'Lincoln', u'do', u'not', u'show', u'the', u'pledge', u'to', u'he', u'cabinet', u',', u'but', u'ask', u'they', u'to', u'sign', u'the', u'seal', u'envelope', u'.'], u'pos': [u'DT', u'NNP', u'IN', u'DT', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'NN', u'CD', u'NNP', u'VBD', u'RB', u'VB', u'DT', u'NN', u'TO', u'PRP$', u'NN', u',', u'CC', u'VBD', u'PRP', u'TO', u'VB', u'DT', u'VBN', u'NN', u'.'], u'char_offsets': [[33653, 33656], [33657, 33665], [33666, 33668], [33669, 33672], [33673, 33684], [33685, 33686], [33686, 33690], [33690, 33691], [33692, 33693], [33694, 33696], [33697, 33704], [33705, 33708], [33709, 33712], [33713, 33717], [33718, 33721], [33722, 33728], [33729, 33731], [33732, 33735], [33736, 33743], [33743, 33744], [33745, 33748], [33749, 33754], [33755, 33759], [33760, 33762], [33763, 33767], [33768, 33771], [33772, 33778], [33779, 33787], [33787, 33788]]}) 
answer: set([u'1863', u'nation', u'bank', u'act'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'lincoln', u'abraham', u'.'])

Did Lincoln sign the National Banking Act of 1863?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Abraham_Lincoln
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a4.txt

No
----------------------------- Captured stderr call -----------------------------
INFO:CoreNLP_JavaServer: INPUT: 7 documents, 410 characters, 74 tokens, 58.6 char/doc, 10.6 tok/doc RATES: 3.928 doc/sec, 41.5 tok/sec

INFO:CoreNLP_JavaServer: INPUT: 8 documents, 460 characters, 84 tokens, 57.5 char/doc, 10.5 tok/doc RATES: 4.249 doc/sec, 44.6 tok/sec

______________________________ test_yesno[param8] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156d5cf8>, (<src.tfidf.TF_IDF object at 0x11240da10>, set(['.', 'abraham', 'lincoln'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156d5cf8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.31859266757965088, {u'tokens': [u'Lincoln', u'began', u'his', u'political', u'career', u'in', u'1832', u',', u'at', u'age', u'23', u',', u'with', u'an', u'unsuccessful', u'campaign', u'for', u'the', u'Illinois', u'General', u'Assembly', u',', u'as', u'a', u'member', u'of', u'the', u'Whig', u'Party', u'.'], u'lemmas': [u'Lincoln', u'begin', u'he', u'political', u'career', u'in', u'1832', u',', u'at', u'age', u'23', u',', u'with', u'a', u'unsuccessful', u'campaign', u'for', u'the', u'Illinois', u'General', u'Assembly', u',', u'as', u'a', u'member', u'of', u'the', u'Whig', u'Party', u'.'], u'pos': [u'NNP', u'VBD', u'PRP$', u'JJ', u'NN', u'IN', u'CD', u',', u'IN', u'NN', u'CD', u',', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u',', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[8164, 8171], [8172, 8177], [8178, 8181], [8182, 8191], [8192, 8198], [8199, 8201], [8202, 8206], [8206, 8207], [8208, 8210], [8211, 8214], [8215, 8217], [8217, 8218], [8219, 8223], [8224, 8226], [8227, 8239], [8240, 8248], [8249, 8252], [8253, 8256], [8257, 8265], [8266, 8273], [8274, 8282], [8282, 8283], [8284, 8286], [8287, 8288], [8289, 8295], [8296, 8298], [8299, 8302], [8303, 8307], [8308, 8313], [8313, 8314]]}) 
answer: set([u'start'])
candidate Sentence: (0.20008248090744019, {u'tokens': [u'Gabor', u'S.', u'Boritt', u',', u"''", u'`', u'And', u'the', u'War', u'Came', u"'", u'?'], u'lemmas': [u'Gabor', u'S.', u'Boritt', u',', u"''", u'`', u'and', u'the', u'War', u'Came', u"'", u'?'], u'pos': [u'NNP', u'NNP', u'NNP', u',', u"''", u'``', u'CC', u'DT', u'NNP', u'NNP', u'POS', u'.'], u'char_offsets': [[22643, 22648], [22649, 22651], [22652, 22658], [22658, 22659], [22660, 22661], [22661, 22662], [22662, 22665], [22666, 22669], [22670, 22673], [22674, 22678], [22678, 22679], [22679, 22680]]}) 
answer: set([u'1832', u'career', u'polit', u'start'])
candidate Sentence: (0.18086174130439758, {u'tokens': [u'Under', u'his', u'leadership', u',', u'the', u'Union', u'took', u'control', u'of', u'the', u'border', u'slave', u'states', u'at', u'the', u'start', u'of', u'the', u'war', u'.'], u'lemmas': [u'under', u'he', u'leadership', u',', u'the', u'Union', u'take', u'control', u'of', u'the', u'border', u'slave', u'state', u'at', u'the', u'start', u'of', u'the', u'war', u'.'], u'pos': [u'IN', u'PRP$', u'NN', u',', u'DT', u'NNP', u'VBD', u'NN', u'IN', u'DT', u'NN', u'NN', u'NNS', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[1965, 1970], [1971, 1974], [1975, 1985], [1985, 1986], [1987, 1990], [1991, 1996], [1997, 2001], [2002, 2009], [2010, 2012], [2013, 2016], [2017, 2023], [2024, 2029], [2030, 2036], [2037, 2039], [2040, 2043], [2044, 2049], [2050, 2052], [2053, 2056], [2057, 2060], [2060, 2061]]}) 
answer: set([u'1832', u'career', u'polit'])
candidate Sentence: (0.14018777012825012, {u'tokens': [u'He', u'asked', u'rhetorically', u'that', u'even', u'were', u'the', u'Constitution', u'a', u'simple', u'contract', u',', u'would', u'it', u'not', u'require', u'the', u'agreement', u'of', u'all', u'parties', u'to', u'rescind', u'it', u'?'], u'lemmas': [u'he', u'ask', u'rhetorically', u'that', u'even', u'be', u'the', u'Constitution', u'a', u'simple', u'contract', u',', u'would', u'it', u'not', u'require', u'the', u'agreement', u'of', u'all', u'party', u'to', u'rescind', u'it', u'?'], u'pos': [u'PRP', u'VBD', u'RB', u'IN', u'RB', u'VBD', u'DT', u'NNP', u'DT', u'JJ', u'NN', u',', u'MD', u'PRP', u'RB', u'VB', u'DT', u'NN', u'IN', u'DT', u'NNS', u'TO', u'VB', u'PRP', u'.'], u'char_offsets': [[26493, 26495], [26496, 26501], [26502, 26514], [26515, 26519], [26520, 26524], [26525, 26529], [26530, 26533], [26534, 26546], [26547, 26548], [26549, 26555], [26556, 26564], [26564, 26565], [26566, 26571], [26572, 26574], [26575, 26578], [26579, 26586], [26587, 26590], [26591, 26600], [26601, 26603], [26604, 26607], [26608, 26615], [26616, 26618], [26619, 26626], [26627, 26629], [26629, 26630]]}) 
answer: set([u'1832', u'career', u'polit', u'start'])
candidate Sentence: (0.1334867924451828, {u'tokens': [u'After', u'the', u'fighting', u'started', u',', u'he', u'had', u'rebel', u'leaders', u'arrested', u'in', u'all', u'the', u'border', u'areas', u'-LRB-', u'especially', u'in', u'Maryland', u'-RRB-', u'and', u'held', u'in', u'military', u'prisons', u'without', u'trial', u'.'], u'lemmas': [u'after', u'the', u'fighting', u'start', u',', u'he', u'have', u'rebel', u'leader', u'arrest', u'in', u'all', u'the', u'border', u'area', u'-lrb-', u'especially', u'in', u'Maryland', u'-rrb-', u'and', u'hold', u'in', u'military', u'prison', u'without', u'trial', u'.'], u'pos': [u'IN', u'DT', u'NN', u'VBD', u',', u'PRP', u'VBD', u'JJ', u'NNS', u'VBN', u'IN', u'PDT', u'DT', u'NN', u'NNS', u'-LRB-', u'RB', u'IN', u'NNP', u'-RRB-', u'CC', u'VBN', u'IN', u'JJ', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[29408, 29413], [29414, 29417], [29418, 29426], [29427, 29434], [29434, 29435], [29436, 29438], [29439, 29442], [29443, 29448], [29449, 29456], [29457, 29465], [29466, 29468], [29469, 29472], [29473, 29476], [29477, 29483], [29484, 29489], [29490, 29491], [29491, 29501], [29502, 29504], [29505, 29513], [29513, 29514], [29515, 29518], [29519, 29523], [29524, 29526], [29527, 29535], [29536, 29543], [29544, 29551], [29552, 29557], [29557, 29558]]}) 
answer: set([u'1832', u'career', u'polit'])
candidate Sentence: (0.13159856200218201, {u'tokens': [u'Acceptance', u'of', u'this', u'offer', u'would', u'have', u'ended', u'his', u'career', u'in', u'the', u'rapidly', u'growing', u'state', u'of', u'Illinois', u',', u'so', u'Lincoln', u'declined', u'the', u'position', u'.'], u'lemmas': [u'Acceptance', u'of', u'this', u'offer', u'would', u'have', u'end', u'he', u'career', u'in', u'the', u'rapidly', u'grow', u'state', u'of', u'Illinois', u',', u'so', u'Lincoln', u'decline', u'the', u'position', u'.'], u'pos': [u'NNP', u'IN', u'DT', u'NN', u'MD', u'VB', u'VBN', u'PRP$', u'NN', u'IN', u'DT', u'RB', u'VBG', u'NN', u'IN', u'NNP', u',', u'RB', u'NNP', u'VBD', u'DT', u'NN', u'.'], u'char_offsets': [[14877, 14887], [14888, 14890], [14891, 14895], [14896, 14901], [14902, 14907], [14908, 14912], [14913, 14918], [14919, 14922], [14923, 14929], [14930, 14932], [14933, 14936], [14937, 14944], [14945, 14952], [14953, 14958], [14959, 14961], [14962, 14970], [14970, 14971], [14972, 14974], [14975, 14982], [14983, 14991], [14992, 14995], [14996, 15004], [15004, 15005]]}) 
answer: set([u'1832', u'start', u'polit'])
candidate Sentence: (0.12666609883308411, {u'tokens': [u'Donald', u'-LRB-', u'1995', u'-RRB-', u',', u'150-51', u'Lincoln', u'was', u'involved', u'in', u'more', u'than', u'5,100', u'cases', u'in', u'Illinois', u'alone', u'during', u'his', u'23-year', u'legal', u'career', u'.'], u'lemmas': [u'Donald', u'-lrb-', u'1995', u'-rrb-', u',', u'150-51', u'Lincoln', u'be', u'involve', u'in', u'more', u'than', u'5,100', u'case', u'in', u'Illinois', u'alone', u'during', u'he', u'23-year', u'legal', u'career', u'.'], u'pos': [u'NNP', u'-LRB-', u'CD', u'-RRB-', u',', u'CD', u'NNP', u'VBD', u'VBN', u'IN', u'JJR', u'IN', u'CD', u'NNS', u'IN', u'NNP', u'RB', u'IN', u'PRP$', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[16924, 16930], [16931, 16932], [16932, 16936], [16936, 16937], [16937, 16938], [16939, 16945], [16946, 16953], [16954, 16957], [16958, 16966], [16967, 16969], [16970, 16974], [16975, 16979], [16980, 16985], [16986, 16991], [16992, 16994], [16995, 17003], [17004, 17009], [17010, 17016], [17017, 17020], [17021, 17028], [17029, 17034], [17035, 17041], [17041, 17042]]}) 
answer: set([u'1832', u'start', u'polit'])
candidate Sentence: (0.11289158463478088, {u'tokens': [u'I', u'do', u'not', u'expect', u'the', u'Union', u'to', u'be', u'dissolved', u'I', u'do', u'not', u'expect', u'the', u'house', u'to', u'fall', u'but', u'I', u'do', u'expect', u'it', u'will', u'cease', u'to', u'be', u'divided', u'.'], u'lemmas': [u'I', u'do', u'not', u'expect', u'the', u'Union', u'to', u'be', u'dissolve', u'I', u'do', u'not', u'expect', u'the', u'house', u'to', u'fall', u'but', u'I', u'do', u'expect', u'it', u'will', u'cease', u'to', u'be', u'divide', u'.'], u'pos': [u'PRP', u'VBP', u'RB', u'VB', u'DT', u'NNP', u'TO', u'VB', u'VBN', u'PRP', u'VBP', u'RB', u'VB', u'DT', u'NN', u'TO', u'VB', u'CC', u'PRP', u'VBP', u'VB', u'PRP', u'MD', u'VB', u'TO', u'VB', u'VBN', u'.'], u'char_offsets': [[19379, 19380], [19381, 19383], [19384, 19387], [19388, 19394], [19395, 19398], [19399, 19404], [19405, 19407], [19408, 19410], [19411, 19420], [19422, 19423], [19424, 19426], [19427, 19430], [19431, 19437], [19438, 19441], [19442, 19447], [19448, 19450], [19451, 19455], [19457, 19460], [19461, 19462], [19463, 19465], [19466, 19472], [19473, 19475], [19476, 19480], [19481, 19486], [19487, 19489], [19490, 19492], [19493, 19500], [19500, 19501]]}) 
answer: set([u'1832', u'career', u'polit', u'start'])
candidate Sentence: (0.10809735208749771, {u'tokens': [u'He', u'saw', u'the', u'Declaration', u'as', u'more', u'than', u'a', u'political', u'document', u'.'], u'lemmas': [u'he', u'see', u'the', u'declaration', u'as', u'more', u'than', u'a', u'political', u'document', u'.'], u'pos': [u'PRP', u'VBD', u'DT', u'NN', u'IN', u'JJR', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[56444, 56446], [56447, 56450], [56451, 56454], [56455, 56466], [56467, 56469], [56470, 56474], [56475, 56479], [56480, 56481], [56482, 56491], [56492, 56500], [56500, 56501]]}) 
answer: set([u'1832', u'career', u'start'])
candidate Sentence: (0.10600035637617111, {u'tokens': [u'While', u'it', u'did', u'not', u'abolish', u'the', u'legal', u'institution', u'of', u'slavery', u'-LRB-', u'the', u'Thirteenth', u'Amendment', u'did', u'that', u'-RRB-', u',', u'the', u'Act', u'showed', u'that', u'Lincoln', u'had', u'the', u'support', u'of', u'Congress', u'in', u'liberating', u'slaves', u'owned', u'by', u'rebels', u'.'], u'lemmas': [u'while', u'it', u'do', u'not', u'abolish', u'the', u'legal', u'institution', u'of', u'slavery', u'-lrb-', u'the', u'Thirteenth', u'Amendment', u'do', u'that', u'-rrb-', u',', u'the', u'Act', u'show', u'that', u'Lincoln', u'have', u'the', u'support', u'of', u'Congress', u'in', u'liberating', u'slave', u'own', u'by', u'rebel', u'.'], u'pos': [u'IN', u'PRP', u'VBD', u'RB', u'VB', u'DT', u'JJ', u'NN', u'IN', u'NN', u'-LRB-', u'DT', u'NNP', u'NNP', u'VBD', u'IN', u'-RRB-', u',', u'DT', u'NNP', u'VBD', u'IN', u'NNP', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'IN', u'JJ', u'NNS', u'VBN', u'IN', u'NNS', u'.'], u'char_offsets': [[30173, 30178], [30179, 30181], [30182, 30185], [30186, 30189], [30190, 30197], [30198, 30201], [30202, 30207], [30208, 30219], [30220, 30222], [30223, 30230], [30231, 30232], [30232, 30235], [30236, 30246], [30247, 30256], [30257, 30260], [30261, 30265], [30265, 30266], [30266, 30267], [30268, 30271], [30272, 30275], [30276, 30282], [30283, 30287], [30288, 30295], [30296, 30299], [30300, 30303], [30304, 30311], [30312, 30314], [30315, 30323], [30324, 30326], [30327, 30337], [30338, 30344], [30345, 30350], [30351, 30353], [30354, 30360], [30360, 30361]]}) 
answer: set([u'1832', u'career', u'polit', u'start'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'lincoln', u'abraham', u'.'])

Did Lincoln start his political career in 1832?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Abraham_Lincoln
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a4.txt

No
______________________________ test_yesno[param9] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156d6098>, (<src.tfidf.TF_IDF object at 0x11240da10>, set(['.', 'abraham', 'lincoln'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156d6098>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.31859266757965088, {u'tokens': [u'Lincoln', u'began', u'his', u'political', u'career', u'in', u'1832', u',', u'at', u'age', u'23', u',', u'with', u'an', u'unsuccessful', u'campaign', u'for', u'the', u'Illinois', u'General', u'Assembly', u',', u'as', u'a', u'member', u'of', u'the', u'Whig', u'Party', u'.'], u'lemmas': [u'Lincoln', u'begin', u'he', u'political', u'career', u'in', u'1832', u',', u'at', u'age', u'23', u',', u'with', u'a', u'unsuccessful', u'campaign', u'for', u'the', u'Illinois', u'General', u'Assembly', u',', u'as', u'a', u'member', u'of', u'the', u'Whig', u'Party', u'.'], u'pos': [u'NNP', u'VBD', u'PRP$', u'JJ', u'NN', u'IN', u'CD', u',', u'IN', u'NN', u'CD', u',', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u',', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[8164, 8171], [8172, 8177], [8178, 8181], [8182, 8191], [8192, 8198], [8199, 8201], [8202, 8206], [8206, 8207], [8208, 8210], [8211, 8214], [8215, 8217], [8217, 8218], [8219, 8223], [8224, 8226], [8227, 8239], [8240, 8248], [8249, 8252], [8253, 8256], [8257, 8265], [8266, 8273], [8274, 8282], [8282, 8283], [8284, 8286], [8287, 8288], [8289, 8295], [8296, 8298], [8299, 8302], [8303, 8307], [8308, 8313], [8313, 8314]]}) 
answer: set([u'start'])
candidate Sentence: (0.20008248090744019, {u'tokens': [u'Gabor', u'S.', u'Boritt', u',', u"''", u'`', u'And', u'the', u'War', u'Came', u"'", u'?'], u'lemmas': [u'Gabor', u'S.', u'Boritt', u',', u"''", u'`', u'and', u'the', u'War', u'Came', u"'", u'?'], u'pos': [u'NNP', u'NNP', u'NNP', u',', u"''", u'``', u'CC', u'DT', u'NNP', u'NNP', u'POS', u'.'], u'char_offsets': [[22643, 22648], [22649, 22651], [22652, 22658], [22658, 22659], [22660, 22661], [22661, 22662], [22662, 22665], [22666, 22669], [22670, 22673], [22674, 22678], [22678, 22679], [22679, 22680]]}) 
answer: set([u'1832', u'career', u'polit', u'start'])
candidate Sentence: (0.18086174130439758, {u'tokens': [u'Under', u'his', u'leadership', u',', u'the', u'Union', u'took', u'control', u'of', u'the', u'border', u'slave', u'states', u'at', u'the', u'start', u'of', u'the', u'war', u'.'], u'lemmas': [u'under', u'he', u'leadership', u',', u'the', u'Union', u'take', u'control', u'of', u'the', u'border', u'slave', u'state', u'at', u'the', u'start', u'of', u'the', u'war', u'.'], u'pos': [u'IN', u'PRP$', u'NN', u',', u'DT', u'NNP', u'VBD', u'NN', u'IN', u'DT', u'NN', u'NN', u'NNS', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[1965, 1970], [1971, 1974], [1975, 1985], [1985, 1986], [1987, 1990], [1991, 1996], [1997, 2001], [2002, 2009], [2010, 2012], [2013, 2016], [2017, 2023], [2024, 2029], [2030, 2036], [2037, 2039], [2040, 2043], [2044, 2049], [2050, 2052], [2053, 2056], [2057, 2060], [2060, 2061]]}) 
answer: set([u'1832', u'career', u'polit'])
candidate Sentence: (0.14018777012825012, {u'tokens': [u'He', u'asked', u'rhetorically', u'that', u'even', u'were', u'the', u'Constitution', u'a', u'simple', u'contract', u',', u'would', u'it', u'not', u'require', u'the', u'agreement', u'of', u'all', u'parties', u'to', u'rescind', u'it', u'?'], u'lemmas': [u'he', u'ask', u'rhetorically', u'that', u'even', u'be', u'the', u'Constitution', u'a', u'simple', u'contract', u',', u'would', u'it', u'not', u'require', u'the', u'agreement', u'of', u'all', u'party', u'to', u'rescind', u'it', u'?'], u'pos': [u'PRP', u'VBD', u'RB', u'IN', u'RB', u'VBD', u'DT', u'NNP', u'DT', u'JJ', u'NN', u',', u'MD', u'PRP', u'RB', u'VB', u'DT', u'NN', u'IN', u'DT', u'NNS', u'TO', u'VB', u'PRP', u'.'], u'char_offsets': [[26493, 26495], [26496, 26501], [26502, 26514], [26515, 26519], [26520, 26524], [26525, 26529], [26530, 26533], [26534, 26546], [26547, 26548], [26549, 26555], [26556, 26564], [26564, 26565], [26566, 26571], [26572, 26574], [26575, 26578], [26579, 26586], [26587, 26590], [26591, 26600], [26601, 26603], [26604, 26607], [26608, 26615], [26616, 26618], [26619, 26626], [26627, 26629], [26629, 26630]]}) 
answer: set([u'1832', u'career', u'polit', u'start'])
candidate Sentence: (0.1334867924451828, {u'tokens': [u'After', u'the', u'fighting', u'started', u',', u'he', u'had', u'rebel', u'leaders', u'arrested', u'in', u'all', u'the', u'border', u'areas', u'-LRB-', u'especially', u'in', u'Maryland', u'-RRB-', u'and', u'held', u'in', u'military', u'prisons', u'without', u'trial', u'.'], u'lemmas': [u'after', u'the', u'fighting', u'start', u',', u'he', u'have', u'rebel', u'leader', u'arrest', u'in', u'all', u'the', u'border', u'area', u'-lrb-', u'especially', u'in', u'Maryland', u'-rrb-', u'and', u'hold', u'in', u'military', u'prison', u'without', u'trial', u'.'], u'pos': [u'IN', u'DT', u'NN', u'VBD', u',', u'PRP', u'VBD', u'JJ', u'NNS', u'VBN', u'IN', u'PDT', u'DT', u'NN', u'NNS', u'-LRB-', u'RB', u'IN', u'NNP', u'-RRB-', u'CC', u'VBN', u'IN', u'JJ', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[29408, 29413], [29414, 29417], [29418, 29426], [29427, 29434], [29434, 29435], [29436, 29438], [29439, 29442], [29443, 29448], [29449, 29456], [29457, 29465], [29466, 29468], [29469, 29472], [29473, 29476], [29477, 29483], [29484, 29489], [29490, 29491], [29491, 29501], [29502, 29504], [29505, 29513], [29513, 29514], [29515, 29518], [29519, 29523], [29524, 29526], [29527, 29535], [29536, 29543], [29544, 29551], [29552, 29557], [29557, 29558]]}) 
answer: set([u'1832', u'career', u'polit'])
candidate Sentence: (0.13159856200218201, {u'tokens': [u'Acceptance', u'of', u'this', u'offer', u'would', u'have', u'ended', u'his', u'career', u'in', u'the', u'rapidly', u'growing', u'state', u'of', u'Illinois', u',', u'so', u'Lincoln', u'declined', u'the', u'position', u'.'], u'lemmas': [u'Acceptance', u'of', u'this', u'offer', u'would', u'have', u'end', u'he', u'career', u'in', u'the', u'rapidly', u'grow', u'state', u'of', u'Illinois', u',', u'so', u'Lincoln', u'decline', u'the', u'position', u'.'], u'pos': [u'NNP', u'IN', u'DT', u'NN', u'MD', u'VB', u'VBN', u'PRP$', u'NN', u'IN', u'DT', u'RB', u'VBG', u'NN', u'IN', u'NNP', u',', u'RB', u'NNP', u'VBD', u'DT', u'NN', u'.'], u'char_offsets': [[14877, 14887], [14888, 14890], [14891, 14895], [14896, 14901], [14902, 14907], [14908, 14912], [14913, 14918], [14919, 14922], [14923, 14929], [14930, 14932], [14933, 14936], [14937, 14944], [14945, 14952], [14953, 14958], [14959, 14961], [14962, 14970], [14970, 14971], [14972, 14974], [14975, 14982], [14983, 14991], [14992, 14995], [14996, 15004], [15004, 15005]]}) 
answer: set([u'1832', u'start', u'polit'])
candidate Sentence: (0.12666609883308411, {u'tokens': [u'Donald', u'-LRB-', u'1995', u'-RRB-', u',', u'150-51', u'Lincoln', u'was', u'involved', u'in', u'more', u'than', u'5,100', u'cases', u'in', u'Illinois', u'alone', u'during', u'his', u'23-year', u'legal', u'career', u'.'], u'lemmas': [u'Donald', u'-lrb-', u'1995', u'-rrb-', u',', u'150-51', u'Lincoln', u'be', u'involve', u'in', u'more', u'than', u'5,100', u'case', u'in', u'Illinois', u'alone', u'during', u'he', u'23-year', u'legal', u'career', u'.'], u'pos': [u'NNP', u'-LRB-', u'CD', u'-RRB-', u',', u'CD', u'NNP', u'VBD', u'VBN', u'IN', u'JJR', u'IN', u'CD', u'NNS', u'IN', u'NNP', u'RB', u'IN', u'PRP$', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[16924, 16930], [16931, 16932], [16932, 16936], [16936, 16937], [16937, 16938], [16939, 16945], [16946, 16953], [16954, 16957], [16958, 16966], [16967, 16969], [16970, 16974], [16975, 16979], [16980, 16985], [16986, 16991], [16992, 16994], [16995, 17003], [17004, 17009], [17010, 17016], [17017, 17020], [17021, 17028], [17029, 17034], [17035, 17041], [17041, 17042]]}) 
answer: set([u'1832', u'start', u'polit'])
candidate Sentence: (0.11289158463478088, {u'tokens': [u'I', u'do', u'not', u'expect', u'the', u'Union', u'to', u'be', u'dissolved', u'I', u'do', u'not', u'expect', u'the', u'house', u'to', u'fall', u'but', u'I', u'do', u'expect', u'it', u'will', u'cease', u'to', u'be', u'divided', u'.'], u'lemmas': [u'I', u'do', u'not', u'expect', u'the', u'Union', u'to', u'be', u'dissolve', u'I', u'do', u'not', u'expect', u'the', u'house', u'to', u'fall', u'but', u'I', u'do', u'expect', u'it', u'will', u'cease', u'to', u'be', u'divide', u'.'], u'pos': [u'PRP', u'VBP', u'RB', u'VB', u'DT', u'NNP', u'TO', u'VB', u'VBN', u'PRP', u'VBP', u'RB', u'VB', u'DT', u'NN', u'TO', u'VB', u'CC', u'PRP', u'VBP', u'VB', u'PRP', u'MD', u'VB', u'TO', u'VB', u'VBN', u'.'], u'char_offsets': [[19379, 19380], [19381, 19383], [19384, 19387], [19388, 19394], [19395, 19398], [19399, 19404], [19405, 19407], [19408, 19410], [19411, 19420], [19422, 19423], [19424, 19426], [19427, 19430], [19431, 19437], [19438, 19441], [19442, 19447], [19448, 19450], [19451, 19455], [19457, 19460], [19461, 19462], [19463, 19465], [19466, 19472], [19473, 19475], [19476, 19480], [19481, 19486], [19487, 19489], [19490, 19492], [19493, 19500], [19500, 19501]]}) 
answer: set([u'1832', u'career', u'polit', u'start'])
candidate Sentence: (0.10809735208749771, {u'tokens': [u'He', u'saw', u'the', u'Declaration', u'as', u'more', u'than', u'a', u'political', u'document', u'.'], u'lemmas': [u'he', u'see', u'the', u'declaration', u'as', u'more', u'than', u'a', u'political', u'document', u'.'], u'pos': [u'PRP', u'VBD', u'DT', u'NN', u'IN', u'JJR', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[56444, 56446], [56447, 56450], [56451, 56454], [56455, 56466], [56467, 56469], [56470, 56474], [56475, 56479], [56480, 56481], [56482, 56491], [56492, 56500], [56500, 56501]]}) 
answer: set([u'1832', u'career', u'start'])
candidate Sentence: (0.10600035637617111, {u'tokens': [u'While', u'it', u'did', u'not', u'abolish', u'the', u'legal', u'institution', u'of', u'slavery', u'-LRB-', u'the', u'Thirteenth', u'Amendment', u'did', u'that', u'-RRB-', u',', u'the', u'Act', u'showed', u'that', u'Lincoln', u'had', u'the', u'support', u'of', u'Congress', u'in', u'liberating', u'slaves', u'owned', u'by', u'rebels', u'.'], u'lemmas': [u'while', u'it', u'do', u'not', u'abolish', u'the', u'legal', u'institution', u'of', u'slavery', u'-lrb-', u'the', u'Thirteenth', u'Amendment', u'do', u'that', u'-rrb-', u',', u'the', u'Act', u'show', u'that', u'Lincoln', u'have', u'the', u'support', u'of', u'Congress', u'in', u'liberating', u'slave', u'own', u'by', u'rebel', u'.'], u'pos': [u'IN', u'PRP', u'VBD', u'RB', u'VB', u'DT', u'JJ', u'NN', u'IN', u'NN', u'-LRB-', u'DT', u'NNP', u'NNP', u'VBD', u'IN', u'-RRB-', u',', u'DT', u'NNP', u'VBD', u'IN', u'NNP', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'IN', u'JJ', u'NNS', u'VBN', u'IN', u'NNS', u'.'], u'char_offsets': [[30173, 30178], [30179, 30181], [30182, 30185], [30186, 30189], [30190, 30197], [30198, 30201], [30202, 30207], [30208, 30219], [30220, 30222], [30223, 30230], [30231, 30232], [30232, 30235], [30236, 30246], [30247, 30256], [30257, 30260], [30261, 30265], [30265, 30266], [30266, 30267], [30268, 30271], [30272, 30275], [30276, 30282], [30283, 30287], [30288, 30295], [30296, 30299], [30300, 30303], [30304, 30311], [30312, 30314], [30315, 30323], [30324, 30326], [30327, 30337], [30338, 30344], [30345, 30350], [30351, 30353], [30354, 30360], [30360, 30361]]}) 
answer: set([u'1832', u'career', u'polit', u'start'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'lincoln', u'abraham', u'.'])

Did Lincoln start his political career in 1832?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Abraham_Lincoln
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a4.txt

No
_____________________________ test_yesno[param10] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156d6248>, (<src.tfidf.TF_IDF object at 0x11240da10>, set(['.', 'abraham', 'lincoln'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156d6248>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.42104655504226685, {u'tokens': [u'In', u'one', u'prominent', u'1851', u'case', u',', u'he', u'represented', u'the', u'Alton', u'&', u'Sangamon', u'Railroad', u'in', u'a', u'dispute', u'with', u'a', u'shareholder', u',', u'James', u'A.', u'Barret', u'.'], u'lemmas': [u'in', u'one', u'prominent', u'1851', u'case', u',', u'he', u'represent', u'the', u'Alton', u'&', u'Sangamon', u'railroad', u'in', u'a', u'dispute', u'with', u'a', u'shareholder', u',', u'James', u'A.', u'Barret', u'.'], u'pos': [u'IN', u'CD', u'JJ', u'CD', u'NN', u',', u'PRP', u'VBD', u'DT', u'NNP', u'CC', u'NNP', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u',', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[15577, 15579], [15580, 15583], [15584, 15593], [15594, 15598], [15599, 15603], [15603, 15604], [15605, 15607], [15608, 15619], [15620, 15623], [15624, 15629], [15630, 15631], [15632, 15640], [15641, 15649], [15650, 15652], [15653, 15654], [15655, 15662], [15663, 15667], [15668, 15669], [15670, 15681], [15681, 15682], [15683, 15688], [15689, 15691], [15692, 15698], [15698, 15699]]}) 
answer: set([u'ever'])
candidate Sentence: (0.17679741978645325, {u'tokens': [u'Gabor', u'S.', u'Boritt', u',', u"''", u'`', u'And', u'the', u'War', u'Came', u"'", u'?'], u'lemmas': [u'Gabor', u'S.', u'Boritt', u',', u"''", u'`', u'and', u'the', u'War', u'Came', u"'", u'?'], u'pos': [u'NNP', u'NNP', u'NNP', u',', u"''", u'``', u'CC', u'DT', u'NNP', u'NNP', u'POS', u'.'], u'char_offsets': [[22643, 22648], [22649, 22651], [22652, 22658], [22658, 22659], [22660, 22661], [22661, 22662], [22662, 22665], [22666, 22669], [22670, 22673], [22674, 22678], [22678, 22679], [22679, 22680]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'ever', u'repres'])
candidate Sentence: (0.15992625057697296, {u'tokens': [u'Lincoln', u'argued', u'that', u'as', u'a', u'matter', u'of', u'law', u'a', u'corporation', u'is', u'not', u'bound', u'by', u'its', u'original', u'charter', u'when', u'that', u'charter', u'can', u'be', u'amended', u'in', u'the', u'public', u'interest', u',', u'that', u'the', u'newer', u'route', u'proposed', u'by', u'Alton', u'&', u'Sangamon', u'was', u'superior', u'and', u'less', u'expensive', u',', u'and', u'that', u'accordingly', u',', u'the', u'corporation', u'had', u'a', u'right', u'to', u'sue', u'Barret', u'for', u'his', u'delinquent', u'payment', u'.'], u'lemmas': [u'Lincoln', u'argue', u'that', u'as', u'a', u'matter', u'of', u'law', u'a', u'corporation', u'be', u'not', u'bind', u'by', u'its', u'original', u'charter', u'when', u'that', u'charter', u'can', u'be', u'amend', u'in', u'the', u'public', u'interest', u',', u'that', u'the', u'newer', u'route', u'propose', u'by', u'Alton', u'&', u'Sangamon', u'be', u'superior', u'and', u'less', u'expensive', u',', u'and', u'that', u'accordingly', u',', u'the', u'corporation', u'have', u'a', u'right', u'to', u'sue', u'Barret', u'for', u'he', u'delinquent', u'payment', u'.'], u'pos': [u'NNP', u'VBD', u'IN', u'IN', u'DT', u'NN', u'IN', u'NN', u'DT', u'NN', u'VBZ', u'RB', u'VBN', u'IN', u'PRP$', u'JJ', u'NN', u'WRB', u'DT', u'NN', u'MD', u'VB', u'VBN', u'IN', u'DT', u'JJ', u'NN', u',', u'IN', u'DT', u'JJR', u'NN', u'VBN', u'IN', u'NNP', u'CC', u'NNP', u'VBD', u'JJ', u'CC', u'RBR', u'JJ', u',', u'CC', u'IN', u'RB', u',', u'DT', u'NN', u'VBD', u'DT', u'NN', u'TO', u'VB', u'NNP', u'IN', u'PRP$', u'JJ', u'NN', u'.'], u'char_offsets': [[15833, 15840], [15841, 15847], [15848, 15852], [15853, 15855], [15856, 15857], [15858, 15864], [15865, 15867], [15868, 15871], [15872, 15873], [15874, 15885], [15886, 15888], [15889, 15892], [15893, 15898], [15899, 15901], [15902, 15905], [15906, 15914], [15915, 15922], [15923, 15927], [15928, 15932], [15933, 15940], [15941, 15944], [15945, 15947], [15948, 15955], [15956, 15958], [15959, 15962], [15963, 15969], [15970, 15978], [15978, 15979], [15980, 15984], [15985, 15988], [15989, 15994], [15995, 16000], [16001, 16009], [16010, 16012], [16013, 16018], [16019, 16020], [16021, 16029], [16030, 16033], [16034, 16042], [16043, 16046], [16047, 16051], [16052, 16061], [16061, 16062], [16063, 16066], [16067, 16071], [16072, 16083], [16083, 16084], [16085, 16088], [16089, 16100], [16101, 16104], [16105, 16106], [16107, 16112], [16113, 16115], [16116, 16119], [16120, 16126], [16127, 16130], [16131, 16134], [16135, 16145], [16146, 16153], [16153, 16154]]}) 
answer: set([u'railroad', u'ever', u'repres'])
candidate Sentence: (0.13507699966430664, {u'tokens': [u'The', u'first', u'photograph', u'ever', u'taken', u'of', u'Mary', u'Lincoln', u',', u'a', u'daguerreotype', u'by', u'Shepherd', u'in', u'1846', u'.'], u'lemmas': [u'the', u'first', u'photograph', u'ever', u'take', u'of', u'Mary', u'Lincoln', u',', u'a', u'daguerreotype', u'by', u'Shepherd', u'in', u'1846', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'RB', u'VBN', u'IN', u'NNP', u'NNP', u',', u'DT', u'NN', u'IN', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[11183, 11186], [11187, 11192], [11193, 11203], [11204, 11208], [11209, 11214], [11215, 11217], [11218, 11222], [11223, 11230], [11230, 11231], [11232, 11233], [11234, 11247], [11248, 11250], [11251, 11259], [11260, 11262], [11263, 11267], [11267, 11268]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'repres'])
candidate Sentence: (0.13019566237926483, {u'tokens': [u'New', u'York', u':', u'Dick', u'&', u'Fitzgerald', u',', u'1865', u'.'], u'lemmas': [u'New', u'York', u':', u'Dick', u'&', u'Fitzgerald', u',', u'1865', u'.'], u'pos': [u'NNP', u'NNP', u':', u'NNP', u'CC', u'NNP', u',', u'CD', u'.'], u'char_offsets': [[49650, 49653], [49654, 49658], [49658, 49659], [49660, 49664], [49665, 49666], [49667, 49677], [49677, 49678], [49679, 49683], [49683, 49684]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'ever', u'repres'])
candidate Sentence: (0.12884826958179474, {u'tokens': [u'The', u'first', u'photograph', u'ever', u'taken', u'of', u'Abraham', u'Lincoln', u',', u'a', u'daguerreotype', u'taken', u'by', u'Shepherd', u'in', u'1846', u'.'], u'lemmas': [u'the', u'first', u'photograph', u'ever', u'take', u'of', u'Abraham', u'Lincoln', u',', u'a', u'daguerreotype', u'take', u'by', u'Shepherd', u'in', u'1846', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'RB', u'VBN', u'IN', u'NNP', u'NNP', u',', u'DT', u'NN', u'VBN', u'IN', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[12310, 12313], [12314, 12319], [12320, 12330], [12331, 12335], [12336, 12341], [12342, 12344], [12345, 12352], [12353, 12360], [12360, 12361], [12362, 12363], [12364, 12377], [12378, 12383], [12384, 12386], [12387, 12395], [12396, 12398], [12399, 12403], [12403, 12404]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'repres'])
candidate Sentence: (0.11990407109260559, {u'tokens': [u'He', u'asked', u'rhetorically', u'that', u'even', u'were', u'the', u'Constitution', u'a', u'simple', u'contract', u',', u'would', u'it', u'not', u'require', u'the', u'agreement', u'of', u'all', u'parties', u'to', u'rescind', u'it', u'?'], u'lemmas': [u'he', u'ask', u'rhetorically', u'that', u'even', u'be', u'the', u'Constitution', u'a', u'simple', u'contract', u',', u'would', u'it', u'not', u'require', u'the', u'agreement', u'of', u'all', u'party', u'to', u'rescind', u'it', u'?'], u'pos': [u'PRP', u'VBD', u'RB', u'IN', u'RB', u'VBD', u'DT', u'NNP', u'DT', u'JJ', u'NN', u',', u'MD', u'PRP', u'RB', u'VB', u'DT', u'NN', u'IN', u'DT', u'NNS', u'TO', u'VB', u'PRP', u'.'], u'char_offsets': [[26493, 26495], [26496, 26501], [26502, 26514], [26515, 26519], [26520, 26524], [26525, 26529], [26530, 26533], [26534, 26546], [26547, 26548], [26549, 26555], [26556, 26564], [26564, 26565], [26566, 26571], [26572, 26574], [26575, 26578], [26579, 26586], [26587, 26590], [26591, 26600], [26601, 26603], [26604, 26607], [26608, 26615], [26616, 26618], [26619, 26626], [26627, 26629], [26629, 26630]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'ever', u'repres'])
candidate Sentence: (0.11741779744625092, {u'tokens': [u'Years', u'later', u'she', u'compared', u'Lincoln', u'to', u'her', u'own', u'son', u',', u'saying', u'``', u'Both', u'were', u'good', u'boys', u',', u'but', u'I', u'must', u'say', u'both', u'now', u'being', u'dead', u'that', u'Abe', u'was', u'the', u'best', u'boy', u'I', u'ever', u'saw', u'or', u'ever', u'expect', u'to', u'see', u'.', u"''"], u'lemmas': [u'year', u'later', u'she', u'compare', u'Lincoln', u'to', u'she', u'own', u'son', u',', u'say', u'``', u'both', u'be', u'good', u'boy', u',', u'but', u'I', u'must', u'say', u'both', u'now', u'be', u'dead', u'that', u'abe', u'be', u'the', u'best', u'boy', u'I', u'ever', u'see', u'or', u'ever', u'expect', u'to', u'see', u'.', u"''"], u'pos': [u'NNS', u'RB', u'PRP', u'VBD', u'NNP', u'TO', u'PRP$', u'JJ', u'NN', u',', u'VBG', u'``', u'CC', u'VBD', u'JJ', u'NNS', u',', u'CC', u'PRP', u'MD', u'VB', u'CC', u'RB', u'VBG', u'JJ', u'IN', u'NN', u'VBD', u'DT', u'JJS', u'NN', u'PRP', u'RB', u'VBD', u'CC', u'RB', u'VBP', u'TO', u'VB', u'.', u"''"], u'char_offsets': [[5907, 5912], [5913, 5918], [5919, 5922], [5923, 5931], [5932, 5939], [5940, 5942], [5943, 5946], [5947, 5950], [5951, 5954], [5954, 5955], [5956, 5962], [5963, 5964], [5964, 5968], [5969, 5973], [5974, 5978], [5979, 5983], [5983, 5984], [5985, 5988], [5989, 5990], [5991, 5995], [5996, 5999], [6001, 6005], [6006, 6009], [6010, 6015], [6016, 6020], [6021, 6025], [6026, 6029], [6030, 6033], [6034, 6037], [6038, 6042], [6043, 6046], [6047, 6048], [6049, 6053], [6054, 6057], [6058, 6060], [6061, 6065], [6066, 6072], [6073, 6075], [6076, 6079], [6079, 6080], [6080, 6081]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'repres'])
candidate Sentence: (0.10918981581926346, {u'tokens': [u'We', u'Are', u'Lincoln', u'Men', u':', u'Abraham', u'Lincoln', u'and', u'His', u'Friends', u'Simon', u'&', u'Schuster', u',', u'-LRB-', u'2003', u'-RRB-', u'.'], u'lemmas': [u'we', u'be', u'Lincoln', u'Men', u':', u'Abraham', u'Lincoln', u'and', u'he', u'Friends', u'Simon', u'&', u'Schuster', u',', u'-lrb-', u'2003', u'-rrb-', u'.'], u'pos': [u'PRP', u'VBP', u'NNP', u'NNPS', u':', u'NNP', u'NNP', u'CC', u'PRP$', u'NNPS', u'NNP', u'CC', u'NNP', u',', u'-LRB-', u'CD', u'-RRB-', u'.'], u'char_offsets': [[64045, 64047], [64048, 64051], [64052, 64059], [64060, 64063], [64063, 64064], [64065, 64072], [64073, 64080], [64081, 64084], [64085, 64088], [64089, 64096], [64097, 64102], [64103, 64104], [64105, 64113], [64113, 64114], [64115, 64116], [64116, 64120], [64120, 64121], [64121, 64122]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'ever', u'repres'])
candidate Sentence: (0.10756639391183853, {u'tokens': [u'The', u'following', u'year', u',', u'when', u'his', u'father', u'relocated', u'the', u'family', u'to', u'a', u'new', u'homestead', u'in', u'Coles', u'County', u',', u'Illinois', u',', u'twenty-two-year-old', u'Lincoln', u'struck', u'out', u'on', u'his', u'own', u',', u'canoeing', u'down', u'the', u'Sangamon', u'River', u'to', u'the', u'village', u'of', u'New', u'Salem', u'in', u'Sangamon', u'County', u'.'], u'lemmas': [u'the', u'following', u'year', u',', u'when', u'he', u'father', u'relocate', u'the', u'family', u'to', u'a', u'new', u'homestead', u'in', u'Coles', u'County', u',', u'Illinois', u',', u'twenty-two-year-old', u'Lincoln', u'strike', u'out', u'on', u'he', u'own', u',', u'canoe', u'down', u'the', u'Sangamon', u'River', u'to', u'the', u'village', u'of', u'New', u'Salem', u'in', u'Sangamon', u'County', u'.'], u'pos': [u'DT', u'JJ', u'NN', u',', u'WRB', u'PRP$', u'NN', u'VBD', u'DT', u'NN', u'TO', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u',', u'NNP', u',', u'JJ', u'NNP', u'VBD', u'RP', u'IN', u'PRP$', u'JJ', u',', u'VBG', u'RP', u'DT', u'NNP', u'NNP', u'TO', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[6643, 6646], [6647, 6656], [6657, 6661], [6661, 6662], [6663, 6667], [6668, 6671], [6672, 6678], [6679, 6688], [6689, 6692], [6693, 6699], [6700, 6702], [6703, 6704], [6705, 6708], [6709, 6718], [6719, 6721], [6722, 6727], [6728, 6734], [6734, 6735], [6736, 6744], [6744, 6745], [6746, 6765], [6766, 6773], [6774, 6780], [6781, 6784], [6785, 6787], [6788, 6791], [6792, 6795], [6795, 6796], [6797, 6805], [6806, 6810], [6811, 6814], [6815, 6823], [6824, 6829], [6830, 6832], [6833, 6836], [6837, 6844], [6845, 6847], [6848, 6851], [6852, 6857], [6858, 6860], [6861, 6869], [6870, 6876], [6876, 6877]]}) 
answer: set([u'railroad', u'alton', u'ever', u'repres'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'lincoln', u'abraham', u'.'])

Did Lincoln ever represent Alton & Sangamon Railroad?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Abraham_Lincoln
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a4.txt

No
_____________________________ test_yesno[param11] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156d63f8>, (<src.tfidf.TF_IDF object at 0x11240da10>, set(['.', 'abraham', 'lincoln'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156d63f8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.42104655504226685, {u'tokens': [u'In', u'one', u'prominent', u'1851', u'case', u',', u'he', u'represented', u'the', u'Alton', u'&', u'Sangamon', u'Railroad', u'in', u'a', u'dispute', u'with', u'a', u'shareholder', u',', u'James', u'A.', u'Barret', u'.'], u'lemmas': [u'in', u'one', u'prominent', u'1851', u'case', u',', u'he', u'represent', u'the', u'Alton', u'&', u'Sangamon', u'railroad', u'in', u'a', u'dispute', u'with', u'a', u'shareholder', u',', u'James', u'A.', u'Barret', u'.'], u'pos': [u'IN', u'CD', u'JJ', u'CD', u'NN', u',', u'PRP', u'VBD', u'DT', u'NNP', u'CC', u'NNP', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u',', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[15577, 15579], [15580, 15583], [15584, 15593], [15594, 15598], [15599, 15603], [15603, 15604], [15605, 15607], [15608, 15619], [15620, 15623], [15624, 15629], [15630, 15631], [15632, 15640], [15641, 15649], [15650, 15652], [15653, 15654], [15655, 15662], [15663, 15667], [15668, 15669], [15670, 15681], [15681, 15682], [15683, 15688], [15689, 15691], [15692, 15698], [15698, 15699]]}) 
answer: set([u'ever'])
candidate Sentence: (0.17679741978645325, {u'tokens': [u'Gabor', u'S.', u'Boritt', u',', u"''", u'`', u'And', u'the', u'War', u'Came', u"'", u'?'], u'lemmas': [u'Gabor', u'S.', u'Boritt', u',', u"''", u'`', u'and', u'the', u'War', u'Came', u"'", u'?'], u'pos': [u'NNP', u'NNP', u'NNP', u',', u"''", u'``', u'CC', u'DT', u'NNP', u'NNP', u'POS', u'.'], u'char_offsets': [[22643, 22648], [22649, 22651], [22652, 22658], [22658, 22659], [22660, 22661], [22661, 22662], [22662, 22665], [22666, 22669], [22670, 22673], [22674, 22678], [22678, 22679], [22679, 22680]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'ever', u'repres'])
candidate Sentence: (0.15992625057697296, {u'tokens': [u'Lincoln', u'argued', u'that', u'as', u'a', u'matter', u'of', u'law', u'a', u'corporation', u'is', u'not', u'bound', u'by', u'its', u'original', u'charter', u'when', u'that', u'charter', u'can', u'be', u'amended', u'in', u'the', u'public', u'interest', u',', u'that', u'the', u'newer', u'route', u'proposed', u'by', u'Alton', u'&', u'Sangamon', u'was', u'superior', u'and', u'less', u'expensive', u',', u'and', u'that', u'accordingly', u',', u'the', u'corporation', u'had', u'a', u'right', u'to', u'sue', u'Barret', u'for', u'his', u'delinquent', u'payment', u'.'], u'lemmas': [u'Lincoln', u'argue', u'that', u'as', u'a', u'matter', u'of', u'law', u'a', u'corporation', u'be', u'not', u'bind', u'by', u'its', u'original', u'charter', u'when', u'that', u'charter', u'can', u'be', u'amend', u'in', u'the', u'public', u'interest', u',', u'that', u'the', u'newer', u'route', u'propose', u'by', u'Alton', u'&', u'Sangamon', u'be', u'superior', u'and', u'less', u'expensive', u',', u'and', u'that', u'accordingly', u',', u'the', u'corporation', u'have', u'a', u'right', u'to', u'sue', u'Barret', u'for', u'he', u'delinquent', u'payment', u'.'], u'pos': [u'NNP', u'VBD', u'IN', u'IN', u'DT', u'NN', u'IN', u'NN', u'DT', u'NN', u'VBZ', u'RB', u'VBN', u'IN', u'PRP$', u'JJ', u'NN', u'WRB', u'DT', u'NN', u'MD', u'VB', u'VBN', u'IN', u'DT', u'JJ', u'NN', u',', u'IN', u'DT', u'JJR', u'NN', u'VBN', u'IN', u'NNP', u'CC', u'NNP', u'VBD', u'JJ', u'CC', u'RBR', u'JJ', u',', u'CC', u'IN', u'RB', u',', u'DT', u'NN', u'VBD', u'DT', u'NN', u'TO', u'VB', u'NNP', u'IN', u'PRP$', u'JJ', u'NN', u'.'], u'char_offsets': [[15833, 15840], [15841, 15847], [15848, 15852], [15853, 15855], [15856, 15857], [15858, 15864], [15865, 15867], [15868, 15871], [15872, 15873], [15874, 15885], [15886, 15888], [15889, 15892], [15893, 15898], [15899, 15901], [15902, 15905], [15906, 15914], [15915, 15922], [15923, 15927], [15928, 15932], [15933, 15940], [15941, 15944], [15945, 15947], [15948, 15955], [15956, 15958], [15959, 15962], [15963, 15969], [15970, 15978], [15978, 15979], [15980, 15984], [15985, 15988], [15989, 15994], [15995, 16000], [16001, 16009], [16010, 16012], [16013, 16018], [16019, 16020], [16021, 16029], [16030, 16033], [16034, 16042], [16043, 16046], [16047, 16051], [16052, 16061], [16061, 16062], [16063, 16066], [16067, 16071], [16072, 16083], [16083, 16084], [16085, 16088], [16089, 16100], [16101, 16104], [16105, 16106], [16107, 16112], [16113, 16115], [16116, 16119], [16120, 16126], [16127, 16130], [16131, 16134], [16135, 16145], [16146, 16153], [16153, 16154]]}) 
answer: set([u'railroad', u'ever', u'repres'])
candidate Sentence: (0.13507699966430664, {u'tokens': [u'The', u'first', u'photograph', u'ever', u'taken', u'of', u'Mary', u'Lincoln', u',', u'a', u'daguerreotype', u'by', u'Shepherd', u'in', u'1846', u'.'], u'lemmas': [u'the', u'first', u'photograph', u'ever', u'take', u'of', u'Mary', u'Lincoln', u',', u'a', u'daguerreotype', u'by', u'Shepherd', u'in', u'1846', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'RB', u'VBN', u'IN', u'NNP', u'NNP', u',', u'DT', u'NN', u'IN', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[11183, 11186], [11187, 11192], [11193, 11203], [11204, 11208], [11209, 11214], [11215, 11217], [11218, 11222], [11223, 11230], [11230, 11231], [11232, 11233], [11234, 11247], [11248, 11250], [11251, 11259], [11260, 11262], [11263, 11267], [11267, 11268]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'repres'])
candidate Sentence: (0.13019566237926483, {u'tokens': [u'New', u'York', u':', u'Dick', u'&', u'Fitzgerald', u',', u'1865', u'.'], u'lemmas': [u'New', u'York', u':', u'Dick', u'&', u'Fitzgerald', u',', u'1865', u'.'], u'pos': [u'NNP', u'NNP', u':', u'NNP', u'CC', u'NNP', u',', u'CD', u'.'], u'char_offsets': [[49650, 49653], [49654, 49658], [49658, 49659], [49660, 49664], [49665, 49666], [49667, 49677], [49677, 49678], [49679, 49683], [49683, 49684]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'ever', u'repres'])
candidate Sentence: (0.12884826958179474, {u'tokens': [u'The', u'first', u'photograph', u'ever', u'taken', u'of', u'Abraham', u'Lincoln', u',', u'a', u'daguerreotype', u'taken', u'by', u'Shepherd', u'in', u'1846', u'.'], u'lemmas': [u'the', u'first', u'photograph', u'ever', u'take', u'of', u'Abraham', u'Lincoln', u',', u'a', u'daguerreotype', u'take', u'by', u'Shepherd', u'in', u'1846', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'RB', u'VBN', u'IN', u'NNP', u'NNP', u',', u'DT', u'NN', u'VBN', u'IN', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[12310, 12313], [12314, 12319], [12320, 12330], [12331, 12335], [12336, 12341], [12342, 12344], [12345, 12352], [12353, 12360], [12360, 12361], [12362, 12363], [12364, 12377], [12378, 12383], [12384, 12386], [12387, 12395], [12396, 12398], [12399, 12403], [12403, 12404]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'repres'])
candidate Sentence: (0.11990407109260559, {u'tokens': [u'He', u'asked', u'rhetorically', u'that', u'even', u'were', u'the', u'Constitution', u'a', u'simple', u'contract', u',', u'would', u'it', u'not', u'require', u'the', u'agreement', u'of', u'all', u'parties', u'to', u'rescind', u'it', u'?'], u'lemmas': [u'he', u'ask', u'rhetorically', u'that', u'even', u'be', u'the', u'Constitution', u'a', u'simple', u'contract', u',', u'would', u'it', u'not', u'require', u'the', u'agreement', u'of', u'all', u'party', u'to', u'rescind', u'it', u'?'], u'pos': [u'PRP', u'VBD', u'RB', u'IN', u'RB', u'VBD', u'DT', u'NNP', u'DT', u'JJ', u'NN', u',', u'MD', u'PRP', u'RB', u'VB', u'DT', u'NN', u'IN', u'DT', u'NNS', u'TO', u'VB', u'PRP', u'.'], u'char_offsets': [[26493, 26495], [26496, 26501], [26502, 26514], [26515, 26519], [26520, 26524], [26525, 26529], [26530, 26533], [26534, 26546], [26547, 26548], [26549, 26555], [26556, 26564], [26564, 26565], [26566, 26571], [26572, 26574], [26575, 26578], [26579, 26586], [26587, 26590], [26591, 26600], [26601, 26603], [26604, 26607], [26608, 26615], [26616, 26618], [26619, 26626], [26627, 26629], [26629, 26630]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'ever', u'repres'])
candidate Sentence: (0.11741779744625092, {u'tokens': [u'Years', u'later', u'she', u'compared', u'Lincoln', u'to', u'her', u'own', u'son', u',', u'saying', u'``', u'Both', u'were', u'good', u'boys', u',', u'but', u'I', u'must', u'say', u'both', u'now', u'being', u'dead', u'that', u'Abe', u'was', u'the', u'best', u'boy', u'I', u'ever', u'saw', u'or', u'ever', u'expect', u'to', u'see', u'.', u"''"], u'lemmas': [u'year', u'later', u'she', u'compare', u'Lincoln', u'to', u'she', u'own', u'son', u',', u'say', u'``', u'both', u'be', u'good', u'boy', u',', u'but', u'I', u'must', u'say', u'both', u'now', u'be', u'dead', u'that', u'abe', u'be', u'the', u'best', u'boy', u'I', u'ever', u'see', u'or', u'ever', u'expect', u'to', u'see', u'.', u"''"], u'pos': [u'NNS', u'RB', u'PRP', u'VBD', u'NNP', u'TO', u'PRP$', u'JJ', u'NN', u',', u'VBG', u'``', u'CC', u'VBD', u'JJ', u'NNS', u',', u'CC', u'PRP', u'MD', u'VB', u'CC', u'RB', u'VBG', u'JJ', u'IN', u'NN', u'VBD', u'DT', u'JJS', u'NN', u'PRP', u'RB', u'VBD', u'CC', u'RB', u'VBP', u'TO', u'VB', u'.', u"''"], u'char_offsets': [[5907, 5912], [5913, 5918], [5919, 5922], [5923, 5931], [5932, 5939], [5940, 5942], [5943, 5946], [5947, 5950], [5951, 5954], [5954, 5955], [5956, 5962], [5963, 5964], [5964, 5968], [5969, 5973], [5974, 5978], [5979, 5983], [5983, 5984], [5985, 5988], [5989, 5990], [5991, 5995], [5996, 5999], [6001, 6005], [6006, 6009], [6010, 6015], [6016, 6020], [6021, 6025], [6026, 6029], [6030, 6033], [6034, 6037], [6038, 6042], [6043, 6046], [6047, 6048], [6049, 6053], [6054, 6057], [6058, 6060], [6061, 6065], [6066, 6072], [6073, 6075], [6076, 6079], [6079, 6080], [6080, 6081]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'repres'])
candidate Sentence: (0.10918981581926346, {u'tokens': [u'We', u'Are', u'Lincoln', u'Men', u':', u'Abraham', u'Lincoln', u'and', u'His', u'Friends', u'Simon', u'&', u'Schuster', u',', u'-LRB-', u'2003', u'-RRB-', u'.'], u'lemmas': [u'we', u'be', u'Lincoln', u'Men', u':', u'Abraham', u'Lincoln', u'and', u'he', u'Friends', u'Simon', u'&', u'Schuster', u',', u'-lrb-', u'2003', u'-rrb-', u'.'], u'pos': [u'PRP', u'VBP', u'NNP', u'NNPS', u':', u'NNP', u'NNP', u'CC', u'PRP$', u'NNPS', u'NNP', u'CC', u'NNP', u',', u'-LRB-', u'CD', u'-RRB-', u'.'], u'char_offsets': [[64045, 64047], [64048, 64051], [64052, 64059], [64060, 64063], [64063, 64064], [64065, 64072], [64073, 64080], [64081, 64084], [64085, 64088], [64089, 64096], [64097, 64102], [64103, 64104], [64105, 64113], [64113, 64114], [64115, 64116], [64116, 64120], [64120, 64121], [64121, 64122]]}) 
answer: set([u'sangamon', u'railroad', u'alton', u'ever', u'repres'])
candidate Sentence: (0.10756639391183853, {u'tokens': [u'The', u'following', u'year', u',', u'when', u'his', u'father', u'relocated', u'the', u'family', u'to', u'a', u'new', u'homestead', u'in', u'Coles', u'County', u',', u'Illinois', u',', u'twenty-two-year-old', u'Lincoln', u'struck', u'out', u'on', u'his', u'own', u',', u'canoeing', u'down', u'the', u'Sangamon', u'River', u'to', u'the', u'village', u'of', u'New', u'Salem', u'in', u'Sangamon', u'County', u'.'], u'lemmas': [u'the', u'following', u'year', u',', u'when', u'he', u'father', u'relocate', u'the', u'family', u'to', u'a', u'new', u'homestead', u'in', u'Coles', u'County', u',', u'Illinois', u',', u'twenty-two-year-old', u'Lincoln', u'strike', u'out', u'on', u'he', u'own', u',', u'canoe', u'down', u'the', u'Sangamon', u'River', u'to', u'the', u'village', u'of', u'New', u'Salem', u'in', u'Sangamon', u'County', u'.'], u'pos': [u'DT', u'JJ', u'NN', u',', u'WRB', u'PRP$', u'NN', u'VBD', u'DT', u'NN', u'TO', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u',', u'NNP', u',', u'JJ', u'NNP', u'VBD', u'RP', u'IN', u'PRP$', u'JJ', u',', u'VBG', u'RP', u'DT', u'NNP', u'NNP', u'TO', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[6643, 6646], [6647, 6656], [6657, 6661], [6661, 6662], [6663, 6667], [6668, 6671], [6672, 6678], [6679, 6688], [6689, 6692], [6693, 6699], [6700, 6702], [6703, 6704], [6705, 6708], [6709, 6718], [6719, 6721], [6722, 6727], [6728, 6734], [6734, 6735], [6736, 6744], [6744, 6745], [6746, 6765], [6766, 6773], [6774, 6780], [6781, 6784], [6785, 6787], [6788, 6791], [6792, 6795], [6795, 6796], [6797, 6805], [6806, 6810], [6811, 6814], [6815, 6823], [6824, 6829], [6830, 6832], [6833, 6836], [6837, 6844], [6845, 6847], [6848, 6851], [6852, 6857], [6858, 6860], [6861, 6869], [6870, 6876], [6876, 6877]]}) 
answer: set([u'railroad', u'alton', u'ever', u'repres'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'lincoln', u'abraham', u'.'])

Did Lincoln ever represent Alton & Sangamon Railroad?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Abraham_Lincoln
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a4.txt

No
_____________________________ test_yesno[param19] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1155ec0e0>, (<src.tfidf.TF_IDF object at 0x110787150>, set(['.', 'beetle'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1155ec0e0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.3669508695602417, {u'tokens': [u'Beetles', u"'", u'antennae', u'are', u'primarily', u'organs', u'of', u'smell', u',', u'but', u'may', u'also', u'be', u'used', u'to', u'feel', u'out', u'a', u'beetle', u"'s", u'environment', u'physically', u'.'], u'lemmas': [u'Beetles', u"'", u'antenna', u'be', u'primarily', u'organ', u'of', u'smell', u',', u'but', u'may', u'also', u'be', u'use', u'to', u'feel', u'out', u'a', u'beetle', u"'s", u'environment', u'physically', u'.'], u'pos': [u'NNP', u'POS', u'NNS', u'VBP', u'RB', u'NNS', u'IN', u'NN', u',', u'CC', u'MD', u'RB', u'VB', u'VBN', u'TO', u'VB', u'RP', u'DT', u'NN', u'POS', u'NN', u'RB', u'.'], u'char_offsets': [[5438, 5445], [5445, 5446], [5447, 5455], [5456, 5459], [5460, 5469], [5470, 5476], [5477, 5479], [5480, 5485], [5485, 5486], [5487, 5490], [5491, 5494], [5495, 5499], [5500, 5502], [5503, 5507], [5508, 5510], [5511, 5515], [5516, 5519], [5520, 5521], [5522, 5528], [5528, 5530], [5531, 5542], [5543, 5553], [5553, 5554]]}) 
answer: set([u'function'])
candidate Sentence: (0.25584584474563599, {u'tokens': [u'The', u'general', u'anatomy', u'of', u'beetles', u'is', u'quite', u'uniform', u',', u'although', u'specific', u'organs', u'and', u'appendages', u'may', u'vary', u'greatly', u'in', u'appearance', u'and', u'function', u'between', u'the', u'many', u'families', u'in', u'the', u'order', u'.'], u'lemmas': [u'the', u'general', u'anatomy', u'of', u'beetle', u'be', u'quite', u'uniform', u',', u'although', u'specific', u'organ', u'and', u'appendage', u'may', u'vary', u'greatly', u'in', u'appearance', u'and', u'function', u'between', u'the', u'many', u'family', u'in', u'the', u'order', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'NNS', u'VBZ', u'RB', u'JJ', u',', u'IN', u'JJ', u'NNS', u'CC', u'NNS', u'MD', u'VB', u'RB', u'IN', u'NN', u'CC', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[2316, 2319], [2320, 2327], [2328, 2335], [2336, 2338], [2339, 2346], [2347, 2349], [2350, 2355], [2356, 2363], [2363, 2364], [2365, 2373], [2374, 2382], [2383, 2389], [2390, 2393], [2394, 2404], [2405, 2408], [2409, 2413], [2414, 2421], [2422, 2424], [2425, 2435], [2436, 2439], [2440, 2448], [2449, 2456], [2457, 2460], [2461, 2465], [2466, 2474], [2475, 2477], [2478, 2481], [2482, 2487], [2487, 2488]]}) 
answer: set([u'smell', u'primarili', u'antenna'])
candidate Sentence: (0.17675784230232239, {u'tokens': [u'Smell', u'is', u'thought', u'to', u'be', u'important', u'in', u'the', u'location', u'of', u'a', u'mate', u'.'], u'lemmas': [u'smell', u'be', u'think', u'to', u'be', u'important', u'in', u'the', u'location', u'of', u'a', u'mate', u'.'], u'pos': [u'NN', u'VBZ', u'VBN', u'TO', u'VB', u'JJ', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[10420, 10425], [10426, 10428], [10429, 10436], [10437, 10439], [10440, 10442], [10443, 10452], [10453, 10455], [10456, 10459], [10460, 10468], [10469, 10471], [10472, 10473], [10474, 10478], [10478, 10479]]}) 
answer: set([u'function', u'organ', u'primarili', u'antenna'])
candidate Sentence: (0.12634137272834778, {u'tokens': [u'Ground', u'beetles', u'and', u'rove', u'beetles', u'-LRB-', u'family', u'Staphylinidae', u'-RRB-', u',', u'among', u'others', u',', u'are', u'primarily', u'carnivorous', u'and', u'will', u'catch', u'and', u'consume', u'many', u'other', u'arthropods', u'and', u'small', u'prey', u'such', u'as', u'earthworms', u'and', u'snails', u'.'], u'lemmas': [u'ground', u'beetle', u'and', u'rove', u'beetle', u'-lrb-', u'family', u'staphylinida', u'-rrb-', u',', u'among', u'other', u',', u'be', u'primarily', u'carnivorous', u'and', u'will', u'catch', u'and', u'consume', u'many', u'other', u'arthropod', u'and', u'small', u'prey', u'such', u'as', u'earthworm', u'and', u'snail', u'.'], u'pos': [u'NN', u'NNS', u'CC', u'NN', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u',', u'IN', u'NNS', u',', u'VBP', u'RB', u'JJ', u'CC', u'MD', u'VB', u'CC', u'VB', u'JJ', u'JJ', u'NNS', u'CC', u'JJ', u'NN', u'JJ', u'IN', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[13340, 13346], [13347, 13354], [13355, 13358], [13359, 13363], [13364, 13371], [13372, 13373], [13373, 13379], [13380, 13393], [13393, 13394], [13394, 13395], [13396, 13401], [13402, 13408], [13408, 13409], [13410, 13413], [13414, 13423], [13424, 13435], [13436, 13439], [13440, 13444], [13445, 13450], [13451, 13454], [13455, 13462], [13463, 13467], [13468, 13473], [13474, 13484], [13485, 13488], [13489, 13494], [13495, 13499], [13500, 13504], [13505, 13507], [13508, 13518], [13519, 13522], [13523, 13529], [13529, 13530]]}) 
answer: set([u'function', u'smell', u'organ', u'antenna'])
candidate Sentence: (0.092965252697467804, {u'tokens': [u'ISBN', u'0-395-91089-7', u'*', u'Heteroptera', u'-', u'insect', u'suborder', u'that', u'is', u'superficially', u'similar', u'to', u'beetles', u'*', u'-', u'Coleoptera', u'All', u'what', u'do', u'you', u'need', u'to', u'know', u'about', u'coleoptera', u',', u'collecting', u'and', u'preparation', u'*', u'The', u'Beetle', u'Ring', u'-', u'A', u'group', u'of', u'websites', u'about', u'beetles', u'-LRB-', u'Coleoptera', u'-RRB-', u'.'], u'lemmas': [u'ISBN', u'0-395-91089-7', u'*', u'heteroptera', u'-', u'insect', u'suborder', u'that', u'be', u'superficially', u'similar', u'to', u'beetle', u'*', u'-', u'Coleoptera', u'All', u'what', u'do', u'you', u'need', u'to', u'know', u'about', u'coleoptera', u',', u'collect', u'and', u'preparation', u'*', u'the', u'Beetle', u'ring', u'-', u'a', u'group', u'of', u'website', u'about', u'beetle', u'-lrb-', u'coleoptera', u'-rrb-', u'.'], u'pos': [u'NNP', u'CD', u'SYM', u'SYM', u':', u'NN', u'NN', u'WDT', u'VBZ', u'RB', u'JJ', u'TO', u'NNS', u'SYM', u':', u'NNP', u'NNP', u'WP', u'VBP', u'PRP', u'VB', u'TO', u'VB', u'IN', u'NN', u',', u'VBG', u'CC', u'NN', u'SYM', u'DT', u'NNP', u'NN', u':', u'DT', u'NN', u'IN', u'NNS', u'IN', u'NNS', u'-LRB-', u'NN', u'-RRB-', u'.'], u'char_offsets': [[22217, 22221], [22222, 22235], [22236, 22237], [22237, 22248], [22249, 22250], [22251, 22257], [22258, 22266], [22267, 22271], [22272, 22274], [22275, 22288], [22289, 22296], [22297, 22299], [22300, 22307], [22308, 22309], [22311, 22312], [22313, 22323], [22324, 22327], [22328, 22332], [22333, 22335], [22336, 22339], [22340, 22344], [22345, 22347], [22348, 22352], [22353, 22358], [22359, 22369], [22369, 22370], [22371, 22381], [22382, 22385], [22386, 22397], [22398, 22399], [22401, 22404], [22405, 22411], [22412, 22416], [22417, 22418], [22419, 22420], [22421, 22426], [22427, 22429], [22430, 22438], [22439, 22444], [22445, 22452], [22453, 22454], [22454, 22464], [22464, 22465], [22465, 22466]]}) 
answer: set([u'function', u'smell', u'primarili', u'organ', u'antenna'])
candidate Sentence: (0.048532336950302124, {u'tokens': [u'As', u'well', u'as', u'potatoes', u',', u'suitable', u'hosts', u'can', u'be', u'a', u'number', u'of', u'plants', u'from', u'the', u'potato', u'family', u'-LRB-', u'Solanaceae', u'-RRB-', u',', u'such', u'as', u'nightshade', u',', u'tomato', u',', u'aubergine', u'and', u'capsicum', u'.'], u'lemmas': [u'as', u'well', u'as', u'potato', u',', u'suitable', u'host', u'can', u'be', u'a', u'number', u'of', u'plant', u'from', u'the', u'potato', u'family', u'-lrb-', u'solanacea', u'-rrb-', u',', u'such', u'as', u'nightshade', u',', u'tomato', u',', u'aubergine', u'and', u'capsicum', u'.'], u'pos': [u'RB', u'RB', u'IN', u'NNS', u',', u'JJ', u'NNS', u'MD', u'VB', u'DT', u'NN', u'IN', u'NNS', u'IN', u'DT', u'NN', u'NN', u'-LRB-', u'NN', u'-RRB-', u',', u'JJ', u'IN', u'NN', u',', u'NN', u',', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[16955, 16957], [16958, 16962], [16963, 16965], [16966, 16974], [16974, 16975], [16976, 16984], [16985, 16990], [16991, 16994], [16995, 16997], [16998, 16999], [17000, 17006], [17007, 17009], [17010, 17016], [17017, 17021], [17022, 17025], [17026, 17032], [17033, 17039], [17040, 17041], [17041, 17051], [17051, 17052], [17052, 17053], [17054, 17058], [17059, 17061], [17062, 17072], [17072, 17073], [17074, 17080], [17080, 17081], [17082, 17091], [17092, 17095], [17096, 17104], [17104, 17105]]}) 
answer: set([u'function', u'smell', u'primarili', u'organ', u'antenna'])
candidate Sentence: (0.04596313089132309, {u'tokens': [u'The', u'larval', u'period', u'varies', u'between', u'species', u'but', u'can', u'be', u'as', u'long', u'as', u'several', u'years', u'.'], u'lemmas': [u'the', u'larval', u'period', u'vary', u'between', u'species', u'but', u'can', u'be', u'as', u'long', u'as', u'several', u'year', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VBZ', u'IN', u'NNS', u'CC', u'MD', u'VB', u'RB', u'RB', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[8368, 8371], [8372, 8378], [8379, 8385], [8386, 8392], [8393, 8400], [8401, 8408], [8409, 8412], [8413, 8416], [8417, 8419], [8420, 8422], [8423, 8427], [8428, 8430], [8431, 8438], [8439, 8444], [8444, 8445]]}) 
answer: set([u'function', u'smell', u'primarili', u'organ', u'antenna'])
candidate Sentence: (0.040969904512166977, {u'tokens': [u'Beetles', u'in', u'the', u'families', u'of', u'the', u'Scarabaeoidea', u'have', u'short', u',', u'thick', u'larvae', u'described', u'as', u'scarabaeiform', u',', u'but', u'more', u'commonly', u'known', u'as', u'grubs', u'.'], u'lemmas': [u'Beetles', u'in', u'the', u'family', u'of', u'the', u'Scarabaeoidea', u'have', u'short', u',', u'thick', u'larva', u'describe', u'as', u'scarabaeiform', u',', u'but', u'more', u'commonly', u'know', u'as', u'grub', u'.'], u'pos': [u'NNP', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NNP', u'VBP', u'JJ', u',', u'JJ', u'NNS', u'VBN', u'IN', u'NN', u',', u'CC', u'RBR', u'RB', u'VBN', u'IN', u'NNS', u'.'], u'char_offsets': [[9158, 9165], [9166, 9168], [9169, 9172], [9173, 9181], [9182, 9184], [9185, 9188], [9189, 9202], [9203, 9207], [9208, 9213], [9213, 9214], [9215, 9220], [9221, 9227], [9228, 9237], [9238, 9240], [9241, 9254], [9254, 9255], [9256, 9259], [9260, 9264], [9265, 9273], [9274, 9279], [9280, 9282], [9283, 9288], [9288, 9289]]}) 
answer: set([u'function', u'smell', u'primarili', u'organ', u'antenna'])
candidate Sentence: (0.038457721471786499, {u'tokens': [u'Some', u'elateriform', u'larvae', u'of', u'click', u'beetles', u'are', u'known', u'as', u'wireworms', u'.'], u'lemmas': [u'some', u'elateriform', u'larva', u'of', u'click', u'beetle', u'be', u'know', u'as', u'wireworm', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u'IN', u'VBP', u'NNS', u'VBP', u'VBN', u'IN', u'NNS', u'.'], u'char_offsets': [[9093, 9097], [9098, 9109], [9110, 9116], [9117, 9119], [9120, 9125], [9126, 9133], [9134, 9137], [9138, 9143], [9144, 9146], [9147, 9156], [9156, 9157]]}) 
answer: set([u'function', u'smell', u'primarili', u'organ', u'antenna'])
candidate Sentence: (0.032215595245361328, {u'tokens': [u'This', u'can', u'range', u'from', u'dung', u',', u'which', u'is', u'consumed', u'by', u'coprophagous', u'species', u'such', u'as', u'certain', u'scarab', u'beetles', u'-LRB-', u'family', u'Scarabaeidae', u'-RRB-', u',', u'to', u'dead', u'animals', u',', u'which', u'are', u'eaten', u'by', u'necrophagous', u'species', u'such', u'as', u'the', u'carrion', u'beetles', u'-LRB-', u'family', u'Silphidae', u'-RRB-', u'.'], u'lemmas': [u'this', u'can', u'range', u'from', u'dung', u',', u'which', u'be', u'consume', u'by', u'coprophagous', u'species', u'such', u'as', u'certain', u'scarab', u'beetle', u'-lrb-', u'family', u'scarabaeida', u'-rrb-', u',', u'to', u'dead', u'animal', u',', u'which', u'be', u'eat', u'by', u'necrophagous', u'species', u'such', u'as', u'the', u'carrion', u'beetle', u'-lrb-', u'family', u'silphida', u'-rrb-', u'.'], u'pos': [u'DT', u'MD', u'VB', u'IN', u'NN', u',', u'WDT', u'VBZ', u'VBN', u'IN', u'JJ', u'NNS', u'JJ', u'IN', u'JJ', u'NN', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u',', u'TO', u'JJ', u'NNS', u',', u'WDT', u'VBP', u'VBN', u'IN', u'JJ', u'NNS', u'JJ', u'IN', u'DT', u'NN', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u'.'], u'char_offsets': [[13704, 13708], [13709, 13712], [13713, 13718], [13719, 13723], [13724, 13728], [13728, 13729], [13730, 13735], [13736, 13738], [13739, 13747], [13748, 13750], [13751, 13763], [13764, 13771], [13772, 13776], [13777, 13779], [13780, 13787], [13788, 13794], [13795, 13802], [13803, 13804], [13804, 13810], [13811, 13823], [13823, 13824], [13824, 13825], [13826, 13828], [13829, 13833], [13834, 13841], [13841, 13842], [13843, 13848], [13849, 13852], [13853, 13858], [13859, 13861], [13862, 13874], [13875, 13882], [13883, 13887], [13888, 13890], [13891, 13894], [13895, 13902], [13903, 13910], [13911, 13912], [13912, 13918], [13919, 13928], [13928, 13929], [13929, 13930]]}) 
answer: set([u'function', u'smell', u'primarili', u'organ', u'antenna'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'beetle'])

Do beetles antennae function primarily as organs of smell?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = beetle
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a8.txt

No
_____________________________ test_yesno[param20] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1155ec290>, (<src.tfidf.TF_IDF object at 0x110787150>, set(['.', 'beetle'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1155ec290>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.3669508695602417, {u'tokens': [u'Beetles', u"'", u'antennae', u'are', u'primarily', u'organs', u'of', u'smell', u',', u'but', u'may', u'also', u'be', u'used', u'to', u'feel', u'out', u'a', u'beetle', u"'s", u'environment', u'physically', u'.'], u'lemmas': [u'Beetles', u"'", u'antenna', u'be', u'primarily', u'organ', u'of', u'smell', u',', u'but', u'may', u'also', u'be', u'use', u'to', u'feel', u'out', u'a', u'beetle', u"'s", u'environment', u'physically', u'.'], u'pos': [u'NNP', u'POS', u'NNS', u'VBP', u'RB', u'NNS', u'IN', u'NN', u',', u'CC', u'MD', u'RB', u'VB', u'VBN', u'TO', u'VB', u'RP', u'DT', u'NN', u'POS', u'NN', u'RB', u'.'], u'char_offsets': [[5438, 5445], [5445, 5446], [5447, 5455], [5456, 5459], [5460, 5469], [5470, 5476], [5477, 5479], [5480, 5485], [5485, 5486], [5487, 5490], [5491, 5494], [5495, 5499], [5500, 5502], [5503, 5507], [5508, 5510], [5511, 5515], [5516, 5519], [5520, 5521], [5522, 5528], [5528, 5530], [5531, 5542], [5543, 5553], [5553, 5554]]}) 
answer: set([u'function'])
candidate Sentence: (0.25584584474563599, {u'tokens': [u'The', u'general', u'anatomy', u'of', u'beetles', u'is', u'quite', u'uniform', u',', u'although', u'specific', u'organs', u'and', u'appendages', u'may', u'vary', u'greatly', u'in', u'appearance', u'and', u'function', u'between', u'the', u'many', u'families', u'in', u'the', u'order', u'.'], u'lemmas': [u'the', u'general', u'anatomy', u'of', u'beetle', u'be', u'quite', u'uniform', u',', u'although', u'specific', u'organ', u'and', u'appendage', u'may', u'vary', u'greatly', u'in', u'appearance', u'and', u'function', u'between', u'the', u'many', u'family', u'in', u'the', u'order', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'NNS', u'VBZ', u'RB', u'JJ', u',', u'IN', u'JJ', u'NNS', u'CC', u'NNS', u'MD', u'VB', u'RB', u'IN', u'NN', u'CC', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[2316, 2319], [2320, 2327], [2328, 2335], [2336, 2338], [2339, 2346], [2347, 2349], [2350, 2355], [2356, 2363], [2363, 2364], [2365, 2373], [2374, 2382], [2383, 2389], [2390, 2393], [2394, 2404], [2405, 2408], [2409, 2413], [2414, 2421], [2422, 2424], [2425, 2435], [2436, 2439], [2440, 2448], [2449, 2456], [2457, 2460], [2461, 2465], [2466, 2474], [2475, 2477], [2478, 2481], [2482, 2487], [2487, 2488]]}) 
answer: set([u'smell', u'primarili', u'antenna'])
candidate Sentence: (0.17675784230232239, {u'tokens': [u'Smell', u'is', u'thought', u'to', u'be', u'important', u'in', u'the', u'location', u'of', u'a', u'mate', u'.'], u'lemmas': [u'smell', u'be', u'think', u'to', u'be', u'important', u'in', u'the', u'location', u'of', u'a', u'mate', u'.'], u'pos': [u'NN', u'VBZ', u'VBN', u'TO', u'VB', u'JJ', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[10420, 10425], [10426, 10428], [10429, 10436], [10437, 10439], [10440, 10442], [10443, 10452], [10453, 10455], [10456, 10459], [10460, 10468], [10469, 10471], [10472, 10473], [10474, 10478], [10478, 10479]]}) 
answer: set([u'function', u'organ', u'primarili', u'antenna'])
candidate Sentence: (0.12634137272834778, {u'tokens': [u'Ground', u'beetles', u'and', u'rove', u'beetles', u'-LRB-', u'family', u'Staphylinidae', u'-RRB-', u',', u'among', u'others', u',', u'are', u'primarily', u'carnivorous', u'and', u'will', u'catch', u'and', u'consume', u'many', u'other', u'arthropods', u'and', u'small', u'prey', u'such', u'as', u'earthworms', u'and', u'snails', u'.'], u'lemmas': [u'ground', u'beetle', u'and', u'rove', u'beetle', u'-lrb-', u'family', u'staphylinida', u'-rrb-', u',', u'among', u'other', u',', u'be', u'primarily', u'carnivorous', u'and', u'will', u'catch', u'and', u'consume', u'many', u'other', u'arthropod', u'and', u'small', u'prey', u'such', u'as', u'earthworm', u'and', u'snail', u'.'], u'pos': [u'NN', u'NNS', u'CC', u'NN', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u',', u'IN', u'NNS', u',', u'VBP', u'RB', u'JJ', u'CC', u'MD', u'VB', u'CC', u'VB', u'JJ', u'JJ', u'NNS', u'CC', u'JJ', u'NN', u'JJ', u'IN', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[13340, 13346], [13347, 13354], [13355, 13358], [13359, 13363], [13364, 13371], [13372, 13373], [13373, 13379], [13380, 13393], [13393, 13394], [13394, 13395], [13396, 13401], [13402, 13408], [13408, 13409], [13410, 13413], [13414, 13423], [13424, 13435], [13436, 13439], [13440, 13444], [13445, 13450], [13451, 13454], [13455, 13462], [13463, 13467], [13468, 13473], [13474, 13484], [13485, 13488], [13489, 13494], [13495, 13499], [13500, 13504], [13505, 13507], [13508, 13518], [13519, 13522], [13523, 13529], [13529, 13530]]}) 
answer: set([u'function', u'smell', u'organ', u'antenna'])
candidate Sentence: (0.092965252697467804, {u'tokens': [u'ISBN', u'0-395-91089-7', u'*', u'Heteroptera', u'-', u'insect', u'suborder', u'that', u'is', u'superficially', u'similar', u'to', u'beetles', u'*', u'-', u'Coleoptera', u'All', u'what', u'do', u'you', u'need', u'to', u'know', u'about', u'coleoptera', u',', u'collecting', u'and', u'preparation', u'*', u'The', u'Beetle', u'Ring', u'-', u'A', u'group', u'of', u'websites', u'about', u'beetles', u'-LRB-', u'Coleoptera', u'-RRB-', u'.'], u'lemmas': [u'ISBN', u'0-395-91089-7', u'*', u'heteroptera', u'-', u'insect', u'suborder', u'that', u'be', u'superficially', u'similar', u'to', u'beetle', u'*', u'-', u'Coleoptera', u'All', u'what', u'do', u'you', u'need', u'to', u'know', u'about', u'coleoptera', u',', u'collect', u'and', u'preparation', u'*', u'the', u'Beetle', u'ring', u'-', u'a', u'group', u'of', u'website', u'about', u'beetle', u'-lrb-', u'coleoptera', u'-rrb-', u'.'], u'pos': [u'NNP', u'CD', u'SYM', u'SYM', u':', u'NN', u'NN', u'WDT', u'VBZ', u'RB', u'JJ', u'TO', u'NNS', u'SYM', u':', u'NNP', u'NNP', u'WP', u'VBP', u'PRP', u'VB', u'TO', u'VB', u'IN', u'NN', u',', u'VBG', u'CC', u'NN', u'SYM', u'DT', u'NNP', u'NN', u':', u'DT', u'NN', u'IN', u'NNS', u'IN', u'NNS', u'-LRB-', u'NN', u'-RRB-', u'.'], u'char_offsets': [[22217, 22221], [22222, 22235], [22236, 22237], [22237, 22248], [22249, 22250], [22251, 22257], [22258, 22266], [22267, 22271], [22272, 22274], [22275, 22288], [22289, 22296], [22297, 22299], [22300, 22307], [22308, 22309], [22311, 22312], [22313, 22323], [22324, 22327], [22328, 22332], [22333, 22335], [22336, 22339], [22340, 22344], [22345, 22347], [22348, 22352], [22353, 22358], [22359, 22369], [22369, 22370], [22371, 22381], [22382, 22385], [22386, 22397], [22398, 22399], [22401, 22404], [22405, 22411], [22412, 22416], [22417, 22418], [22419, 22420], [22421, 22426], [22427, 22429], [22430, 22438], [22439, 22444], [22445, 22452], [22453, 22454], [22454, 22464], [22464, 22465], [22465, 22466]]}) 
answer: set([u'function', u'smell', u'primarili', u'organ', u'antenna'])
candidate Sentence: (0.048532336950302124, {u'tokens': [u'As', u'well', u'as', u'potatoes', u',', u'suitable', u'hosts', u'can', u'be', u'a', u'number', u'of', u'plants', u'from', u'the', u'potato', u'family', u'-LRB-', u'Solanaceae', u'-RRB-', u',', u'such', u'as', u'nightshade', u',', u'tomato', u',', u'aubergine', u'and', u'capsicum', u'.'], u'lemmas': [u'as', u'well', u'as', u'potato', u',', u'suitable', u'host', u'can', u'be', u'a', u'number', u'of', u'plant', u'from', u'the', u'potato', u'family', u'-lrb-', u'solanacea', u'-rrb-', u',', u'such', u'as', u'nightshade', u',', u'tomato', u',', u'aubergine', u'and', u'capsicum', u'.'], u'pos': [u'RB', u'RB', u'IN', u'NNS', u',', u'JJ', u'NNS', u'MD', u'VB', u'DT', u'NN', u'IN', u'NNS', u'IN', u'DT', u'NN', u'NN', u'-LRB-', u'NN', u'-RRB-', u',', u'JJ', u'IN', u'NN', u',', u'NN', u',', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[16955, 16957], [16958, 16962], [16963, 16965], [16966, 16974], [16974, 16975], [16976, 16984], [16985, 16990], [16991, 16994], [16995, 16997], [16998, 16999], [17000, 17006], [17007, 17009], [17010, 17016], [17017, 17021], [17022, 17025], [17026, 17032], [17033, 17039], [17040, 17041], [17041, 17051], [17051, 17052], [17052, 17053], [17054, 17058], [17059, 17061], [17062, 17072], [17072, 17073], [17074, 17080], [17080, 17081], [17082, 17091], [17092, 17095], [17096, 17104], [17104, 17105]]}) 
answer: set([u'function', u'smell', u'primarili', u'organ', u'antenna'])
candidate Sentence: (0.04596313089132309, {u'tokens': [u'The', u'larval', u'period', u'varies', u'between', u'species', u'but', u'can', u'be', u'as', u'long', u'as', u'several', u'years', u'.'], u'lemmas': [u'the', u'larval', u'period', u'vary', u'between', u'species', u'but', u'can', u'be', u'as', u'long', u'as', u'several', u'year', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VBZ', u'IN', u'NNS', u'CC', u'MD', u'VB', u'RB', u'RB', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[8368, 8371], [8372, 8378], [8379, 8385], [8386, 8392], [8393, 8400], [8401, 8408], [8409, 8412], [8413, 8416], [8417, 8419], [8420, 8422], [8423, 8427], [8428, 8430], [8431, 8438], [8439, 8444], [8444, 8445]]}) 
answer: set([u'function', u'smell', u'primarili', u'organ', u'antenna'])
candidate Sentence: (0.040969904512166977, {u'tokens': [u'Beetles', u'in', u'the', u'families', u'of', u'the', u'Scarabaeoidea', u'have', u'short', u',', u'thick', u'larvae', u'described', u'as', u'scarabaeiform', u',', u'but', u'more', u'commonly', u'known', u'as', u'grubs', u'.'], u'lemmas': [u'Beetles', u'in', u'the', u'family', u'of', u'the', u'Scarabaeoidea', u'have', u'short', u',', u'thick', u'larva', u'describe', u'as', u'scarabaeiform', u',', u'but', u'more', u'commonly', u'know', u'as', u'grub', u'.'], u'pos': [u'NNP', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NNP', u'VBP', u'JJ', u',', u'JJ', u'NNS', u'VBN', u'IN', u'NN', u',', u'CC', u'RBR', u'RB', u'VBN', u'IN', u'NNS', u'.'], u'char_offsets': [[9158, 9165], [9166, 9168], [9169, 9172], [9173, 9181], [9182, 9184], [9185, 9188], [9189, 9202], [9203, 9207], [9208, 9213], [9213, 9214], [9215, 9220], [9221, 9227], [9228, 9237], [9238, 9240], [9241, 9254], [9254, 9255], [9256, 9259], [9260, 9264], [9265, 9273], [9274, 9279], [9280, 9282], [9283, 9288], [9288, 9289]]}) 
answer: set([u'function', u'smell', u'primarili', u'organ', u'antenna'])
candidate Sentence: (0.038457721471786499, {u'tokens': [u'Some', u'elateriform', u'larvae', u'of', u'click', u'beetles', u'are', u'known', u'as', u'wireworms', u'.'], u'lemmas': [u'some', u'elateriform', u'larva', u'of', u'click', u'beetle', u'be', u'know', u'as', u'wireworm', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u'IN', u'VBP', u'NNS', u'VBP', u'VBN', u'IN', u'NNS', u'.'], u'char_offsets': [[9093, 9097], [9098, 9109], [9110, 9116], [9117, 9119], [9120, 9125], [9126, 9133], [9134, 9137], [9138, 9143], [9144, 9146], [9147, 9156], [9156, 9157]]}) 
answer: set([u'function', u'smell', u'primarili', u'organ', u'antenna'])
candidate Sentence: (0.032215595245361328, {u'tokens': [u'This', u'can', u'range', u'from', u'dung', u',', u'which', u'is', u'consumed', u'by', u'coprophagous', u'species', u'such', u'as', u'certain', u'scarab', u'beetles', u'-LRB-', u'family', u'Scarabaeidae', u'-RRB-', u',', u'to', u'dead', u'animals', u',', u'which', u'are', u'eaten', u'by', u'necrophagous', u'species', u'such', u'as', u'the', u'carrion', u'beetles', u'-LRB-', u'family', u'Silphidae', u'-RRB-', u'.'], u'lemmas': [u'this', u'can', u'range', u'from', u'dung', u',', u'which', u'be', u'consume', u'by', u'coprophagous', u'species', u'such', u'as', u'certain', u'scarab', u'beetle', u'-lrb-', u'family', u'scarabaeida', u'-rrb-', u',', u'to', u'dead', u'animal', u',', u'which', u'be', u'eat', u'by', u'necrophagous', u'species', u'such', u'as', u'the', u'carrion', u'beetle', u'-lrb-', u'family', u'silphida', u'-rrb-', u'.'], u'pos': [u'DT', u'MD', u'VB', u'IN', u'NN', u',', u'WDT', u'VBZ', u'VBN', u'IN', u'JJ', u'NNS', u'JJ', u'IN', u'JJ', u'NN', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u',', u'TO', u'JJ', u'NNS', u',', u'WDT', u'VBP', u'VBN', u'IN', u'JJ', u'NNS', u'JJ', u'IN', u'DT', u'NN', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u'.'], u'char_offsets': [[13704, 13708], [13709, 13712], [13713, 13718], [13719, 13723], [13724, 13728], [13728, 13729], [13730, 13735], [13736, 13738], [13739, 13747], [13748, 13750], [13751, 13763], [13764, 13771], [13772, 13776], [13777, 13779], [13780, 13787], [13788, 13794], [13795, 13802], [13803, 13804], [13804, 13810], [13811, 13823], [13823, 13824], [13824, 13825], [13826, 13828], [13829, 13833], [13834, 13841], [13841, 13842], [13843, 13848], [13849, 13852], [13853, 13858], [13859, 13861], [13862, 13874], [13875, 13882], [13883, 13887], [13888, 13890], [13891, 13894], [13895, 13902], [13903, 13910], [13911, 13912], [13912, 13918], [13919, 13928], [13928, 13929], [13929, 13930]]}) 
answer: set([u'function', u'smell', u'primarili', u'organ', u'antenna'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'beetle'])

Do beetles antennae function primarily as organs of smell?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = beetle
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a8.txt

No
_____________________________ test_yesno[param21] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1155ec560>, (<src.tfidf.TF_IDF object at 0x110787150>, set(['.', 'beetle'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1155ec560>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.35169196128845215, {u'tokens': [u'Certain', u'species', u'are', u'agricultural', u'pests', u',', u'such', u'as', u'the', u'Colorado', u'potato', u'beetle', u'Leptinotarsa', u'decemlineata', u',', u'the', u'boll', u'weevil', u'Anthonomus', u'grandis', u',', u'the', u'red', u'flour', u'beetle', u'Tribolium', u'castaneum', u',', u'and', u'the', u'mungbean', u'or', u'cowpea', u'beetle', u'Callosobruchus', u'maculatus', u',', u'while', u'other', u'species', u'of', u'beetles', u'are', u'important', u'controls', u'of', u'agricultural', u'pests', u'.'], u'lemmas': [u'certain', u'species', u'be', u'agricultural', u'pest', u',', u'such', u'as', u'the', u'Colorado', u'potato', u'beetle', u'leptinotarsa', u'decemlinea', u',', u'the', u'boll', u'weevil', u'anthonomus', u'grandi', u',', u'the', u'red', u'flour', u'beetle', u'tribolium', u'castaneum', u',', u'and', u'the', u'mungbean', u'or', u'cowpea', u'beetle', u'callosobruchus', u'maculatus', u',', u'while', u'other', u'species', u'of', u'beetle', u'be', u'important', u'control', u'of', u'agricultural', u'pest', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'JJ', u'NNS', u',', u'JJ', u'IN', u'DT', u'NNP', u'NN', u'NN', u'NN', u'NN', u',', u'DT', u'NN', u'NN', u'NN', u'NN', u',', u'DT', u'JJ', u'NN', u'NN', u'NN', u'NN', u',', u'CC', u'DT', u'NN', u'CC', u'NN', u'NN', u'NN', u'NN', u',', u'IN', u'JJ', u'NNS', u'IN', u'NNS', u'VBP', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[971, 978], [979, 986], [987, 990], [991, 1003], [1004, 1009], [1009, 1010], [1011, 1015], [1016, 1018], [1019, 1022], [1023, 1031], [1032, 1038], [1039, 1045], [1046, 1058], [1059, 1071], [1071, 1072], [1073, 1076], [1077, 1081], [1082, 1088], [1089, 1099], [1100, 1107], [1107, 1108], [1109, 1112], [1113, 1116], [1117, 1122], [1123, 1129], [1130, 1139], [1140, 1149], [1149, 1150], [1151, 1154], [1155, 1158], [1159, 1167], [1168, 1170], [1171, 1177], [1178, 1184], [1185, 1199], [1200, 1209], [1209, 1210], [1211, 1216], [1217, 1222], [1223, 1230], [1231, 1233], [1234, 1241], [1242, 1245], [1246, 1255], [1256, 1264], [1265, 1267], [1268, 1280], [1281, 1286], [1286, 1287]]}) 
answer: set([u'consid'])
candidate Sentence: (0.23272939026355743, {u'tokens': [u'Some', u'tribal', u'groups', u',', u'particularly', u'in', u'tropical', u'parts', u'of', u'the', u'world', u',', u'use', u'the', u'colourful', u',', u'iridescent', u'elytra', u'of', u'certain', u'beetles', u',', u'especially', u'certain', u'Scarabaeidae', u',', u'in', u'ceremonies', u'and', u'as', u'adornment', u'.'], u'lemmas': [u'some', u'tribal', u'group', u',', u'particularly', u'in', u'tropical', u'part', u'of', u'the', u'world', u',', u'use', u'the', u'colourful', u',', u'iridescent', u'elytra', u'of', u'certain', u'beetle', u',', u'especially', u'certain', u'Scarabaeidae', u',', u'in', u'ceremony', u'and', u'as', u'adornment', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u',', u'RB', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'NN', u',', u'VBP', u'DT', u'JJ', u',', u'JJ', u'NN', u'IN', u'JJ', u'NNS', u',', u'RB', u'JJ', u'NNP', u',', u'IN', u'NNS', u'CC', u'IN', u'NN', u'.'], u'char_offsets': [[20059, 20063], [20064, 20070], [20071, 20077], [20077, 20078], [20079, 20091], [20092, 20094], [20095, 20103], [20104, 20109], [20110, 20112], [20113, 20116], [20117, 20122], [20122, 20123], [20124, 20127], [20128, 20131], [20132, 20141], [20141, 20142], [20143, 20153], [20154, 20160], [20161, 20163], [20164, 20171], [20172, 20179], [20179, 20180], [20181, 20191], [20192, 20199], [20200, 20212], [20212, 20213], [20214, 20216], [20217, 20227], [20228, 20231], [20232, 20234], [20235, 20244], [20244, 20245]]}) 
answer: set([u'pest', u'consid', u'speci'])
candidate Sentence: (0.18471658229827881, {u'tokens': [u'Colorado', u'potato', u'beetle', u'-LRB-', u'Leptinotarsa', u'decemlineata', u'-RRB-', u'larvae', u'Many', u'agricultural', u',', u'forestry', u',', u'and', u'household', u'insect', u'pests', u'are', u'beetles', u'.'], u'lemmas': [u'Colorado', u'potato', u'beetle', u'-lrb-', u'leptinotarsa', u'decemlinea', u'-rrb-', u'larva', u'many', u'agricultural', u',', u'forestry', u',', u'and', u'household', u'insect', u'pest', u'be', u'beetle', u'.'], u'pos': [u'NNP', u'NN', u'NN', u'-LRB-', u'NN', u'NN', u'-RRB-', u'NNS', u'JJ', u'JJ', u',', u'NN', u',', u'CC', u'NN', u'NN', u'NNS', u'VBP', u'NNS', u'.'], u'char_offsets': [[16561, 16569], [16570, 16576], [16577, 16583], [16584, 16585], [16585, 16597], [16598, 16610], [16610, 16611], [16612, 16618], [16619, 16623], [16624, 16636], [16636, 16637], [16638, 16646], [16646, 16647], [16648, 16651], [16652, 16661], [16662, 16668], [16669, 16674], [16675, 16678], [16679, 16686], [16686, 16687]]}) 
answer: set([u'certain', u'consid', u'speci'])
candidate Sentence: (0.18283718824386597, {u'tokens': [u'This', u'can', u'range', u'from', u'dung', u',', u'which', u'is', u'consumed', u'by', u'coprophagous', u'species', u'such', u'as', u'certain', u'scarab', u'beetles', u'-LRB-', u'family', u'Scarabaeidae', u'-RRB-', u',', u'to', u'dead', u'animals', u',', u'which', u'are', u'eaten', u'by', u'necrophagous', u'species', u'such', u'as', u'the', u'carrion', u'beetles', u'-LRB-', u'family', u'Silphidae', u'-RRB-', u'.'], u'lemmas': [u'this', u'can', u'range', u'from', u'dung', u',', u'which', u'be', u'consume', u'by', u'coprophagous', u'species', u'such', u'as', u'certain', u'scarab', u'beetle', u'-lrb-', u'family', u'scarabaeida', u'-rrb-', u',', u'to', u'dead', u'animal', u',', u'which', u'be', u'eat', u'by', u'necrophagous', u'species', u'such', u'as', u'the', u'carrion', u'beetle', u'-lrb-', u'family', u'silphida', u'-rrb-', u'.'], u'pos': [u'DT', u'MD', u'VB', u'IN', u'NN', u',', u'WDT', u'VBZ', u'VBN', u'IN', u'JJ', u'NNS', u'JJ', u'IN', u'JJ', u'NN', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u',', u'TO', u'JJ', u'NNS', u',', u'WDT', u'VBP', u'VBN', u'IN', u'JJ', u'NNS', u'JJ', u'IN', u'DT', u'NN', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u'.'], u'char_offsets': [[13704, 13708], [13709, 13712], [13713, 13718], [13719, 13723], [13724, 13728], [13728, 13729], [13730, 13735], [13736, 13738], [13739, 13747], [13748, 13750], [13751, 13763], [13764, 13771], [13772, 13776], [13777, 13779], [13780, 13787], [13788, 13794], [13795, 13802], [13803, 13804], [13804, 13810], [13811, 13823], [13823, 13824], [13824, 13825], [13826, 13828], [13829, 13833], [13834, 13841], [13841, 13842], [13843, 13848], [13849, 13852], [13853, 13858], [13859, 13861], [13862, 13874], [13875, 13882], [13883, 13887], [13888, 13890], [13891, 13894], [13895, 13902], [13903, 13910], [13911, 13912], [13912, 13918], [13919, 13928], [13928, 13929], [13929, 13930]]}) 
answer: set([u'pest', u'consid'])
candidate Sentence: (0.17103973031044006, {u'tokens': [u'Some', u'countries', u'have', u'established', u'laws', u'governing', u'or', u'prohibiting', u'the', u'collection', u'of', u'certain', u'rare', u'-LRB-', u'and', u'often', u'much', u'sought', u'after', u'-RRB-', u'species', u'.'], u'lemmas': [u'some', u'country', u'have', u'establish', u'law', u'govern', u'or', u'prohibit', u'the', u'collection', u'of', u'certain', u'rare', u'-lrb-', u'and', u'often', u'much', u'seek', u'after', u'-rrb-', u'species', u'.'], u'pos': [u'DT', u'NNS', u'VBP', u'VBN', u'NNS', u'VBG', u'CC', u'VBG', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'-LRB-', u'CC', u'RB', u'JJ', u'VBN', u'IN', u'-RRB-', u'NNS', u'.'], u'char_offsets': [[21362, 21366], [21367, 21376], [21377, 21381], [21382, 21393], [21394, 21398], [21399, 21408], [21409, 21411], [21412, 21423], [21424, 21427], [21428, 21438], [21439, 21441], [21442, 21449], [21450, 21454], [21455, 21456], [21456, 21459], [21460, 21465], [21466, 21470], [21471, 21477], [21478, 21483], [21483, 21484], [21485, 21492], [21492, 21493]]}) 
answer: set([u'pest', u'consid'])
candidate Sentence: (0.16782644391059875, {u'tokens': [u'These', u'include', u'the', u'following', u':', u'*', u'The', u'Colorado', u'potato', u'beetle', u',', u'Leptinotarsa', u'decemlineata', u',', u'is', u'a', u'notorious', u'pest', u'of', u'potato', u'plants', u'.'], u'lemmas': [u'these', u'include', u'the', u'following', u':', u'*', u'the', u'Colorado', u'potato', u'beetle', u',', u'leptinotarsa', u'decemlinea', u',', u'be', u'a', u'notorious', u'pest', u'of', u'potato', u'plant', u'.'], u'pos': [u'DT', u'VBP', u'DT', u'NN', u':', u'SYM', u'DT', u'NNP', u'NN', u'NN', u',', u'NN', u'NN', u',', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'NN', u'NNS', u'.'], u'char_offsets': [[16688, 16693], [16694, 16701], [16702, 16705], [16706, 16715], [16715, 16716], [16717, 16718], [16719, 16722], [16723, 16731], [16732, 16738], [16739, 16745], [16745, 16746], [16747, 16759], [16760, 16772], [16772, 16773], [16774, 16776], [16777, 16778], [16779, 16788], [16789, 16793], [16794, 16796], [16797, 16803], [16804, 16810], [16810, 16811]]}) 
answer: set([u'certain', u'consid', u'speci'])
candidate Sentence: (0.16736960411071777, {u'tokens': [u'Some', u'feed', u'externally', u'on', u'plants', u',', u'such', u'as', u'those', u'of', u'certain', u'leaf', u'beetles', u',', u'while', u'others', u'feed', u'within', u'their', u'food', u'sources', u'.'], u'lemmas': [u'some', u'feed', u'externally', u'on', u'plant', u',', u'such', u'as', u'those', u'of', u'certain', u'leaf', u'beetle', u',', u'while', u'other', u'feed', u'within', u'they', u'food', u'source', u'.'], u'pos': [u'DT', u'NN', u'RB', u'IN', u'NNS', u',', u'JJ', u'IN', u'DT', u'IN', u'JJ', u'NN', u'NNS', u',', u'IN', u'NNS', u'VBP', u'IN', u'PRP$', u'NN', u'NNS', u'.'], u'char_offsets': [[8072, 8076], [8077, 8081], [8082, 8092], [8093, 8095], [8096, 8102], [8102, 8103], [8104, 8108], [8109, 8111], [8112, 8117], [8118, 8120], [8121, 8128], [8129, 8133], [8134, 8141], [8141, 8142], [8143, 8148], [8149, 8155], [8156, 8160], [8161, 8167], [8168, 8173], [8174, 8178], [8179, 8186], [8186, 8187]]}) 
answer: set([u'pest', u'consid', u'speci'])
candidate Sentence: (0.15800394117832184, {u'tokens': [u'It', u'is', u'thought', u'that', u'the', u'actual', u'introduction', u'of', u'the', u'pest', u'into', u'buildings', u'takes', u'place', u'at', u'the', u'time', u'of', u'construction', u'.'], u'lemmas': [u'it', u'be', u'think', u'that', u'the', u'actual', u'introduction', u'of', u'the', u'pest', u'into', u'building', u'take', u'place', u'at', u'the', u'time', u'of', u'construction', u'.'], u'pos': [u'PRP', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNS', u'VBZ', u'NN', u'IN', u'DT', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[17962, 17964], [17965, 17967], [17968, 17975], [17976, 17980], [17981, 17984], [17985, 17991], [17992, 18004], [18005, 18007], [18008, 18011], [18012, 18016], [18017, 18021], [18022, 18031], [18032, 18037], [18038, 18043], [18044, 18046], [18047, 18050], [18051, 18055], [18056, 18058], [18059, 18071], [18071, 18072]]}) 
answer: set([u'certain', u'consid', u'speci'])
candidate Sentence: (0.1476733535528183, {u'tokens': [u'Forty', u'percent', u'of', u'all', u'described', u'insect', u'species', u'are', u'beetles', u'-LRB-', u'about', u'350,000', u'species', u'-RRB-', u',', u'and', u'new', u'species', u'are', u'frequently', u'discovered', u'.'], u'lemmas': [u'forty', u'percent', u'of', u'all', u'describe', u'insect', u'species', u'be', u'beetle', u'-lrb-', u'about', u'350,000', u'species', u'-rrb-', u',', u'and', u'new', u'species', u'be', u'frequently', u'discover', u'.'], u'pos': [u'CD', u'NN', u'IN', u'DT', u'VBN', u'JJ', u'NNS', u'VBP', u'NNS', u'-LRB-', u'IN', u'CD', u'NNS', u'-RRB-', u',', u'CC', u'JJ', u'NNS', u'VBP', u'RB', u'VBN', u'.'], u'char_offsets': [[413, 418], [419, 426], [427, 429], [430, 433], [434, 443], [444, 450], [451, 458], [459, 462], [463, 470], [471, 472], [472, 477], [478, 485], [486, 493], [494, 495], [495, 496], [497, 500], [501, 504], [505, 512], [513, 516], [517, 527], [528, 538], [538, 539]]}) 
answer: set([u'certain', u'pest', u'consid'])
candidate Sentence: (0.14350058138370514, {u'tokens': [u'Parental', u'care', u'varies', u'between', u'species', u',', u'ranging', u'from', u'the', u'simple', u'laying', u'of', u'eggs', u'under', u'a', u'leaf', u'to', u'certain', u'scarab', u'beetles', u',', u'which', u'construct', u'underground', u'structures', u'complete', u'with', u'a', u'supply', u'of', u'dung', u'to', u'house', u'and', u'feed', u'their', u'young', u'.'], u'lemmas': [u'parental', u'care', u'vary', u'between', u'species', u',', u'range', u'from', u'the', u'simple', u'lay', u'of', u'egg', u'under', u'a', u'leaf', u'to', u'certain', u'scarab', u'beetle', u',', u'which', u'construct', u'underground', u'structure', u'complete', u'with', u'a', u'supply', u'of', u'dung', u'to', u'house', u'and', u'feed', u'they', u'young', u'.'], u'pos': [u'JJ', u'NN', u'VBZ', u'IN', u'NNS', u',', u'VBG', u'IN', u'DT', u'JJ', u'VBG', u'IN', u'NNS', u'IN', u'DT', u'NN', u'TO', u'JJ', u'NN', u'NNS', u',', u'WDT', u'VBP', u'JJ', u'NNS', u'JJ', u'IN', u'DT', u'NN', u'IN', u'NN', u'TO', u'NN', u'CC', u'VB', u'PRP$', u'JJ', u'.'], u'char_offsets': [[10978, 10986], [10987, 10991], [10992, 10998], [10999, 11006], [11007, 11014], [11014, 11015], [11016, 11023], [11024, 11028], [11029, 11032], [11033, 11039], [11040, 11046], [11047, 11049], [11050, 11054], [11055, 11060], [11061, 11062], [11063, 11067], [11068, 11070], [11071, 11078], [11079, 11085], [11086, 11093], [11093, 11094], [11095, 11100], [11101, 11110], [11111, 11122], [11123, 11133], [11134, 11142], [11143, 11147], [11148, 11149], [11150, 11156], [11157, 11159], [11160, 11164], [11165, 11167], [11168, 11173], [11174, 11177], [11178, 11182], [11183, 11188], [11189, 11194], [11194, 11195]]}) 
answer: set([u'pest', u'consid'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'beetle'])

Are certain species of beetles considered pests?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = beetle
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a8.txt

No
_____________________________ test_yesno[param22] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1155ec5a8>, (<src.tfidf.TF_IDF object at 0x110787150>, set(['.', 'beetle'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1155ec5a8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.35169196128845215, {u'tokens': [u'Certain', u'species', u'are', u'agricultural', u'pests', u',', u'such', u'as', u'the', u'Colorado', u'potato', u'beetle', u'Leptinotarsa', u'decemlineata', u',', u'the', u'boll', u'weevil', u'Anthonomus', u'grandis', u',', u'the', u'red', u'flour', u'beetle', u'Tribolium', u'castaneum', u',', u'and', u'the', u'mungbean', u'or', u'cowpea', u'beetle', u'Callosobruchus', u'maculatus', u',', u'while', u'other', u'species', u'of', u'beetles', u'are', u'important', u'controls', u'of', u'agricultural', u'pests', u'.'], u'lemmas': [u'certain', u'species', u'be', u'agricultural', u'pest', u',', u'such', u'as', u'the', u'Colorado', u'potato', u'beetle', u'leptinotarsa', u'decemlinea', u',', u'the', u'boll', u'weevil', u'anthonomus', u'grandi', u',', u'the', u'red', u'flour', u'beetle', u'tribolium', u'castaneum', u',', u'and', u'the', u'mungbean', u'or', u'cowpea', u'beetle', u'callosobruchus', u'maculatus', u',', u'while', u'other', u'species', u'of', u'beetle', u'be', u'important', u'control', u'of', u'agricultural', u'pest', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'JJ', u'NNS', u',', u'JJ', u'IN', u'DT', u'NNP', u'NN', u'NN', u'NN', u'NN', u',', u'DT', u'NN', u'NN', u'NN', u'NN', u',', u'DT', u'JJ', u'NN', u'NN', u'NN', u'NN', u',', u'CC', u'DT', u'NN', u'CC', u'NN', u'NN', u'NN', u'NN', u',', u'IN', u'JJ', u'NNS', u'IN', u'NNS', u'VBP', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[971, 978], [979, 986], [987, 990], [991, 1003], [1004, 1009], [1009, 1010], [1011, 1015], [1016, 1018], [1019, 1022], [1023, 1031], [1032, 1038], [1039, 1045], [1046, 1058], [1059, 1071], [1071, 1072], [1073, 1076], [1077, 1081], [1082, 1088], [1089, 1099], [1100, 1107], [1107, 1108], [1109, 1112], [1113, 1116], [1117, 1122], [1123, 1129], [1130, 1139], [1140, 1149], [1149, 1150], [1151, 1154], [1155, 1158], [1159, 1167], [1168, 1170], [1171, 1177], [1178, 1184], [1185, 1199], [1200, 1209], [1209, 1210], [1211, 1216], [1217, 1222], [1223, 1230], [1231, 1233], [1234, 1241], [1242, 1245], [1246, 1255], [1256, 1264], [1265, 1267], [1268, 1280], [1281, 1286], [1286, 1287]]}) 
answer: set([u'consid'])
candidate Sentence: (0.23272939026355743, {u'tokens': [u'Some', u'tribal', u'groups', u',', u'particularly', u'in', u'tropical', u'parts', u'of', u'the', u'world', u',', u'use', u'the', u'colourful', u',', u'iridescent', u'elytra', u'of', u'certain', u'beetles', u',', u'especially', u'certain', u'Scarabaeidae', u',', u'in', u'ceremonies', u'and', u'as', u'adornment', u'.'], u'lemmas': [u'some', u'tribal', u'group', u',', u'particularly', u'in', u'tropical', u'part', u'of', u'the', u'world', u',', u'use', u'the', u'colourful', u',', u'iridescent', u'elytra', u'of', u'certain', u'beetle', u',', u'especially', u'certain', u'Scarabaeidae', u',', u'in', u'ceremony', u'and', u'as', u'adornment', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u',', u'RB', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'NN', u',', u'VBP', u'DT', u'JJ', u',', u'JJ', u'NN', u'IN', u'JJ', u'NNS', u',', u'RB', u'JJ', u'NNP', u',', u'IN', u'NNS', u'CC', u'IN', u'NN', u'.'], u'char_offsets': [[20059, 20063], [20064, 20070], [20071, 20077], [20077, 20078], [20079, 20091], [20092, 20094], [20095, 20103], [20104, 20109], [20110, 20112], [20113, 20116], [20117, 20122], [20122, 20123], [20124, 20127], [20128, 20131], [20132, 20141], [20141, 20142], [20143, 20153], [20154, 20160], [20161, 20163], [20164, 20171], [20172, 20179], [20179, 20180], [20181, 20191], [20192, 20199], [20200, 20212], [20212, 20213], [20214, 20216], [20217, 20227], [20228, 20231], [20232, 20234], [20235, 20244], [20244, 20245]]}) 
answer: set([u'pest', u'consid', u'speci'])
candidate Sentence: (0.18471658229827881, {u'tokens': [u'Colorado', u'potato', u'beetle', u'-LRB-', u'Leptinotarsa', u'decemlineata', u'-RRB-', u'larvae', u'Many', u'agricultural', u',', u'forestry', u',', u'and', u'household', u'insect', u'pests', u'are', u'beetles', u'.'], u'lemmas': [u'Colorado', u'potato', u'beetle', u'-lrb-', u'leptinotarsa', u'decemlinea', u'-rrb-', u'larva', u'many', u'agricultural', u',', u'forestry', u',', u'and', u'household', u'insect', u'pest', u'be', u'beetle', u'.'], u'pos': [u'NNP', u'NN', u'NN', u'-LRB-', u'NN', u'NN', u'-RRB-', u'NNS', u'JJ', u'JJ', u',', u'NN', u',', u'CC', u'NN', u'NN', u'NNS', u'VBP', u'NNS', u'.'], u'char_offsets': [[16561, 16569], [16570, 16576], [16577, 16583], [16584, 16585], [16585, 16597], [16598, 16610], [16610, 16611], [16612, 16618], [16619, 16623], [16624, 16636], [16636, 16637], [16638, 16646], [16646, 16647], [16648, 16651], [16652, 16661], [16662, 16668], [16669, 16674], [16675, 16678], [16679, 16686], [16686, 16687]]}) 
answer: set([u'certain', u'consid', u'speci'])
candidate Sentence: (0.18283718824386597, {u'tokens': [u'This', u'can', u'range', u'from', u'dung', u',', u'which', u'is', u'consumed', u'by', u'coprophagous', u'species', u'such', u'as', u'certain', u'scarab', u'beetles', u'-LRB-', u'family', u'Scarabaeidae', u'-RRB-', u',', u'to', u'dead', u'animals', u',', u'which', u'are', u'eaten', u'by', u'necrophagous', u'species', u'such', u'as', u'the', u'carrion', u'beetles', u'-LRB-', u'family', u'Silphidae', u'-RRB-', u'.'], u'lemmas': [u'this', u'can', u'range', u'from', u'dung', u',', u'which', u'be', u'consume', u'by', u'coprophagous', u'species', u'such', u'as', u'certain', u'scarab', u'beetle', u'-lrb-', u'family', u'scarabaeida', u'-rrb-', u',', u'to', u'dead', u'animal', u',', u'which', u'be', u'eat', u'by', u'necrophagous', u'species', u'such', u'as', u'the', u'carrion', u'beetle', u'-lrb-', u'family', u'silphida', u'-rrb-', u'.'], u'pos': [u'DT', u'MD', u'VB', u'IN', u'NN', u',', u'WDT', u'VBZ', u'VBN', u'IN', u'JJ', u'NNS', u'JJ', u'IN', u'JJ', u'NN', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u',', u'TO', u'JJ', u'NNS', u',', u'WDT', u'VBP', u'VBN', u'IN', u'JJ', u'NNS', u'JJ', u'IN', u'DT', u'NN', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u'.'], u'char_offsets': [[13704, 13708], [13709, 13712], [13713, 13718], [13719, 13723], [13724, 13728], [13728, 13729], [13730, 13735], [13736, 13738], [13739, 13747], [13748, 13750], [13751, 13763], [13764, 13771], [13772, 13776], [13777, 13779], [13780, 13787], [13788, 13794], [13795, 13802], [13803, 13804], [13804, 13810], [13811, 13823], [13823, 13824], [13824, 13825], [13826, 13828], [13829, 13833], [13834, 13841], [13841, 13842], [13843, 13848], [13849, 13852], [13853, 13858], [13859, 13861], [13862, 13874], [13875, 13882], [13883, 13887], [13888, 13890], [13891, 13894], [13895, 13902], [13903, 13910], [13911, 13912], [13912, 13918], [13919, 13928], [13928, 13929], [13929, 13930]]}) 
answer: set([u'pest', u'consid'])
candidate Sentence: (0.17103973031044006, {u'tokens': [u'Some', u'countries', u'have', u'established', u'laws', u'governing', u'or', u'prohibiting', u'the', u'collection', u'of', u'certain', u'rare', u'-LRB-', u'and', u'often', u'much', u'sought', u'after', u'-RRB-', u'species', u'.'], u'lemmas': [u'some', u'country', u'have', u'establish', u'law', u'govern', u'or', u'prohibit', u'the', u'collection', u'of', u'certain', u'rare', u'-lrb-', u'and', u'often', u'much', u'seek', u'after', u'-rrb-', u'species', u'.'], u'pos': [u'DT', u'NNS', u'VBP', u'VBN', u'NNS', u'VBG', u'CC', u'VBG', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'-LRB-', u'CC', u'RB', u'JJ', u'VBN', u'IN', u'-RRB-', u'NNS', u'.'], u'char_offsets': [[21362, 21366], [21367, 21376], [21377, 21381], [21382, 21393], [21394, 21398], [21399, 21408], [21409, 21411], [21412, 21423], [21424, 21427], [21428, 21438], [21439, 21441], [21442, 21449], [21450, 21454], [21455, 21456], [21456, 21459], [21460, 21465], [21466, 21470], [21471, 21477], [21478, 21483], [21483, 21484], [21485, 21492], [21492, 21493]]}) 
answer: set([u'pest', u'consid'])
candidate Sentence: (0.16782644391059875, {u'tokens': [u'These', u'include', u'the', u'following', u':', u'*', u'The', u'Colorado', u'potato', u'beetle', u',', u'Leptinotarsa', u'decemlineata', u',', u'is', u'a', u'notorious', u'pest', u'of', u'potato', u'plants', u'.'], u'lemmas': [u'these', u'include', u'the', u'following', u':', u'*', u'the', u'Colorado', u'potato', u'beetle', u',', u'leptinotarsa', u'decemlinea', u',', u'be', u'a', u'notorious', u'pest', u'of', u'potato', u'plant', u'.'], u'pos': [u'DT', u'VBP', u'DT', u'NN', u':', u'SYM', u'DT', u'NNP', u'NN', u'NN', u',', u'NN', u'NN', u',', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'NN', u'NNS', u'.'], u'char_offsets': [[16688, 16693], [16694, 16701], [16702, 16705], [16706, 16715], [16715, 16716], [16717, 16718], [16719, 16722], [16723, 16731], [16732, 16738], [16739, 16745], [16745, 16746], [16747, 16759], [16760, 16772], [16772, 16773], [16774, 16776], [16777, 16778], [16779, 16788], [16789, 16793], [16794, 16796], [16797, 16803], [16804, 16810], [16810, 16811]]}) 
answer: set([u'certain', u'consid', u'speci'])
candidate Sentence: (0.16736960411071777, {u'tokens': [u'Some', u'feed', u'externally', u'on', u'plants', u',', u'such', u'as', u'those', u'of', u'certain', u'leaf', u'beetles', u',', u'while', u'others', u'feed', u'within', u'their', u'food', u'sources', u'.'], u'lemmas': [u'some', u'feed', u'externally', u'on', u'plant', u',', u'such', u'as', u'those', u'of', u'certain', u'leaf', u'beetle', u',', u'while', u'other', u'feed', u'within', u'they', u'food', u'source', u'.'], u'pos': [u'DT', u'NN', u'RB', u'IN', u'NNS', u',', u'JJ', u'IN', u'DT', u'IN', u'JJ', u'NN', u'NNS', u',', u'IN', u'NNS', u'VBP', u'IN', u'PRP$', u'NN', u'NNS', u'.'], u'char_offsets': [[8072, 8076], [8077, 8081], [8082, 8092], [8093, 8095], [8096, 8102], [8102, 8103], [8104, 8108], [8109, 8111], [8112, 8117], [8118, 8120], [8121, 8128], [8129, 8133], [8134, 8141], [8141, 8142], [8143, 8148], [8149, 8155], [8156, 8160], [8161, 8167], [8168, 8173], [8174, 8178], [8179, 8186], [8186, 8187]]}) 
answer: set([u'pest', u'consid', u'speci'])
candidate Sentence: (0.15800394117832184, {u'tokens': [u'It', u'is', u'thought', u'that', u'the', u'actual', u'introduction', u'of', u'the', u'pest', u'into', u'buildings', u'takes', u'place', u'at', u'the', u'time', u'of', u'construction', u'.'], u'lemmas': [u'it', u'be', u'think', u'that', u'the', u'actual', u'introduction', u'of', u'the', u'pest', u'into', u'building', u'take', u'place', u'at', u'the', u'time', u'of', u'construction', u'.'], u'pos': [u'PRP', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNS', u'VBZ', u'NN', u'IN', u'DT', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[17962, 17964], [17965, 17967], [17968, 17975], [17976, 17980], [17981, 17984], [17985, 17991], [17992, 18004], [18005, 18007], [18008, 18011], [18012, 18016], [18017, 18021], [18022, 18031], [18032, 18037], [18038, 18043], [18044, 18046], [18047, 18050], [18051, 18055], [18056, 18058], [18059, 18071], [18071, 18072]]}) 
answer: set([u'certain', u'consid', u'speci'])
candidate Sentence: (0.1476733535528183, {u'tokens': [u'Forty', u'percent', u'of', u'all', u'described', u'insect', u'species', u'are', u'beetles', u'-LRB-', u'about', u'350,000', u'species', u'-RRB-', u',', u'and', u'new', u'species', u'are', u'frequently', u'discovered', u'.'], u'lemmas': [u'forty', u'percent', u'of', u'all', u'describe', u'insect', u'species', u'be', u'beetle', u'-lrb-', u'about', u'350,000', u'species', u'-rrb-', u',', u'and', u'new', u'species', u'be', u'frequently', u'discover', u'.'], u'pos': [u'CD', u'NN', u'IN', u'DT', u'VBN', u'JJ', u'NNS', u'VBP', u'NNS', u'-LRB-', u'IN', u'CD', u'NNS', u'-RRB-', u',', u'CC', u'JJ', u'NNS', u'VBP', u'RB', u'VBN', u'.'], u'char_offsets': [[413, 418], [419, 426], [427, 429], [430, 433], [434, 443], [444, 450], [451, 458], [459, 462], [463, 470], [471, 472], [472, 477], [478, 485], [486, 493], [494, 495], [495, 496], [497, 500], [501, 504], [505, 512], [513, 516], [517, 527], [528, 538], [538, 539]]}) 
answer: set([u'certain', u'pest', u'consid'])
candidate Sentence: (0.14350058138370514, {u'tokens': [u'Parental', u'care', u'varies', u'between', u'species', u',', u'ranging', u'from', u'the', u'simple', u'laying', u'of', u'eggs', u'under', u'a', u'leaf', u'to', u'certain', u'scarab', u'beetles', u',', u'which', u'construct', u'underground', u'structures', u'complete', u'with', u'a', u'supply', u'of', u'dung', u'to', u'house', u'and', u'feed', u'their', u'young', u'.'], u'lemmas': [u'parental', u'care', u'vary', u'between', u'species', u',', u'range', u'from', u'the', u'simple', u'lay', u'of', u'egg', u'under', u'a', u'leaf', u'to', u'certain', u'scarab', u'beetle', u',', u'which', u'construct', u'underground', u'structure', u'complete', u'with', u'a', u'supply', u'of', u'dung', u'to', u'house', u'and', u'feed', u'they', u'young', u'.'], u'pos': [u'JJ', u'NN', u'VBZ', u'IN', u'NNS', u',', u'VBG', u'IN', u'DT', u'JJ', u'VBG', u'IN', u'NNS', u'IN', u'DT', u'NN', u'TO', u'JJ', u'NN', u'NNS', u',', u'WDT', u'VBP', u'JJ', u'NNS', u'JJ', u'IN', u'DT', u'NN', u'IN', u'NN', u'TO', u'NN', u'CC', u'VB', u'PRP$', u'JJ', u'.'], u'char_offsets': [[10978, 10986], [10987, 10991], [10992, 10998], [10999, 11006], [11007, 11014], [11014, 11015], [11016, 11023], [11024, 11028], [11029, 11032], [11033, 11039], [11040, 11046], [11047, 11049], [11050, 11054], [11055, 11060], [11061, 11062], [11063, 11067], [11068, 11070], [11071, 11078], [11079, 11085], [11086, 11093], [11093, 11094], [11095, 11100], [11101, 11110], [11111, 11122], [11123, 11133], [11134, 11142], [11143, 11147], [11148, 11149], [11150, 11156], [11157, 11159], [11160, 11164], [11165, 11167], [11168, 11173], [11174, 11177], [11178, 11182], [11183, 11188], [11189, 11194], [11194, 11195]]}) 
answer: set([u'pest', u'consid'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'beetle'])

Are certain species of beetles considered pests?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = beetle
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a8.txt

No
_____________________________ test_yesno[param27] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1155ec098>, (<src.tfidf.TF_IDF object at 0x11240ded0>, set(['.', 'calvin', 'coolidge'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('no') == True
E            +  where 'no' = <src.question_processing.Question_parser instance at 0x1155ec098>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.39925813674926758, {u'tokens': [u'Did', u'he', u'support', u'these', u'measures', u'while', u'president', u'?'], u'lemmas': [u'do', u'he', u'support', u'these', u'measure', u'while', u'president', u'?'], u'pos': [u'VBD', u'PRP', u'VB', u'DT', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[26681, 26684], [26685, 26687], [26688, 26695], [26696, 26701], [26702, 26710], [26711, 26716], [26717, 26726], [26726, 26727]]}) 
answer: set([u'vice', u'twenty-ninth'])
candidate Sentence: (0.24605897068977356, {u'tokens': [u'Soon', u'after', u',', u'he', u'was', u'elected', u'as', u'the', u'twenty-ninth', u'Vice', u'President', u'in', u'1920', u'and', u'succeeded', u'to', u'the', u'Presidency', u'upon', u'the', u'death', u'of', u'Warren', u'G.', u'Harding', u'.'], u'lemmas': [u'soon', u'after', u',', u'he', u'be', u'elect', u'as', u'the', u'twenty-ninth', u'Vice', u'President', u'in', u'1920', u'and', u'succeed', u'to', u'the', u'Presidency', u'upon', u'the', u'death', u'of', u'Warren', u'G.', u'Harding', u'.'], u'pos': [u'RB', u'IN', u',', u'PRP', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NNP', u'NNP', u'IN', u'CD', u'CC', u'VBD', u'TO', u'DT', u'NNP', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[390, 394], [395, 400], [400, 401], [402, 404], [405, 408], [409, 416], [417, 419], [420, 423], [424, 436], [437, 441], [442, 451], [452, 454], [455, 459], [460, 463], [464, 473], [474, 476], [477, 480], [481, 491], [492, 496], [497, 500], [501, 506], [507, 509], [510, 516], [517, 519], [520, 527], [527, 528]]}) 
answer: set([])
candidate Sentence: (0.15655405819416046, {u'tokens': [u'Grace', u"'s", u'reply', u'was', u'``', u'Did', u'you', u'marry', u'me', u'to', u'darn', u'your', u'socks', u'?', u"''"], u'lemmas': [u'Grace', u"'s", u'reply', u'be', u'``', u'do', u'you', u'marry', u'I', u'to', u'darn', u'you', u'sock', u'?', u"''"], u'pos': [u'NNP', u'POS', u'NN', u'VBD', u'``', u'VBD', u'PRP', u'VB', u'PRP', u'TO', u'JJ', u'PRP$', u'NNS', u'.', u"''"], u'char_offsets': [[5703, 5708], [5708, 5710], [5711, 5716], [5717, 5720], [5721, 5722], [5722, 5725], [5726, 5729], [5730, 5735], [5736, 5738], [5739, 5741], [5742, 5746], [5747, 5751], [5752, 5757], [5757, 5758], [5758, 5759]]}) 
answer: set([u'vice', u'twenty-ninth', u'presid'])
candidate Sentence: (0.13916240632534027, {u'tokens': [u'After', u'the', u'presidency', u',', u'Coolidge', u'served', u'as', u'chairman', u'of', u'the', u'non-partisan', u'Railroad', u'Commission', u',', u'as', u'honorary', u'president', u'of', u'the', u'Foundation', u'of', u'the', u'Blind', u',', u'as', u'a', u'director', u'of', u'New', u'York', u'Life', u'Insurance', u'Company', u',', u'as', u'president', u'of', u'the', u'American', u'Antiquarian', u'Society', u',', u'and', u'as', u'a', u'trustee', u'of', u'Amherst', u'College', u'.'], u'lemmas': [u'after', u'the', u'presidency', u',', u'Coolidge', u'serve', u'as', u'chairman', u'of', u'the', u'non-partisan', u'railroad', u'Commission', u',', u'as', u'honorary', u'president', u'of', u'the', u'Foundation', u'of', u'the', u'Blind', u',', u'as', u'a', u'director', u'of', u'New', u'York', u'Life', u'Insurance', u'Company', u',', u'as', u'president', u'of', u'the', u'american', u'Antiquarian', u'Society', u',', u'and', u'as', u'a', u'trustee', u'of', u'Amherst', u'College', u'.'], u'pos': [u'IN', u'DT', u'NN', u',', u'NNP', u'VBD', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'NNP', u',', u'IN', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'IN', u'DT', u'NNP', u',', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NNP', u'NNP', u',', u'CC', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[34894, 34899], [34900, 34903], [34904, 34914], [34914, 34915], [34916, 34924], [34925, 34931], [34932, 34934], [34935, 34943], [34944, 34946], [34947, 34950], [34951, 34963], [34964, 34972], [34973, 34983], [34983, 34984], [34985, 34987], [34988, 34996], [34997, 35006], [35007, 35009], [35010, 35013], [35014, 35024], [35025, 35027], [35028, 35031], [35032, 35037], [35037, 35038], [35039, 35041], [35042, 35043], [35044, 35052], [35053, 35055], [35056, 35059], [35060, 35064], [35065, 35069], [35070, 35079], [35080, 35087], [35087, 35088], [35089, 35091], [35092, 35101], [35102, 35104], [35105, 35108], [35109, 35117], [35118, 35129], [35130, 35137], [35137, 35138], [35139, 35142], [35143, 35145], [35146, 35147], [35148, 35155], [35156, 35158], [35159, 35166], [35167, 35174], [35174, 35175]]}) 
answer: set([u'vice', u'twenty-ninth'])
candidate Sentence: (0.13474835455417633, {u'tokens': [u'Hannaford', u',', u'169', u'It', u'was', u'also', u'Parker', u'who', u',', u'upon', u'learning', u'that', u'Coolidge', u'had', u'died', u',', u'reportedly', u'remarked', u',', u'``', u'How', u'can', u'they', u'tell', u'?', u"''"], u'lemmas': [u'Hannaford', u',', u'169', u'it', u'be', u'also', u'Parker', u'who', u',', u'upon', u'learn', u'that', u'Coolidge', u'have', u'die', u',', u'reportedly', u'remark', u',', u'``', u'how', u'can', u'they', u'tell', u'?', u"''"], u'pos': [u'NNP', u',', u'CD', u'PRP', u'VBD', u'RB', u'NNP', u'WP', u',', u'IN', u'VBG', u'IN', u'NNP', u'VBD', u'VBN', u',', u'RB', u'VBD', u',', u'``', u'WRB', u'MD', u'PRP', u'VB', u'.', u"''"], u'char_offsets': [[20615, 20624], [20624, 20625], [20626, 20629], [20631, 20633], [20634, 20637], [20638, 20642], [20643, 20649], [20650, 20653], [20653, 20654], [20655, 20659], [20660, 20668], [20669, 20673], [20674, 20682], [20683, 20686], [20687, 20691], [20691, 20692], [20693, 20703], [20704, 20712], [20712, 20713], [20714, 20715], [20715, 20718], [20719, 20722], [20723, 20727], [20728, 20732], [20732, 20733], [20733, 20734]]}) 
answer: set([u'vice', u'twenty-ninth', u'presid'])
candidate Sentence: (0.1160041019320488, {u'tokens': [u'Sobel', u',', u'252', u'On', u'February', u'12', u'1924', u',', u'he', u'became', u'the', u'first', u'President', u'of', u'the', u'United', u'States', u'to', u'deliver', u'a', u'political', u'speech', u'on', u'radio', u'.'], u'lemmas': [u'Sobel', u',', u'252', u'on', u'February', u'12', u'1924', u',', u'he', u'become', u'the', u'first', u'president', u'of', u'the', u'United', u'States', u'to', u'deliver', u'a', u'political', u'speech', u'on', u'radio', u'.'], u'pos': [u'NNP', u',', u'CD', u'IN', u'NNP', u'CD', u'CD', u',', u'PRP', u'VBD', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNPS', u'TO', u'VB', u'DT', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[33575, 33580], [33580, 33581], [33582, 33585], [33587, 33589], [33590, 33598], [33599, 33601], [33602, 33606], [33606, 33607], [33608, 33610], [33611, 33617], [33618, 33621], [33622, 33627], [33628, 33637], [33638, 33640], [33641, 33644], [33645, 33651], [33652, 33658], [33659, 33661], [33662, 33669], [33670, 33671], [33672, 33681], [33682, 33688], [33689, 33691], [33692, 33697], [33697, 33698]]}) 
answer: set([u'vice', u'twenty-ninth'])
candidate Sentence: (0.10125007480382919, {u'tokens': [u'Secretary', u'of', u'the', u'Treasury', u'Andrew', u'Mellon', u'Coolidge', u'was', u'the', u'only', u'president', u'to', u'have', u'his', u'face', u'on', u'a', u'coin', u'during', u'his', u'lifetime', u',', u'the', u'sesquicentennial', u'commemorative', u'half', u'dollar', u'of', u'1926', u'.'], u'lemmas': [u'Secretary', u'of', u'the', u'Treasury', u'Andrew', u'Mellon', u'Coolidge', u'be', u'the', u'only', u'president', u'to', u'have', u'he', u'face', u'on', u'a', u'coin', u'during', u'he', u'lifetime', u',', u'the', u'sesquicentennial', u'commemorative', u'half', u'dollar', u'of', u'1926', u'.'], u'pos': [u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'VBD', u'DT', u'JJ', u'NN', u'TO', u'VB', u'PRP$', u'NN', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u',', u'DT', u'JJ', u'JJ', u'NN', u'NN', u'IN', u'CD', u'.'], u'char_offsets': [[33970, 33979], [33980, 33982], [33983, 33986], [33987, 33995], [33996, 34002], [34003, 34009], [34010, 34018], [34019, 34022], [34023, 34026], [34027, 34031], [34032, 34041], [34042, 34044], [34045, 34049], [34050, 34053], [34054, 34058], [34059, 34061], [34062, 34063], [34064, 34068], [34069, 34075], [34076, 34079], [34080, 34088], [34088, 34089], [34090, 34093], [34094, 34110], [34111, 34124], [34125, 34129], [34130, 34136], [34137, 34139], [34140, 34144], [34144, 34145]]}) 
answer: set([u'vice', u'twenty-ninth'])
candidate Sentence: (0.088714070618152618, {u'tokens': [u'Calvin', u'and', u'Grace', u'Coolidge', u',', u'about', u'1918', u'.'], u'lemmas': [u'Calvin', u'and', u'Grace', u'Coolidge', u',', u'about', u'1918', u'.'], u'pos': [u'NNP', u'CC', u'NNP', u'NNP', u',', u'IN', u'CD', u'.'], u'char_offsets': [[7940, 7946], [7947, 7950], [7951, 7956], [7957, 7965], [7965, 7966], [7967, 7972], [7973, 7977], [7977, 7978]]}) 
answer: set([u'presid', u'twenty-ninth', u'vice'])
candidate Sentence: (0.081293419003486633, {u'tokens': [u'On', u'August', u'11', u'1924', u',', u'Coolidge', u'was', u'filmed', u'on', u'the', u'White', u'House', u'lawn', u'by', u'Lee', u'De', u'Forest', u'in', u'DeForest', u"'s", u'Phonofilm', u'sound-on-film', u'process', u',', u'becoming', u'the', u'first', u'President', u'to', u'appear', u'in', u'a', u'sound', u'film', u'.'], u'lemmas': [u'on', u'August', u'11', u'1924', u',', u'Coolidge', u'be', u'film', u'on', u'the', u'White', u'House', u'lawn', u'by', u'Lee', u'De', u'Forest', u'in', u'DeForest', u"'s", u'Phonofilm', u'sound-on-film', u'process', u',', u'become', u'the', u'first', u'president', u'to', u'appear', u'in', u'a', u'sound', u'film', u'.'], u'pos': [u'IN', u'NNP', u'CD', u'CD', u',', u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'POS', u'NNP', u'NN', u'NN', u',', u'VBG', u'DT', u'JJ', u'NN', u'TO', u'VB', u'IN', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[33699, 33701], [33702, 33708], [33709, 33711], [33712, 33716], [33716, 33717], [33718, 33726], [33727, 33730], [33731, 33737], [33738, 33740], [33741, 33744], [33745, 33750], [33751, 33756], [33757, 33761], [33762, 33764], [33765, 33768], [33769, 33771], [33772, 33778], [33779, 33781], [33782, 33790], [33790, 33792], [33793, 33802], [33803, 33816], [33817, 33824], [33824, 33825], [33826, 33834], [33835, 33838], [33839, 33844], [33845, 33854], [33855, 33857], [33858, 33864], [33865, 33867], [33868, 33869], [33870, 33875], [33876, 33880], [33880, 33881]]}) 
answer: set([u'vice', u'twenty-ninth'])
['No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'coolidge', u'calvin', u'.'])

Was Calvin Coolidge the twenty-ninth vice president?
Validity= False
Question Type = NA
Answer Type = NA
Answer = no
Difficulty = easy
Article_Title = Calvin_Coolidge
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a9.txt

Yes
_____________________________ test_yesno[param34] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156d7248>, (<src.tfidf.TF_IDF object at 0x11240ded0>, set(['.', 'calvin', 'coolidge'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156d7248>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.59703236818313599, {u'tokens': [u'Progressive', u'Party', u'-LRB-', u'United', u'States', u',', u'1924', u'-RRB-', u'John', u'F.', u'Kennedy', u'Library', u'and', u'Museum', u'Vice', u'President', u'of', u'the', u'United', u'States', u'Great', u'Mississippi', u'Flood', u'of', u'1927', u'Permanent', u'Court', u'of', u'International', u'Justice', u'United', u'States', u'Ambassador', u'to', u'Mexico', u'United', u'States', u'occupation', u'of', u'Nicaragua', u'United', u'States', u'occupation', u'of', u'Haiti', u'History', u'of', u'the', u'Dominican', u'Republic', u'#United', u'States', u'occupation', u'Indian', u'Citizenship', u'Act', u'of', u'1924', u'United', u'States', u'Secretary', u'of', u'Commerce', u'United', u'States', u'Secretary', u'of', u'the', u'Treasury', u'Sesquicentennial', u'of', u'American', u'Independence', u'Half', u'Dollar', u'Indian', u'Citizenship', u'Act', u'of', u'1924', u'Chief', u'Justice', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'the', u'Treasury', u'United', u'States', u'Secretary', u'of', u'War', u'Attorney', u'General', u'of', u'the', u'United', u'States', u'Postmaster', u'General', u'of', u'the', u'United', u'States', u'United', u'States', u'Secretary', u'of', u'the', u'Navy', u'United', u'States', u'Secretary', u'of', u'the', u'Interior', u'United', u'States', u'Secretary', u'of', u'Agriculture', u'United', u'States', u'Secretary', u'of', u'Commerce', u'United', u'States', u'Secretary', u'of', u'Labor', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u'New', u'York', u'Life', u'Insurance', u'Company', u'Brave', u'Little', u'State', u'of', u'Vermont', u'speech', u'List', u'of', u'Governors', u'of', u'Massachusetts', u'Vice', u'President', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'List', u'of', u'United', u'States', u'Republican', u'Party', u'presidential', u'tickets', u'List', u'of', u'United', u'States', u'Republican', u'Party', u'presidential', u'tickets', u'Oldest', u'living', u'United', u'States', u'president'], u'lemmas': [u'Progressive', u'Party', u'-lrb-', u'United', u'States', u',', u'1924', u'-rrb-', u'John', u'F.', u'Kennedy', u'Library', u'and', u'Museum', u'Vice', u'President', u'of', u'the', u'United', u'States', u'Great', u'Mississippi', u'Flood', u'of', u'1927', u'Permanent', u'Court', u'of', u'International', u'Justice', u'United', u'States', u'Ambassador', u'to', u'Mexico', u'United', u'States', u'occupation', u'of', u'Nicaragua', u'United', u'States', u'occupation', u'of', u'Haiti', u'history', u'of', u'the', u'Dominican', u'Republic', u'#United', u'States', u'occupation', u'indian', u'Citizenship', u'Act', u'of', u'1924', u'United', u'States', u'Secretary', u'of', u'Commerce', u'United', u'States', u'Secretary', u'of', u'the', u'Treasury', u'Sesquicentennial', u'of', u'American', u'Independence', u'half', u'Dollar', u'Indian', u'Citizenship', u'Act', u'of', u'1924', u'Chief', u'Justice', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'the', u'Treasury', u'United', u'States', u'Secretary', u'of', u'War', u'Attorney', u'General', u'of', u'the', u'United', u'States', u'Postmaster', u'General', u'of', u'the', u'United', u'States', u'United', u'States', u'Secretary', u'of', u'the', u'Navy', u'United', u'States', u'Secretary', u'of', u'the', u'Interior', u'United', u'States', u'Secretary', u'of', u'Agriculture', u'United', u'States', u'Secretary', u'of', u'Commerce', u'United', u'States', u'Secretary', u'of', u'Labor', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u'New', u'York', u'Life', u'Insurance', u'Company', u'Brave', u'Little', u'State', u'of', u'Vermont', u'speech', u'list', u'of', u'governor', u'of', u'Massachusetts', u'Vice', u'President', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'list', u'of', u'United', u'States', u'Republican', u'Party', u'presidential', u'ticket', u'list', u'of', u'United', u'States', u'Republican', u'Party', u'presidential', u'ticket', u'oldest', u'live', u'United', u'States', u'president'], u'pos': [u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNPS', u',', u'CD', u'-RRB-', u'NNP', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'NNP', u'IN', u'CD', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNPS', u'NNP', u'TO', u'NNP', u'NNP', u'NNPS', u'NN', u'IN', u'NNP', u'NNP', u'NNPS', u'NN', u'IN', u'NNP', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNPS', u'NN', u'JJ', u'NNP', u'NNP', u'IN', u'CD', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'CD', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNPS', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNPS', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NN', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NN', u'IN', u'NNP', u'NNPS', u'NNP', u'NNP', u'JJ', u'NNS', u'NN', u'IN', u'NNP', u'NNPS', u'NNP', u'NNP', u'JJ', u'NNS', u'JJ', u'VBG', u'NNP', u'NNPS', u'NN'], u'char_offsets': [[39270, 39281], [39282, 39287], [39288, 39289], [39289, 39295], [39296, 39302], [39302, 39303], [39304, 39308], [39308, 39309], [39310, 39314], [39315, 39317], [39318, 39325], [39326, 39333], [39334, 39337], [39338, 39344], [39345, 39349], [39350, 39359], [39360, 39362], [39363, 39366], [39367, 39373], [39374, 39380], [39381, 39386], [39387, 39398], [39399, 39404], [39405, 39407], [39408, 39412], [39413, 39422], [39423, 39428], [39429, 39431], [39432, 39445], [39446, 39453], [39454, 39460], [39461, 39467], [39468, 39478], [39479, 39481], [39482, 39488], [39489, 39495], [39496, 39502], [39503, 39513], [39514, 39516], [39517, 39526], [39527, 39533], [39534, 39540], [39541, 39551], [39552, 39554], [39555, 39560], [39561, 39568], [39569, 39571], [39572, 39575], [39576, 39585], [39586, 39594], [39594, 39601], [39602, 39608], [39609, 39619], [39620, 39626], [39627, 39638], [39639, 39642], [39643, 39645], [39646, 39650], [39651, 39657], [39658, 39664], [39665, 39674], [39675, 39677], [39678, 39686], [39687, 39693], [39694, 39700], [39701, 39710], [39711, 39713], [39714, 39717], [39718, 39726], [39727, 39743], [39744, 39746], [39747, 39755], [39756, 39768], [39769, 39773], [39774, 39780], [39781, 39787], [39788, 39799], [39800, 39803], [39804, 39806], [39807, 39811], [39812, 39817], [39818, 39825], [39826, 39828], [39829, 39832], [39833, 39839], [39840, 39846], [39847, 39856], [39857, 39859], [39860, 39863], [39864, 39870], [39871, 39877], [39878, 39882], [39883, 39892], [39893, 39895], [39896, 39899], [39900, 39906], [39907, 39913], [39914, 39920], [39921, 39927], [39928, 39937], [39938, 39940], [39941, 39946], [39947, 39953], [39954, 39960], [39961, 39970], [39971, 39973], [39974, 39977], [39978, 39986], [39987, 39993], [39994, 40000], [40001, 40010], [40011, 40013], [40014, 40017], [40018, 40026], [40027, 40034], [40035, 40037], [40038, 40041], [40042, 40048], [40049, 40055], [40056, 40066], [40067, 40074], [40075, 40077], [40078, 40081], [40082, 40088], [40089, 40095], [40096, 40102], [40103, 40109], [40110, 40119], [40120, 40122], [40123, 40126], [40127, 40131], [40132, 40138], [40139, 40145], [40146, 40155], [40156, 40158], [40159, 40162], [40163, 40171], [40172, 40178], [40179, 40185], [40186, 40195], [40196, 40198], [40199, 40210], [40211, 40217], [40218, 40224], [40225, 40234], [40235, 40237], [40238, 40246], [40247, 40253], [40254, 40260], [40261, 40270], [40271, 40273], [40274, 40279], [40280, 40287], [40288, 40293], [40294, 40296], [40297, 40300], [40301, 40307], [40308, 40314], [40315, 40318], [40319, 40323], [40324, 40328], [40329, 40338], [40339, 40346], [40347, 40352], [40353, 40359], [40360, 40365], [40366, 40368], [40369, 40376], [40377, 40383], [40384, 40388], [40389, 40391], [40392, 40401], [40402, 40404], [40405, 40418], [40419, 40423], [40424, 40433], [40434, 40436], [40437, 40440], [40441, 40447], [40448, 40454], [40455, 40464], [40465, 40467], [40468, 40471], [40472, 40478], [40479, 40485], [40486, 40490], [40491, 40493], [40494, 40500], [40501, 40507], [40508, 40518], [40519, 40524], [40525, 40537], [40538, 40545], [40546, 40550], [40551, 40553], [40554, 40560], [40561, 40567], [40568, 40578], [40579, 40584], [40585, 40597], [40598, 40605], [40606, 40612], [40613, 40619], [40620, 40626], [40627, 40633], [40634, 40643]]}) 
answer: set([u'thirteenth'])
candidate Sentence: (0.47384244203567505, {u'tokens': [u'*', u'The', u'SS', u'President', u'Coolidge', u'*', u'Extensive', u'essay', u'on', u'Calvin', u'Coolidge', u'and', u'shorter', u'essays', u'on', u'each', u'member', u'of', u'his', u'cabinet', u'and', u'First', u'Lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'Calvin', u'Coolidge', u'birthplace', u',', u'a', u'Vermont', u'State', u'Historic', u'Site', u'*', u'Official', u'White', u'House', u'biography', u'*', u'Audio', u'clips', u'of', u'Coolidge', u"'s", u'speeches', u'*', u'Calvin', u'Coolidge', u'Memorial', u'Foundation', u'*', u'Calvin', u'Coolidge', u'Presidential', u'Library', u'&', u'Museum', u'at', u'Forbes', u'Library', u',', u'Northampton', u',', u'MA', u'*', u'Calvin', u'Coolidge', u'official', u'Commonwealth', u'of', u'Massachusetts', u'Governor', u'Biography', u'*', u'Prosperity', u'and', u'Thrift', u':', u'The', u'Coolidge', u'Era', u'at', u'the', u'Library', u'of', u'Congress', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'Progressive', u'Party', u'-LRB-', u'United', u'States', u',', u'1912', u'-RRB-', u'Seventeenth', u'Amendment', u'to', u'the', u'United', u'States', u'Constitution', u'United', u'States', u'presidential', u'election', u',', u'1912', u'Progressive', u'Party', u'-LRB-', u'United', u'States', u',', u'1912', u'-RRB-', u'President', u'of', u'the', u'Massachusetts', u'Senate', u'List', u'of', u'Governors', u'of', u'Massachusetts', u'Eighteenth', u'Amendment', u'to', u'the', u'United', u'States', u'Constitution', u'Vice', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'District', u'Court', u'for', u'the', u'District', u'of', u'Columbia', u'White', u'House', u'Chief', u'of', u'Staff', u'Robert', u'M.', u'La', u'Follette', u',', u'Sr.', u'.'], u'lemmas': [u'*', u'the', u'ss', u'President', u'Coolidge', u'*', u'extensive', u'essay', u'on', u'Calvin', u'Coolidge', u'and', u'shorter', u'essay', u'on', u'each', u'member', u'of', u'he', u'cabinet', u'and', u'first', u'lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'Calvin', u'Coolidge', u'birthplace', u',', u'a', u'Vermont', u'State', u'Historic', u'site', u'*', u'Official', u'White', u'House', u'biography', u'*', u'Audio', u'clip', u'of', u'Coolidge', u"'s", u'speech', u'*', u'Calvin', u'Coolidge', u'Memorial', u'Foundation', u'*', u'Calvin', u'Coolidge', u'Presidential', u'Library', u'&', u'Museum', u'at', u'Forbes', u'Library', u',', u'Northampton', u',', u'MA', u'*', u'Calvin', u'Coolidge', u'official', u'Commonwealth', u'of', u'Massachusetts', u'Governor', u'biography', u'*', u'prosperity', u'and', u'thrift', u':', u'the', u'Coolidge', u'era', u'at', u'the', u'Library', u'of', u'Congress', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'Progressive', u'Party', u'-lrb-', u'United', u'States', u',', u'1912', u'-rrb-', u'Seventeenth', u'Amendment', u'to', u'the', u'United', u'States', u'Constitution', u'United', u'States', u'presidential', u'election', u',', u'1912', u'Progressive', u'Party', u'-lrb-', u'United', u'States', u',', u'1912', u'-rrb-', u'President', u'of', u'the', u'Massachusetts', u'Senate', u'list', u'of', u'governor', u'of', u'Massachusetts', u'Eighteenth', u'Amendment', u'to', u'the', u'United', u'States', u'Constitution', u'Vice', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'District', u'Court', u'for', u'the', u'District', u'of', u'Columbia', u'White', u'House', u'Chief', u'of', u'Staff', u'Robert', u'M.', u'La', u'Follette', u',', u'Sr.', u'.'], u'pos': [u'SYM', u'DT', u'NN', u'NNP', u'NNP', u'SYM', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'CC', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNPS', u'SYM', u'NNP', u'NNP', u'NN', u',', u'DT', u'NNP', u'NNP', u'NNP', u'NN', u'SYM', u'NNP', u'NNP', u'NNP', u'NN', u'SYM', u'NNP', u'NNS', u'IN', u'NNP', u'POS', u'NNS', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u'IN', u'NNP', u'NNP', u',', u'NNP', u',', u'NNP', u'SYM', u'NNP', u'NNP', u'JJ', u'NNP', u'IN', u'NNP', u'NNP', u'NN', u'SYM', u'NN', u'CC', u'NN', u':', u'DT', u'NNP', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNPS', u',', u'CD', u'-RRB-', u'NNP', u'NNP', u'TO', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'NNPS', u'JJ', u'NN', u',', u'CD', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNPS', u',', u'CD', u'-RRB-', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'NNP', u'TO', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNPS', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[38108, 38109], [38110, 38113], [38114, 38116], [38117, 38126], [38127, 38135], [38136, 38137], [38139, 38148], [38149, 38154], [38155, 38157], [38158, 38164], [38165, 38173], [38174, 38177], [38178, 38185], [38186, 38192], [38193, 38195], [38196, 38200], [38201, 38207], [38208, 38210], [38211, 38214], [38215, 38222], [38223, 38226], [38227, 38232], [38233, 38237], [38238, 38242], [38243, 38246], [38247, 38253], [38254, 38260], [38261, 38263], [38264, 38270], [38271, 38278], [38279, 38280], [38282, 38288], [38289, 38297], [38298, 38308], [38308, 38309], [38310, 38311], [38312, 38319], [38320, 38325], [38326, 38334], [38335, 38339], [38340, 38341], [38343, 38351], [38352, 38357], [38358, 38363], [38364, 38373], [38374, 38375], [38377, 38382], [38383, 38388], [38389, 38391], [38392, 38400], [38400, 38402], [38403, 38411], [38412, 38413], [38415, 38421], [38422, 38430], [38431, 38439], [38440, 38450], [38451, 38452], [38454, 38460], [38461, 38469], [38470, 38482], [38483, 38490], [38491, 38492], [38493, 38499], [38500, 38502], [38503, 38509], [38510, 38517], [38517, 38518], [38519, 38530], [38530, 38531], [38532, 38534], [38535, 38536], [38538, 38544], [38545, 38553], [38554, 38562], [38563, 38575], [38576, 38578], [38579, 38592], [38593, 38601], [38602, 38611], [38612, 38613], [38615, 38625], [38626, 38629], [38630, 38636], [38636, 38637], [38638, 38641], [38642, 38650], [38651, 38654], [38655, 38657], [38658, 38661], [38662, 38669], [38670, 38672], [38673, 38681], [38682, 38691], [38692, 38694], [38695, 38698], [38699, 38705], [38706, 38712], [38713, 38717], [38718, 38727], [38728, 38730], [38731, 38734], [38735, 38741], [38742, 38748], [38749, 38758], [38759, 38761], [38762, 38765], [38766, 38772], [38773, 38779], [38780, 38784], [38785, 38794], [38795, 38797], [38798, 38801], [38802, 38808], [38809, 38815], [38816, 38827], [38828, 38833], [38834, 38835], [38835, 38841], [38842, 38848], [38848, 38849], [38850, 38854], [38854, 38855], [38856, 38867], [38868, 38877], [38878, 38880], [38881, 38884], [38885, 38891], [38892, 38898], [38899, 38911], [38912, 38918], [38919, 38925], [38926, 38938], [38939, 38947], [38947, 38948], [38949, 38953], [38954, 38965], [38966, 38971], [38972, 38973], [38973, 38979], [38980, 38986], [38986, 38987], [38988, 38992], [38992, 38993], [38994, 39003], [39004, 39006], [39007, 39010], [39011, 39024], [39025, 39031], [39032, 39036], [39037, 39039], [39040, 39049], [39050, 39052], [39053, 39066], [39067, 39077], [39078, 39087], [39088, 39090], [39091, 39094], [39095, 39101], [39102, 39108], [39109, 39121], [39122, 39126], [39127, 39136], [39137, 39139], [39140, 39143], [39144, 39150], [39151, 39157], [39158, 39164], [39165, 39171], [39172, 39180], [39181, 39186], [39187, 39190], [39191, 39194], [39195, 39203], [39204, 39206], [39207, 39215], [39216, 39221], [39222, 39227], [39228, 39233], [39234, 39236], [39237, 39242], [39243, 39249], [39250, 39252], [39253, 39255], [39256, 39264], [39264, 39265], [39266, 39268], [39268, 39269]]}) 
answer: set([u'thirteenth'])
candidate Sentence: (0.2965623140335083, {u'tokens': [u'Did', u'he', u'support', u'these', u'measures', u'while', u'president', u'?'], u'lemmas': [u'do', u'he', u'support', u'these', u'measure', u'while', u'president', u'?'], u'pos': [u'VBD', u'PRP', u'VB', u'DT', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[26681, 26684], [26685, 26687], [26688, 26695], [26696, 26701], [26702, 26710], [26711, 26716], [26717, 26726], [26726, 26727]]}) 
answer: set([u'state', u'thirteenth', u'unit'])
candidate Sentence: (0.2151966392993927, {u'tokens': [u'Greenberg', u',', u'114116', u'The', u'Senate', u'failed', u'to', u'act', u';', u'the', u'United', u'States', u'never', u'joined', u'the', u'World', u'Court', u'.'], u'lemmas': [u'Greenberg', u',', u'114116', u'the', u'Senate', u'fail', u'to', u'act', u';', u'the', u'United', u'States', u'never', u'join', u'the', u'World', u'Court', u'.'], u'pos': [u'NNP', u',', u'CD', u'DT', u'NNP', u'VBD', u'TO', u'VB', u':', u'DT', u'NNP', u'NNPS', u'RB', u'VBD', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[30113, 30122], [30122, 30123], [30124, 30130], [30132, 30135], [30136, 30142], [30143, 30149], [30150, 30152], [30153, 30156], [30156, 30157], [30158, 30161], [30162, 30168], [30169, 30175], [30176, 30181], [30182, 30188], [30189, 30192], [30193, 30198], [30199, 30204], [30204, 30205]]}) 
answer: set([u'thirteenth', u'presid'])
candidate Sentence: (0.21044071018695831, {u'tokens': [u'The', u'question', u'of', u'the', u'United', u'States', u'joining', u'the', u'League', u'of', u'Nations', u'was', u'a', u'major', u'issue', u'in', u'the', u'campaign', u',', u'as', u'was', u'the', u'unfinished', u'legacy', u'of', u'Progressivism', u'.'], u'lemmas': [u'the', u'question', u'of', u'the', u'United', u'States', u'join', u'the', u'league', u'of', u'nation', u'be', u'a', u'major', u'issue', u'in', u'the', u'campaign', u',', u'as', u'be', u'the', u'unfinished', u'legacy', u'of', u'Progressivism', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNPS', u'VBG', u'DT', u'NN', u'IN', u'NNS', u'VBD', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u',', u'IN', u'VBD', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[19138, 19141], [19142, 19150], [19151, 19153], [19154, 19157], [19158, 19164], [19165, 19171], [19172, 19179], [19180, 19183], [19184, 19190], [19191, 19193], [19194, 19201], [19202, 19205], [19206, 19207], [19208, 19213], [19214, 19219], [19220, 19222], [19223, 19226], [19227, 19235], [19235, 19236], [19237, 19239], [19240, 19243], [19244, 19247], [19248, 19258], [19259, 19265], [19266, 19268], [19269, 19282], [19282, 19283]]}) 
answer: set([u'thirteenth', u'presid'])
candidate Sentence: (0.20004726946353912, {u'tokens': [u'Grace', u"'s", u'reply', u'was', u'``', u'Did', u'you', u'marry', u'me', u'to', u'darn', u'your', u'socks', u'?', u"''"], u'lemmas': [u'Grace', u"'s", u'reply', u'be', u'``', u'do', u'you', u'marry', u'I', u'to', u'darn', u'you', u'sock', u'?', u"''"], u'pos': [u'NNP', u'POS', u'NN', u'VBD', u'``', u'VBD', u'PRP', u'VB', u'PRP', u'TO', u'JJ', u'PRP$', u'NNS', u'.', u"''"], u'char_offsets': [[5703, 5708], [5708, 5710], [5711, 5716], [5717, 5720], [5721, 5722], [5722, 5725], [5726, 5729], [5730, 5735], [5736, 5738], [5739, 5741], [5742, 5746], [5747, 5751], [5752, 5757], [5757, 5758], [5758, 5759]]}) 
answer: set([u'state', u'thirteenth', u'unit', u'presid'])
candidate Sentence: (0.19599947333335876, {u'tokens': [u'John', u'Calvin', u'Coolidge', u',', u'Jr.', u'-LRB-', u'July', u'4', u'1872', u'January', u'5', u'1933', u'-RRB-', u',', u'more', u'commonly', u'known', u'as', u'Calvin', u'Coolidge', u',', u'was', u'the', u'thirtieth', u'President', u'of', u'the', u'United', u'States', u'-LRB-', u'19231929', u'-RRB-', u'.'], u'lemmas': [u'John', u'Calvin', u'Coolidge', u',', u'Jr.', u'-lrb-', u'July', u'4', u'1872', u'January', u'5', u'1933', u'-rrb-', u',', u'more', u'commonly', u'know', u'as', u'Calvin', u'Coolidge', u',', u'be', u'the', u'thirtieth', u'President', u'of', u'the', u'United', u'States', u'-lrb-', u'19231929', u'-rrb-', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u',', u'NNP', u'-LRB-', u'NNP', u'CD', u'CD', u'NNP', u'CD', u'CD', u'-RRB-', u',', u'RBR', u'RB', u'VBN', u'IN', u'NNP', u'NNP', u',', u'VBD', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'-LRB-', u'CD', u'-RRB-', u'.'], u'char_offsets': [[0, 4], [5, 11], [12, 20], [20, 21], [22, 25], [26, 27], [27, 31], [32, 33], [34, 38], [41, 48], [49, 50], [51, 55], [55, 56], [56, 57], [58, 62], [63, 71], [72, 77], [78, 80], [81, 87], [88, 96], [96, 97], [98, 101], [102, 105], [106, 115], [116, 125], [126, 128], [129, 132], [133, 139], [140, 146], [147, 148], [148, 156], [156, 157], [157, 158]]}) 
answer: set([u'thirteenth'])
candidate Sentence: (0.19311065971851349, {u'tokens': [u'Sobel', u',', u'252', u'On', u'February', u'12', u'1924', u',', u'he', u'became', u'the', u'first', u'President', u'of', u'the', u'United', u'States', u'to', u'deliver', u'a', u'political', u'speech', u'on', u'radio', u'.'], u'lemmas': [u'Sobel', u',', u'252', u'on', u'February', u'12', u'1924', u',', u'he', u'become', u'the', u'first', u'president', u'of', u'the', u'United', u'States', u'to', u'deliver', u'a', u'political', u'speech', u'on', u'radio', u'.'], u'pos': [u'NNP', u',', u'CD', u'IN', u'NNP', u'CD', u'CD', u',', u'PRP', u'VBD', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNPS', u'TO', u'VB', u'DT', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[33575, 33580], [33580, 33581], [33582, 33585], [33587, 33589], [33590, 33598], [33599, 33601], [33602, 33606], [33606, 33607], [33608, 33610], [33611, 33617], [33618, 33621], [33622, 33627], [33628, 33637], [33638, 33640], [33641, 33644], [33645, 33651], [33652, 33658], [33659, 33661], [33662, 33669], [33670, 33671], [33672, 33681], [33682, 33688], [33689, 33691], [33692, 33697], [33697, 33698]]}) 
answer: set([u'thirteenth'])
candidate Sentence: (0.18471452593803406, {u'tokens': [u'He', u'spoke', u'in', u'favor', u'of', u'the', u'United', u'States', u'joining', u'the', u'Permanent', u'Court', u'of', u'International', u'Justice', u',', u'provided', u'that', u'the', u'nation', u'would', u'not', u'be', u'bound', u'by', u'advisory', u'decisions', u'.'], u'lemmas': [u'he', u'speak', u'in', u'favor', u'of', u'the', u'United', u'States', u'join', u'the', u'Permanent', u'Court', u'of', u'International', u'Justice', u',', u'provide', u'that', u'the', u'nation', u'would', u'not', u'be', u'bind', u'by', u'advisory', u'decision', u'.'], u'pos': [u'PRP', u'VBD', u'IN', u'NN', u'IN', u'DT', u'NNP', u'NNPS', u'VBG', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u',', u'VBD', u'IN', u'DT', u'NN', u'MD', u'RB', u'VB', u'VBN', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[29755, 29757], [29758, 29763], [29764, 29766], [29767, 29772], [29773, 29775], [29776, 29779], [29780, 29786], [29787, 29793], [29794, 29801], [29802, 29805], [29806, 29815], [29816, 29821], [29822, 29824], [29825, 29838], [29839, 29846], [29846, 29847], [29848, 29856], [29857, 29861], [29862, 29865], [29866, 29872], [29873, 29878], [29879, 29882], [29883, 29885], [29886, 29891], [29892, 29894], [29895, 29903], [29904, 29913], [29913, 29914]]}) 
answer: set([u'thirteenth', u'presid'])
candidate Sentence: (0.18413273990154266, {u'tokens': [u'Sobel', u',', u'342', u'Coolidge', u'saw', u'the', u'landslide', u'Republican', u'victory', u'of', u'1920', u'as', u'a', u'rejection', u'of', u'the', u'Wilsonian', u'idea', u'that', u'the', u'United', u'States', u'should', u'join', u'the', u'League', u'of', u'Nations', u'.'], u'lemmas': [u'Sobel', u',', u'342', u'Coolidge', u'see', u'the', u'landslide', u'republican', u'victory', u'of', u'1920', u'as', u'a', u'rejection', u'of', u'the', u'wilsonian', u'idea', u'that', u'the', u'United', u'States', u'should', u'join', u'the', u'League', u'of', u'Nations', u'.'], u'pos': [u'NNP', u',', u'CD', u'NNP', u'VBD', u'DT', u'NN', u'JJ', u'NN', u'IN', u'CD', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNPS', u'MD', u'VB', u'DT', u'NNP', u'IN', u'NNPS', u'.'], u'char_offsets': [[29409, 29414], [29414, 29415], [29416, 29419], [29421, 29429], [29430, 29433], [29434, 29437], [29438, 29447], [29448, 29458], [29459, 29466], [29467, 29469], [29470, 29474], [29475, 29477], [29478, 29479], [29480, 29489], [29490, 29492], [29493, 29496], [29497, 29506], [29507, 29511], [29512, 29516], [29517, 29520], [29521, 29527], [29528, 29534], [29535, 29541], [29542, 29546], [29547, 29550], [29551, 29557], [29558, 29560], [29561, 29568], [29568, 29569]]}) 
answer: set([u'thirteenth', u'presid'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'coolidge', u'calvin', u'.'])

Was Coolidge the thirteenth President of the United States?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Calvin_Coolidge
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a9.txt

No
_____________________________ test_yesno[param35] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156d73b0>, (<src.tfidf.TF_IDF object at 0x11240ded0>, set(['.', 'calvin', 'coolidge'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156d73b0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.31535977125167847, {u'tokens': [u'Did', u'he', u'support', u'these', u'measures', u'while', u'president', u'?'], u'lemmas': [u'do', u'he', u'support', u'these', u'measure', u'while', u'president', u'?'], u'pos': [u'VBD', u'PRP', u'VB', u'DT', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[26681, 26684], [26685, 26687], [26688, 26695], [26696, 26701], [26702, 26710], [26711, 26716], [26717, 26726], [26726, 26727]]}) 
answer: set([u'republican'])
candidate Sentence: (0.21272715926170349, {u'tokens': [u'Grace', u"'s", u'reply', u'was', u'``', u'Did', u'you', u'marry', u'me', u'to', u'darn', u'your', u'socks', u'?', u"''"], u'lemmas': [u'Grace', u"'s", u'reply', u'be', u'``', u'do', u'you', u'marry', u'I', u'to', u'darn', u'you', u'sock', u'?', u"''"], u'pos': [u'NNP', u'POS', u'NN', u'VBD', u'``', u'VBD', u'PRP', u'VB', u'PRP', u'TO', u'JJ', u'PRP$', u'NNS', u'.', u"''"], u'char_offsets': [[5703, 5708], [5708, 5710], [5711, 5716], [5717, 5720], [5721, 5722], [5722, 5725], [5726, 5729], [5730, 5735], [5736, 5738], [5739, 5741], [5742, 5746], [5747, 5751], [5752, 5757], [5757, 5758], [5758, 5759]]}) 
answer: set([u'republican'])
candidate Sentence: (0.18309737741947174, {u'tokens': [u'Hannaford', u',', u'169', u'It', u'was', u'also', u'Parker', u'who', u',', u'upon', u'learning', u'that', u'Coolidge', u'had', u'died', u',', u'reportedly', u'remarked', u',', u'``', u'How', u'can', u'they', u'tell', u'?', u"''"], u'lemmas': [u'Hannaford', u',', u'169', u'it', u'be', u'also', u'Parker', u'who', u',', u'upon', u'learn', u'that', u'Coolidge', u'have', u'die', u',', u'reportedly', u'remark', u',', u'``', u'how', u'can', u'they', u'tell', u'?', u"''"], u'pos': [u'NNP', u',', u'CD', u'PRP', u'VBD', u'RB', u'NNP', u'WP', u',', u'IN', u'VBG', u'IN', u'NNP', u'VBD', u'VBN', u',', u'RB', u'VBD', u',', u'``', u'WRB', u'MD', u'PRP', u'VB', u'.', u"''"], u'char_offsets': [[20615, 20624], [20624, 20625], [20626, 20629], [20631, 20633], [20634, 20637], [20638, 20642], [20643, 20649], [20650, 20653], [20653, 20654], [20655, 20659], [20660, 20668], [20669, 20673], [20674, 20682], [20683, 20686], [20687, 20691], [20691, 20692], [20693, 20703], [20704, 20712], [20712, 20713], [20714, 20715], [20715, 20718], [20719, 20722], [20723, 20727], [20728, 20732], [20732, 20733], [20733, 20734]]}) 
answer: set([u'republican'])
candidate Sentence: (0.15131618082523346, {u'tokens': [u'Fuess', u',', u'187188', u'At', u'the', u'1920', u'Republican', u'Convention', u'most', u'of', u'the', u'delegates', u'were', u'selected', u'by', u'state', u'party', u'conventions', u',', u'not', u'primaries', u'.'], u'lemmas': [u'Fuess', u',', u'187188', u'at', u'the', u'1920', u'Republican', u'Convention', u'most', u'of', u'the', u'delegate', u'be', u'select', u'by', u'state', u'party', u'convention', u',', u'not', u'primary', u'.'], u'pos': [u'NNP', u',', u'CD', u'IN', u'DT', u'CD', u'NNP', u'NNP', u'JJS', u'IN', u'DT', u'NNS', u'VBD', u'VBN', u'IN', u'NN', u'NN', u'NNS', u',', u'RB', u'NNS', u'.'], u'char_offsets': [[18038, 18043], [18043, 18044], [18045, 18051], [18052, 18054], [18055, 18058], [18059, 18063], [18064, 18074], [18075, 18085], [18086, 18090], [18091, 18093], [18094, 18097], [18098, 18107], [18108, 18112], [18113, 18121], [18122, 18124], [18125, 18130], [18131, 18136], [18137, 18148], [18148, 18149], [18150, 18153], [18154, 18163], [18163, 18164]]}) 
answer: set([])
candidate Sentence: (0.1265815943479538, {u'tokens': [u'Sobel', u',', u'4951', u'Coolidge', u'campaigned', u'locally', u'for', u'Republican', u'presidential', u'candidate', u'William', u'McKinley', u'in', u'1896', u',', u'and', u'the', u'next', u'year', u'he', u'was', u'selected', u'to', u'be', u'a', u'member', u'of', u'the', u'Republican', u'City', u'Committee', u'.'], u'lemmas': [u'Sobel', u',', u'4951', u'Coolidge', u'campaign', u'locally', u'for', u'republican', u'presidential', u'candidate', u'William', u'McKinley', u'in', u'1896', u',', u'and', u'the', u'next', u'year', u'he', u'be', u'select', u'to', u'be', u'a', u'member', u'of', u'the', u'Republican', u'City', u'Committee', u'.'], u'pos': [u'NNP', u',', u'CD', u'NNP', u'VBD', u'RB', u'IN', u'JJ', u'JJ', u'NN', u'NNP', u'NNP', u'IN', u'CD', u',', u'CC', u'DT', u'JJ', u'NN', u'PRP', u'VBD', u'VBN', u'TO', u'VB', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[6610, 6615], [6615, 6616], [6617, 6621], [6623, 6631], [6632, 6642], [6643, 6650], [6651, 6654], [6655, 6665], [6666, 6678], [6679, 6688], [6689, 6696], [6697, 6705], [6706, 6708], [6709, 6713], [6713, 6714], [6715, 6718], [6719, 6722], [6723, 6727], [6728, 6732], [6733, 6735], [6736, 6739], [6740, 6748], [6749, 6751], [6752, 6754], [6755, 6756], [6757, 6763], [6764, 6766], [6767, 6770], [6771, 6781], [6782, 6786], [6787, 6796], [6796, 6797]]}) 
answer: set([])
candidate Sentence: (0.12275879830121994, {u'tokens': [u'The', u'Republican', u'Convention', u'was', u'held', u'from', u'June', u'10', u'to', u'June', u'12', u'1924', u'in', u'Cleveland', u',', u'Ohio', u';', u'President', u'Coolidge', u'was', u'nominated', u'on', u'the', u'first', u'ballot', u'.'], u'lemmas': [u'the', u'Republican', u'Convention', u'be', u'hold', u'from', u'June', u'10', u'to', u'June', u'12', u'1924', u'in', u'Cleveland', u',', u'Ohio', u';', u'President', u'Coolidge', u'be', u'nominate', u'on', u'the', u'first', u'ballot', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'VBD', u'VBN', u'IN', u'NNP', u'CD', u'TO', u'NNP', u'CD', u'CD', u'IN', u'NNP', u',', u'NNP', u':', u'NNP', u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[23854, 23857], [23858, 23868], [23869, 23879], [23880, 23883], [23884, 23888], [23889, 23893], [23894, 23898], [23899, 23901], [23902, 23904], [23905, 23909], [23910, 23912], [23913, 23917], [23918, 23920], [23921, 23930], [23930, 23931], [23932, 23936], [23936, 23937], [23938, 23947], [23948, 23956], [23957, 23960], [23961, 23970], [23971, 23973], [23974, 23977], [23978, 23983], [23984, 23990], [23990, 23991]]}) 
answer: set([])
candidate Sentence: (0.12054553627967834, {u'tokens': [u'Calvin', u'and', u'Grace', u'Coolidge', u',', u'about', u'1918', u'.'], u'lemmas': [u'Calvin', u'and', u'Grace', u'Coolidge', u',', u'about', u'1918', u'.'], u'pos': [u'NNP', u'CC', u'NNP', u'NNP', u',', u'IN', u'CD', u'.'], u'char_offsets': [[7940, 7946], [7947, 7950], [7951, 7956], [7957, 7965], [7965, 7966], [7967, 7972], [7973, 7977], [7977, 7978]]}) 
answer: set([u'republican'])
candidate Sentence: (0.11605214327573776, {u'tokens': [u'Autobiography', u',', u'93', u'The', u'Republican', u'Party', u'was', u'dominant', u'in', u'New', u'England', u'in', u'Coolidge', u"'s", u'time', u',', u'and', u'he', u'followed', u'Hammond', u"'s", u'and', u'Field', u"'s", u'example', u'by', u'becoming', u'active', u'in', u'local', u'politics', u'.'], u'lemmas': [u'autobiography', u',', u'93', u'the', u'Republican', u'Party', u'be', u'dominant', u'in', u'New', u'England', u'in', u'Coolidge', u"'s", u'time', u',', u'and', u'he', u'follow', u'Hammond', u"'s", u'and', u'Field', u"'s", u'example', u'by', u'become', u'active', u'in', u'local', u'politics', u'.'], u'pos': [u'NN', u',', u'CD', u'DT', u'NNP', u'NNP', u'VBD', u'JJ', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u'POS', u'NN', u',', u'CC', u'PRP', u'VBD', u'NNP', u'POS', u'CC', u'NNP', u'POS', u'NN', u'IN', u'VBG', u'JJ', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[6439, 6452], [6452, 6453], [6454, 6456], [6457, 6460], [6461, 6471], [6472, 6477], [6478, 6481], [6482, 6490], [6491, 6493], [6494, 6497], [6498, 6505], [6506, 6508], [6509, 6517], [6517, 6519], [6520, 6524], [6524, 6525], [6526, 6529], [6530, 6532], [6533, 6541], [6542, 6549], [6549, 6551], [6552, 6555], [6556, 6561], [6561, 6563], [6564, 6571], [6572, 6574], [6575, 6583], [6584, 6590], [6591, 6593], [6594, 6599], [6600, 6608], [6608, 6609]]}) 
answer: set([])
candidate Sentence: (0.10654504597187042, {u'tokens': [u'John', u'Calvin', u'Coolidge', u',', u'Jr.', u'-LRB-', u'July', u'4', u'1872', u'January', u'5', u'1933', u'-RRB-', u',', u'more', u'commonly', u'known', u'as', u'Calvin', u'Coolidge', u',', u'was', u'the', u'thirtieth', u'President', u'of', u'the', u'United', u'States', u'-LRB-', u'19231929', u'-RRB-', u'.'], u'lemmas': [u'John', u'Calvin', u'Coolidge', u',', u'Jr.', u'-lrb-', u'July', u'4', u'1872', u'January', u'5', u'1933', u'-rrb-', u',', u'more', u'commonly', u'know', u'as', u'Calvin', u'Coolidge', u',', u'be', u'the', u'thirtieth', u'President', u'of', u'the', u'United', u'States', u'-lrb-', u'19231929', u'-rrb-', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u',', u'NNP', u'-LRB-', u'NNP', u'CD', u'CD', u'NNP', u'CD', u'CD', u'-RRB-', u',', u'RBR', u'RB', u'VBN', u'IN', u'NNP', u'NNP', u',', u'VBD', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'-LRB-', u'CD', u'-RRB-', u'.'], u'char_offsets': [[0, 4], [5, 11], [12, 20], [20, 21], [22, 25], [26, 27], [27, 31], [32, 33], [34, 38], [41, 48], [49, 50], [51, 55], [55, 56], [56, 57], [58, 62], [63, 71], [72, 77], [78, 80], [81, 87], [88, 96], [96, 97], [98, 101], [102, 105], [106, 115], [116, 125], [126, 128], [129, 132], [133, 139], [140, 146], [147, 148], [148, 156], [156, 157], [157, 158]]}) 
answer: set([u'republican'])
['No', 'No', 'No', 'No Sure', 'Yes', 'Yes', 'No', 'Yes', 'No']
set([u'coolidge', u'calvin', u'.'])

Was Calvin Coolidge Republican?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Calvin_Coolidge
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a9.txt

No
_____________________________ test_yesno[param36] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156d7290>, (<src.tfidf.TF_IDF object at 0x11240ded0>, set(['.', 'calvin', 'coolidge'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156d7290>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.31535977125167847, {u'tokens': [u'Did', u'he', u'support', u'these', u'measures', u'while', u'president', u'?'], u'lemmas': [u'do', u'he', u'support', u'these', u'measure', u'while', u'president', u'?'], u'pos': [u'VBD', u'PRP', u'VB', u'DT', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[26681, 26684], [26685, 26687], [26688, 26695], [26696, 26701], [26702, 26710], [26711, 26716], [26717, 26726], [26726, 26727]]}) 
answer: set([u'republican'])
candidate Sentence: (0.21272715926170349, {u'tokens': [u'Grace', u"'s", u'reply', u'was', u'``', u'Did', u'you', u'marry', u'me', u'to', u'darn', u'your', u'socks', u'?', u"''"], u'lemmas': [u'Grace', u"'s", u'reply', u'be', u'``', u'do', u'you', u'marry', u'I', u'to', u'darn', u'you', u'sock', u'?', u"''"], u'pos': [u'NNP', u'POS', u'NN', u'VBD', u'``', u'VBD', u'PRP', u'VB', u'PRP', u'TO', u'JJ', u'PRP$', u'NNS', u'.', u"''"], u'char_offsets': [[5703, 5708], [5708, 5710], [5711, 5716], [5717, 5720], [5721, 5722], [5722, 5725], [5726, 5729], [5730, 5735], [5736, 5738], [5739, 5741], [5742, 5746], [5747, 5751], [5752, 5757], [5757, 5758], [5758, 5759]]}) 
answer: set([u'republican'])
candidate Sentence: (0.18309737741947174, {u'tokens': [u'Hannaford', u',', u'169', u'It', u'was', u'also', u'Parker', u'who', u',', u'upon', u'learning', u'that', u'Coolidge', u'had', u'died', u',', u'reportedly', u'remarked', u',', u'``', u'How', u'can', u'they', u'tell', u'?', u"''"], u'lemmas': [u'Hannaford', u',', u'169', u'it', u'be', u'also', u'Parker', u'who', u',', u'upon', u'learn', u'that', u'Coolidge', u'have', u'die', u',', u'reportedly', u'remark', u',', u'``', u'how', u'can', u'they', u'tell', u'?', u"''"], u'pos': [u'NNP', u',', u'CD', u'PRP', u'VBD', u'RB', u'NNP', u'WP', u',', u'IN', u'VBG', u'IN', u'NNP', u'VBD', u'VBN', u',', u'RB', u'VBD', u',', u'``', u'WRB', u'MD', u'PRP', u'VB', u'.', u"''"], u'char_offsets': [[20615, 20624], [20624, 20625], [20626, 20629], [20631, 20633], [20634, 20637], [20638, 20642], [20643, 20649], [20650, 20653], [20653, 20654], [20655, 20659], [20660, 20668], [20669, 20673], [20674, 20682], [20683, 20686], [20687, 20691], [20691, 20692], [20693, 20703], [20704, 20712], [20712, 20713], [20714, 20715], [20715, 20718], [20719, 20722], [20723, 20727], [20728, 20732], [20732, 20733], [20733, 20734]]}) 
answer: set([u'republican'])
candidate Sentence: (0.15131618082523346, {u'tokens': [u'Fuess', u',', u'187188', u'At', u'the', u'1920', u'Republican', u'Convention', u'most', u'of', u'the', u'delegates', u'were', u'selected', u'by', u'state', u'party', u'conventions', u',', u'not', u'primaries', u'.'], u'lemmas': [u'Fuess', u',', u'187188', u'at', u'the', u'1920', u'Republican', u'Convention', u'most', u'of', u'the', u'delegate', u'be', u'select', u'by', u'state', u'party', u'convention', u',', u'not', u'primary', u'.'], u'pos': [u'NNP', u',', u'CD', u'IN', u'DT', u'CD', u'NNP', u'NNP', u'JJS', u'IN', u'DT', u'NNS', u'VBD', u'VBN', u'IN', u'NN', u'NN', u'NNS', u',', u'RB', u'NNS', u'.'], u'char_offsets': [[18038, 18043], [18043, 18044], [18045, 18051], [18052, 18054], [18055, 18058], [18059, 18063], [18064, 18074], [18075, 18085], [18086, 18090], [18091, 18093], [18094, 18097], [18098, 18107], [18108, 18112], [18113, 18121], [18122, 18124], [18125, 18130], [18131, 18136], [18137, 18148], [18148, 18149], [18150, 18153], [18154, 18163], [18163, 18164]]}) 
answer: set([])
candidate Sentence: (0.1265815943479538, {u'tokens': [u'Sobel', u',', u'4951', u'Coolidge', u'campaigned', u'locally', u'for', u'Republican', u'presidential', u'candidate', u'William', u'McKinley', u'in', u'1896', u',', u'and', u'the', u'next', u'year', u'he', u'was', u'selected', u'to', u'be', u'a', u'member', u'of', u'the', u'Republican', u'City', u'Committee', u'.'], u'lemmas': [u'Sobel', u',', u'4951', u'Coolidge', u'campaign', u'locally', u'for', u'republican', u'presidential', u'candidate', u'William', u'McKinley', u'in', u'1896', u',', u'and', u'the', u'next', u'year', u'he', u'be', u'select', u'to', u'be', u'a', u'member', u'of', u'the', u'Republican', u'City', u'Committee', u'.'], u'pos': [u'NNP', u',', u'CD', u'NNP', u'VBD', u'RB', u'IN', u'JJ', u'JJ', u'NN', u'NNP', u'NNP', u'IN', u'CD', u',', u'CC', u'DT', u'JJ', u'NN', u'PRP', u'VBD', u'VBN', u'TO', u'VB', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[6610, 6615], [6615, 6616], [6617, 6621], [6623, 6631], [6632, 6642], [6643, 6650], [6651, 6654], [6655, 6665], [6666, 6678], [6679, 6688], [6689, 6696], [6697, 6705], [6706, 6708], [6709, 6713], [6713, 6714], [6715, 6718], [6719, 6722], [6723, 6727], [6728, 6732], [6733, 6735], [6736, 6739], [6740, 6748], [6749, 6751], [6752, 6754], [6755, 6756], [6757, 6763], [6764, 6766], [6767, 6770], [6771, 6781], [6782, 6786], [6787, 6796], [6796, 6797]]}) 
answer: set([])
candidate Sentence: (0.12275879830121994, {u'tokens': [u'The', u'Republican', u'Convention', u'was', u'held', u'from', u'June', u'10', u'to', u'June', u'12', u'1924', u'in', u'Cleveland', u',', u'Ohio', u';', u'President', u'Coolidge', u'was', u'nominated', u'on', u'the', u'first', u'ballot', u'.'], u'lemmas': [u'the', u'Republican', u'Convention', u'be', u'hold', u'from', u'June', u'10', u'to', u'June', u'12', u'1924', u'in', u'Cleveland', u',', u'Ohio', u';', u'President', u'Coolidge', u'be', u'nominate', u'on', u'the', u'first', u'ballot', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'VBD', u'VBN', u'IN', u'NNP', u'CD', u'TO', u'NNP', u'CD', u'CD', u'IN', u'NNP', u',', u'NNP', u':', u'NNP', u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[23854, 23857], [23858, 23868], [23869, 23879], [23880, 23883], [23884, 23888], [23889, 23893], [23894, 23898], [23899, 23901], [23902, 23904], [23905, 23909], [23910, 23912], [23913, 23917], [23918, 23920], [23921, 23930], [23930, 23931], [23932, 23936], [23936, 23937], [23938, 23947], [23948, 23956], [23957, 23960], [23961, 23970], [23971, 23973], [23974, 23977], [23978, 23983], [23984, 23990], [23990, 23991]]}) 
answer: set([])
candidate Sentence: (0.12054553627967834, {u'tokens': [u'Calvin', u'and', u'Grace', u'Coolidge', u',', u'about', u'1918', u'.'], u'lemmas': [u'Calvin', u'and', u'Grace', u'Coolidge', u',', u'about', u'1918', u'.'], u'pos': [u'NNP', u'CC', u'NNP', u'NNP', u',', u'IN', u'CD', u'.'], u'char_offsets': [[7940, 7946], [7947, 7950], [7951, 7956], [7957, 7965], [7965, 7966], [7967, 7972], [7973, 7977], [7977, 7978]]}) 
answer: set([u'republican'])
candidate Sentence: (0.11605214327573776, {u'tokens': [u'Autobiography', u',', u'93', u'The', u'Republican', u'Party', u'was', u'dominant', u'in', u'New', u'England', u'in', u'Coolidge', u"'s", u'time', u',', u'and', u'he', u'followed', u'Hammond', u"'s", u'and', u'Field', u"'s", u'example', u'by', u'becoming', u'active', u'in', u'local', u'politics', u'.'], u'lemmas': [u'autobiography', u',', u'93', u'the', u'Republican', u'Party', u'be', u'dominant', u'in', u'New', u'England', u'in', u'Coolidge', u"'s", u'time', u',', u'and', u'he', u'follow', u'Hammond', u"'s", u'and', u'Field', u"'s", u'example', u'by', u'become', u'active', u'in', u'local', u'politics', u'.'], u'pos': [u'NN', u',', u'CD', u'DT', u'NNP', u'NNP', u'VBD', u'JJ', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u'POS', u'NN', u',', u'CC', u'PRP', u'VBD', u'NNP', u'POS', u'CC', u'NNP', u'POS', u'NN', u'IN', u'VBG', u'JJ', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[6439, 6452], [6452, 6453], [6454, 6456], [6457, 6460], [6461, 6471], [6472, 6477], [6478, 6481], [6482, 6490], [6491, 6493], [6494, 6497], [6498, 6505], [6506, 6508], [6509, 6517], [6517, 6519], [6520, 6524], [6524, 6525], [6526, 6529], [6530, 6532], [6533, 6541], [6542, 6549], [6549, 6551], [6552, 6555], [6556, 6561], [6561, 6563], [6564, 6571], [6572, 6574], [6575, 6583], [6584, 6590], [6591, 6593], [6594, 6599], [6600, 6608], [6608, 6609]]}) 
answer: set([])
candidate Sentence: (0.10654504597187042, {u'tokens': [u'John', u'Calvin', u'Coolidge', u',', u'Jr.', u'-LRB-', u'July', u'4', u'1872', u'January', u'5', u'1933', u'-RRB-', u',', u'more', u'commonly', u'known', u'as', u'Calvin', u'Coolidge', u',', u'was', u'the', u'thirtieth', u'President', u'of', u'the', u'United', u'States', u'-LRB-', u'19231929', u'-RRB-', u'.'], u'lemmas': [u'John', u'Calvin', u'Coolidge', u',', u'Jr.', u'-lrb-', u'July', u'4', u'1872', u'January', u'5', u'1933', u'-rrb-', u',', u'more', u'commonly', u'know', u'as', u'Calvin', u'Coolidge', u',', u'be', u'the', u'thirtieth', u'President', u'of', u'the', u'United', u'States', u'-lrb-', u'19231929', u'-rrb-', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u',', u'NNP', u'-LRB-', u'NNP', u'CD', u'CD', u'NNP', u'CD', u'CD', u'-RRB-', u',', u'RBR', u'RB', u'VBN', u'IN', u'NNP', u'NNP', u',', u'VBD', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'-LRB-', u'CD', u'-RRB-', u'.'], u'char_offsets': [[0, 4], [5, 11], [12, 20], [20, 21], [22, 25], [26, 27], [27, 31], [32, 33], [34, 38], [41, 48], [49, 50], [51, 55], [55, 56], [56, 57], [58, 62], [63, 71], [72, 77], [78, 80], [81, 87], [88, 96], [96, 97], [98, 101], [102, 105], [106, 115], [116, 125], [126, 128], [129, 132], [133, 139], [140, 146], [147, 148], [148, 156], [156, 157], [157, 158]]}) 
answer: set([u'republican'])
['No', 'No', 'No', 'No Sure', 'Yes', 'Yes', 'No', 'Yes', 'No']
set([u'coolidge', u'calvin', u'.'])

Was Calvin Coolidge Republican?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Calvin_Coolidge
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a9.txt

No
_____________________________ test_yesno[param37] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156d72d8>, (<src.tfidf.TF_IDF object at 0x11240ded0>, set(['.', 'calvin', 'coolidge'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156d72d8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.2916489839553833, {u'tokens': [u'Did', u'he', u'support', u'these', u'measures', u'while', u'president', u'?'], u'lemmas': [u'do', u'he', u'support', u'these', u'measure', u'while', u'president', u'?'], u'pos': [u'VBD', u'PRP', u'VB', u'DT', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[26681, 26684], [26685, 26687], [26688, 26695], [26696, 26701], [26702, 26710], [26711, 26716], [26717, 26726], [26726, 26727]]}) 
answer: set([u'massachusett', u'governor'])
candidate Sentence: (0.27665677666664124, {u'tokens': [u'Fuess', u',', u'145', u'Coolidge', u"'s", u'duties', u'as', u'lieutenant', u'governor', u'were', u'few', u';', u'in', u'Massachusetts', u',', u'the', u'lieutenant', u'governor', u'does', u'not', u'preside', u'over', u'the', u'state', u'Senate', u',', u'although', u'Coolidge', u'did', u'become', u'an', u'ex', u'officio', u'member', u'of', u'the', u'governor', u"'s", u'cabinet', u'.'], u'lemmas': [u'Fuess', u',', u'145', u'Coolidge', u"'s", u'duty', u'as', u'lieutenant', u'governor', u'be', u'few', u';', u'in', u'Massachusetts', u',', u'the', u'lieutenant', u'governor', u'do', u'not', u'preside', u'over', u'the', u'state', u'Senate', u',', u'although', u'Coolidge', u'do', u'become', u'a', u'ex', u'officio', u'member', u'of', u'the', u'governor', u"'s", u'cabinet', u'.'], u'pos': [u'NNP', u',', u'CD', u'NNP', u'POS', u'NNS', u'IN', u'NN', u'NN', u'VBD', u'JJ', u':', u'IN', u'NNP', u',', u'DT', u'NN', u'NN', u'VBZ', u'RB', u'VB', u'IN', u'DT', u'NN', u'NNP', u',', u'IN', u'NNP', u'VBD', u'VB', u'DT', u'FW', u'FW', u'NN', u'IN', u'DT', u'NN', u'POS', u'NN', u'.'], u'char_offsets': [[12533, 12538], [12538, 12539], [12540, 12543], [12544, 12552], [12552, 12554], [12555, 12561], [12562, 12564], [12565, 12575], [12576, 12584], [12585, 12589], [12590, 12593], [12593, 12594], [12595, 12597], [12598, 12611], [12611, 12612], [12613, 12616], [12617, 12627], [12628, 12636], [12637, 12641], [12642, 12645], [12646, 12653], [12654, 12658], [12659, 12662], [12663, 12668], [12669, 12675], [12675, 12676], [12677, 12685], [12686, 12694], [12695, 12698], [12699, 12705], [12706, 12708], [12709, 12711], [12712, 12719], [12720, 12726], [12727, 12729], [12730, 12733], [12734, 12742], [12742, 12744], [12745, 12752], [12752, 12753]]}) 
answer: set([])
candidate Sentence: (0.23515024781227112, {u'tokens': [u'Sobel', u',', u'107110', u'Coolidge', u'was', u'unopposed', u'for', u'the', u'Republican', u'nomination', u'for', u'Governor', u'of', u'Massachusetts', u'in', u'1918', u'.'], u'lemmas': [u'Sobel', u',', u'107110', u'Coolidge', u'be', u'unoppose', u'for', u'the', u'republican', u'nomination', u'for', u'governor', u'of', u'Massachusetts', u'in', u'1918', u'.'], u'pos': [u'NNP', u',', u'CD', u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'IN', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[13160, 13165], [13165, 13166], [13167, 13173], [13174, 13182], [13183, 13186], [13187, 13196], [13197, 13200], [13201, 13204], [13205, 13215], [13216, 13226], [13227, 13230], [13231, 13239], [13240, 13242], [13243, 13256], [13257, 13259], [13260, 13264], [13264, 13265]]}) 
answer: set([])
candidate Sentence: (0.20293503999710083, {u'tokens': [u'Have', u'faith', u'in', u'Massachusetts', u';', u'a', u'collection', u'of', u'speeches', u'and', u'messages', u'*', u'Coolidge', u',', u'Calvin', u'.'], u'lemmas': [u'have', u'faith', u'in', u'Massachusetts', u';', u'a', u'collection', u'of', u'speech', u'and', u'message', u'*', u'Coolidge', u',', u'Calvin', u'.'], u'pos': [u'VBP', u'NN', u'IN', u'NNP', u':', u'DT', u'NN', u'IN', u'NNS', u'CC', u'NNS', u'SYM', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[36631, 36635], [36636, 36641], [36642, 36644], [36645, 36658], [36658, 36659], [36660, 36661], [36662, 36672], [36673, 36675], [36676, 36684], [36685, 36688], [36689, 36697], [36698, 36699], [36701, 36709], [36709, 36710], [36711, 36717], [36717, 36718]]}) 
answer: set([u'governor'])
candidate Sentence: (0.19673296809196472, {u'tokens': [u'Grace', u"'s", u'reply', u'was', u'``', u'Did', u'you', u'marry', u'me', u'to', u'darn', u'your', u'socks', u'?', u"''"], u'lemmas': [u'Grace', u"'s", u'reply', u'be', u'``', u'do', u'you', u'marry', u'I', u'to', u'darn', u'you', u'sock', u'?', u"''"], u'pos': [u'NNP', u'POS', u'NN', u'VBD', u'``', u'VBD', u'PRP', u'VB', u'PRP', u'TO', u'JJ', u'PRP$', u'NNS', u'.', u"''"], u'char_offsets': [[5703, 5708], [5708, 5710], [5711, 5716], [5717, 5720], [5721, 5722], [5722, 5725], [5726, 5729], [5730, 5735], [5736, 5738], [5739, 5741], [5742, 5746], [5747, 5751], [5752, 5757], [5757, 5758], [5758, 5759]]}) 
answer: set([u'massachusett', u'governor'])
candidate Sentence: (0.18892699480056763, {u'tokens': [u'A', u'lawyer', u'from', u'Vermont', u',', u'Coolidge', u'worked', u'his', u'way', u'up', u'the', u'ladder', u'of', u'Massachusetts', u'state', u'politics', u',', u'eventually', u'becoming', u'governor', u'of', u'that', u'state', u'.'], u'lemmas': [u'a', u'lawyer', u'from', u'Vermont', u',', u'Coolidge', u'work', u'he', u'way', u'up', u'the', u'ladder', u'of', u'Massachusetts', u'state', u'politics', u',', u'eventually', u'become', u'governor', u'of', u'that', u'state', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NNP', u',', u'NNP', u'VBD', u'PRP$', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NN', u'NNS', u',', u'RB', u'VBG', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[160, 161], [162, 168], [169, 173], [174, 181], [181, 182], [183, 191], [192, 198], [199, 202], [203, 206], [207, 209], [210, 213], [214, 220], [221, 223], [224, 237], [238, 243], [244, 252], [252, 253], [254, 264], [265, 273], [274, 282], [283, 285], [286, 290], [291, 296], [296, 297]]}) 
answer: set([])
candidate Sentence: (0.16933093965053558, {u'tokens': [u'Hannaford', u',', u'169', u'It', u'was', u'also', u'Parker', u'who', u',', u'upon', u'learning', u'that', u'Coolidge', u'had', u'died', u',', u'reportedly', u'remarked', u',', u'``', u'How', u'can', u'they', u'tell', u'?', u"''"], u'lemmas': [u'Hannaford', u',', u'169', u'it', u'be', u'also', u'Parker', u'who', u',', u'upon', u'learn', u'that', u'Coolidge', u'have', u'die', u',', u'reportedly', u'remark', u',', u'``', u'how', u'can', u'they', u'tell', u'?', u"''"], u'pos': [u'NNP', u',', u'CD', u'PRP', u'VBD', u'RB', u'NNP', u'WP', u',', u'IN', u'VBG', u'IN', u'NNP', u'VBD', u'VBN', u',', u'RB', u'VBD', u',', u'``', u'WRB', u'MD', u'PRP', u'VB', u'.', u"''"], u'char_offsets': [[20615, 20624], [20624, 20625], [20626, 20629], [20631, 20633], [20634, 20637], [20638, 20642], [20643, 20649], [20650, 20653], [20653, 20654], [20655, 20659], [20660, 20668], [20669, 20673], [20674, 20682], [20683, 20686], [20687, 20691], [20691, 20692], [20693, 20703], [20704, 20712], [20712, 20713], [20714, 20715], [20715, 20718], [20719, 20722], [20723, 20727], [20728, 20732], [20732, 20733], [20733, 20734]]}) 
answer: set([u'massachusett', u'governor'])
candidate Sentence: (0.13763834536075592, {u'tokens': [u'*', u'The', u'SS', u'President', u'Coolidge', u'*', u'Extensive', u'essay', u'on', u'Calvin', u'Coolidge', u'and', u'shorter', u'essays', u'on', u'each', u'member', u'of', u'his', u'cabinet', u'and', u'First', u'Lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'Calvin', u'Coolidge', u'birthplace', u',', u'a', u'Vermont', u'State', u'Historic', u'Site', u'*', u'Official', u'White', u'House', u'biography', u'*', u'Audio', u'clips', u'of', u'Coolidge', u"'s", u'speeches', u'*', u'Calvin', u'Coolidge', u'Memorial', u'Foundation', u'*', u'Calvin', u'Coolidge', u'Presidential', u'Library', u'&', u'Museum', u'at', u'Forbes', u'Library', u',', u'Northampton', u',', u'MA', u'*', u'Calvin', u'Coolidge', u'official', u'Commonwealth', u'of', u'Massachusetts', u'Governor', u'Biography', u'*', u'Prosperity', u'and', u'Thrift', u':', u'The', u'Coolidge', u'Era', u'at', u'the', u'Library', u'of', u'Congress', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'Progressive', u'Party', u'-LRB-', u'United', u'States', u',', u'1912', u'-RRB-', u'Seventeenth', u'Amendment', u'to', u'the', u'United', u'States', u'Constitution', u'United', u'States', u'presidential', u'election', u',', u'1912', u'Progressive', u'Party', u'-LRB-', u'United', u'States', u',', u'1912', u'-RRB-', u'President', u'of', u'the', u'Massachusetts', u'Senate', u'List', u'of', u'Governors', u'of', u'Massachusetts', u'Eighteenth', u'Amendment', u'to', u'the', u'United', u'States', u'Constitution', u'Vice', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'District', u'Court', u'for', u'the', u'District', u'of', u'Columbia', u'White', u'House', u'Chief', u'of', u'Staff', u'Robert', u'M.', u'La', u'Follette', u',', u'Sr.', u'.'], u'lemmas': [u'*', u'the', u'ss', u'President', u'Coolidge', u'*', u'extensive', u'essay', u'on', u'Calvin', u'Coolidge', u'and', u'shorter', u'essay', u'on', u'each', u'member', u'of', u'he', u'cabinet', u'and', u'first', u'lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'Calvin', u'Coolidge', u'birthplace', u',', u'a', u'Vermont', u'State', u'Historic', u'site', u'*', u'Official', u'White', u'House', u'biography', u'*', u'Audio', u'clip', u'of', u'Coolidge', u"'s", u'speech', u'*', u'Calvin', u'Coolidge', u'Memorial', u'Foundation', u'*', u'Calvin', u'Coolidge', u'Presidential', u'Library', u'&', u'Museum', u'at', u'Forbes', u'Library', u',', u'Northampton', u',', u'MA', u'*', u'Calvin', u'Coolidge', u'official', u'Commonwealth', u'of', u'Massachusetts', u'Governor', u'biography', u'*', u'prosperity', u'and', u'thrift', u':', u'the', u'Coolidge', u'era', u'at', u'the', u'Library', u'of', u'Congress', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'Progressive', u'Party', u'-lrb-', u'United', u'States', u',', u'1912', u'-rrb-', u'Seventeenth', u'Amendment', u'to', u'the', u'United', u'States', u'Constitution', u'United', u'States', u'presidential', u'election', u',', u'1912', u'Progressive', u'Party', u'-lrb-', u'United', u'States', u',', u'1912', u'-rrb-', u'President', u'of', u'the', u'Massachusetts', u'Senate', u'list', u'of', u'governor', u'of', u'Massachusetts', u'Eighteenth', u'Amendment', u'to', u'the', u'United', u'States', u'Constitution', u'Vice', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'District', u'Court', u'for', u'the', u'District', u'of', u'Columbia', u'White', u'House', u'Chief', u'of', u'Staff', u'Robert', u'M.', u'La', u'Follette', u',', u'Sr.', u'.'], u'pos': [u'SYM', u'DT', u'NN', u'NNP', u'NNP', u'SYM', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'CC', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNPS', u'SYM', u'NNP', u'NNP', u'NN', u',', u'DT', u'NNP', u'NNP', u'NNP', u'NN', u'SYM', u'NNP', u'NNP', u'NNP', u'NN', u'SYM', u'NNP', u'NNS', u'IN', u'NNP', u'POS', u'NNS', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u'IN', u'NNP', u'NNP', u',', u'NNP', u',', u'NNP', u'SYM', u'NNP', u'NNP', u'JJ', u'NNP', u'IN', u'NNP', u'NNP', u'NN', u'SYM', u'NN', u'CC', u'NN', u':', u'DT', u'NNP', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNPS', u',', u'CD', u'-RRB-', u'NNP', u'NNP', u'TO', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'NNPS', u'JJ', u'NN', u',', u'CD', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNPS', u',', u'CD', u'-RRB-', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'NNP', u'TO', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNPS', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[38108, 38109], [38110, 38113], [38114, 38116], [38117, 38126], [38127, 38135], [38136, 38137], [38139, 38148], [38149, 38154], [38155, 38157], [38158, 38164], [38165, 38173], [38174, 38177], [38178, 38185], [38186, 38192], [38193, 38195], [38196, 38200], [38201, 38207], [38208, 38210], [38211, 38214], [38215, 38222], [38223, 38226], [38227, 38232], [38233, 38237], [38238, 38242], [38243, 38246], [38247, 38253], [38254, 38260], [38261, 38263], [38264, 38270], [38271, 38278], [38279, 38280], [38282, 38288], [38289, 38297], [38298, 38308], [38308, 38309], [38310, 38311], [38312, 38319], [38320, 38325], [38326, 38334], [38335, 38339], [38340, 38341], [38343, 38351], [38352, 38357], [38358, 38363], [38364, 38373], [38374, 38375], [38377, 38382], [38383, 38388], [38389, 38391], [38392, 38400], [38400, 38402], [38403, 38411], [38412, 38413], [38415, 38421], [38422, 38430], [38431, 38439], [38440, 38450], [38451, 38452], [38454, 38460], [38461, 38469], [38470, 38482], [38483, 38490], [38491, 38492], [38493, 38499], [38500, 38502], [38503, 38509], [38510, 38517], [38517, 38518], [38519, 38530], [38530, 38531], [38532, 38534], [38535, 38536], [38538, 38544], [38545, 38553], [38554, 38562], [38563, 38575], [38576, 38578], [38579, 38592], [38593, 38601], [38602, 38611], [38612, 38613], [38615, 38625], [38626, 38629], [38630, 38636], [38636, 38637], [38638, 38641], [38642, 38650], [38651, 38654], [38655, 38657], [38658, 38661], [38662, 38669], [38670, 38672], [38673, 38681], [38682, 38691], [38692, 38694], [38695, 38698], [38699, 38705], [38706, 38712], [38713, 38717], [38718, 38727], [38728, 38730], [38731, 38734], [38735, 38741], [38742, 38748], [38749, 38758], [38759, 38761], [38762, 38765], [38766, 38772], [38773, 38779], [38780, 38784], [38785, 38794], [38795, 38797], [38798, 38801], [38802, 38808], [38809, 38815], [38816, 38827], [38828, 38833], [38834, 38835], [38835, 38841], [38842, 38848], [38848, 38849], [38850, 38854], [38854, 38855], [38856, 38867], [38868, 38877], [38878, 38880], [38881, 38884], [38885, 38891], [38892, 38898], [38899, 38911], [38912, 38918], [38919, 38925], [38926, 38938], [38939, 38947], [38947, 38948], [38949, 38953], [38954, 38965], [38966, 38971], [38972, 38973], [38973, 38979], [38980, 38986], [38986, 38987], [38988, 38992], [38992, 38993], [38994, 39003], [39004, 39006], [39007, 39010], [39011, 39024], [39025, 39031], [39032, 39036], [39037, 39039], [39040, 39049], [39050, 39052], [39053, 39066], [39067, 39077], [39078, 39087], [39088, 39090], [39091, 39094], [39095, 39101], [39102, 39108], [39109, 39121], [39122, 39126], [39127, 39136], [39137, 39139], [39140, 39143], [39144, 39150], [39151, 39157], [39158, 39164], [39165, 39171], [39172, 39180], [39181, 39186], [39187, 39190], [39191, 39194], [39195, 39203], [39204, 39206], [39207, 39215], [39216, 39221], [39222, 39227], [39228, 39233], [39234, 39236], [39237, 39242], [39243, 39249], [39250, 39252], [39253, 39255], [39256, 39264], [39264, 39265], [39266, 39268], [39268, 39269]]}) 
answer: set([])
candidate Sentence: (0.1374695897102356, {u'tokens': [u'Have', u'Faith', u'in', u'Massachusetts', u':', u'A', u'Collection', u'of', u'Speeches', u'And', u'Messages', u'by', u'Calvin', u'Coolidge', u',', u'1919', u',', u'ISBN', u'1417926082', u'.'], u'lemmas': [u'have', u'faith', u'in', u'Massachusetts', u':', u'A', u'Collection', u'of', u'Speeches', u'and', u'Messages', u'by', u'Calvin', u'Coolidge', u',', u'1919', u',', u'ISBN', u'1417926082', u'.'], u'pos': [u'VBP', u'NN', u'IN', u'NNP', u':', u'NNP', u'NNP', u'IN', u'NNPS', u'CC', u'NNPS', u'IN', u'NNP', u'NNP', u',', u'CD', u',', u'NNP', u'CD', u'.'], u'char_offsets': [[11315, 11319], [11320, 11325], [11326, 11328], [11329, 11342], [11342, 11343], [11344, 11345], [11346, 11356], [11357, 11359], [11360, 11368], [11369, 11372], [11373, 11381], [11382, 11384], [11385, 11391], [11392, 11400], [11400, 11401], [11402, 11406], [11406, 11407], [11408, 11412], [11413, 11423], [11423, 11424]]}) 
answer: set([u'governor'])
['No', 'No Sure', 'Yes', 'No', 'No', 'Yes', 'No', 'Yes', 'No']
set([u'coolidge', u'calvin', u'.'])

Was Calvin Coolidge a governor of Massachusetts?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Calvin_Coolidge
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a9.txt

No
_____________________________ test_yesno[param38] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156d7368>, (<src.tfidf.TF_IDF object at 0x11240ded0>, set(['.', 'calvin', 'coolidge'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156d7368>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.2916489839553833, {u'tokens': [u'Did', u'he', u'support', u'these', u'measures', u'while', u'president', u'?'], u'lemmas': [u'do', u'he', u'support', u'these', u'measure', u'while', u'president', u'?'], u'pos': [u'VBD', u'PRP', u'VB', u'DT', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[26681, 26684], [26685, 26687], [26688, 26695], [26696, 26701], [26702, 26710], [26711, 26716], [26717, 26726], [26726, 26727]]}) 
answer: set([u'massachusett', u'governor'])
candidate Sentence: (0.27665677666664124, {u'tokens': [u'Fuess', u',', u'145', u'Coolidge', u"'s", u'duties', u'as', u'lieutenant', u'governor', u'were', u'few', u';', u'in', u'Massachusetts', u',', u'the', u'lieutenant', u'governor', u'does', u'not', u'preside', u'over', u'the', u'state', u'Senate', u',', u'although', u'Coolidge', u'did', u'become', u'an', u'ex', u'officio', u'member', u'of', u'the', u'governor', u"'s", u'cabinet', u'.'], u'lemmas': [u'Fuess', u',', u'145', u'Coolidge', u"'s", u'duty', u'as', u'lieutenant', u'governor', u'be', u'few', u';', u'in', u'Massachusetts', u',', u'the', u'lieutenant', u'governor', u'do', u'not', u'preside', u'over', u'the', u'state', u'Senate', u',', u'although', u'Coolidge', u'do', u'become', u'a', u'ex', u'officio', u'member', u'of', u'the', u'governor', u"'s", u'cabinet', u'.'], u'pos': [u'NNP', u',', u'CD', u'NNP', u'POS', u'NNS', u'IN', u'NN', u'NN', u'VBD', u'JJ', u':', u'IN', u'NNP', u',', u'DT', u'NN', u'NN', u'VBZ', u'RB', u'VB', u'IN', u'DT', u'NN', u'NNP', u',', u'IN', u'NNP', u'VBD', u'VB', u'DT', u'FW', u'FW', u'NN', u'IN', u'DT', u'NN', u'POS', u'NN', u'.'], u'char_offsets': [[12533, 12538], [12538, 12539], [12540, 12543], [12544, 12552], [12552, 12554], [12555, 12561], [12562, 12564], [12565, 12575], [12576, 12584], [12585, 12589], [12590, 12593], [12593, 12594], [12595, 12597], [12598, 12611], [12611, 12612], [12613, 12616], [12617, 12627], [12628, 12636], [12637, 12641], [12642, 12645], [12646, 12653], [12654, 12658], [12659, 12662], [12663, 12668], [12669, 12675], [12675, 12676], [12677, 12685], [12686, 12694], [12695, 12698], [12699, 12705], [12706, 12708], [12709, 12711], [12712, 12719], [12720, 12726], [12727, 12729], [12730, 12733], [12734, 12742], [12742, 12744], [12745, 12752], [12752, 12753]]}) 
answer: set([])
candidate Sentence: (0.23515024781227112, {u'tokens': [u'Sobel', u',', u'107110', u'Coolidge', u'was', u'unopposed', u'for', u'the', u'Republican', u'nomination', u'for', u'Governor', u'of', u'Massachusetts', u'in', u'1918', u'.'], u'lemmas': [u'Sobel', u',', u'107110', u'Coolidge', u'be', u'unoppose', u'for', u'the', u'republican', u'nomination', u'for', u'governor', u'of', u'Massachusetts', u'in', u'1918', u'.'], u'pos': [u'NNP', u',', u'CD', u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'IN', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[13160, 13165], [13165, 13166], [13167, 13173], [13174, 13182], [13183, 13186], [13187, 13196], [13197, 13200], [13201, 13204], [13205, 13215], [13216, 13226], [13227, 13230], [13231, 13239], [13240, 13242], [13243, 13256], [13257, 13259], [13260, 13264], [13264, 13265]]}) 
answer: set([])
candidate Sentence: (0.20293503999710083, {u'tokens': [u'Have', u'faith', u'in', u'Massachusetts', u';', u'a', u'collection', u'of', u'speeches', u'and', u'messages', u'*', u'Coolidge', u',', u'Calvin', u'.'], u'lemmas': [u'have', u'faith', u'in', u'Massachusetts', u';', u'a', u'collection', u'of', u'speech', u'and', u'message', u'*', u'Coolidge', u',', u'Calvin', u'.'], u'pos': [u'VBP', u'NN', u'IN', u'NNP', u':', u'DT', u'NN', u'IN', u'NNS', u'CC', u'NNS', u'SYM', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[36631, 36635], [36636, 36641], [36642, 36644], [36645, 36658], [36658, 36659], [36660, 36661], [36662, 36672], [36673, 36675], [36676, 36684], [36685, 36688], [36689, 36697], [36698, 36699], [36701, 36709], [36709, 36710], [36711, 36717], [36717, 36718]]}) 
answer: set([u'governor'])
candidate Sentence: (0.19673296809196472, {u'tokens': [u'Grace', u"'s", u'reply', u'was', u'``', u'Did', u'you', u'marry', u'me', u'to', u'darn', u'your', u'socks', u'?', u"''"], u'lemmas': [u'Grace', u"'s", u'reply', u'be', u'``', u'do', u'you', u'marry', u'I', u'to', u'darn', u'you', u'sock', u'?', u"''"], u'pos': [u'NNP', u'POS', u'NN', u'VBD', u'``', u'VBD', u'PRP', u'VB', u'PRP', u'TO', u'JJ', u'PRP$', u'NNS', u'.', u"''"], u'char_offsets': [[5703, 5708], [5708, 5710], [5711, 5716], [5717, 5720], [5721, 5722], [5722, 5725], [5726, 5729], [5730, 5735], [5736, 5738], [5739, 5741], [5742, 5746], [5747, 5751], [5752, 5757], [5757, 5758], [5758, 5759]]}) 
answer: set([u'massachusett', u'governor'])
candidate Sentence: (0.18892699480056763, {u'tokens': [u'A', u'lawyer', u'from', u'Vermont', u',', u'Coolidge', u'worked', u'his', u'way', u'up', u'the', u'ladder', u'of', u'Massachusetts', u'state', u'politics', u',', u'eventually', u'becoming', u'governor', u'of', u'that', u'state', u'.'], u'lemmas': [u'a', u'lawyer', u'from', u'Vermont', u',', u'Coolidge', u'work', u'he', u'way', u'up', u'the', u'ladder', u'of', u'Massachusetts', u'state', u'politics', u',', u'eventually', u'become', u'governor', u'of', u'that', u'state', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NNP', u',', u'NNP', u'VBD', u'PRP$', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NN', u'NNS', u',', u'RB', u'VBG', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[160, 161], [162, 168], [169, 173], [174, 181], [181, 182], [183, 191], [192, 198], [199, 202], [203, 206], [207, 209], [210, 213], [214, 220], [221, 223], [224, 237], [238, 243], [244, 252], [252, 253], [254, 264], [265, 273], [274, 282], [283, 285], [286, 290], [291, 296], [296, 297]]}) 
answer: set([])
candidate Sentence: (0.16933093965053558, {u'tokens': [u'Hannaford', u',', u'169', u'It', u'was', u'also', u'Parker', u'who', u',', u'upon', u'learning', u'that', u'Coolidge', u'had', u'died', u',', u'reportedly', u'remarked', u',', u'``', u'How', u'can', u'they', u'tell', u'?', u"''"], u'lemmas': [u'Hannaford', u',', u'169', u'it', u'be', u'also', u'Parker', u'who', u',', u'upon', u'learn', u'that', u'Coolidge', u'have', u'die', u',', u'reportedly', u'remark', u',', u'``', u'how', u'can', u'they', u'tell', u'?', u"''"], u'pos': [u'NNP', u',', u'CD', u'PRP', u'VBD', u'RB', u'NNP', u'WP', u',', u'IN', u'VBG', u'IN', u'NNP', u'VBD', u'VBN', u',', u'RB', u'VBD', u',', u'``', u'WRB', u'MD', u'PRP', u'VB', u'.', u"''"], u'char_offsets': [[20615, 20624], [20624, 20625], [20626, 20629], [20631, 20633], [20634, 20637], [20638, 20642], [20643, 20649], [20650, 20653], [20653, 20654], [20655, 20659], [20660, 20668], [20669, 20673], [20674, 20682], [20683, 20686], [20687, 20691], [20691, 20692], [20693, 20703], [20704, 20712], [20712, 20713], [20714, 20715], [20715, 20718], [20719, 20722], [20723, 20727], [20728, 20732], [20732, 20733], [20733, 20734]]}) 
answer: set([u'massachusett', u'governor'])
candidate Sentence: (0.13763834536075592, {u'tokens': [u'*', u'The', u'SS', u'President', u'Coolidge', u'*', u'Extensive', u'essay', u'on', u'Calvin', u'Coolidge', u'and', u'shorter', u'essays', u'on', u'each', u'member', u'of', u'his', u'cabinet', u'and', u'First', u'Lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'Calvin', u'Coolidge', u'birthplace', u',', u'a', u'Vermont', u'State', u'Historic', u'Site', u'*', u'Official', u'White', u'House', u'biography', u'*', u'Audio', u'clips', u'of', u'Coolidge', u"'s", u'speeches', u'*', u'Calvin', u'Coolidge', u'Memorial', u'Foundation', u'*', u'Calvin', u'Coolidge', u'Presidential', u'Library', u'&', u'Museum', u'at', u'Forbes', u'Library', u',', u'Northampton', u',', u'MA', u'*', u'Calvin', u'Coolidge', u'official', u'Commonwealth', u'of', u'Massachusetts', u'Governor', u'Biography', u'*', u'Prosperity', u'and', u'Thrift', u':', u'The', u'Coolidge', u'Era', u'at', u'the', u'Library', u'of', u'Congress', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'Progressive', u'Party', u'-LRB-', u'United', u'States', u',', u'1912', u'-RRB-', u'Seventeenth', u'Amendment', u'to', u'the', u'United', u'States', u'Constitution', u'United', u'States', u'presidential', u'election', u',', u'1912', u'Progressive', u'Party', u'-LRB-', u'United', u'States', u',', u'1912', u'-RRB-', u'President', u'of', u'the', u'Massachusetts', u'Senate', u'List', u'of', u'Governors', u'of', u'Massachusetts', u'Eighteenth', u'Amendment', u'to', u'the', u'United', u'States', u'Constitution', u'Vice', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'District', u'Court', u'for', u'the', u'District', u'of', u'Columbia', u'White', u'House', u'Chief', u'of', u'Staff', u'Robert', u'M.', u'La', u'Follette', u',', u'Sr.', u'.'], u'lemmas': [u'*', u'the', u'ss', u'President', u'Coolidge', u'*', u'extensive', u'essay', u'on', u'Calvin', u'Coolidge', u'and', u'shorter', u'essay', u'on', u'each', u'member', u'of', u'he', u'cabinet', u'and', u'first', u'lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'Calvin', u'Coolidge', u'birthplace', u',', u'a', u'Vermont', u'State', u'Historic', u'site', u'*', u'Official', u'White', u'House', u'biography', u'*', u'Audio', u'clip', u'of', u'Coolidge', u"'s", u'speech', u'*', u'Calvin', u'Coolidge', u'Memorial', u'Foundation', u'*', u'Calvin', u'Coolidge', u'Presidential', u'Library', u'&', u'Museum', u'at', u'Forbes', u'Library', u',', u'Northampton', u',', u'MA', u'*', u'Calvin', u'Coolidge', u'official', u'Commonwealth', u'of', u'Massachusetts', u'Governor', u'biography', u'*', u'prosperity', u'and', u'thrift', u':', u'the', u'Coolidge', u'era', u'at', u'the', u'Library', u'of', u'Congress', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'Vice', u'President', u'of', u'the', u'United', u'States', u'Progressive', u'Party', u'-lrb-', u'United', u'States', u',', u'1912', u'-rrb-', u'Seventeenth', u'Amendment', u'to', u'the', u'United', u'States', u'Constitution', u'United', u'States', u'presidential', u'election', u',', u'1912', u'Progressive', u'Party', u'-lrb-', u'United', u'States', u',', u'1912', u'-rrb-', u'President', u'of', u'the', u'Massachusetts', u'Senate', u'list', u'of', u'governor', u'of', u'Massachusetts', u'Eighteenth', u'Amendment', u'to', u'the', u'United', u'States', u'Constitution', u'Vice', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'District', u'Court', u'for', u'the', u'District', u'of', u'Columbia', u'White', u'House', u'Chief', u'of', u'Staff', u'Robert', u'M.', u'La', u'Follette', u',', u'Sr.', u'.'], u'pos': [u'SYM', u'DT', u'NN', u'NNP', u'NNP', u'SYM', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'CC', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNPS', u'SYM', u'NNP', u'NNP', u'NN', u',', u'DT', u'NNP', u'NNP', u'NNP', u'NN', u'SYM', u'NNP', u'NNP', u'NNP', u'NN', u'SYM', u'NNP', u'NNS', u'IN', u'NNP', u'POS', u'NNS', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u'IN', u'NNP', u'NNP', u',', u'NNP', u',', u'NNP', u'SYM', u'NNP', u'NNP', u'JJ', u'NNP', u'IN', u'NNP', u'NNP', u'NN', u'SYM', u'NN', u'CC', u'NN', u':', u'DT', u'NNP', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNPS', u',', u'CD', u'-RRB-', u'NNP', u'NNP', u'TO', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'NNPS', u'JJ', u'NN', u',', u'CD', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNPS', u',', u'CD', u'-RRB-', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'NNP', u'TO', u'DT', u'NNP', u'NNPS', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNPS', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[38108, 38109], [38110, 38113], [38114, 38116], [38117, 38126], [38127, 38135], [38136, 38137], [38139, 38148], [38149, 38154], [38155, 38157], [38158, 38164], [38165, 38173], [38174, 38177], [38178, 38185], [38186, 38192], [38193, 38195], [38196, 38200], [38201, 38207], [38208, 38210], [38211, 38214], [38215, 38222], [38223, 38226], [38227, 38232], [38233, 38237], [38238, 38242], [38243, 38246], [38247, 38253], [38254, 38260], [38261, 38263], [38264, 38270], [38271, 38278], [38279, 38280], [38282, 38288], [38289, 38297], [38298, 38308], [38308, 38309], [38310, 38311], [38312, 38319], [38320, 38325], [38326, 38334], [38335, 38339], [38340, 38341], [38343, 38351], [38352, 38357], [38358, 38363], [38364, 38373], [38374, 38375], [38377, 38382], [38383, 38388], [38389, 38391], [38392, 38400], [38400, 38402], [38403, 38411], [38412, 38413], [38415, 38421], [38422, 38430], [38431, 38439], [38440, 38450], [38451, 38452], [38454, 38460], [38461, 38469], [38470, 38482], [38483, 38490], [38491, 38492], [38493, 38499], [38500, 38502], [38503, 38509], [38510, 38517], [38517, 38518], [38519, 38530], [38530, 38531], [38532, 38534], [38535, 38536], [38538, 38544], [38545, 38553], [38554, 38562], [38563, 38575], [38576, 38578], [38579, 38592], [38593, 38601], [38602, 38611], [38612, 38613], [38615, 38625], [38626, 38629], [38630, 38636], [38636, 38637], [38638, 38641], [38642, 38650], [38651, 38654], [38655, 38657], [38658, 38661], [38662, 38669], [38670, 38672], [38673, 38681], [38682, 38691], [38692, 38694], [38695, 38698], [38699, 38705], [38706, 38712], [38713, 38717], [38718, 38727], [38728, 38730], [38731, 38734], [38735, 38741], [38742, 38748], [38749, 38758], [38759, 38761], [38762, 38765], [38766, 38772], [38773, 38779], [38780, 38784], [38785, 38794], [38795, 38797], [38798, 38801], [38802, 38808], [38809, 38815], [38816, 38827], [38828, 38833], [38834, 38835], [38835, 38841], [38842, 38848], [38848, 38849], [38850, 38854], [38854, 38855], [38856, 38867], [38868, 38877], [38878, 38880], [38881, 38884], [38885, 38891], [38892, 38898], [38899, 38911], [38912, 38918], [38919, 38925], [38926, 38938], [38939, 38947], [38947, 38948], [38949, 38953], [38954, 38965], [38966, 38971], [38972, 38973], [38973, 38979], [38980, 38986], [38986, 38987], [38988, 38992], [38992, 38993], [38994, 39003], [39004, 39006], [39007, 39010], [39011, 39024], [39025, 39031], [39032, 39036], [39037, 39039], [39040, 39049], [39050, 39052], [39053, 39066], [39067, 39077], [39078, 39087], [39088, 39090], [39091, 39094], [39095, 39101], [39102, 39108], [39109, 39121], [39122, 39126], [39127, 39136], [39137, 39139], [39140, 39143], [39144, 39150], [39151, 39157], [39158, 39164], [39165, 39171], [39172, 39180], [39181, 39186], [39187, 39190], [39191, 39194], [39195, 39203], [39204, 39206], [39207, 39215], [39216, 39221], [39222, 39227], [39228, 39233], [39234, 39236], [39237, 39242], [39243, 39249], [39250, 39252], [39253, 39255], [39256, 39264], [39264, 39265], [39266, 39268], [39268, 39269]]}) 
answer: set([])
candidate Sentence: (0.1374695897102356, {u'tokens': [u'Have', u'Faith', u'in', u'Massachusetts', u':', u'A', u'Collection', u'of', u'Speeches', u'And', u'Messages', u'by', u'Calvin', u'Coolidge', u',', u'1919', u',', u'ISBN', u'1417926082', u'.'], u'lemmas': [u'have', u'faith', u'in', u'Massachusetts', u':', u'A', u'Collection', u'of', u'Speeches', u'and', u'Messages', u'by', u'Calvin', u'Coolidge', u',', u'1919', u',', u'ISBN', u'1417926082', u'.'], u'pos': [u'VBP', u'NN', u'IN', u'NNP', u':', u'NNP', u'NNP', u'IN', u'NNPS', u'CC', u'NNPS', u'IN', u'NNP', u'NNP', u',', u'CD', u',', u'NNP', u'CD', u'.'], u'char_offsets': [[11315, 11319], [11320, 11325], [11326, 11328], [11329, 11342], [11342, 11343], [11344, 11345], [11346, 11356], [11357, 11359], [11360, 11368], [11369, 11372], [11373, 11381], [11382, 11384], [11385, 11391], [11392, 11400], [11400, 11401], [11402, 11406], [11406, 11407], [11408, 11412], [11413, 11423], [11423, 11424]]}) 
answer: set([u'governor'])
['No', 'No Sure', 'Yes', 'No', 'No', 'Yes', 'No', 'Yes', 'No']
set([u'coolidge', u'calvin', u'.'])

Was Calvin Coolidge a governor of Massachusetts?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Calvin_Coolidge
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a9.txt

No
_____________________________ test_yesno[param41] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156dcc20>, (<src.tfidf.TF_IDF object at 0x11240ded0>, set(['.', 'calvin', 'coolidge'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156dcc20>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.59457099437713623, {u'tokens': [u'Sobel', u',', u'107110', u'Coolidge', u'was', u'unopposed', u'for', u'the', u'Republican', u'nomination', u'for', u'Governor', u'of', u'Massachusetts', u'in', u'1918', u'.'], u'lemmas': [u'Sobel', u',', u'107110', u'Coolidge', u'be', u'unoppose', u'for', u'the', u'republican', u'nomination', u'for', u'governor', u'of', u'Massachusetts', u'in', u'1918', u'.'], u'pos': [u'NNP', u',', u'CD', u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'IN', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[13160, 13165], [13165, 13166], [13167, 13173], [13174, 13182], [13183, 13186], [13187, 13196], [13197, 13200], [13201, 13204], [13205, 13215], [13216, 13226], [13227, 13230], [13231, 13239], [13240, 13242], [13243, 13256], [13257, 13259], [13260, 13264], [13264, 13265]]}) 
answer: set([u'oppos'])
candidate Sentence: (0.24752597510814667, {u'tokens': [u'Calvin', u'and', u'Grace', u'Coolidge', u',', u'about', u'1918', u'.'], u'lemmas': [u'Calvin', u'and', u'Grace', u'Coolidge', u',', u'about', u'1918', u'.'], u'pos': [u'NNP', u'CC', u'NNP', u'NNP', u',', u'IN', u'CD', u'.'], u'char_offsets': [[7940, 7946], [7947, 7950], [7951, 7956], [7957, 7965], [7965, 7966], [7967, 7972], [7973, 7977], [7977, 7978]]}) 
answer: set([u'oppos', u'republican', u'nomin', u'governor', u'massachusett'])
candidate Sentence: (0.22691652178764343, {u'tokens': [u'Sobel', u',', u'9092', u'Towards', u'the', u'end', u'of', u'the', u'term', u',', u'many', u'of', u'them', u'were', u'proposing', u'his', u'name', u'for', u'nomination', u'to', u'lieutenant', u'governor', u'.'], u'lemmas': [u'Sobel', u',', u'9092', u'towards', u'the', u'end', u'of', u'the', u'term', u',', u'many', u'of', u'they', u'be', u'propose', u'he', u'name', u'for', u'nomination', u'to', u'lieutenant', u'governor', u'.'], u'pos': [u'NNP', u',', u'CD', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u',', u'JJ', u'IN', u'PRP', u'VBD', u'VBG', u'PRP$', u'NN', u'IN', u'NN', u'TO', u'NN', u'NN', u'.'], u'char_offsets': [[11588, 11593], [11593, 11594], [11595, 11599], [11601, 11608], [11609, 11612], [11613, 11616], [11617, 11619], [11620, 11623], [11624, 11628], [11628, 11629], [11630, 11634], [11635, 11637], [11638, 11642], [11643, 11647], [11648, 11657], [11658, 11661], [11662, 11666], [11667, 11670], [11671, 11681], [11682, 11684], [11685, 11695], [11696, 11704], [11704, 11705]]}) 
answer: set([u'oppos', u'1918', u'republican', u'massachusett'])
candidate Sentence: (0.20164483785629272, {u'tokens': [u'Brandes', u',', u'___', u'Even', u'so', u',', u'Coolidge', u'had', u'no', u'desire', u'to', u'split', u'the', u'party', u'by', u'publicly', u'opposing', u'the', u'popular', u'Commerce', u'Secretary', u"'s", u'nomination', u'.'], u'lemmas': [u'Brandes', u',', u'___', u'even', u'so', u',', u'Coolidge', u'have', u'no', u'desire', u'to', u'split', u'the', u'party', u'by', u'publicly', u'oppose', u'the', u'popular', u'Commerce', u'Secretary', u"'s", u'nomination', u'.'], u'pos': [u'NNP', u',', u'CD', u'RB', u'RB', u',', u'NNP', u'VBD', u'DT', u'NN', u'TO', u'VB', u'DT', u'NN', u'IN', u'RB', u'VBG', u'DT', u'JJ', u'NNP', u'NNP', u'POS', u'NN', u'.'], u'char_offsets': [[32740, 32747], [32747, 32748], [32749, 32752], [32754, 32758], [32759, 32761], [32761, 32762], [32763, 32771], [32772, 32775], [32776, 32778], [32779, 32785], [32786, 32788], [32789, 32794], [32795, 32798], [32799, 32804], [32805, 32807], [32808, 32816], [32817, 32825], [32826, 32829], [32830, 32837], [32838, 32846], [32847, 32856], [32856, 32858], [32859, 32869], [32869, 32870]]}) 
answer: set([u'1918', u'republican', u'massachusett', u'governor'])
candidate Sentence: (0.18643414974212646, {u'tokens': [u'Did', u'he', u'support', u'these', u'measures', u'while', u'president', u'?'], u'lemmas': [u'do', u'he', u'support', u'these', u'measure', u'while', u'president', u'?'], u'pos': [u'VBD', u'PRP', u'VB', u'DT', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[26681, 26684], [26685, 26687], [26688, 26695], [26696, 26701], [26702, 26710], [26711, 26716], [26717, 26726], [26726, 26727]]}) 
answer: set([u'nomin', u'governor', u'1918', u'massachusett', u'oppos', u'republican'])
candidate Sentence: (0.18140672147274017, {u'tokens': [u'Fuess', u',', u'145', u'Coolidge', u"'s", u'duties', u'as', u'lieutenant', u'governor', u'were', u'few', u';', u'in', u'Massachusetts', u',', u'the', u'lieutenant', u'governor', u'does', u'not', u'preside', u'over', u'the', u'state', u'Senate', u',', u'although', u'Coolidge', u'did', u'become', u'an', u'ex', u'officio', u'member', u'of', u'the', u'governor', u"'s", u'cabinet', u'.'], u'lemmas': [u'Fuess', u',', u'145', u'Coolidge', u"'s", u'duty', u'as', u'lieutenant', u'governor', u'be', u'few', u';', u'in', u'Massachusetts', u',', u'the', u'lieutenant', u'governor', u'do', u'not', u'preside', u'over', u'the', u'state', u'Senate', u',', u'although', u'Coolidge', u'do', u'become', u'a', u'ex', u'officio', u'member', u'of', u'the', u'governor', u"'s", u'cabinet', u'.'], u'pos': [u'NNP', u',', u'CD', u'NNP', u'POS', u'NNS', u'IN', u'NN', u'NN', u'VBD', u'JJ', u':', u'IN', u'NNP', u',', u'DT', u'NN', u'NN', u'VBZ', u'RB', u'VB', u'IN', u'DT', u'NN', u'NNP', u',', u'IN', u'NNP', u'VBD', u'VB', u'DT', u'FW', u'FW', u'NN', u'IN', u'DT', u'NN', u'POS', u'NN', u'.'], u'char_offsets': [[12533, 12538], [12538, 12539], [12540, 12543], [12544, 12552], [12552, 12554], [12555, 12561], [12562, 12564], [12565, 12575], [12576, 12584], [12585, 12589], [12590, 12593], [12593, 12594], [12595, 12597], [12598, 12611], [12611, 12612], [12613, 12616], [12617, 12627], [12628, 12636], [12637, 12641], [12642, 12645], [12646, 12653], [12654, 12658], [12659, 12662], [12663, 12668], [12669, 12675], [12675, 12676], [12677, 12685], [12686, 12694], [12695, 12698], [12699, 12705], [12706, 12708], [12709, 12711], [12712, 12719], [12720, 12726], [12727, 12729], [12730, 12733], [12734, 12742], [12742, 12744], [12745, 12752], [12752, 12753]]}) 
answer: set([u'oppos', u'1918', u'republican', u'nomin'])
candidate Sentence: (0.15595558285713196, {u'tokens': [u'He', u'appointed', u'Stone', u'to', u'the', u'Supreme', u'Court', u'in', u'1925', u',', u'and', u'the', u'Senate', u'approved', u'the', u'nomination', u'.'], u'lemmas': [u'he', u'appoint', u'Stone', u'to', u'the', u'Supreme', u'Court', u'in', u'1925', u',', u'and', u'the', u'Senate', u'approve', u'the', u'nomination', u'.'], u'pos': [u'PRP', u'VBD', u'NNP', u'TO', u'DT', u'NNP', u'NNP', u'IN', u'CD', u',', u'CC', u'DT', u'NNP', u'VBD', u'DT', u'NN', u'.'], u'char_offsets': [[34613, 34615], [34616, 34625], [34626, 34631], [34632, 34634], [34635, 34638], [34639, 34646], [34647, 34652], [34653, 34655], [34656, 34660], [34660, 34661], [34662, 34665], [34666, 34669], [34670, 34676], [34677, 34685], [34686, 34689], [34690, 34700], [34700, 34701]]}) 
answer: set([u'oppos', u'1918', u'republican', u'massachusett', u'governor'])
candidate Sentence: (0.14473046362400055, {u'tokens': [u'Although', u'Coolidge', u'himself', u'was', u'opposed', u'to', u'Prohibition', u',', u'he', u'felt', u'constrained', u'to', u'veto', u'the', u'bill', u'.'], u'lemmas': [u'although', u'Coolidge', u'himself', u'be', u'oppose', u'to', u'Prohibition', u',', u'he', u'feel', u'constrain', u'to', u'veto', u'the', u'bill', u'.'], u'pos': [u'IN', u'NNP', u'PRP', u'VBD', u'VBN', u'TO', u'NNP', u',', u'PRP', u'VBD', u'VBN', u'TO', u'VB', u'DT', u'NN', u'.'], u'char_offsets': [[17826, 17834], [17835, 17843], [17844, 17851], [17852, 17855], [17856, 17863], [17864, 17866], [17867, 17878], [17878, 17879], [17880, 17882], [17883, 17887], [17888, 17899], [17900, 17902], [17903, 17907], [17908, 17911], [17912, 17916], [17916, 17917]]}) 
answer: set([u'1918', u'republican', u'nomin', u'governor', u'massachusett'])
candidate Sentence: (0.13702306151390076, {u'tokens': [u'In', u'1906', u'the', u'local', u'Republican', u'committee', u'nominated', u'Coolidge', u'for', u'election', u'to', u'the', u'state', u'House', u'of', u'Representatives', u'.'], u'lemmas': [u'in', u'1906', u'the', u'local', u'republican', u'committee', u'nominate', u'Coolidge', u'for', u'election', u'to', u'the', u'state', u'House', u'of', u'Representatives', u'.'], u'pos': [u'IN', u'CD', u'DT', u'JJ', u'JJ', u'NN', u'VBD', u'NNP', u'IN', u'NN', u'TO', u'DT', u'NN', u'NNP', u'IN', u'NNPS', u'.'], u'char_offsets': [[7979, 7981], [7982, 7986], [7987, 7990], [7991, 7996], [7997, 8007], [8008, 8017], [8018, 8027], [8028, 8036], [8037, 8040], [8041, 8049], [8050, 8052], [8053, 8056], [8057, 8062], [8063, 8068], [8069, 8071], [8072, 8087], [8087, 8088]]}) 
answer: set([u'oppos', u'1918', u'massachusett', u'governor'])
candidate Sentence: (0.12904413044452667, {u'tokens': [u'Coolidge', u'was', u'the', u'leading', u'vote-getter', u'in', u'the', u'Republican', u'primary', u',', u'and', u'balanced', u'the', u'Republican', u'ticket', u'by', u'adding', u'a', u'western', u'presence', u'to', u'McCall', u"'s", u'eastern', u'base', u'of', u'support', u'.'], u'lemmas': [u'Coolidge', u'be', u'the', u'lead', u'vote-getter', u'in', u'the', u'republican', u'primary', u',', u'and', u'balance', u'the', u'republican', u'ticket', u'by', u'add', u'a', u'western', u'presence', u'to', u'McCall', u"'s", u'eastern', u'base', u'of', u'support', u'.'], u'pos': [u'NNP', u'VBD', u'DT', u'VBG', u'NN', u'IN', u'DT', u'JJ', u'JJ', u',', u'CC', u'VBD', u'DT', u'JJ', u'NN', u'IN', u'VBG', u'DT', u'JJ', u'NN', u'TO', u'NNP', u'POS', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[12246, 12254], [12255, 12258], [12259, 12262], [12263, 12270], [12271, 12282], [12283, 12285], [12286, 12289], [12290, 12300], [12301, 12308], [12308, 12309], [12310, 12313], [12314, 12322], [12323, 12326], [12327, 12337], [12338, 12344], [12345, 12347], [12348, 12354], [12355, 12356], [12357, 12364], [12365, 12373], [12374, 12376], [12377, 12383], [12383, 12385], [12386, 12393], [12394, 12398], [12399, 12401], [12402, 12409], [12409, 12410]]}) 
answer: set([u'oppos', u'1918', u'nomin', u'governor', u'massachusett'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'coolidge', u'calvin', u'.'])

Was Coolidge opposed in the Republican nomination for Governor of Massachusetts in 1918?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Calvin_Coolidge
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a9.txt

No
_____________________________ test_yesno[param45] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156dd518>, (<src.tfidf.TF_IDF object at 0x1144afcd0>, set(['.', 'canada'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x1156dd518>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.69163888692855835, {u'tokens': [u'France', u'ceded', u'nearly', u'all', u'of', u'its', u'colonies', u'in', u'North', u'America', u'in', u'1763', u'after', u'the', u'Seven', u'Years', u'War', u'.'], u'lemmas': [u'France', u'cede', u'nearly', u'all', u'of', u'its', u'colony', u'in', u'North', u'America', u'in', u'1763', u'after', u'the', u'seven', u'year', u'War', u'.'], u'pos': [u'NNP', u'VBD', u'RB', u'DT', u'IN', u'PRP$', u'NNS', u'IN', u'NNP', u'NNP', u'IN', u'CD', u'IN', u'DT', u'CD', u'NNS', u'NNP', u'.'], u'char_offsets': [[498, 504], [505, 510], [511, 517], [518, 521], [522, 524], [525, 528], [529, 537], [538, 540], [541, 546], [547, 554], [555, 557], [558, 562], [563, 568], [569, 572], [573, 578], [579, 584], [585, 588], [588, 589]]}) 
answer: set([u'europ'])
candidate Sentence: (0.20214846730232239, {u'tokens': [u'Mainland', u'Nova', u'Scotia', u'came', u'under', u'British', u'rule', u'with', u'the', u'Treaty', u'of', u'Utrecht', u'-LRB-', u'1713', u'-RRB-', u';', u'the', u'Treaty', u'of', u'Paris', u'-LRB-', u'1763', u'-RRB-', u'ceded', u'Canada', u'and', u'most', u'of', u'New', u'France', u'to', u'Britain', u'following', u'the', u'Seven', u'Years', u"'", u'War', u'.'], u'lemmas': [u'mainland', u'Nova', u'Scotia', u'come', u'under', u'british', u'rule', u'with', u'the', u'Treaty', u'of', u'Utrecht', u'-lrb-', u'1713', u'-rrb-', u';', u'the', u'Treaty', u'of', u'Paris', u'-lrb-', u'1763', u'-rrb-', u'cede', u'Canada', u'and', u'most', u'of', u'New', u'France', u'to', u'Britain', u'follow', u'the', u'seven', u'year', u"'", u'war', u'.'], u'pos': [u'NN', u'NNP', u'NNP', u'VBD', u'IN', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'-LRB-', u'CD', u'-RRB-', u':', u'DT', u'NNP', u'IN', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'VBD', u'NNP', u'CC', u'JJS', u'IN', u'NNP', u'NNP', u'TO', u'NNP', u'VBG', u'DT', u'CD', u'NNS', u'POS', u'NN', u'.'], u'char_offsets': [[4357, 4365], [4366, 4370], [4371, 4377], [4378, 4382], [4383, 4388], [4389, 4396], [4397, 4401], [4402, 4406], [4407, 4410], [4411, 4417], [4418, 4420], [4421, 4428], [4429, 4430], [4430, 4434], [4434, 4435], [4435, 4436], [4437, 4440], [4441, 4447], [4448, 4450], [4451, 4456], [4457, 4458], [4458, 4462], [4462, 4463], [4464, 4469], [4470, 4476], [4477, 4480], [4481, 4485], [4486, 4488], [4489, 4492], [4493, 4499], [4500, 4502], [4503, 4510], [4511, 4520], [4521, 4524], [4525, 4530], [4531, 4536], [4536, 4537], [4538, 4541], [4541, 4542]]}) 
answer: set([u'coloni', u'europ', u'nearli'])
candidate Sentence: (0.15476611256599426, {u'tokens': [u'The', u'Royal', u'Proclamation', u'-LRB-', u'1763', u'-RRB-', u'carved', u'the', u'Province', u'of', u'Quebec', u'out', u'of', u'New', u'France', u'and', u'annexed', u'Cape', u'Breton', u'Island', u'to', u'Nova', u'Scotia', u'.'], u'lemmas': [u'the', u'Royal', u'Proclamation', u'-lrb-', u'1763', u'-rrb-', u'carve', u'the', u'Province', u'of', u'Quebec', u'out', u'of', u'New', u'France', u'and', u'annex', u'Cape', u'Breton', u'Island', u'to', u'Nova', u'Scotia', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'VBD', u'DT', u'NNP', u'IN', u'NNP', u'IN', u'IN', u'NNP', u'NNP', u'CC', u'VBD', u'NNP', u'NNP', u'NNP', u'TO', u'NNP', u'NNP', u'.'], u'char_offsets': [[4543, 4546], [4547, 4552], [4553, 4565], [4566, 4567], [4567, 4571], [4571, 4572], [4573, 4579], [4580, 4583], [4584, 4592], [4593, 4595], [4596, 4602], [4603, 4606], [4607, 4609], [4610, 4613], [4614, 4620], [4621, 4624], [4625, 4632], [4633, 4637], [4638, 4644], [4645, 4651], [4652, 4654], [4655, 4659], [4660, 4666], [4666, 4667]]}) 
answer: set([u'cede', u'europ', u'nearli', u'coloni'])
candidate Sentence: (0.14357298612594604, {u'tokens': [u'The', u'French', u'colony', u'of', u'Canada', u'referred', u'to', u'the', u'part', u'of', u'New', u'France', u'along', u'the', u'Saint', u'Lawrence', u'River', u'and', u'the', u'northern', u'shores', u'of', u'the', u'Great', u'Lakes', u'.'], u'lemmas': [u'the', u'french', u'colony', u'of', u'Canada', u'refer', u'to', u'the', u'part', u'of', u'New', u'France', u'along', u'the', u'Saint', u'Lawrence', u'River', u'and', u'the', u'northern', u'shore', u'of', u'the', u'great', u'lake', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'NNP', u'VBD', u'TO', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'CC', u'DT', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NNS', u'.'], u'char_offsets': [[2025, 2028], [2029, 2035], [2036, 2042], [2043, 2045], [2046, 2052], [2053, 2061], [2062, 2064], [2065, 2068], [2069, 2073], [2074, 2076], [2077, 2080], [2081, 2087], [2088, 2093], [2094, 2097], [2098, 2103], [2104, 2112], [2113, 2118], [2119, 2122], [2123, 2126], [2127, 2135], [2136, 2142], [2143, 2145], [2146, 2149], [2150, 2155], [2156, 2161], [2161, 2162]]}) 
answer: set([u'cede', u'europ', u'nearli', u'1763'])
candidate Sentence: (0.1351223886013031, {u'tokens': [u'Using', u'its', u'spending', u'powers', u',', u'the', u'federal', u'government', u'can', u'initiate', u'national', u'policies', u'in', u'provincial', u'areas', u',', u'such', u'as', u'the', u'Canada', u'Health', u'Act', u';', u'the', u'provinces', u'can', u'opt', u'out', u'of', u'these', u',', u'but', u'rarely', u'do', u'so', u'in', u'practice', u'.'], u'lemmas': [u'use', u'its', u'spending', u'power', u',', u'the', u'federal', u'government', u'can', u'initiate', u'national', u'policy', u'in', u'provincial', u'area', u',', u'such', u'as', u'the', u'Canada', u'Health', u'Act', u';', u'the', u'province', u'can', u'opt', u'out', u'of', u'these', u',', u'but', u'rarely', u'do', u'so', u'in', u'practice', u'.'], u'pos': [u'VBG', u'PRP$', u'NN', u'NNS', u',', u'DT', u'JJ', u'NN', u'MD', u'VB', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u',', u'JJ', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u':', u'DT', u'NNS', u'MD', u'VB', u'IN', u'IN', u'DT', u',', u'CC', u'RB', u'VBP', u'RB', u'IN', u'NN', u'.'], u'char_offsets': [[21460, 21465], [21466, 21469], [21470, 21478], [21479, 21485], [21485, 21486], [21487, 21490], [21491, 21498], [21499, 21509], [21510, 21513], [21514, 21522], [21523, 21531], [21532, 21540], [21541, 21543], [21544, 21554], [21555, 21560], [21560, 21561], [21562, 21566], [21567, 21569], [21570, 21573], [21574, 21580], [21581, 21587], [21588, 21591], [21591, 21592], [21593, 21596], [21597, 21606], [21607, 21610], [21611, 21614], [21615, 21618], [21619, 21621], [21622, 21627], [21627, 21628], [21629, 21632], [21633, 21639], [21640, 21642], [21643, 21645], [21646, 21648], [21649, 21657], [21657, 21658]]}) 
answer: set([u'cede', u'europ', u'nearli', u'franc', u'1763', u'coloni'])
candidate Sentence: (0.11800505220890045, {u'tokens': [u'A', u'series', u'of', u'four', u'Intercolonial', u'Wars', u'erupted', u'between', u'1689', u'and', u'1763', u'.'], u'lemmas': [u'a', u'series', u'of', u'four', u'intercolonial', u'war', u'erupt', u'between', u'1689', u'and', u'1763', u'.'], u'pos': [u'DT', u'NN', u'IN', u'CD', u'JJ', u'NNS', u'VBD', u'IN', u'CD', u'CC', u'CD', u'.'], u'char_offsets': [[4290, 4291], [4292, 4298], [4299, 4301], [4302, 4306], [4307, 4320], [4321, 4325], [4326, 4333], [4334, 4341], [4342, 4346], [4347, 4350], [4351, 4355], [4355, 4356]]}) 
answer: set([u'cede', u'europ', u'nearli', u'coloni', u'franc'])
candidate Sentence: (0.11715788394212723, {u'tokens': [u'The', u'Treaty', u'of', u'Paris', u'-LRB-', u'1783', u'-RRB-', u'recognized', u'American', u'independence', u'and', u'ceded', u'territories', u'south', u'of', u'the', u'Great', u'Lakes', u'to', u'the', u'United', u'States', u'.'], u'lemmas': [u'the', u'Treaty', u'of', u'Paris', u'-lrb-', u'1783', u'-rrb-', u'recognize', u'american', u'independence', u'and', u'cede', u'territory', u'south', u'of', u'the', u'great', u'lake', u'to', u'the', u'United', u'States', u'.'], u'pos': [u'DT', u'NNP', u'IN', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'VBD', u'JJ', u'NN', u'CC', u'VBD', u'NNS', u'RB', u'IN', u'DT', u'JJ', u'NNS', u'TO', u'DT', u'NNP', u'NNPS', u'.'], u'char_offsets': [[5122, 5125], [5126, 5132], [5133, 5135], [5136, 5141], [5142, 5143], [5143, 5147], [5147, 5148], [5149, 5159], [5160, 5168], [5169, 5181], [5182, 5185], [5186, 5191], [5192, 5203], [5204, 5209], [5210, 5212], [5213, 5216], [5217, 5222], [5223, 5228], [5229, 5231], [5232, 5235], [5236, 5242], [5243, 5249], [5249, 5250]]}) 
answer: set([u'franc', u'europ', u'nearli', u'coloni', u'1763'])
candidate Sentence: (0.1133192703127861, {u'tokens': [u'Canada', u'also', u'maintains', u'historic', u'ties', u'to', u'the', u'United', u'Kingdom', u'and', u'France', u'and', u'to', u'other', u'former', u'British', u'and', u'French', u'colonies', u'through', u'Canada', u"'s", u'membership', u'in', u'the', u'Commonwealth', u'of', u'Nations', u'and', u'La', u'Francophonie', u'-LRB-', u'French-Speaking', u'Countries', u'-RRB-', u'.'], u'lemmas': [u'Canada', u'also', u'maintain', u'historic', u'tie', u'to', u'the', u'United', u'Kingdom', u'and', u'France', u'and', u'to', u'other', u'former', u'british', u'and', u'french', u'colony', u'through', u'Canada', u"'s", u'membership', u'in', u'the', u'Commonwealth', u'of', u'Nations', u'and', u'La', u'Francophonie', u'-lrb-', u'french-speaking', u'country', u'-rrb-', u'.'], u'pos': [u'NNP', u'RB', u'VBZ', u'JJ', u'NNS', u'TO', u'DT', u'NNP', u'NNP', u'CC', u'NNP', u'CC', u'TO', u'JJ', u'JJ', u'JJ', u'CC', u'JJ', u'NNS', u'IN', u'NNP', u'POS', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNPS', u'CC', u'NNP', u'NNP', u'-LRB-', u'JJ', u'NNS', u'-RRB-', u'.'], u'char_offsets': [[17440, 17446], [17447, 17451], [17452, 17461], [17462, 17470], [17471, 17475], [17476, 17478], [17479, 17482], [17483, 17489], [17490, 17497], [17498, 17501], [17502, 17508], [17509, 17512], [17513, 17515], [17516, 17521], [17522, 17528], [17529, 17536], [17537, 17540], [17541, 17547], [17548, 17556], [17557, 17564], [17565, 17571], [17571, 17573], [17574, 17584], [17585, 17587], [17588, 17591], [17592, 17604], [17605, 17607], [17608, 17615], [17616, 17619], [17620, 17622], [17623, 17635], [17636, 17637], [17637, 17652], [17653, 17662], [17662, 17663], [17663, 17664]]}) 
answer: set([u'cede', u'europ', u'nearli', u'1763'])
candidate Sentence: (0.10749819874763489, {u'tokens': [u'While', u'the', u'Green', u'Party', u'of', u'Canada', u'and', u'other', u'smaller', u'parties', u'do', u'not', u'have', u'current', u'representation', u'in', u'Parliament', u',', u'the', u'list', u'of', u'historical', u'parties', u'with', u'elected', u'representation', u'is', u'substantial', u'.'], u'lemmas': [u'while', u'the', u'Green', u'Party', u'of', u'Canada', u'and', u'other', u'smaller', u'party', u'do', u'not', u'have', u'current', u'representation', u'in', u'Parliament', u',', u'the', u'list', u'of', u'historical', u'party', u'with', u'elect', u'representation', u'be', u'substantial', u'.'], u'pos': [u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'JJ', u'JJR', u'NNS', u'VBP', u'RB', u'VB', u'JJ', u'NN', u'IN', u'NNP', u',', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'VBN', u'NN', u'VBZ', u'JJ', u'.'], u'char_offsets': [[15625, 15630], [15631, 15634], [15635, 15640], [15641, 15646], [15647, 15649], [15650, 15656], [15657, 15660], [15661, 15666], [15667, 15674], [15675, 15682], [15683, 15685], [15686, 15689], [15690, 15694], [15695, 15702], [15703, 15717], [15718, 15720], [15721, 15731], [15731, 15732], [15733, 15736], [15737, 15741], [15742, 15744], [15745, 15755], [15756, 15763], [15764, 15768], [15769, 15776], [15777, 15791], [15792, 15794], [15795, 15806], [15806, 15807]]}) 
answer: set([u'cede', u'europ', u'nearli', u'franc', u'1763', u'coloni'])
candidate Sentence: (0.074970312416553497, {u'tokens': [u'Responsible', u'government', u'was', u'established', u'for', u'all', u'British', u'North', u'American', u'provinces', u'by', u'1849', u'.'], u'lemmas': [u'responsible', u'government', u'be', u'establish', u'for', u'all', u'british', u'north', u'american', u'province', u'by', u'1849', u'.'], u'pos': [u'JJ', u'NN', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'JJ', u'JJ', u'NNS', u'IN', u'CD', u'.'], u'char_offsets': [[6546, 6557], [6558, 6568], [6569, 6572], [6573, 6584], [6585, 6588], [6589, 6592], [6593, 6600], [6601, 6606], [6607, 6615], [6616, 6625], [6626, 6628], [6629, 6633], [6633, 6634]]}) 
answer: set([u'cede', u'europ', u'nearli', u'franc', u'1763', u'coloni'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'canada', u'.'])

Did France cede nearly all of its colonies in Europe in 1763?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Canada
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a8.txt

No
_____________________________ test_yesno[param46] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156dd560>, (<src.tfidf.TF_IDF object at 0x1144afcd0>, set(['.', 'canada'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156dd560>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.69163888692855835, {u'tokens': [u'France', u'ceded', u'nearly', u'all', u'of', u'its', u'colonies', u'in', u'North', u'America', u'in', u'1763', u'after', u'the', u'Seven', u'Years', u'War', u'.'], u'lemmas': [u'France', u'cede', u'nearly', u'all', u'of', u'its', u'colony', u'in', u'North', u'America', u'in', u'1763', u'after', u'the', u'seven', u'year', u'War', u'.'], u'pos': [u'NNP', u'VBD', u'RB', u'DT', u'IN', u'PRP$', u'NNS', u'IN', u'NNP', u'NNP', u'IN', u'CD', u'IN', u'DT', u'CD', u'NNS', u'NNP', u'.'], u'char_offsets': [[498, 504], [505, 510], [511, 517], [518, 521], [522, 524], [525, 528], [529, 537], [538, 540], [541, 546], [547, 554], [555, 557], [558, 562], [563, 568], [569, 572], [573, 578], [579, 584], [585, 588], [588, 589]]}) 
answer: set([u'europ'])
candidate Sentence: (0.20214846730232239, {u'tokens': [u'Mainland', u'Nova', u'Scotia', u'came', u'under', u'British', u'rule', u'with', u'the', u'Treaty', u'of', u'Utrecht', u'-LRB-', u'1713', u'-RRB-', u';', u'the', u'Treaty', u'of', u'Paris', u'-LRB-', u'1763', u'-RRB-', u'ceded', u'Canada', u'and', u'most', u'of', u'New', u'France', u'to', u'Britain', u'following', u'the', u'Seven', u'Years', u"'", u'War', u'.'], u'lemmas': [u'mainland', u'Nova', u'Scotia', u'come', u'under', u'british', u'rule', u'with', u'the', u'Treaty', u'of', u'Utrecht', u'-lrb-', u'1713', u'-rrb-', u';', u'the', u'Treaty', u'of', u'Paris', u'-lrb-', u'1763', u'-rrb-', u'cede', u'Canada', u'and', u'most', u'of', u'New', u'France', u'to', u'Britain', u'follow', u'the', u'seven', u'year', u"'", u'war', u'.'], u'pos': [u'NN', u'NNP', u'NNP', u'VBD', u'IN', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'-LRB-', u'CD', u'-RRB-', u':', u'DT', u'NNP', u'IN', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'VBD', u'NNP', u'CC', u'JJS', u'IN', u'NNP', u'NNP', u'TO', u'NNP', u'VBG', u'DT', u'CD', u'NNS', u'POS', u'NN', u'.'], u'char_offsets': [[4357, 4365], [4366, 4370], [4371, 4377], [4378, 4382], [4383, 4388], [4389, 4396], [4397, 4401], [4402, 4406], [4407, 4410], [4411, 4417], [4418, 4420], [4421, 4428], [4429, 4430], [4430, 4434], [4434, 4435], [4435, 4436], [4437, 4440], [4441, 4447], [4448, 4450], [4451, 4456], [4457, 4458], [4458, 4462], [4462, 4463], [4464, 4469], [4470, 4476], [4477, 4480], [4481, 4485], [4486, 4488], [4489, 4492], [4493, 4499], [4500, 4502], [4503, 4510], [4511, 4520], [4521, 4524], [4525, 4530], [4531, 4536], [4536, 4537], [4538, 4541], [4541, 4542]]}) 
answer: set([u'coloni', u'europ', u'nearli'])
candidate Sentence: (0.15476611256599426, {u'tokens': [u'The', u'Royal', u'Proclamation', u'-LRB-', u'1763', u'-RRB-', u'carved', u'the', u'Province', u'of', u'Quebec', u'out', u'of', u'New', u'France', u'and', u'annexed', u'Cape', u'Breton', u'Island', u'to', u'Nova', u'Scotia', u'.'], u'lemmas': [u'the', u'Royal', u'Proclamation', u'-lrb-', u'1763', u'-rrb-', u'carve', u'the', u'Province', u'of', u'Quebec', u'out', u'of', u'New', u'France', u'and', u'annex', u'Cape', u'Breton', u'Island', u'to', u'Nova', u'Scotia', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'VBD', u'DT', u'NNP', u'IN', u'NNP', u'IN', u'IN', u'NNP', u'NNP', u'CC', u'VBD', u'NNP', u'NNP', u'NNP', u'TO', u'NNP', u'NNP', u'.'], u'char_offsets': [[4543, 4546], [4547, 4552], [4553, 4565], [4566, 4567], [4567, 4571], [4571, 4572], [4573, 4579], [4580, 4583], [4584, 4592], [4593, 4595], [4596, 4602], [4603, 4606], [4607, 4609], [4610, 4613], [4614, 4620], [4621, 4624], [4625, 4632], [4633, 4637], [4638, 4644], [4645, 4651], [4652, 4654], [4655, 4659], [4660, 4666], [4666, 4667]]}) 
answer: set([u'cede', u'europ', u'nearli', u'coloni'])
candidate Sentence: (0.14357298612594604, {u'tokens': [u'The', u'French', u'colony', u'of', u'Canada', u'referred', u'to', u'the', u'part', u'of', u'New', u'France', u'along', u'the', u'Saint', u'Lawrence', u'River', u'and', u'the', u'northern', u'shores', u'of', u'the', u'Great', u'Lakes', u'.'], u'lemmas': [u'the', u'french', u'colony', u'of', u'Canada', u'refer', u'to', u'the', u'part', u'of', u'New', u'France', u'along', u'the', u'Saint', u'Lawrence', u'River', u'and', u'the', u'northern', u'shore', u'of', u'the', u'great', u'lake', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'NNP', u'VBD', u'TO', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'CC', u'DT', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NNS', u'.'], u'char_offsets': [[2025, 2028], [2029, 2035], [2036, 2042], [2043, 2045], [2046, 2052], [2053, 2061], [2062, 2064], [2065, 2068], [2069, 2073], [2074, 2076], [2077, 2080], [2081, 2087], [2088, 2093], [2094, 2097], [2098, 2103], [2104, 2112], [2113, 2118], [2119, 2122], [2123, 2126], [2127, 2135], [2136, 2142], [2143, 2145], [2146, 2149], [2150, 2155], [2156, 2161], [2161, 2162]]}) 
answer: set([u'cede', u'europ', u'nearli', u'1763'])
candidate Sentence: (0.1351223886013031, {u'tokens': [u'Using', u'its', u'spending', u'powers', u',', u'the', u'federal', u'government', u'can', u'initiate', u'national', u'policies', u'in', u'provincial', u'areas', u',', u'such', u'as', u'the', u'Canada', u'Health', u'Act', u';', u'the', u'provinces', u'can', u'opt', u'out', u'of', u'these', u',', u'but', u'rarely', u'do', u'so', u'in', u'practice', u'.'], u'lemmas': [u'use', u'its', u'spending', u'power', u',', u'the', u'federal', u'government', u'can', u'initiate', u'national', u'policy', u'in', u'provincial', u'area', u',', u'such', u'as', u'the', u'Canada', u'Health', u'Act', u';', u'the', u'province', u'can', u'opt', u'out', u'of', u'these', u',', u'but', u'rarely', u'do', u'so', u'in', u'practice', u'.'], u'pos': [u'VBG', u'PRP$', u'NN', u'NNS', u',', u'DT', u'JJ', u'NN', u'MD', u'VB', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u',', u'JJ', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u':', u'DT', u'NNS', u'MD', u'VB', u'IN', u'IN', u'DT', u',', u'CC', u'RB', u'VBP', u'RB', u'IN', u'NN', u'.'], u'char_offsets': [[21460, 21465], [21466, 21469], [21470, 21478], [21479, 21485], [21485, 21486], [21487, 21490], [21491, 21498], [21499, 21509], [21510, 21513], [21514, 21522], [21523, 21531], [21532, 21540], [21541, 21543], [21544, 21554], [21555, 21560], [21560, 21561], [21562, 21566], [21567, 21569], [21570, 21573], [21574, 21580], [21581, 21587], [21588, 21591], [21591, 21592], [21593, 21596], [21597, 21606], [21607, 21610], [21611, 21614], [21615, 21618], [21619, 21621], [21622, 21627], [21627, 21628], [21629, 21632], [21633, 21639], [21640, 21642], [21643, 21645], [21646, 21648], [21649, 21657], [21657, 21658]]}) 
answer: set([u'cede', u'europ', u'nearli', u'franc', u'1763', u'coloni'])
candidate Sentence: (0.11800505220890045, {u'tokens': [u'A', u'series', u'of', u'four', u'Intercolonial', u'Wars', u'erupted', u'between', u'1689', u'and', u'1763', u'.'], u'lemmas': [u'a', u'series', u'of', u'four', u'intercolonial', u'war', u'erupt', u'between', u'1689', u'and', u'1763', u'.'], u'pos': [u'DT', u'NN', u'IN', u'CD', u'JJ', u'NNS', u'VBD', u'IN', u'CD', u'CC', u'CD', u'.'], u'char_offsets': [[4290, 4291], [4292, 4298], [4299, 4301], [4302, 4306], [4307, 4320], [4321, 4325], [4326, 4333], [4334, 4341], [4342, 4346], [4347, 4350], [4351, 4355], [4355, 4356]]}) 
answer: set([u'cede', u'europ', u'nearli', u'coloni', u'franc'])
candidate Sentence: (0.11715788394212723, {u'tokens': [u'The', u'Treaty', u'of', u'Paris', u'-LRB-', u'1783', u'-RRB-', u'recognized', u'American', u'independence', u'and', u'ceded', u'territories', u'south', u'of', u'the', u'Great', u'Lakes', u'to', u'the', u'United', u'States', u'.'], u'lemmas': [u'the', u'Treaty', u'of', u'Paris', u'-lrb-', u'1783', u'-rrb-', u'recognize', u'american', u'independence', u'and', u'cede', u'territory', u'south', u'of', u'the', u'great', u'lake', u'to', u'the', u'United', u'States', u'.'], u'pos': [u'DT', u'NNP', u'IN', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'VBD', u'JJ', u'NN', u'CC', u'VBD', u'NNS', u'RB', u'IN', u'DT', u'JJ', u'NNS', u'TO', u'DT', u'NNP', u'NNPS', u'.'], u'char_offsets': [[5122, 5125], [5126, 5132], [5133, 5135], [5136, 5141], [5142, 5143], [5143, 5147], [5147, 5148], [5149, 5159], [5160, 5168], [5169, 5181], [5182, 5185], [5186, 5191], [5192, 5203], [5204, 5209], [5210, 5212], [5213, 5216], [5217, 5222], [5223, 5228], [5229, 5231], [5232, 5235], [5236, 5242], [5243, 5249], [5249, 5250]]}) 
answer: set([u'franc', u'europ', u'nearli', u'coloni', u'1763'])
candidate Sentence: (0.1133192703127861, {u'tokens': [u'Canada', u'also', u'maintains', u'historic', u'ties', u'to', u'the', u'United', u'Kingdom', u'and', u'France', u'and', u'to', u'other', u'former', u'British', u'and', u'French', u'colonies', u'through', u'Canada', u"'s", u'membership', u'in', u'the', u'Commonwealth', u'of', u'Nations', u'and', u'La', u'Francophonie', u'-LRB-', u'French-Speaking', u'Countries', u'-RRB-', u'.'], u'lemmas': [u'Canada', u'also', u'maintain', u'historic', u'tie', u'to', u'the', u'United', u'Kingdom', u'and', u'France', u'and', u'to', u'other', u'former', u'british', u'and', u'french', u'colony', u'through', u'Canada', u"'s", u'membership', u'in', u'the', u'Commonwealth', u'of', u'Nations', u'and', u'La', u'Francophonie', u'-lrb-', u'french-speaking', u'country', u'-rrb-', u'.'], u'pos': [u'NNP', u'RB', u'VBZ', u'JJ', u'NNS', u'TO', u'DT', u'NNP', u'NNP', u'CC', u'NNP', u'CC', u'TO', u'JJ', u'JJ', u'JJ', u'CC', u'JJ', u'NNS', u'IN', u'NNP', u'POS', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNPS', u'CC', u'NNP', u'NNP', u'-LRB-', u'JJ', u'NNS', u'-RRB-', u'.'], u'char_offsets': [[17440, 17446], [17447, 17451], [17452, 17461], [17462, 17470], [17471, 17475], [17476, 17478], [17479, 17482], [17483, 17489], [17490, 17497], [17498, 17501], [17502, 17508], [17509, 17512], [17513, 17515], [17516, 17521], [17522, 17528], [17529, 17536], [17537, 17540], [17541, 17547], [17548, 17556], [17557, 17564], [17565, 17571], [17571, 17573], [17574, 17584], [17585, 17587], [17588, 17591], [17592, 17604], [17605, 17607], [17608, 17615], [17616, 17619], [17620, 17622], [17623, 17635], [17636, 17637], [17637, 17652], [17653, 17662], [17662, 17663], [17663, 17664]]}) 
answer: set([u'cede', u'europ', u'nearli', u'1763'])
candidate Sentence: (0.10749819874763489, {u'tokens': [u'While', u'the', u'Green', u'Party', u'of', u'Canada', u'and', u'other', u'smaller', u'parties', u'do', u'not', u'have', u'current', u'representation', u'in', u'Parliament', u',', u'the', u'list', u'of', u'historical', u'parties', u'with', u'elected', u'representation', u'is', u'substantial', u'.'], u'lemmas': [u'while', u'the', u'Green', u'Party', u'of', u'Canada', u'and', u'other', u'smaller', u'party', u'do', u'not', u'have', u'current', u'representation', u'in', u'Parliament', u',', u'the', u'list', u'of', u'historical', u'party', u'with', u'elect', u'representation', u'be', u'substantial', u'.'], u'pos': [u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'JJ', u'JJR', u'NNS', u'VBP', u'RB', u'VB', u'JJ', u'NN', u'IN', u'NNP', u',', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'VBN', u'NN', u'VBZ', u'JJ', u'.'], u'char_offsets': [[15625, 15630], [15631, 15634], [15635, 15640], [15641, 15646], [15647, 15649], [15650, 15656], [15657, 15660], [15661, 15666], [15667, 15674], [15675, 15682], [15683, 15685], [15686, 15689], [15690, 15694], [15695, 15702], [15703, 15717], [15718, 15720], [15721, 15731], [15731, 15732], [15733, 15736], [15737, 15741], [15742, 15744], [15745, 15755], [15756, 15763], [15764, 15768], [15769, 15776], [15777, 15791], [15792, 15794], [15795, 15806], [15806, 15807]]}) 
answer: set([u'cede', u'europ', u'nearli', u'franc', u'1763', u'coloni'])
candidate Sentence: (0.074970312416553497, {u'tokens': [u'Responsible', u'government', u'was', u'established', u'for', u'all', u'British', u'North', u'American', u'provinces', u'by', u'1849', u'.'], u'lemmas': [u'responsible', u'government', u'be', u'establish', u'for', u'all', u'british', u'north', u'american', u'province', u'by', u'1849', u'.'], u'pos': [u'JJ', u'NN', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'JJ', u'JJ', u'NNS', u'IN', u'CD', u'.'], u'char_offsets': [[6546, 6557], [6558, 6568], [6569, 6572], [6573, 6584], [6585, 6588], [6589, 6592], [6593, 6600], [6601, 6606], [6607, 6615], [6616, 6625], [6626, 6628], [6629, 6633], [6633, 6634]]}) 
answer: set([u'cede', u'europ', u'nearli', u'franc', u'1763', u'coloni'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'canada', u'.'])

Did France cede nearly all of its colonies in Europe in 1763?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Canada
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a8.txt

No
_____________________________ test_yesno[param54] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156dd7a0>, (<src.tfidf.TF_IDF object at 0x1144afcd0>, set(['.', 'canada'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('No, it did not.') == True
E            +  where 'No, it did not.' = <src.question_processing.Question_parser instance at 0x1156dd7a0>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.89530229568481445, {u'tokens': [u'Canadian', u'soldiers', u'would', u'win', u'the', u'Battle', u'of', u'Vimy', u'Ridge', u'in', u'1917', u'.'], u'lemmas': [u'canadian', u'soldier', u'would', u'win', u'the', u'battle', u'of', u'Vimy', u'Ridge', u'in', u'1917', u'.'], u'pos': [u'JJ', u'NNS', u'MD', u'VB', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[8725, 8733], [8734, 8742], [8743, 8748], [8749, 8752], [8753, 8756], [8757, 8763], [8764, 8766], [8767, 8771], [8772, 8777], [8778, 8780], [8781, 8785], [8785, 8786]]}) 
answer: set([])
candidate Sentence: (0.1680334061384201, {u'tokens': [u'Canadian', u'troops', u'played', u'important', u'roles', u'in', u'the', u'Battle', u'of', u'the', u'Atlantic', u',', u'the', u'failed', u'1942', u'Dieppe', u'Raid', u'in', u'France', u',', u'the', u'Allied', u'invasion', u'of', u'Italy', u',', u'and', u'the', u'Battle', u'of', u'the', u'Scheldt', u'during', u'the', u'liberation', u'of', u'the', u'Netherlands', u'in', u'1944', u'.'], u'lemmas': [u'canadian', u'troops', u'play', u'important', u'role', u'in', u'the', u'battle', u'of', u'the', u'Atlantic', u',', u'the', u'fail', u'1942', u'Dieppe', u'raid', u'in', u'France', u',', u'the', u'Allied', u'invasion', u'of', u'Italy', u',', u'and', u'the', u'battle', u'of', u'the', u'Scheldt', u'during', u'the', u'liberation', u'of', u'the', u'Netherlands', u'in', u'1944', u'.'], u'pos': [u'JJ', u'NNS', u'VBD', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u',', u'DT', u'VBN', u'CD', u'NNP', u'NN', u'IN', u'NNP', u',', u'DT', u'NNP', u'NN', u'IN', u'NNP', u',', u'CC', u'DT', u'NN', u'IN', u'DT', u'NNP', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[9694, 9702], [9703, 9709], [9710, 9716], [9717, 9726], [9727, 9732], [9733, 9735], [9736, 9739], [9740, 9746], [9747, 9749], [9750, 9753], [9754, 9762], [9762, 9763], [9764, 9767], [9768, 9774], [9775, 9779], [9780, 9786], [9787, 9791], [9792, 9794], [9795, 9801], [9801, 9802], [9803, 9806], [9807, 9813], [9814, 9822], [9823, 9825], [9826, 9831], [9831, 9832], [9833, 9836], [9837, 9840], [9841, 9847], [9848, 9850], [9851, 9854], [9855, 9862], [9863, 9869], [9870, 9873], [9874, 9884], [9885, 9887], [9888, 9891], [9892, 9903], [9904, 9906], [9907, 9911], [9911, 9912]]}) 
answer: set([u'ridg', u'win', u'soldier', u'1917', u'vimi'])
candidate Sentence: (0.093033500015735626, {u'tokens': [u'The', u'Conscription', u'Crisis', u'of', u'1917', u'erupted', u'when', u'conservative', u'Prime', u'Minister', u'Robert', u'Borden', u'brought', u'in', u'compulsory', u'military', u'service', u'over', u'the', u'objection', u'of', u'French-speaking', u'Quebecers', u'.'], u'lemmas': [u'the', u'Conscription', u'Crisis', u'of', u'1917', u'erupt', u'when', u'conservative', u'Prime', u'Minister', u'Robert', u'Borden', u'bring', u'in', u'compulsory', u'military', u'service', u'over', u'the', u'objection', u'of', u'french-speaking', u'Quebecers', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'IN', u'CD', u'VBD', u'WRB', u'JJ', u'NNP', u'NNP', u'NNP', u'NNP', u'VBD', u'RP', u'JJ', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'NNPS', u'.'], u'char_offsets': [[8920, 8923], [8924, 8936], [8937, 8943], [8944, 8946], [8947, 8951], [8953, 8960], [8961, 8965], [8966, 8978], [8979, 8984], [8985, 8993], [8994, 9000], [9001, 9007], [9008, 9015], [9016, 9018], [9019, 9029], [9030, 9038], [9039, 9046], [9047, 9051], [9052, 9055], [9056, 9065], [9066, 9068], [9069, 9084], [9085, 9094], [9094, 9095]]}) 
answer: set([u'canadian', u'ridg', u'win', u'battl', u'soldier', u'vimi'])
candidate Sentence: (0.088572412729263306, {u'tokens': [u'While', u'the', u'Green', u'Party', u'of', u'Canada', u'and', u'other', u'smaller', u'parties', u'do', u'not', u'have', u'current', u'representation', u'in', u'Parliament', u',', u'the', u'list', u'of', u'historical', u'parties', u'with', u'elected', u'representation', u'is', u'substantial', u'.'], u'lemmas': [u'while', u'the', u'Green', u'Party', u'of', u'Canada', u'and', u'other', u'smaller', u'party', u'do', u'not', u'have', u'current', u'representation', u'in', u'Parliament', u',', u'the', u'list', u'of', u'historical', u'party', u'with', u'elect', u'representation', u'be', u'substantial', u'.'], u'pos': [u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'JJ', u'JJR', u'NNS', u'VBP', u'RB', u'VB', u'JJ', u'NN', u'IN', u'NNP', u',', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'VBN', u'NN', u'VBZ', u'JJ', u'.'], u'char_offsets': [[15625, 15630], [15631, 15634], [15635, 15640], [15641, 15646], [15647, 15649], [15650, 15656], [15657, 15660], [15661, 15666], [15667, 15674], [15675, 15682], [15683, 15685], [15686, 15689], [15690, 15694], [15695, 15702], [15703, 15717], [15718, 15720], [15721, 15731], [15731, 15732], [15733, 15736], [15737, 15741], [15742, 15744], [15745, 15755], [15756, 15763], [15764, 15768], [15769, 15776], [15777, 15791], [15792, 15794], [15795, 15806], [15806, 15807]]}) 
answer: set([u'canadian', u'ridg', u'vimi', u'battl', u'soldier', u'win', u'1917'])
candidate Sentence: (0.085598640143871307, {u'tokens': [u'Using', u'its', u'spending', u'powers', u',', u'the', u'federal', u'government', u'can', u'initiate', u'national', u'policies', u'in', u'provincial', u'areas', u',', u'such', u'as', u'the', u'Canada', u'Health', u'Act', u';', u'the', u'provinces', u'can', u'opt', u'out', u'of', u'these', u',', u'but', u'rarely', u'do', u'so', u'in', u'practice', u'.'], u'lemmas': [u'use', u'its', u'spending', u'power', u',', u'the', u'federal', u'government', u'can', u'initiate', u'national', u'policy', u'in', u'provincial', u'area', u',', u'such', u'as', u'the', u'Canada', u'Health', u'Act', u';', u'the', u'province', u'can', u'opt', u'out', u'of', u'these', u',', u'but', u'rarely', u'do', u'so', u'in', u'practice', u'.'], u'pos': [u'VBG', u'PRP$', u'NN', u'NNS', u',', u'DT', u'JJ', u'NN', u'MD', u'VB', u'JJ', u'NNS', u'IN', u'JJ', u'NNS', u',', u'JJ', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u':', u'DT', u'NNS', u'MD', u'VB', u'IN', u'IN', u'DT', u',', u'CC', u'RB', u'VBP', u'RB', u'IN', u'NN', u'.'], u'char_offsets': [[21460, 21465], [21466, 21469], [21470, 21478], [21479, 21485], [21485, 21486], [21487, 21490], [21491, 21498], [21499, 21509], [21510, 21513], [21514, 21522], [21523, 21531], [21532, 21540], [21541, 21543], [21544, 21554], [21555, 21560], [21560, 21561], [21562, 21566], [21567, 21569], [21570, 21573], [21574, 21580], [21581, 21587], [21588, 21591], [21591, 21592], [21593, 21596], [21597, 21606], [21607, 21610], [21611, 21614], [21615, 21618], [21619, 21621], [21622, 21627], [21627, 21628], [21629, 21632], [21633, 21639], [21640, 21642], [21643, 21645], [21646, 21648], [21649, 21657], [21657, 21658]]}) 
answer: set([u'canadian', u'ridg', u'vimi', u'battl', u'soldier', u'win', u'1917'])
candidate Sentence: (0.04277854785323143, {u'tokens': [u'*', u'Official', u'website', u'of', u'the', u'Government', u'of', u'Canada', u'*', u'Official', u'website', u'of', u'the', u'Prime', u'Minister', u'of', u'Canada', u'*', u'Official', u'website', u'of', u'the', u'Governor', u'General', u'of', u'Canada', u'*', u'Official', u'website', u'of', u'the', u'Canadian', u'Forces', u'*', u'Official', u'Government', u'of', u'Canada', u'online', u'Atlas', u'of', u'Canada', u'*', u'Permanent', u'Mission', u'of', u'Canada', u'to', u'the', u'United', u'Nations', u'*', u'Culture.ca', u'-', u'Canada', u"'s", u'Cultural', u'Gateway', u'*', u'Culturescope.ca', u'-', u'Canadian', u'Cultural', u'Observatory', u'*', u'Canadian', u'Studies', u':', u'A', u'Guide', u'to', u'the', u'Sources', u'*', u'Statistics', u'Canada', u'with', u'Canada', u"'s", u'population', u'clock', u'*', u'The', u'Canadian', u'Atlas', u'Online', u'*', u'Canada', u'at', u'The', u'World', u'Factbook', u'*', u'UN', u'Human', u'Development', u'Program', u':', u'Country', u'Fact', u'Sheet', u':', u'Canada', u',', u'Statistics', u'-', u'Country', u'Sheet', u':', u'Canada', u'Elizabeth', u'II', u'of', u'the', u'United', u'Kingdom', u'List', u'of', u'countries', u'and', u'outlying', u'territories', u'by', u'total', u'area', u'British', u'colonization', u'of', u'the', u'Americas', u'French', u'colonization', u'of', u'the', u'Americas', u'Provinces', u'and', u'territories', u'of', u'Canada', u'Elizabeth', u'II', u'of', u'the', u'United', u'Kingdom', u'European', u'colonization', u'of', u'the', u'Americas', u'French', u'colonization', u'of', u'the', u'Americas', u'Ren-Robert', u'Cavelier', u',', u'Sieur', u'de', u'La', u'Salle', u'The', u'Death', u'of', u'General', u'Wolfe', u'Battle', u'of', u'the', u'Plains', u'of', u'Abraham', u'British', u'colonization', u'of', u'the', u'Americas', u'Report', u'on', u'the', u'Affairs', u'of', u'British', u'North', u'America', u'-LRB-', u'1839', u'-RRB-', u'United', u'Colonies', u'of', u'Vancouver', u'Island', u'and', u'British', u'Columbia', u'Conservative', u'Party', u'of', u'Canada', u'-LRB-', u'historical', u'-RRB-', u'Conservative', u'Party', u'of', u'Canada', u'-LRB-', u'historical', u'-RRB-', u'Military', u'history', u'of', u'Canada', u'during', u'World', u'War', u'II', u'Post-World', u'War', u'II', u'baby', u'boom', u'Reference', u're', u'Secession', u'of', u'Quebec', u'Charter', u'of', u'Rights', u'and', u'Freedoms', u'Canada-United', u'States', u'Free', u'Trade', u'Agreement', u'Elizabeth', u'II', u'of', u'the', u'United', u'Kingdom', u'Style', u'of', u'the', u'Canadian', u'sovereign', u'Canadian', u'Charter', u'of', u'Rights', u'and', u'Freedoms', u'Section', u'Thirty-three', u'of', u'the', u'Canadian', u'Charter', u'of', u'Rights', u'and', u'Freedoms', u'Queen', u"'s", u'Privy', u'Council', u'for', u'Canada', u'List', u'of', u'Prime', u'Ministers', u'of', u'Canada', u'List', u'of', u'political', u'parties', u'in', u'Canada', u'#Historical', u'parties', u'that', u'have', u'won', u'seats', u'in', u'Parliament', u'Canadian', u'Forces', u'Land', u'Force', u'Command', u'Canada', u'in', u'the', u'Cold', u'War', u'North', u'American', u'Aerospace', u'Defense', u'Command', u'Canada', u"'s", u'role', u'in', u'the', u'invasion', u'of', u'Afghanistan', u'Territorial', u'claims', u'in', u'the', u'Arctic', u'Provinces', u'and', u'territories', u'of', u'Canada', u'List', u'of', u'Canadian', u'provincial', u'and', u'territorial', u'symbols', u'Legislative', u'Assemblies', u'of', u'Canada', u"'s", u'provinces', u'and', u'territories', u'Elizabeth', u'II', u'of', u'the', u'United', u'Kingdom', u'List', u'of', u'islands', u'by', u'area', u'Elizabeth', u'II', u'of', u'the', u'United', u'Kingdom', u'List', u'of', u'countries', u'by', u'GDP', u'-LRB-', u'nominal', u'-RRB-', u'Organisation', u'for', u'Economic', u'Co-operation', u'and', u'Development', u'North', u'American', u'Free', u'Trade', u'Agreement', u'Economic', u'impact', u'of', u'immigration', u'to', u'Canada', u'National', u'Film', u'Board', u'of', u'Canada', u'Canadian', u'Radio-television', u'and', u'Telecommunications', u'Commission', u'Section', u'Twenty-seven', u'of', u'the', u'Canadian', u'Charter', u'of', u'Rights', u'and', u'Freedoms', u'Coat', u'of', u'Arms', u'of', u'Canada', u'2007', u'FIFA', u'U-20', u'World', u'Cup', u'Canadian', u'Charter', u'of', u'Rights', u'and', u'Freedoms', u'Charter', u'of', u'the', u'French', u'Language'], u'lemmas': [u'*', u'Official', u'website', u'of', u'the', u'government', u'of', u'Canada', u'*', u'Official', u'website', u'of', u'the', u'Prime', u'Minister', u'of', u'Canada', u'*', u'Official', u'website', u'of', u'the', u'Governor', u'General', u'of', u'Canada', u'*', u'Official', u'website', u'of', u'the', u'canadian', u'force', u'*', u'Official', u'Government', u'of', u'Canada', u'online', u'atla', u'of', u'Canada', u'*', u'Permanent', u'Mission', u'of', u'Canada', u'to', u'the', u'United', u'Nations', u'*', u'culture.ca', u'-', u'Canada', u"'s", u'Cultural', u'Gateway', u'*', u'culturescope.ca', u'-', u'canadian', u'cultural', u'observatory', u'*', u'canadian', u'study', u':', u'a', u'Guide', u'to', u'the', u'source', u'*', u'Statistics', u'Canada', u'with', u'Canada', u"'s", u'population', u'clock', u'*', u'the', u'canadian', u'Atlas', u'Online', u'*', u'Canada', u'at', u'the', u'World', u'Factbook', u'*', u'UN', u'Human', u'Development', u'Program', u':', u'Country', u'Fact', u'Sheet', u':', u'Canada', u',', u'Statistics', u'-', u'country', u'Sheet', u':', u'Canada', u'Elizabeth', u'II', u'of', u'the', u'United', u'Kingdom', u'list', u'of', u'country', u'and', u'outlying', u'territory', u'by', u'total', u'area', u'british', u'colonization', u'of', u'the', u'Americas', u'French', u'colonization', u'of', u'the', u'Americas', u'Provinces', u'and', u'territory', u'of', u'Canada', u'Elizabeth', u'II', u'of', u'the', u'United', u'Kingdom', u'European', u'colonization', u'of', u'the', u'Americas', u'French', u'colonization', u'of', u'the', u'Americas', u'Ren-Robert', u'Cavelier', u',', u'Sieur', u'de', u'La', u'Salle', u'The', u'Death', u'of', u'General', u'Wolfe', u'Battle', u'of', u'the', u'plain', u'of', u'Abraham', u'British', u'colonization', u'of', u'the', u'Americas', u'Report', u'on', u'the', u'Affairs', u'of', u'British', u'North', u'America', u'-lrb-', u'1839', u'-rrb-', u'United', u'Colonies', u'of', u'Vancouver', u'Island', u'and', u'British', u'Columbia', u'Conservative', u'Party', u'of', u'Canada', u'-lrb-', u'historical', u'-rrb-', u'Conservative', u'Party', u'of', u'Canada', u'-lrb-', u'historical', u'-rrb-', u'military', u'history', u'of', u'Canada', u'during', u'World', u'War', u'II', u'Post-World', u'War', u'II', u'baby', u'boom', u'Reference', u're', u'Secession', u'of', u'Quebec', u'Charter', u'of', u'Rights', u'and', u'Freedoms', u'Canada-United', u'States', u'Free', u'Trade', u'Agreement', u'Elizabeth', u'II', u'of', u'the', u'United', u'Kingdom', u'Style', u'of', u'the', u'canadian', u'sovereign', u'canadian', u'Charter', u'of', u'Rights', u'and', u'Freedoms', u'Section', u'thirty-three', u'of', u'the', u'canadian', u'Charter', u'of', u'Rights', u'and', u'Freedoms', u'Queen', u"'s", u'Privy', u'Council', u'for', u'Canada', u'list', u'of', u'Prime', u'Ministers', u'of', u'Canada', u'list', u'of', u'political', u'party', u'in', u'Canada', u'#historical', u'party', u'that', u'have', u'win', u'seat', u'in', u'Parliament', u'Canadian', u'Forces', u'Land', u'Force', u'command', u'Canada', u'in', u'the', u'Cold', u'War', u'North', u'American', u'Aerospace', u'Defense', u'command', u'Canada', u"'s", u'role', u'in', u'the', u'invasion', u'of', u'Afghanistan', u'Territorial', u'claim', u'in', u'the', u'Arctic', u'Provinces', u'and', u'territory', u'of', u'Canada', u'list', u'of', u'canadian', u'provincial', u'and', u'territorial', u'symbol', u'legislative', u'assembly', u'of', u'Canada', u"'s", u'province', u'and', u'territory', u'Elizabeth', u'II', u'of', u'the', u'United', u'Kingdom', u'list', u'of', u'island', u'by', u'area', u'Elizabeth', u'II', u'of', u'the', u'United', u'Kingdom', u'list', u'of', u'country', u'by', u'GDP', u'-lrb-', u'nominal', u'-rrb-', u'Organisation', u'for', u'Economic', u'co-operation', u'and', u'development', u'north', u'american', u'Free', u'Trade', u'Agreement', u'Economic', u'impact', u'of', u'immigration', u'to', u'Canada', u'National', u'Film', u'Board', u'of', u'Canada', u'Canadian', u'radio-television', u'and', u'Telecommunications', u'Commission', u'Section', u'twenty-seven', u'of', u'the', u'canadian', u'Charter', u'of', u'Rights', u'and', u'Freedoms', u'Coat', u'of', u'arm', u'of', u'Canada', u'2007', u'FIFA', u'U-20', u'World', u'Cup', u'Canadian', u'Charter', u'of', u'Rights', u'and', u'Freedoms', u'Charter', u'of', u'the', u'french', u'language'], u'pos': [u'SYM', u'NNP', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u'SYM', u'NNP', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'SYM', u'NNP', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'SYM', u'NNP', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'SYM', u'NNP', u'NNP', u'IN', u'NNP', u'NN', u'NN', u'IN', u'NNP', u'SYM', u'NNP', u'NNP', u'IN', u'NNP', u'TO', u'DT', u'NNP', u'NNPS', u'SYM', u'SYM', u':', u'NNP', u'POS', u'NNP', u'NNP', u'SYM', u'SYM', u':', u'JJ', u'JJ', u'NN', u'SYM', u'JJ', u'NNS', u':', u'DT', u'NNP', u'TO', u'DT', u'NNS', u'SYM', u'NNPS', u'NNP', u'IN', u'NNP', u'POS', u'NN', u'NN', u'SYM', u'DT', u'JJ', u'NNP', u'NNP', u'SYM', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u':', u'NNP', u'NNP', u'NNP', u':', u'NNP', u',', u'NNP', u':', u'NN', u'NNP', u':', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'IN', u'NNS', u'CC', u'JJ', u'NNS', u'IN', u'JJ', u'NN', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'IN', u'DT', u'NNPS', u'NNPS', u'CC', u'NNS', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNS', u'IN', u'NNP', u'NNP', u'NN', u'IN', u'DT', u'NNPS', u'NNP', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'NNP', u'NNPS', u'IN', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'-LRB-', u'JJ', u'-RRB-', u'NNP', u'NNP', u'IN', u'NNP', u'-LRB-', u'JJ', u'-RRB-', u'JJ', u'NN', u'IN', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NN', u'NN', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'NNPS', u'CC', u'NNPS', u'NNP', u'NNPS', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'JJ', u'JJ', u'JJ', u'NNP', u'IN', u'NNPS', u'CC', u'NNPS', u'NNP', u'CD', u'IN', u'DT', u'JJ', u'NNP', u'IN', u'NNPS', u'CC', u'NNPS', u'NNP', u'POS', u'NNP', u'NNP', u'IN', u'NNP', u'NN', u'IN', u'NNP', u'NNPS', u'IN', u'NNP', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'NNP', u'JJ', u'NNS', u'WDT', u'VBP', u'VBN', u'NNS', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NN', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NN', u'NNP', u'POS', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'VBZ', u'IN', u'DT', u'NNP', u'NNP', u'CC', u'NNS', u'IN', u'NNP', u'NN', u'IN', u'JJ', u'JJ', u'CC', u'JJ', u'NNS', u'JJ', u'NNS', u'IN', u'NNP', u'POS', u'NNS', u'CC', u'NNS', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'IN', u'NNS', u'IN', u'NN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'-LRB-', u'JJ', u'-RRB-', u'NNP', u'IN', u'NNP', u'NN', u'CC', u'NN', u'JJ', u'JJ', u'NNP', u'NNP', u'NNP', u'NNP', u'NN', u'IN', u'NN', u'TO', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NN', u'CC', u'NNP', u'NNP', u'NNP', u'CD', u'IN', u'DT', u'JJ', u'NNP', u'IN', u'NNPS', u'CC', u'NNPS', u'NNP', u'IN', u'NNS', u'IN', u'NNP', u'CD', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNPS', u'CC', u'NNPS', u'NNP', u'IN', u'DT', u'JJ', u'NN'], u'char_offsets': [[38482, 38483], [38485, 38493], [38494, 38501], [38502, 38504], [38505, 38508], [38509, 38519], [38520, 38522], [38523, 38529], [38530, 38531], [38533, 38541], [38542, 38549], [38550, 38552], [38553, 38556], [38557, 38562], [38563, 38571], [38572, 38574], [38575, 38581], [38582, 38583], [38585, 38593], [38594, 38601], [38602, 38604], [38605, 38608], [38609, 38617], [38618, 38625], [38626, 38628], [38629, 38635], [38636, 38637], [38639, 38647], [38648, 38655], [38656, 38658], [38659, 38662], [38663, 38671], [38672, 38678], [38679, 38680], [38682, 38690], [38691, 38701], [38702, 38704], [38705, 38711], [38712, 38718], [38719, 38724], [38725, 38727], [38728, 38734], [38735, 38736], [38738, 38747], [38748, 38755], [38756, 38758], [38759, 38765], [38766, 38768], [38769, 38772], [38773, 38779], [38780, 38787], [38788, 38789], [38791, 38801], [38802, 38803], [38804, 38810], [38810, 38812], [38813, 38821], [38822, 38829], [38830, 38831], [38833, 38848], [38849, 38850], [38851, 38859], [38860, 38868], [38869, 38880], [38881, 38882], [38884, 38892], [38893, 38900], [38900, 38901], [38902, 38903], [38904, 38909], [38910, 38912], [38913, 38916], [38917, 38924], [38925, 38926], [38928, 38938], [38939, 38945], [38946, 38950], [38951, 38957], [38957, 38959], [38960, 38970], [38971, 38976], [38977, 38978], [38980, 38983], [38984, 38992], [38993, 38998], [38999, 39005], [39006, 39007], [39009, 39015], [39016, 39018], [39019, 39022], [39023, 39028], [39029, 39037], [39038, 39039], [39040, 39042], [39043, 39048], [39049, 39060], [39061, 39068], [39068, 39069], [39071, 39078], [39079, 39083], [39084, 39089], [39089, 39090], [39091, 39097], [39097, 39098], [39100, 39110], [39111, 39112], [39113, 39120], [39121, 39126], [39126, 39127], [39128, 39134], [39135, 39144], [39145, 39147], [39148, 39150], [39151, 39154], [39155, 39161], [39162, 39169], [39170, 39174], [39175, 39177], [39178, 39187], [39188, 39191], [39192, 39200], [39201, 39212], [39213, 39215], [39216, 39221], [39222, 39226], [39227, 39234], [39235, 39247], [39248, 39250], [39251, 39254], [39255, 39263], [39264, 39270], [39271, 39283], [39284, 39286], [39287, 39290], [39291, 39299], [39300, 39309], [39310, 39313], [39314, 39325], [39326, 39328], [39329, 39335], [39336, 39345], [39346, 39348], [39349, 39351], [39352, 39355], [39356, 39362], [39363, 39370], [39371, 39379], [39380, 39392], [39393, 39395], [39396, 39399], [39400, 39408], [39409, 39415], [39416, 39428], [39429, 39431], [39432, 39435], [39436, 39444], [39445, 39455], [39456, 39464], [39464, 39465], [39466, 39471], [39472, 39474], [39475, 39477], [39478, 39483], [39484, 39487], [39488, 39493], [39494, 39496], [39497, 39504], [39505, 39510], [39511, 39517], [39518, 39520], [39521, 39524], [39525, 39531], [39532, 39534], [39535, 39542], [39543, 39550], [39551, 39563], [39564, 39566], [39567, 39570], [39571, 39579], [39580, 39586], [39587, 39589], [39590, 39593], [39594, 39601], [39602, 39604], [39605, 39612], [39613, 39618], [39619, 39626], [39627, 39628], [39628, 39632], [39632, 39633], [39634, 39640], [39641, 39649], [39650, 39652], [39653, 39662], [39663, 39669], [39670, 39673], [39674, 39681], [39682, 39690], [39691, 39703], [39704, 39709], [39710, 39712], [39713, 39719], [39720, 39721], [39721, 39731], [39731, 39732], [39733, 39745], [39746, 39751], [39752, 39754], [39755, 39761], [39762, 39763], [39763, 39773], [39773, 39774], [39775, 39783], [39784, 39791], [39792, 39794], [39795, 39801], [39802, 39808], [39809, 39814], [39815, 39818], [39819, 39821], [39822, 39832], [39833, 39836], [39837, 39839], [39840, 39844], [39845, 39849], [39850, 39859], [39860, 39862], [39863, 39872], [39873, 39875], [39876, 39882], [39883, 39890], [39891, 39893], [39894, 39900], [39901, 39904], [39905, 39913], [39914, 39927], [39928, 39934], [39935, 39939], [39940, 39945], [39946, 39955], [39956, 39965], [39966, 39968], [39969, 39971], [39972, 39975], [39976, 39982], [39983, 39990], [39991, 39996], [39997, 39999], [40000, 40003], [40004, 40012], [40013, 40022], [40023, 40031], [40032, 40039], [40040, 40042], [40043, 40049], [40050, 40053], [40054, 40062], [40063, 40070], [40071, 40083], [40084, 40086], [40087, 40090], [40091, 40099], [40100, 40107], [40108, 40110], [40111, 40117], [40118, 40121], [40122, 40130], [40131, 40136], [40136, 40138], [40139, 40144], [40145, 40152], [40153, 40156], [40157, 40163], [40164, 40168], [40169, 40171], [40172, 40177], [40178, 40187], [40188, 40190], [40191, 40197], [40198, 40202], [40203, 40205], [40206, 40215], [40216, 40223], [40224, 40226], [40227, 40233], [40233, 40244], [40245, 40252], [40253, 40257], [40258, 40262], [40263, 40266], [40267, 40272], [40273, 40275], [40276, 40286], [40287, 40295], [40296, 40302], [40303, 40307], [40308, 40313], [40314, 40321], [40322, 40328], [40329, 40331], [40332, 40335], [40336, 40340], [40341, 40344], [40345, 40350], [40351, 40359], [40360, 40369], [40370, 40377], [40378, 40385], [40386, 40392], [40392, 40394], [40395, 40399], [40400, 40402], [40403, 40406], [40407, 40415], [40416, 40418], [40419, 40430], [40431, 40442], [40443, 40449], [40450, 40452], [40453, 40456], [40457, 40463], [40464, 40473], [40474, 40477], [40478, 40489], [40490, 40492], [40493, 40499], [40500, 40504], [40505, 40507], [40508, 40516], [40517, 40527], [40528, 40531], [40532, 40543], [40544, 40551], [40552, 40563], [40564, 40574], [40575, 40577], [40578, 40584], [40584, 40586], [40587, 40596], [40597, 40600], [40601, 40612], [40613, 40622], [40623, 40625], [40626, 40628], [40629, 40632], [40633, 40639], [40640, 40647], [40648, 40652], [40653, 40655], [40656, 40663], [40664, 40666], [40667, 40671], [40672, 40681], [40682, 40684], [40685, 40687], [40688, 40691], [40692, 40698], [40699, 40706], [40707, 40711], [40712, 40714], [40715, 40724], [40725, 40727], [40728, 40731], [40732, 40733], [40733, 40740], [40740, 40741], [40742, 40754], [40755, 40758], [40759, 40767], [40768, 40780], [40781, 40784], [40785, 40796], [40797, 40802], [40803, 40811], [40812, 40816], [40817, 40822], [40823, 40832], [40833, 40841], [40842, 40848], [40849, 40851], [40852, 40863], [40864, 40866], [40867, 40873], [40874, 40882], [40883, 40887], [40888, 40893], [40894, 40896], [40897, 40903], [40904, 40912], [40913, 40929], [40930, 40933], [40934, 40952], [40953, 40963], [40964, 40971], [40972, 40984], [40985, 40987], [40988, 40991], [40992, 41000], [41001, 41008], [41009, 41011], [41012, 41018], [41019, 41022], [41023, 41031], [41032, 41036], [41037, 41039], [41040, 41044], [41045, 41047], [41048, 41054], [41055, 41059], [41060, 41064], [41065, 41069], [41070, 41075], [41076, 41079], [41080, 41088], [41089, 41096], [41097, 41099], [41100, 41106], [41107, 41110], [41111, 41119], [41120, 41127], [41128, 41130], [41131, 41134], [41135, 41141], [41142, 41150]]}) 
answer: set([u'ridg', u'vimi', u'1917', u'soldier'])
candidate Sentence: (0.035461448132991791, {u'tokens': [u'Canadian', u'provinces', u'and', u'territories', u'are', u'responsible', u'for', u'education', u'.'], u'lemmas': [u'canadian', u'province', u'and', u'territory', u'be', u'responsible', u'for', u'education', u'.'], u'pos': [u'JJ', u'NNS', u'CC', u'NNS', u'VBP', u'JJ', u'IN', u'NN', u'.'], u'char_offsets': [[32298, 32306], [32307, 32316], [32317, 32320], [32321, 32332], [32333, 32336], [32337, 32348], [32349, 32352], [32353, 32362], [32362, 32363]]}) 
answer: set([u'ridg', u'vimi', u'battl', u'soldier', u'win', u'1917'])
candidate Sentence: (0.0266583152115345, {u'tokens': [u'Multicultural', u'heritage', u'is', u'enshrined', u'in', u'Section', u'27', u'of', u'the', u'Canadian', u'Charter', u'of', u'Rights', u'and', u'Freedoms', u'.'], u'lemmas': [u'multicultural', u'heritage', u'be', u'enshrine', u'in', u'section', u'27', u'of', u'the', u'canadian', u'Charter', u'of', u'Rights', u'and', u'Freedoms', u'.'], u'pos': [u'JJ', u'NN', u'VBZ', u'VBN', u'IN', u'NN', u'CD', u'IN', u'DT', u'JJ', u'NNP', u'IN', u'NNPS', u'CC', u'NNPS', u'.'], u'char_offsets': [[34131, 34144], [34145, 34153], [34154, 34156], [34157, 34166], [34167, 34169], [34170, 34177], [34178, 34180], [34181, 34183], [34184, 34187], [34188, 34196], [34197, 34204], [34205, 34207], [34208, 34214], [34215, 34218], [34219, 34227], [34227, 34228]]}) 
answer: set([u'ridg', u'win', u'battl', u'soldier', u'vimi', u'1917'])
candidate Sentence: (0.026638742536306381, {u'tokens': [u'The', u'first', u'Canadian', u'Army', u'units', u'arrived', u'in', u'Britain', u'in', u'December', u'1939', u'.'], u'lemmas': [u'the', u'first', u'canadian', u'Army', u'unit', u'arrive', u'in', u'Britain', u'in', u'December', u'1939', u'.'], u'pos': [u'DT', u'JJ', u'JJ', u'NNP', u'NNS', u'VBD', u'IN', u'NNP', u'IN', u'NNP', u'CD', u'.'], u'char_offsets': [[9624, 9627], [9628, 9633], [9634, 9642], [9643, 9647], [9648, 9653], [9654, 9661], [9662, 9664], [9665, 9672], [9673, 9675], [9676, 9684], [9685, 9689], [9689, 9690]]}) 
answer: set([u'ridg', u'win', u'battl', u'soldier', u'vimi', u'1917'])
candidate Sentence: (0.026285696774721146, {u'tokens': [u'Glaciers', u'are', u'visible', u'in', u'the', u'Canadian', u'Rockies', u'and', u'Coast', u'Mountains', u'.'], u'lemmas': [u'glacier', u'be', u'visible', u'in', u'the', u'canadian', u'Rockies', u'and', u'Coast', u'mountain', u'.'], u'pos': [u'NNS', u'VBP', u'JJ', u'IN', u'DT', u'JJ', u'NNPS', u'CC', u'NNP', u'NNS', u'.'], u'char_offsets': [[22371, 22379], [22380, 22383], [22384, 22391], [22392, 22394], [22395, 22398], [22399, 22407], [22408, 22415], [22416, 22419], [22420, 22425], [22426, 22435], [22435, 22436]]}) 
answer: set([u'ridg', u'win', u'battl', u'soldier', u'vimi', u'1917'])
['Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'canada', u'.'])

Did Canadian soldiers win the Battle of Vimy Ridge in 1917?
Validity= False
Question Type = NA
Answer Type = NA
Answer = No, it did not.
Difficulty = easy
Article_Title = Canada
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a8.txt

Yes
----------------------------- Captured stderr call -----------------------------
INFO:CoreNLP_JavaServer: INPUT: 500 documents, 1191045 characters, 220343 tokens, 2382.1 char/doc, 440.7 tok/doc RATES: 24.691 doc/sec, 10881.1 tok/sec

_____________________________ test_yesno[param57] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156dd878>, (<src.tfidf.TF_IDF object at 0x110787d50>, set(['.', 'duck'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Some are')
E            +    where 'Some are' = <src.question_processing.Question_parser instance at 0x1156dd878>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.53871965408325195, {u'tokens': [u'Some', u'duck', u'species', u',', u'mainly', u'those', u'breeding', u'in', u'the', u'temperate', u'and', u'Arctic', u'Northern', u'Hemisphere', u',', u'are', u'migratory', u';', u'those', u'in', u'the', u'tropics', u',', u'however', u',', u'are', u'generally', u'not', u'.'], u'lemmas': [u'some', u'duck', u'species', u',', u'mainly', u'those', u'breed', u'in', u'the', u'temperate', u'and', u'Arctic', u'Northern', u'Hemisphere', u',', u'be', u'migratory', u';', u'those', u'in', u'the', u'tropics', u',', u'however', u',', u'be', u'generally', u'not', u'.'], u'pos': [u'DT', u'NN', u'NNS', u',', u'RB', u'DT', u'VBG', u'IN', u'DT', u'JJ', u'CC', u'NNP', u'NNP', u'NNP', u',', u'VBP', u'JJ', u':', u'DT', u'IN', u'DT', u'NNS', u',', u'RB', u',', u'VBP', u'RB', u'RB', u'.'], u'char_offsets': [[946, 950], [951, 955], [956, 963], [963, 964], [965, 971], [972, 977], [978, 986], [987, 989], [990, 993], [994, 1003], [1004, 1007], [1008, 1014], [1015, 1023], [1024, 1034], [1034, 1035], [1036, 1039], [1040, 1049], [1049, 1050], [1051, 1056], [1057, 1059], [1060, 1063], [1064, 1071], [1071, 1072], [1073, 1080], [1080, 1081], [1082, 1085], [1086, 1095], [1096, 1099], [1099, 1100]]}) 
answer: set([])
candidate Sentence: (0.033190783113241196, {u'tokens': [u'The', u'ducks', u'are', u'divided', u'between', u'several', u'subfamilies', u'listed', u'in', u'full', u'in', u'the', u'Anatidae', u'article', u'.'], u'lemmas': [u'the', u'duck', u'be', u'divide', u'between', u'several', u'subfamily', u'list', u'in', u'full', u'in', u'the', u'Anatidae', u'article', u'.'], u'pos': [u'DT', u'NNS', u'VBP', u'VBN', u'IN', u'JJ', u'NNS', u'VBN', u'IN', u'JJ', u'IN', u'DT', u'NNP', u'NN', u'.'], u'char_offsets': [[166, 169], [170, 175], [176, 179], [180, 187], [188, 195], [196, 203], [204, 215], [216, 222], [223, 225], [226, 230], [231, 233], [234, 237], [238, 246], [247, 254], [254, 255]]}) 
answer: set([u'arctic', u'northern', u'hemispher', u'migratori'])
candidate Sentence: (0.03225313127040863, {u'tokens': [u'Of', u'the', u'many', u'ducks', u'in', u'fiction', u',', u'many', u'are', u'silly', u'cartoon', u'characters', u'like', u'Daffy', u'Duck', u'-LRB-', u'see', u'the', u'New', u'Scientist', u'article', u'mentioning', u'humor', u'in', u'the', u'word', u'``', u'duck', u"''", u'-RRB-', u'.'], u'lemmas': [u'of', u'the', u'many', u'duck', u'in', u'fiction', u',', u'many', u'be', u'silly', u'cartoon', u'character', u'like', u'Daffy', u'duck', u'-lrb-', u'see', u'the', u'New', u'Scientist', u'article', u'mention', u'humor', u'in', u'the', u'word', u'``', u'duck', u"''", u'-rrb-', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'NNS', u'IN', u'NN', u',', u'JJ', u'VBP', u'JJ', u'NN', u'NNS', u'IN', u'NNP', u'NN', u'-LRB-', u'VB', u'DT', u'NNP', u'NNP', u'NN', u'VBG', u'NN', u'IN', u'DT', u'NN', u'``', u'NN', u"''", u'-RRB-', u'.'], u'char_offsets': [[6243, 6245], [6246, 6249], [6250, 6254], [6255, 6260], [6261, 6263], [6264, 6271], [6271, 6272], [6273, 6277], [6278, 6281], [6282, 6287], [6288, 6295], [6296, 6306], [6307, 6311], [6312, 6317], [6318, 6322], [6323, 6324], [6324, 6327], [6328, 6331], [6332, 6335], [6336, 6345], [6346, 6353], [6355, 6365], [6366, 6371], [6372, 6374], [6375, 6378], [6379, 6383], [6384, 6385], [6385, 6389], [6389, 6390], [6390, 6391], [6391, 6392]]}) 
answer: set([u'arctic', u'northern', u'hemispher', u'migratori'])
candidate Sentence: (0.029212161898612976, {u'tokens': [u'Duck', u'is', u'the', u'common', u'name', u'for', u'a', u'number', u'of', u'species', u'in', u'the', u'Anatidae', u'family', u'of', u'birds', u'.'], u'lemmas': [u'duck', u'be', u'the', u'common', u'name', u'for', u'a', u'number', u'of', u'species', u'in', u'the', u'Anatidae', u'family', u'of', u'bird', u'.'], u'pos': [u'NN', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNS', u'IN', u'DT', u'NNP', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[85, 89], [90, 92], [93, 96], [97, 103], [104, 108], [109, 112], [113, 114], [115, 121], [122, 124], [125, 132], [133, 135], [136, 139], [140, 148], [149, 155], [156, 158], [159, 164], [164, 165]]}) 
answer: set([u'arctic', u'northern', u'hemispher', u'migratori'])
candidate Sentence: (0.024528339505195618, {u'tokens': [u'In', u'2002', u',', u'psychologist', u'Richard', u'Wiseman', u'and', u'colleagues', u'at', u'the', u'University', u'of', u'Hertfordshire', u'-LRB-', u'UK', u'-RRB-', u'finished', u'a', u'year-long', u'LaughLab', u'experiment', u',', u'concluding', u'that', u',', u'of', u'the', u'animals', u'in', u'the', u'world', u',', u'the', u'duck', u'is', u'the', u'type', u'that', u'attracts', u'most', u'humor', u'and', u'silliness', u';', u'he', u'said', u'``', u'If', u'you', u"'re", u'going', u'to', u'tell', u'a', u'joke', u'involving', u'an', u'animal', u',', u'make', u'it', u'a', u'duck', u'.', u"''"], u'lemmas': [u'in', u'2002', u',', u'psychologist', u'Richard', u'Wiseman', u'and', u'colleague', u'at', u'the', u'University', u'of', u'Hertfordshire', u'-lrb-', u'UK', u'-rrb-', u'finish', u'a', u'year-long', u'LaughLab', u'experiment', u',', u'conclude', u'that', u',', u'of', u'the', u'animal', u'in', u'the', u'world', u',', u'the', u'duck', u'be', u'the', u'type', u'that', u'attract', u'most', u'humor', u'and', u'silliness', u';', u'he', u'say', u'``', u'if', u'you', u'be', u'go', u'to', u'tell', u'a', u'joke', u'involve', u'a', u'animal', u',', u'make', u'it', u'a', u'duck', u'.', u"''"], u'pos': [u'IN', u'CD', u',', u'NN', u'NNP', u'NNP', u'CC', u'NNS', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u'VBD', u'DT', u'JJ', u'NNP', u'NN', u',', u'VBG', u'IN', u',', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NN', u',', u'DT', u'NN', u'VBZ', u'DT', u'NN', u'WDT', u'VBZ', u'RBS', u'NN', u'CC', u'NN', u':', u'PRP', u'VBD', u'``', u'IN', u'PRP', u'VBP', u'VBG', u'TO', u'VB', u'DT', u'NN', u'VBG', u'DT', u'NN', u',', u'VBP', u'PRP', u'DT', u'NN', u'.', u"''"], u'char_offsets': [[5756, 5758], [5759, 5763], [5763, 5764], [5765, 5777], [5778, 5785], [5786, 5793], [5794, 5797], [5798, 5808], [5809, 5811], [5812, 5815], [5816, 5826], [5827, 5829], [5830, 5843], [5844, 5845], [5845, 5847], [5847, 5848], [5849, 5857], [5858, 5859], [5860, 5869], [5870, 5878], [5879, 5889], [5889, 5890], [5891, 5901], [5902, 5906], [5906, 5907], [5908, 5910], [5911, 5914], [5915, 5922], [5923, 5925], [5926, 5929], [5930, 5935], [5935, 5936], [5937, 5940], [5941, 5945], [5946, 5948], [5949, 5952], [5953, 5957], [5958, 5962], [5963, 5971], [5972, 5976], [5977, 5982], [5983, 5986], [5987, 5996], [5996, 5997], [5998, 6000], [6001, 6005], [6006, 6007], [6007, 6009], [6010, 6013], [6013, 6016], [6017, 6022], [6023, 6025], [6026, 6030], [6031, 6032], [6033, 6037], [6038, 6047], [6048, 6050], [6051, 6057], [6057, 6058], [6059, 6063], [6064, 6066], [6067, 6068], [6069, 6073], [6073, 6074], [6074, 6075]]}) 
answer: set([u'arctic', u'northern', u'hemispher', u'migratori'])
candidate Sentence: (0.022690471261739731, {u'tokens': [u'This', u'can', u'occasionally', u'include', u'fish', u'such', u'as', u'the', u'muskie', u'in', u'North', u'America', u'or', u'the', u'pike', u'in', u'Europe', u'.'], u'lemmas': [u'this', u'can', u'occasionally', u'include', u'fish', u'such', u'as', u'the', u'muskie', u'in', u'North', u'America', u'or', u'the', u'pike', u'in', u'Europe', u'.'], u'pos': [u'DT', u'MD', u'RB', u'VB', u'NN', u'JJ', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'DT', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[3008, 3012], [3013, 3016], [3017, 3029], [3030, 3037], [3038, 3042], [3043, 3047], [3048, 3050], [3051, 3054], [3055, 3061], [3062, 3064], [3065, 3070], [3071, 3078], [3079, 3081], [3082, 3085], [3086, 3090], [3091, 3093], [3094, 3100], [3100, 3101]]}) 
answer: set([u'arctic', u'hemispher', u'northern', u'migratori'])
candidate Sentence: (0.02029997855424881, {u'tokens': [u'*', u'In', u'2007', u',', u'a', u'duck', u'in', u'Tallahassee', u',', u'Florida', u'survived', u'a', u'gunshot', u'wound', u'and', u'two', u'days', u'stored', u'in', u'a', u'refrigerator', u'whilst', u'presumed', u'dead', u'.'], u'lemmas': [u'*', u'in', u'2007', u',', u'a', u'duck', u'in', u'Tallahassee', u',', u'Florida', u'survive', u'a', u'gunshot', u'wound', u'and', u'two', u'day', u'store', u'in', u'a', u'refrigerator', u'whilst', u'presumed', u'dead', u'.'], u'pos': [u'SYM', u'IN', u'CD', u',', u'DT', u'NN', u'IN', u'NNP', u',', u'NNP', u'VBD', u'DT', u'JJ', u'NN', u'CC', u'CD', u'NNS', u'VBN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'.'], u'char_offsets': [[7631, 7632], [7632, 7634], [7635, 7639], [7639, 7640], [7641, 7642], [7643, 7647], [7648, 7650], [7651, 7662], [7662, 7663], [7664, 7671], [7672, 7680], [7681, 7682], [7683, 7690], [7691, 7696], [7697, 7700], [7701, 7704], [7705, 7709], [7710, 7716], [7717, 7719], [7720, 7721], [7722, 7734], [7735, 7741], [7742, 7750], [7751, 7755], [7755, 7756]]}) 
answer: set([u'arctic', u'hemispher', u'northern', u'migratori'])
candidate Sentence: (0.019802901893854141, {u'tokens': [u'jpg', u'|', u'Ducks', u'and', u'geese', u'in', u'a', u'yard', u'in', u'Manchester', u',', u'UK', u'Image', u':', u'Indian', u'Runner', u'Duck.jpg', u'|', u'Indian', u'Runner', u'Duck', u'*', u'Domesticated', u'duck', u'ducks', u'kept', u'as', u'pets', u'or', u'show', u'animals', u'and', u'for', u'meat', u'and', u'eggs', u'and', u'down', u'*', u'Angel', u'Wing', u'-', u'A', u'disease', u'common', u'in', u'ducks', u'.'], u'lemmas': [u'jpg', u'|', u'duck', u'and', u'goose', u'in', u'a', u'yard', u'in', u'Manchester', u',', u'UK', u'image', u':', u'indian', u'Runner', u'Duck.jpg', u'|', u'Indian', u'Runner', u'duck', u'*', u'domesticate', u'duck', u'duck', u'keep', u'as', u'pet', u'or', u'show', u'animal', u'and', u'for', u'meat', u'and', u'egg', u'and', u'down', u'*', u'Angel', u'wing', u'-', u'a', u'disease', u'common', u'in', u'duck', u'.'], u'pos': [u'NN', u'CD', u'NNS', u'CC', u'NNS', u'IN', u'DT', u'NN', u'IN', u'NNP', u',', u'NNP', u'NN', u':', u'JJ', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NN', u'SYM', u'VBN', u'NN', u'NNS', u'VBD', u'IN', u'NNS', u'CC', u'VB', u'NNS', u'CC', u'IN', u'NN', u'CC', u'NNS', u'CC', u'RB', u'SYM', u'NNP', u'NN', u':', u'DT', u'NN', u'JJ', u'IN', u'NNS', u'.'], u'char_offsets': [[8946, 8949], [8949, 8950], [8950, 8955], [8956, 8959], [8960, 8965], [8966, 8968], [8969, 8970], [8971, 8975], [8976, 8978], [8979, 8989], [8989, 8990], [8991, 8993], [8994, 8999], [8999, 9000], [9000, 9006], [9007, 9013], [9014, 9022], [9022, 9023], [9023, 9029], [9030, 9036], [9037, 9041], [9042, 9043], [9043, 9055], [9056, 9060], [9062, 9067], [9068, 9072], [9073, 9075], [9076, 9080], [9081, 9083], [9084, 9088], [9089, 9096], [9097, 9100], [9101, 9104], [9105, 9109], [9110, 9113], [9114, 9118], [9119, 9122], [9123, 9127], [9128, 9129], [9129, 9134], [9135, 9139], [9140, 9141], [9142, 9143], [9144, 9151], [9152, 9158], [9159, 9161], [9162, 9167], [9167, 9168]]}) 
answer: set([u'arctic', u'hemispher', u'northern', u'migratori'])
candidate Sentence: (0.019228028133511543, {u'tokens': [u'Adult', u'ducks', u'are', u'fast', u'fliers', u',', u'but', u'may', u'be', u'caught', u'on', u'the', u'water', u'by', u'large', u'aquatic', u'predators', u'.'], u'lemmas': [u'adult', u'duck', u'be', u'fast', u'flier', u',', u'but', u'may', u'be', u'catch', u'on', u'the', u'water', u'by', u'large', u'aquatic', u'predator', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'JJ', u'NNS', u',', u'CC', u'MD', u'VB', u'VBN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[2920, 2925], [2926, 2931], [2932, 2935], [2936, 2940], [2941, 2947], [2947, 2948], [2949, 2952], [2953, 2956], [2957, 2959], [2960, 2966], [2967, 2969], [2970, 2973], [2974, 2979], [2980, 2982], [2983, 2988], [2989, 2996], [2997, 3006], [3006, 3007]]}) 
answer: set([u'arctic', u'hemispher', u'northern', u'migratori'])
candidate Sentence: (0.018294196575880051, {u'tokens': [u'Ducks', u'are', u'mostly', u'aquatic', u'birds', u',', u'mostly', u'smaller', u'than', u'their', u'relatives', u'the', u'swans', u'and', u'geese', u',', u'and', u'may', u'be', u'found', u'in', u'both', u'fresh', u'water', u'and', u'sea', u'water', u'.'], u'lemmas': [u'duck', u'be', u'mostly', u'aquatic', u'bird', u',', u'mostly', u'smaller', u'than', u'they', u'relative', u'the', u'swan', u'and', u'goose', u',', u'and', u'may', u'be', u'find', u'in', u'both', u'fresh', u'water', u'and', u'sea', u'water', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'JJ', u'NNS', u',', u'RB', u'JJR', u'IN', u'PRP$', u'NNS', u'DT', u'NNS', u'CC', u'NNS', u',', u'CC', u'MD', u'VB', u'VBN', u'IN', u'CC', u'JJ', u'NN', u'CC', u'NN', u'NN', u'.'], u'char_offsets': [[256, 261], [262, 265], [266, 272], [273, 280], [281, 286], [286, 287], [288, 294], [295, 302], [303, 307], [308, 313], [314, 323], [324, 327], [328, 333], [334, 337], [338, 343], [343, 344], [345, 348], [349, 352], [353, 355], [356, 361], [362, 364], [365, 369], [370, 375], [376, 381], [382, 385], [386, 389], [390, 395], [395, 396]]}) 
answer: set([u'arctic', u'northern', u'hemispher', u'migratori'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'duck'])

Are ducks in the Arctic Northern Hemisphere migratory?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Some are
Difficulty = easy
Article_Title = duck
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a10.txt

No
_____________________________ test_yesno[param58] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156dd8c0>, (<src.tfidf.TF_IDF object at 0x110787d50>, set(['.', 'duck'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156dd8c0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.53871965408325195, {u'tokens': [u'Some', u'duck', u'species', u',', u'mainly', u'those', u'breeding', u'in', u'the', u'temperate', u'and', u'Arctic', u'Northern', u'Hemisphere', u',', u'are', u'migratory', u';', u'those', u'in', u'the', u'tropics', u',', u'however', u',', u'are', u'generally', u'not', u'.'], u'lemmas': [u'some', u'duck', u'species', u',', u'mainly', u'those', u'breed', u'in', u'the', u'temperate', u'and', u'Arctic', u'Northern', u'Hemisphere', u',', u'be', u'migratory', u';', u'those', u'in', u'the', u'tropics', u',', u'however', u',', u'be', u'generally', u'not', u'.'], u'pos': [u'DT', u'NN', u'NNS', u',', u'RB', u'DT', u'VBG', u'IN', u'DT', u'JJ', u'CC', u'NNP', u'NNP', u'NNP', u',', u'VBP', u'JJ', u':', u'DT', u'IN', u'DT', u'NNS', u',', u'RB', u',', u'VBP', u'RB', u'RB', u'.'], u'char_offsets': [[946, 950], [951, 955], [956, 963], [963, 964], [965, 971], [972, 977], [978, 986], [987, 989], [990, 993], [994, 1003], [1004, 1007], [1008, 1014], [1015, 1023], [1024, 1034], [1034, 1035], [1036, 1039], [1040, 1049], [1049, 1050], [1051, 1056], [1057, 1059], [1060, 1063], [1064, 1071], [1071, 1072], [1073, 1080], [1080, 1081], [1082, 1085], [1086, 1095], [1096, 1099], [1099, 1100]]}) 
answer: set([])
candidate Sentence: (0.033190783113241196, {u'tokens': [u'The', u'ducks', u'are', u'divided', u'between', u'several', u'subfamilies', u'listed', u'in', u'full', u'in', u'the', u'Anatidae', u'article', u'.'], u'lemmas': [u'the', u'duck', u'be', u'divide', u'between', u'several', u'subfamily', u'list', u'in', u'full', u'in', u'the', u'Anatidae', u'article', u'.'], u'pos': [u'DT', u'NNS', u'VBP', u'VBN', u'IN', u'JJ', u'NNS', u'VBN', u'IN', u'JJ', u'IN', u'DT', u'NNP', u'NN', u'.'], u'char_offsets': [[166, 169], [170, 175], [176, 179], [180, 187], [188, 195], [196, 203], [204, 215], [216, 222], [223, 225], [226, 230], [231, 233], [234, 237], [238, 246], [247, 254], [254, 255]]}) 
answer: set([u'arctic', u'northern', u'hemispher', u'migratori'])
candidate Sentence: (0.03225313127040863, {u'tokens': [u'Of', u'the', u'many', u'ducks', u'in', u'fiction', u',', u'many', u'are', u'silly', u'cartoon', u'characters', u'like', u'Daffy', u'Duck', u'-LRB-', u'see', u'the', u'New', u'Scientist', u'article', u'mentioning', u'humor', u'in', u'the', u'word', u'``', u'duck', u"''", u'-RRB-', u'.'], u'lemmas': [u'of', u'the', u'many', u'duck', u'in', u'fiction', u',', u'many', u'be', u'silly', u'cartoon', u'character', u'like', u'Daffy', u'duck', u'-lrb-', u'see', u'the', u'New', u'Scientist', u'article', u'mention', u'humor', u'in', u'the', u'word', u'``', u'duck', u"''", u'-rrb-', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'NNS', u'IN', u'NN', u',', u'JJ', u'VBP', u'JJ', u'NN', u'NNS', u'IN', u'NNP', u'NN', u'-LRB-', u'VB', u'DT', u'NNP', u'NNP', u'NN', u'VBG', u'NN', u'IN', u'DT', u'NN', u'``', u'NN', u"''", u'-RRB-', u'.'], u'char_offsets': [[6243, 6245], [6246, 6249], [6250, 6254], [6255, 6260], [6261, 6263], [6264, 6271], [6271, 6272], [6273, 6277], [6278, 6281], [6282, 6287], [6288, 6295], [6296, 6306], [6307, 6311], [6312, 6317], [6318, 6322], [6323, 6324], [6324, 6327], [6328, 6331], [6332, 6335], [6336, 6345], [6346, 6353], [6355, 6365], [6366, 6371], [6372, 6374], [6375, 6378], [6379, 6383], [6384, 6385], [6385, 6389], [6389, 6390], [6390, 6391], [6391, 6392]]}) 
answer: set([u'arctic', u'northern', u'hemispher', u'migratori'])
candidate Sentence: (0.029212161898612976, {u'tokens': [u'Duck', u'is', u'the', u'common', u'name', u'for', u'a', u'number', u'of', u'species', u'in', u'the', u'Anatidae', u'family', u'of', u'birds', u'.'], u'lemmas': [u'duck', u'be', u'the', u'common', u'name', u'for', u'a', u'number', u'of', u'species', u'in', u'the', u'Anatidae', u'family', u'of', u'bird', u'.'], u'pos': [u'NN', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNS', u'IN', u'DT', u'NNP', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[85, 89], [90, 92], [93, 96], [97, 103], [104, 108], [109, 112], [113, 114], [115, 121], [122, 124], [125, 132], [133, 135], [136, 139], [140, 148], [149, 155], [156, 158], [159, 164], [164, 165]]}) 
answer: set([u'arctic', u'northern', u'hemispher', u'migratori'])
candidate Sentence: (0.024528339505195618, {u'tokens': [u'In', u'2002', u',', u'psychologist', u'Richard', u'Wiseman', u'and', u'colleagues', u'at', u'the', u'University', u'of', u'Hertfordshire', u'-LRB-', u'UK', u'-RRB-', u'finished', u'a', u'year-long', u'LaughLab', u'experiment', u',', u'concluding', u'that', u',', u'of', u'the', u'animals', u'in', u'the', u'world', u',', u'the', u'duck', u'is', u'the', u'type', u'that', u'attracts', u'most', u'humor', u'and', u'silliness', u';', u'he', u'said', u'``', u'If', u'you', u"'re", u'going', u'to', u'tell', u'a', u'joke', u'involving', u'an', u'animal', u',', u'make', u'it', u'a', u'duck', u'.', u"''"], u'lemmas': [u'in', u'2002', u',', u'psychologist', u'Richard', u'Wiseman', u'and', u'colleague', u'at', u'the', u'University', u'of', u'Hertfordshire', u'-lrb-', u'UK', u'-rrb-', u'finish', u'a', u'year-long', u'LaughLab', u'experiment', u',', u'conclude', u'that', u',', u'of', u'the', u'animal', u'in', u'the', u'world', u',', u'the', u'duck', u'be', u'the', u'type', u'that', u'attract', u'most', u'humor', u'and', u'silliness', u';', u'he', u'say', u'``', u'if', u'you', u'be', u'go', u'to', u'tell', u'a', u'joke', u'involve', u'a', u'animal', u',', u'make', u'it', u'a', u'duck', u'.', u"''"], u'pos': [u'IN', u'CD', u',', u'NN', u'NNP', u'NNP', u'CC', u'NNS', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'-LRB-', u'NNP', u'-RRB-', u'VBD', u'DT', u'JJ', u'NNP', u'NN', u',', u'VBG', u'IN', u',', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NN', u',', u'DT', u'NN', u'VBZ', u'DT', u'NN', u'WDT', u'VBZ', u'RBS', u'NN', u'CC', u'NN', u':', u'PRP', u'VBD', u'``', u'IN', u'PRP', u'VBP', u'VBG', u'TO', u'VB', u'DT', u'NN', u'VBG', u'DT', u'NN', u',', u'VBP', u'PRP', u'DT', u'NN', u'.', u"''"], u'char_offsets': [[5756, 5758], [5759, 5763], [5763, 5764], [5765, 5777], [5778, 5785], [5786, 5793], [5794, 5797], [5798, 5808], [5809, 5811], [5812, 5815], [5816, 5826], [5827, 5829], [5830, 5843], [5844, 5845], [5845, 5847], [5847, 5848], [5849, 5857], [5858, 5859], [5860, 5869], [5870, 5878], [5879, 5889], [5889, 5890], [5891, 5901], [5902, 5906], [5906, 5907], [5908, 5910], [5911, 5914], [5915, 5922], [5923, 5925], [5926, 5929], [5930, 5935], [5935, 5936], [5937, 5940], [5941, 5945], [5946, 5948], [5949, 5952], [5953, 5957], [5958, 5962], [5963, 5971], [5972, 5976], [5977, 5982], [5983, 5986], [5987, 5996], [5996, 5997], [5998, 6000], [6001, 6005], [6006, 6007], [6007, 6009], [6010, 6013], [6013, 6016], [6017, 6022], [6023, 6025], [6026, 6030], [6031, 6032], [6033, 6037], [6038, 6047], [6048, 6050], [6051, 6057], [6057, 6058], [6059, 6063], [6064, 6066], [6067, 6068], [6069, 6073], [6073, 6074], [6074, 6075]]}) 
answer: set([u'arctic', u'northern', u'hemispher', u'migratori'])
candidate Sentence: (0.022690471261739731, {u'tokens': [u'This', u'can', u'occasionally', u'include', u'fish', u'such', u'as', u'the', u'muskie', u'in', u'North', u'America', u'or', u'the', u'pike', u'in', u'Europe', u'.'], u'lemmas': [u'this', u'can', u'occasionally', u'include', u'fish', u'such', u'as', u'the', u'muskie', u'in', u'North', u'America', u'or', u'the', u'pike', u'in', u'Europe', u'.'], u'pos': [u'DT', u'MD', u'RB', u'VB', u'NN', u'JJ', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'DT', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[3008, 3012], [3013, 3016], [3017, 3029], [3030, 3037], [3038, 3042], [3043, 3047], [3048, 3050], [3051, 3054], [3055, 3061], [3062, 3064], [3065, 3070], [3071, 3078], [3079, 3081], [3082, 3085], [3086, 3090], [3091, 3093], [3094, 3100], [3100, 3101]]}) 
answer: set([u'arctic', u'hemispher', u'northern', u'migratori'])
candidate Sentence: (0.02029997855424881, {u'tokens': [u'*', u'In', u'2007', u',', u'a', u'duck', u'in', u'Tallahassee', u',', u'Florida', u'survived', u'a', u'gunshot', u'wound', u'and', u'two', u'days', u'stored', u'in', u'a', u'refrigerator', u'whilst', u'presumed', u'dead', u'.'], u'lemmas': [u'*', u'in', u'2007', u',', u'a', u'duck', u'in', u'Tallahassee', u',', u'Florida', u'survive', u'a', u'gunshot', u'wound', u'and', u'two', u'day', u'store', u'in', u'a', u'refrigerator', u'whilst', u'presumed', u'dead', u'.'], u'pos': [u'SYM', u'IN', u'CD', u',', u'DT', u'NN', u'IN', u'NNP', u',', u'NNP', u'VBD', u'DT', u'JJ', u'NN', u'CC', u'CD', u'NNS', u'VBN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'.'], u'char_offsets': [[7631, 7632], [7632, 7634], [7635, 7639], [7639, 7640], [7641, 7642], [7643, 7647], [7648, 7650], [7651, 7662], [7662, 7663], [7664, 7671], [7672, 7680], [7681, 7682], [7683, 7690], [7691, 7696], [7697, 7700], [7701, 7704], [7705, 7709], [7710, 7716], [7717, 7719], [7720, 7721], [7722, 7734], [7735, 7741], [7742, 7750], [7751, 7755], [7755, 7756]]}) 
answer: set([u'arctic', u'hemispher', u'northern', u'migratori'])
candidate Sentence: (0.019802901893854141, {u'tokens': [u'jpg', u'|', u'Ducks', u'and', u'geese', u'in', u'a', u'yard', u'in', u'Manchester', u',', u'UK', u'Image', u':', u'Indian', u'Runner', u'Duck.jpg', u'|', u'Indian', u'Runner', u'Duck', u'*', u'Domesticated', u'duck', u'ducks', u'kept', u'as', u'pets', u'or', u'show', u'animals', u'and', u'for', u'meat', u'and', u'eggs', u'and', u'down', u'*', u'Angel', u'Wing', u'-', u'A', u'disease', u'common', u'in', u'ducks', u'.'], u'lemmas': [u'jpg', u'|', u'duck', u'and', u'goose', u'in', u'a', u'yard', u'in', u'Manchester', u',', u'UK', u'image', u':', u'indian', u'Runner', u'Duck.jpg', u'|', u'Indian', u'Runner', u'duck', u'*', u'domesticate', u'duck', u'duck', u'keep', u'as', u'pet', u'or', u'show', u'animal', u'and', u'for', u'meat', u'and', u'egg', u'and', u'down', u'*', u'Angel', u'wing', u'-', u'a', u'disease', u'common', u'in', u'duck', u'.'], u'pos': [u'NN', u'CD', u'NNS', u'CC', u'NNS', u'IN', u'DT', u'NN', u'IN', u'NNP', u',', u'NNP', u'NN', u':', u'JJ', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NN', u'SYM', u'VBN', u'NN', u'NNS', u'VBD', u'IN', u'NNS', u'CC', u'VB', u'NNS', u'CC', u'IN', u'NN', u'CC', u'NNS', u'CC', u'RB', u'SYM', u'NNP', u'NN', u':', u'DT', u'NN', u'JJ', u'IN', u'NNS', u'.'], u'char_offsets': [[8946, 8949], [8949, 8950], [8950, 8955], [8956, 8959], [8960, 8965], [8966, 8968], [8969, 8970], [8971, 8975], [8976, 8978], [8979, 8989], [8989, 8990], [8991, 8993], [8994, 8999], [8999, 9000], [9000, 9006], [9007, 9013], [9014, 9022], [9022, 9023], [9023, 9029], [9030, 9036], [9037, 9041], [9042, 9043], [9043, 9055], [9056, 9060], [9062, 9067], [9068, 9072], [9073, 9075], [9076, 9080], [9081, 9083], [9084, 9088], [9089, 9096], [9097, 9100], [9101, 9104], [9105, 9109], [9110, 9113], [9114, 9118], [9119, 9122], [9123, 9127], [9128, 9129], [9129, 9134], [9135, 9139], [9140, 9141], [9142, 9143], [9144, 9151], [9152, 9158], [9159, 9161], [9162, 9167], [9167, 9168]]}) 
answer: set([u'arctic', u'hemispher', u'northern', u'migratori'])
candidate Sentence: (0.019228028133511543, {u'tokens': [u'Adult', u'ducks', u'are', u'fast', u'fliers', u',', u'but', u'may', u'be', u'caught', u'on', u'the', u'water', u'by', u'large', u'aquatic', u'predators', u'.'], u'lemmas': [u'adult', u'duck', u'be', u'fast', u'flier', u',', u'but', u'may', u'be', u'catch', u'on', u'the', u'water', u'by', u'large', u'aquatic', u'predator', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'JJ', u'NNS', u',', u'CC', u'MD', u'VB', u'VBN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[2920, 2925], [2926, 2931], [2932, 2935], [2936, 2940], [2941, 2947], [2947, 2948], [2949, 2952], [2953, 2956], [2957, 2959], [2960, 2966], [2967, 2969], [2970, 2973], [2974, 2979], [2980, 2982], [2983, 2988], [2989, 2996], [2997, 3006], [3006, 3007]]}) 
answer: set([u'arctic', u'hemispher', u'northern', u'migratori'])
candidate Sentence: (0.018294196575880051, {u'tokens': [u'Ducks', u'are', u'mostly', u'aquatic', u'birds', u',', u'mostly', u'smaller', u'than', u'their', u'relatives', u'the', u'swans', u'and', u'geese', u',', u'and', u'may', u'be', u'found', u'in', u'both', u'fresh', u'water', u'and', u'sea', u'water', u'.'], u'lemmas': [u'duck', u'be', u'mostly', u'aquatic', u'bird', u',', u'mostly', u'smaller', u'than', u'they', u'relative', u'the', u'swan', u'and', u'goose', u',', u'and', u'may', u'be', u'find', u'in', u'both', u'fresh', u'water', u'and', u'sea', u'water', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'JJ', u'NNS', u',', u'RB', u'JJR', u'IN', u'PRP$', u'NNS', u'DT', u'NNS', u'CC', u'NNS', u',', u'CC', u'MD', u'VB', u'VBN', u'IN', u'CC', u'JJ', u'NN', u'CC', u'NN', u'NN', u'.'], u'char_offsets': [[256, 261], [262, 265], [266, 272], [273, 280], [281, 286], [286, 287], [288, 294], [295, 302], [303, 307], [308, 313], [314, 323], [324, 327], [328, 333], [334, 337], [338, 343], [343, 344], [345, 348], [349, 352], [353, 355], [356, 361], [362, 364], [365, 369], [370, 375], [376, 381], [382, 385], [386, 389], [390, 395], [395, 396]]}) 
answer: set([u'arctic', u'northern', u'hemispher', u'migratori'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'duck'])

Are ducks in the Arctic Northern Hemisphere migratory?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = duck
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a10.txt

No
_____________________________ test_yesno[param69] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156ddbd8>, (<src.tfidf.TF_IDF object at 0x110787d50>, set(['.', 'duck'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156ddbd8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.43496689200401306, {u'tokens': [u'To', u'be', u'able', u'to', u'submerge', u'more', u'easily', u',', u'the', u'diving', u'ducks', u'are', u'heavier', u'than', u'dabbling', u'ducks', u',', u'and', u'therefore', u'have', u'more', u'difficulty', u'taking', u'off', u'to', u'fly', u'.'], u'lemmas': [u'to', u'be', u'able', u'to', u'submerge', u'more', u'easily', u',', u'the', u'diving', u'duck', u'be', u'heavier', u'than', u'dabble', u'duck', u',', u'and', u'therefore', u'have', u'more', u'difficulty', u'take', u'off', u'to', u'fly', u'.'], u'pos': [u'TO', u'VB', u'JJ', u'TO', u'VB', u'JJR', u'RB', u',', u'DT', u'JJ', u'NNS', u'VBP', u'JJR', u'IN', u'VBG', u'NNS', u',', u'CC', u'RB', u'VBP', u'RBR', u'NN', u'VBG', u'RP', u'TO', u'VB', u'.'], u'char_offsets': [[1321, 1323], [1324, 1326], [1327, 1331], [1332, 1334], [1335, 1343], [1344, 1348], [1349, 1355], [1355, 1356], [1357, 1360], [1361, 1367], [1368, 1373], [1374, 1377], [1378, 1385], [1386, 1390], [1391, 1399], [1400, 1405], [1405, 1406], [1407, 1410], [1411, 1420], [1421, 1425], [1426, 1430], [1431, 1441], [1442, 1448], [1449, 1452], [1453, 1455], [1456, 1459], [1459, 1460]]}) 
answer: set([u'tha'])
candidate Sentence: (0.23978151381015778, {u'tokens': [u'Diving', u'ducks', u'and', u'sea', u'ducks', u'forage', u'deep', u'underwater', u'.'], u'lemmas': [u'diving', u'duck', u'and', u'sea', u'duck', u'forage', u'deep', u'underwater', u'.'], u'pos': [u'JJ', u'NNS', u'CC', u'NN', u'NNS', u'VBP', u'JJ', u'JJ', u'.'], u'char_offsets': [[1270, 1276], [1277, 1282], [1283, 1286], [1287, 1290], [1291, 1296], [1297, 1303], [1304, 1308], [1309, 1319], [1319, 1320]]}) 
answer: set([u'heavier', u'tha', u'dabbl'])
candidate Sentence: (0.10658787935972214, {u'tokens': [u'Dabbling', u'ducks', u'feed', u'on', u'the', u'surface', u'of', u'water', u'or', u'on', u'land', u',', u'or', u'as', u'deep', u'as', u'they', u'can', u'reach', u'by', u'up-ending', u'without', u'completely', u'submerging', u'.'], u'lemmas': [u'dabble', u'duck', u'feed', u'on', u'the', u'surface', u'of', u'water', u'or', u'on', u'land', u',', u'or', u'as', u'deep', u'as', u'they', u'can', u'reach', u'by', u'up-ending', u'without', u'completely', u'submerge', u'.'], u'pos': [u'VBG', u'NNS', u'VB', u'IN', u'DT', u'NN', u'IN', u'NN', u'CC', u'IN', u'NN', u',', u'CC', u'RB', u'JJ', u'IN', u'PRP', u'MD', u'VB', u'IN', u'NN', u'IN', u'RB', u'VBG', u'.'], u'char_offsets': [[1461, 1469], [1470, 1475], [1476, 1480], [1481, 1483], [1484, 1487], [1488, 1495], [1496, 1498], [1499, 1504], [1505, 1507], [1508, 1510], [1511, 1515], [1515, 1516], [1517, 1519], [1520, 1522], [1523, 1527], [1528, 1530], [1531, 1535], [1536, 1539], [1540, 1545], [1546, 1548], [1549, 1558], [1559, 1566], [1567, 1577], [1578, 1588], [1588, 1589]]}) 
answer: set([u'dive', u'heavier', u'tha'])
candidate Sentence: (0.065034821629524231, {u'tokens': [u'The', u'word', u'duck', u'-LRB-', u'from', u'Anglo-Saxon', u'dce', u'-RRB-', u',', u'meaning', u'the', u'bird', u',', u'came', u'from', u'the', u'verb', u'``', u'to', u'duck', u"''", u'-LRB-', u'from', u'Anglo-Saxon', u'supposed', u'*', u'dcan', u'-RRB-', u'meaning', u'``', u'to', u'bend', u'down', u'low', u'as', u'if', u'to', u'get', u'under', u'something', u"''", u'or', u'``', u'to', u'dive', u"''", u',', u'because', u'of', u'the', u'way', u'many', u'species', u'in', u'the', u'dabbling', u'duck', u'group', u'feed', u'by', u'upending', u'-LRB-', u'compare', u'Dutch', u'duiken', u',', u'German', u'tauchen', u'=', u'``', u'to', u'dive', u"''", u'-RRB-', u'.'], u'lemmas': [u'the', u'word', u'duck', u'-lrb-', u'from', u'Anglo-Saxon', u'dce', u'-rrb-', u',', u'mean', u'the', u'bird', u',', u'come', u'from', u'the', u'verb', u'``', u'to', u'duck', u"''", u'-lrb-', u'from', u'anglo-saxon', u'suppose', u'*', u'dcan', u'-rrb-', u'meaning', u'``', u'to', u'bend', u'down', u'low', u'as', u'if', u'to', u'get', u'under', u'something', u"''", u'or', u'``', u'to', u'dive', u"''", u',', u'because', u'of', u'the', u'way', u'many', u'species', u'in', u'the', u'dabble', u'duck', u'group', u'feed', u'by', u'upend', u'-lrb-', u'compare', u'dutch', u'duiken', u',', u'german', u'tauchen', u'=', u'``', u'to', u'dive', u"''", u'-rrb-', u'.'], u'pos': [u'DT', u'NN', u'NN', u'-LRB-', u'IN', u'NNP', u'NN', u'-RRB-', u',', u'VBG', u'DT', u'NN', u',', u'VBD', u'IN', u'DT', u'VB', u'``', u'TO', u'VB', u"''", u'-LRB-', u'IN', u'JJ', u'VBN', u'SYM', u'NN', u'-RRB-', u'NN', u'``', u'TO', u'VB', u'RB', u'JJ', u'IN', u'IN', u'TO', u'VB', u'IN', u'NN', u"''", u'CC', u'``', u'TO', u'NN', u"''", u',', u'IN', u'IN', u'DT', u'NN', u'JJ', u'NNS', u'IN', u'DT', u'VBG', u'NN', u'NN', u'NN', u'IN', u'VBG', u'-LRB-', u'VB', u'JJ', u'NN', u',', u'JJ', u'NN', u'JJ', u'``', u'TO', u'NN', u"''", u'-RRB-', u'.'], u'char_offsets': [[3258, 3261], [3262, 3266], [3267, 3271], [3272, 3273], [3273, 3277], [3278, 3289], [3290, 3293], [3293, 3294], [3294, 3295], [3296, 3303], [3304, 3307], [3308, 3312], [3312, 3313], [3314, 3318], [3319, 3323], [3324, 3327], [3328, 3332], [3333, 3334], [3334, 3336], [3337, 3341], [3341, 3342], [3343, 3344], [3344, 3348], [3349, 3360], [3361, 3369], [3370, 3371], [3371, 3375], [3375, 3376], [3377, 3384], [3385, 3386], [3386, 3388], [3389, 3393], [3394, 3398], [3399, 3402], [3403, 3405], [3406, 3408], [3409, 3411], [3412, 3415], [3416, 3421], [3422, 3431], [3431, 3432], [3433, 3435], [3436, 3437], [3437, 3439], [3440, 3444], [3444, 3445], [3445, 3446], [3447, 3454], [3455, 3457], [3458, 3461], [3462, 3465], [3466, 3470], [3471, 3478], [3479, 3481], [3482, 3485], [3486, 3494], [3495, 3499], [3500, 3505], [3506, 3510], [3511, 3513], [3514, 3522], [3523, 3524], [3524, 3531], [3532, 3537], [3538, 3544], [3544, 3545], [3546, 3552], [3553, 3560], [3561, 3562], [3563, 3564], [3564, 3566], [3567, 3571], [3571, 3572], [3572, 3573], [3573, 3574]]}) 
answer: set([u'heavier', u'tha'])
candidate Sentence: (0.026854278519749641, {u'tokens': [u'The', u'expression', u'``', u'quacks', u'like', u'a', u'duck', u"''", u'is', u'sometimes', u'a', u'short', u'form', u'for', u'``', u'It', u'looks', u'like', u'a', u'duck', u',', u'it', u'quacks', u'like', u'a', u'duck', u',', u'it', u'swims', u'like', u'a', u'duck', u',', u'so', u'it', u"'s", u'a', u'duck', u'.', u"''"], u'lemmas': [u'the', u'expression', u'``', u'quack', u'like', u'a', u'duck', u"''", u'be', u'sometimes', u'a', u'short', u'form', u'for', u'``', u'it', u'look', u'like', u'a', u'duck', u',', u'it', u'quack', u'like', u'a', u'duck', u',', u'it', u'swim', u'like', u'a', u'duck', u',', u'so', u'it', u'be', u'a', u'duck', u'.', u"''"], u'pos': [u'DT', u'NN', u'``', u'VBZ', u'IN', u'DT', u'NN', u"''", u'VBZ', u'RB', u'DT', u'JJ', u'NN', u'IN', u'``', u'PRP', u'VBZ', u'IN', u'DT', u'NN', u',', u'PRP', u'VBZ', u'IN', u'DT', u'NN', u',', u'PRP', u'VBZ', u'IN', u'DT', u'NN', u',', u'IN', u'PRP', u'VBZ', u'DT', u'NN', u'.', u"''"], u'char_offsets': [[6570, 6573], [6574, 6584], [6585, 6586], [6586, 6592], [6593, 6597], [6598, 6599], [6600, 6604], [6604, 6605], [6606, 6608], [6609, 6618], [6619, 6620], [6621, 6626], [6627, 6631], [6632, 6635], [6636, 6637], [6637, 6639], [6640, 6645], [6646, 6650], [6651, 6652], [6653, 6657], [6657, 6658], [6659, 6661], [6662, 6668], [6669, 6673], [6674, 6675], [6676, 6680], [6680, 6681], [6682, 6684], [6685, 6690], [6691, 6695], [6696, 6697], [6698, 6702], [6702, 6703], [6704, 6706], [6707, 6709], [6709, 6711], [6712, 6713], [6714, 6718], [6718, 6719], [6719, 6720]]}) 
answer: set([u'dive', u'heavier', u'dabbl', u'tha'])
candidate Sentence: (0.023461487144231796, {u'tokens': [u'Adult', u'ducks', u'are', u'fast', u'fliers', u',', u'but', u'may', u'be', u'caught', u'on', u'the', u'water', u'by', u'large', u'aquatic', u'predators', u'.'], u'lemmas': [u'adult', u'duck', u'be', u'fast', u'flier', u',', u'but', u'may', u'be', u'catch', u'on', u'the', u'water', u'by', u'large', u'aquatic', u'predator', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'JJ', u'NNS', u',', u'CC', u'MD', u'VB', u'VBN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[2920, 2925], [2926, 2931], [2932, 2935], [2936, 2940], [2941, 2947], [2947, 2948], [2949, 2952], [2953, 2956], [2957, 2959], [2960, 2966], [2967, 2969], [2970, 2973], [2974, 2979], [2980, 2982], [2983, 2988], [2989, 2996], [2997, 3006], [3006, 3007]]}) 
answer: set([u'dive', u'heavier', u'dabbl', u'tha'])
candidate Sentence: (0.020830066874623299, {u'tokens': [u'The', u'duck', u'was', u'operated', u'on', u'and', u'was', u'again', u'presumed', u'dead', u'after', u'a', u'bad', u'reaction', u'to', u'anesthesia', u'.'], u'lemmas': [u'the', u'duck', u'be', u'operate', u'on', u'and', u'be', u'again', u'presume', u'dead', u'after', u'a', u'bad', u'reaction', u'to', u'anesthesia', u'.'], u'pos': [u'DT', u'NN', u'VBD', u'VBN', u'IN', u'CC', u'VBD', u'RB', u'VBN', u'JJ', u'IN', u'DT', u'JJ', u'NN', u'TO', u'NN', u'.'], u'char_offsets': [[7758, 7761], [7762, 7766], [7767, 7770], [7771, 7779], [7780, 7782], [7783, 7786], [7787, 7790], [7791, 7796], [7797, 7805], [7806, 7810], [7811, 7816], [7817, 7818], [7819, 7822], [7823, 7831], [7832, 7834], [7835, 7845], [7845, 7846]]}) 
answer: set([u'dive', u'heavier', u'dabbl', u'tha'])
candidate Sentence: (0.020087860524654388, {u'tokens': [u'Of', u'the', u'many', u'ducks', u'in', u'fiction', u',', u'many', u'are', u'silly', u'cartoon', u'characters', u'like', u'Daffy', u'Duck', u'-LRB-', u'see', u'the', u'New', u'Scientist', u'article', u'mentioning', u'humor', u'in', u'the', u'word', u'``', u'duck', u"''", u'-RRB-', u'.'], u'lemmas': [u'of', u'the', u'many', u'duck', u'in', u'fiction', u',', u'many', u'be', u'silly', u'cartoon', u'character', u'like', u'Daffy', u'duck', u'-lrb-', u'see', u'the', u'New', u'Scientist', u'article', u'mention', u'humor', u'in', u'the', u'word', u'``', u'duck', u"''", u'-rrb-', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'NNS', u'IN', u'NN', u',', u'JJ', u'VBP', u'JJ', u'NN', u'NNS', u'IN', u'NNP', u'NN', u'-LRB-', u'VB', u'DT', u'NNP', u'NNP', u'NN', u'VBG', u'NN', u'IN', u'DT', u'NN', u'``', u'NN', u"''", u'-RRB-', u'.'], u'char_offsets': [[6243, 6245], [6246, 6249], [6250, 6254], [6255, 6260], [6261, 6263], [6264, 6271], [6271, 6272], [6273, 6277], [6278, 6281], [6282, 6287], [6288, 6295], [6296, 6306], [6307, 6311], [6312, 6317], [6318, 6322], [6323, 6324], [6324, 6327], [6328, 6331], [6332, 6335], [6336, 6345], [6346, 6353], [6355, 6365], [6366, 6371], [6372, 6374], [6375, 6378], [6379, 6383], [6384, 6385], [6385, 6389], [6389, 6390], [6390, 6391], [6391, 6392]]}) 
answer: set([u'dive', u'heavier', u'dabbl', u'tha'])
candidate Sentence: (0.019040545448660851, {u'tokens': [u'All', u'domestic', u'ducks', u'are', u'descended', u'from', u'the', u'wild', u'Mallard', u'Anas', u'platyrhynchos', u',', u'except', u'the', u'Muscovy', u'Duck', u'.'], u'lemmas': [u'all', u'domestic', u'duck', u'be', u'descend', u'from', u'the', u'wild', u'Mallard', u'Anas', u'platyrhyncho', u',', u'except', u'the', u'Muscovy', u'duck', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u'VBP', u'VBN', u'IN', u'DT', u'JJ', u'NNP', u'NNP', u'NNS', u',', u'IN', u'DT', u'NNP', u'NN', u'.'], u'char_offsets': [[4442, 4445], [4446, 4454], [4455, 4460], [4461, 4464], [4465, 4474], [4475, 4479], [4480, 4483], [4484, 4488], [4489, 4496], [4497, 4501], [4502, 4515], [4515, 4516], [4517, 4523], [4524, 4527], [4528, 4535], [4536, 4540], [4541, 4542]]}) 
answer: set([u'dive', u'heavier', u'dabbl', u'tha'])
candidate Sentence: (0.018010783940553665, {u'tokens': [u'a', u'picture', u'of', u'a', u'duck', u'is', u'used', u'to', u'say', u'``', u'heads', u'up', u"''", u'.'], u'lemmas': [u'a', u'picture', u'of', u'a', u'duck', u'be', u'use', u'to', u'say', u'``', u'head', u'up', u"''", u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'VBN', u'TO', u'VB', u'``', u'NNS', u'RB', u"''", u'.'], u'char_offsets': [[6523, 6524], [6525, 6532], [6533, 6535], [6536, 6537], [6538, 6542], [6543, 6545], [6546, 6550], [6551, 6553], [6554, 6557], [6558, 6559], [6559, 6564], [6565, 6567], [6567, 6568], [6568, 6569]]}) 
answer: set([u'dive', u'heavier', u'dabbl', u'tha'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'duck'])

Are diving ducks heavier tha dabbling ducks?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = duck
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a10.txt

No
_____________________________ test_yesno[param70] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156ddc20>, (<src.tfidf.TF_IDF object at 0x110787d50>, set(['.', 'duck'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156ddc20>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.43496689200401306, {u'tokens': [u'To', u'be', u'able', u'to', u'submerge', u'more', u'easily', u',', u'the', u'diving', u'ducks', u'are', u'heavier', u'than', u'dabbling', u'ducks', u',', u'and', u'therefore', u'have', u'more', u'difficulty', u'taking', u'off', u'to', u'fly', u'.'], u'lemmas': [u'to', u'be', u'able', u'to', u'submerge', u'more', u'easily', u',', u'the', u'diving', u'duck', u'be', u'heavier', u'than', u'dabble', u'duck', u',', u'and', u'therefore', u'have', u'more', u'difficulty', u'take', u'off', u'to', u'fly', u'.'], u'pos': [u'TO', u'VB', u'JJ', u'TO', u'VB', u'JJR', u'RB', u',', u'DT', u'JJ', u'NNS', u'VBP', u'JJR', u'IN', u'VBG', u'NNS', u',', u'CC', u'RB', u'VBP', u'RBR', u'NN', u'VBG', u'RP', u'TO', u'VB', u'.'], u'char_offsets': [[1321, 1323], [1324, 1326], [1327, 1331], [1332, 1334], [1335, 1343], [1344, 1348], [1349, 1355], [1355, 1356], [1357, 1360], [1361, 1367], [1368, 1373], [1374, 1377], [1378, 1385], [1386, 1390], [1391, 1399], [1400, 1405], [1405, 1406], [1407, 1410], [1411, 1420], [1421, 1425], [1426, 1430], [1431, 1441], [1442, 1448], [1449, 1452], [1453, 1455], [1456, 1459], [1459, 1460]]}) 
answer: set([u'tha'])
candidate Sentence: (0.23978151381015778, {u'tokens': [u'Diving', u'ducks', u'and', u'sea', u'ducks', u'forage', u'deep', u'underwater', u'.'], u'lemmas': [u'diving', u'duck', u'and', u'sea', u'duck', u'forage', u'deep', u'underwater', u'.'], u'pos': [u'JJ', u'NNS', u'CC', u'NN', u'NNS', u'VBP', u'JJ', u'JJ', u'.'], u'char_offsets': [[1270, 1276], [1277, 1282], [1283, 1286], [1287, 1290], [1291, 1296], [1297, 1303], [1304, 1308], [1309, 1319], [1319, 1320]]}) 
answer: set([u'heavier', u'tha', u'dabbl'])
candidate Sentence: (0.10658787935972214, {u'tokens': [u'Dabbling', u'ducks', u'feed', u'on', u'the', u'surface', u'of', u'water', u'or', u'on', u'land', u',', u'or', u'as', u'deep', u'as', u'they', u'can', u'reach', u'by', u'up-ending', u'without', u'completely', u'submerging', u'.'], u'lemmas': [u'dabble', u'duck', u'feed', u'on', u'the', u'surface', u'of', u'water', u'or', u'on', u'land', u',', u'or', u'as', u'deep', u'as', u'they', u'can', u'reach', u'by', u'up-ending', u'without', u'completely', u'submerge', u'.'], u'pos': [u'VBG', u'NNS', u'VB', u'IN', u'DT', u'NN', u'IN', u'NN', u'CC', u'IN', u'NN', u',', u'CC', u'RB', u'JJ', u'IN', u'PRP', u'MD', u'VB', u'IN', u'NN', u'IN', u'RB', u'VBG', u'.'], u'char_offsets': [[1461, 1469], [1470, 1475], [1476, 1480], [1481, 1483], [1484, 1487], [1488, 1495], [1496, 1498], [1499, 1504], [1505, 1507], [1508, 1510], [1511, 1515], [1515, 1516], [1517, 1519], [1520, 1522], [1523, 1527], [1528, 1530], [1531, 1535], [1536, 1539], [1540, 1545], [1546, 1548], [1549, 1558], [1559, 1566], [1567, 1577], [1578, 1588], [1588, 1589]]}) 
answer: set([u'dive', u'heavier', u'tha'])
candidate Sentence: (0.065034821629524231, {u'tokens': [u'The', u'word', u'duck', u'-LRB-', u'from', u'Anglo-Saxon', u'dce', u'-RRB-', u',', u'meaning', u'the', u'bird', u',', u'came', u'from', u'the', u'verb', u'``', u'to', u'duck', u"''", u'-LRB-', u'from', u'Anglo-Saxon', u'supposed', u'*', u'dcan', u'-RRB-', u'meaning', u'``', u'to', u'bend', u'down', u'low', u'as', u'if', u'to', u'get', u'under', u'something', u"''", u'or', u'``', u'to', u'dive', u"''", u',', u'because', u'of', u'the', u'way', u'many', u'species', u'in', u'the', u'dabbling', u'duck', u'group', u'feed', u'by', u'upending', u'-LRB-', u'compare', u'Dutch', u'duiken', u',', u'German', u'tauchen', u'=', u'``', u'to', u'dive', u"''", u'-RRB-', u'.'], u'lemmas': [u'the', u'word', u'duck', u'-lrb-', u'from', u'Anglo-Saxon', u'dce', u'-rrb-', u',', u'mean', u'the', u'bird', u',', u'come', u'from', u'the', u'verb', u'``', u'to', u'duck', u"''", u'-lrb-', u'from', u'anglo-saxon', u'suppose', u'*', u'dcan', u'-rrb-', u'meaning', u'``', u'to', u'bend', u'down', u'low', u'as', u'if', u'to', u'get', u'under', u'something', u"''", u'or', u'``', u'to', u'dive', u"''", u',', u'because', u'of', u'the', u'way', u'many', u'species', u'in', u'the', u'dabble', u'duck', u'group', u'feed', u'by', u'upend', u'-lrb-', u'compare', u'dutch', u'duiken', u',', u'german', u'tauchen', u'=', u'``', u'to', u'dive', u"''", u'-rrb-', u'.'], u'pos': [u'DT', u'NN', u'NN', u'-LRB-', u'IN', u'NNP', u'NN', u'-RRB-', u',', u'VBG', u'DT', u'NN', u',', u'VBD', u'IN', u'DT', u'VB', u'``', u'TO', u'VB', u"''", u'-LRB-', u'IN', u'JJ', u'VBN', u'SYM', u'NN', u'-RRB-', u'NN', u'``', u'TO', u'VB', u'RB', u'JJ', u'IN', u'IN', u'TO', u'VB', u'IN', u'NN', u"''", u'CC', u'``', u'TO', u'NN', u"''", u',', u'IN', u'IN', u'DT', u'NN', u'JJ', u'NNS', u'IN', u'DT', u'VBG', u'NN', u'NN', u'NN', u'IN', u'VBG', u'-LRB-', u'VB', u'JJ', u'NN', u',', u'JJ', u'NN', u'JJ', u'``', u'TO', u'NN', u"''", u'-RRB-', u'.'], u'char_offsets': [[3258, 3261], [3262, 3266], [3267, 3271], [3272, 3273], [3273, 3277], [3278, 3289], [3290, 3293], [3293, 3294], [3294, 3295], [3296, 3303], [3304, 3307], [3308, 3312], [3312, 3313], [3314, 3318], [3319, 3323], [3324, 3327], [3328, 3332], [3333, 3334], [3334, 3336], [3337, 3341], [3341, 3342], [3343, 3344], [3344, 3348], [3349, 3360], [3361, 3369], [3370, 3371], [3371, 3375], [3375, 3376], [3377, 3384], [3385, 3386], [3386, 3388], [3389, 3393], [3394, 3398], [3399, 3402], [3403, 3405], [3406, 3408], [3409, 3411], [3412, 3415], [3416, 3421], [3422, 3431], [3431, 3432], [3433, 3435], [3436, 3437], [3437, 3439], [3440, 3444], [3444, 3445], [3445, 3446], [3447, 3454], [3455, 3457], [3458, 3461], [3462, 3465], [3466, 3470], [3471, 3478], [3479, 3481], [3482, 3485], [3486, 3494], [3495, 3499], [3500, 3505], [3506, 3510], [3511, 3513], [3514, 3522], [3523, 3524], [3524, 3531], [3532, 3537], [3538, 3544], [3544, 3545], [3546, 3552], [3553, 3560], [3561, 3562], [3563, 3564], [3564, 3566], [3567, 3571], [3571, 3572], [3572, 3573], [3573, 3574]]}) 
answer: set([u'heavier', u'tha'])
candidate Sentence: (0.026854278519749641, {u'tokens': [u'The', u'expression', u'``', u'quacks', u'like', u'a', u'duck', u"''", u'is', u'sometimes', u'a', u'short', u'form', u'for', u'``', u'It', u'looks', u'like', u'a', u'duck', u',', u'it', u'quacks', u'like', u'a', u'duck', u',', u'it', u'swims', u'like', u'a', u'duck', u',', u'so', u'it', u"'s", u'a', u'duck', u'.', u"''"], u'lemmas': [u'the', u'expression', u'``', u'quack', u'like', u'a', u'duck', u"''", u'be', u'sometimes', u'a', u'short', u'form', u'for', u'``', u'it', u'look', u'like', u'a', u'duck', u',', u'it', u'quack', u'like', u'a', u'duck', u',', u'it', u'swim', u'like', u'a', u'duck', u',', u'so', u'it', u'be', u'a', u'duck', u'.', u"''"], u'pos': [u'DT', u'NN', u'``', u'VBZ', u'IN', u'DT', u'NN', u"''", u'VBZ', u'RB', u'DT', u'JJ', u'NN', u'IN', u'``', u'PRP', u'VBZ', u'IN', u'DT', u'NN', u',', u'PRP', u'VBZ', u'IN', u'DT', u'NN', u',', u'PRP', u'VBZ', u'IN', u'DT', u'NN', u',', u'IN', u'PRP', u'VBZ', u'DT', u'NN', u'.', u"''"], u'char_offsets': [[6570, 6573], [6574, 6584], [6585, 6586], [6586, 6592], [6593, 6597], [6598, 6599], [6600, 6604], [6604, 6605], [6606, 6608], [6609, 6618], [6619, 6620], [6621, 6626], [6627, 6631], [6632, 6635], [6636, 6637], [6637, 6639], [6640, 6645], [6646, 6650], [6651, 6652], [6653, 6657], [6657, 6658], [6659, 6661], [6662, 6668], [6669, 6673], [6674, 6675], [6676, 6680], [6680, 6681], [6682, 6684], [6685, 6690], [6691, 6695], [6696, 6697], [6698, 6702], [6702, 6703], [6704, 6706], [6707, 6709], [6709, 6711], [6712, 6713], [6714, 6718], [6718, 6719], [6719, 6720]]}) 
answer: set([u'dive', u'heavier', u'dabbl', u'tha'])
candidate Sentence: (0.023461487144231796, {u'tokens': [u'Adult', u'ducks', u'are', u'fast', u'fliers', u',', u'but', u'may', u'be', u'caught', u'on', u'the', u'water', u'by', u'large', u'aquatic', u'predators', u'.'], u'lemmas': [u'adult', u'duck', u'be', u'fast', u'flier', u',', u'but', u'may', u'be', u'catch', u'on', u'the', u'water', u'by', u'large', u'aquatic', u'predator', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'JJ', u'NNS', u',', u'CC', u'MD', u'VB', u'VBN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[2920, 2925], [2926, 2931], [2932, 2935], [2936, 2940], [2941, 2947], [2947, 2948], [2949, 2952], [2953, 2956], [2957, 2959], [2960, 2966], [2967, 2969], [2970, 2973], [2974, 2979], [2980, 2982], [2983, 2988], [2989, 2996], [2997, 3006], [3006, 3007]]}) 
answer: set([u'dive', u'heavier', u'dabbl', u'tha'])
candidate Sentence: (0.020830066874623299, {u'tokens': [u'The', u'duck', u'was', u'operated', u'on', u'and', u'was', u'again', u'presumed', u'dead', u'after', u'a', u'bad', u'reaction', u'to', u'anesthesia', u'.'], u'lemmas': [u'the', u'duck', u'be', u'operate', u'on', u'and', u'be', u'again', u'presume', u'dead', u'after', u'a', u'bad', u'reaction', u'to', u'anesthesia', u'.'], u'pos': [u'DT', u'NN', u'VBD', u'VBN', u'IN', u'CC', u'VBD', u'RB', u'VBN', u'JJ', u'IN', u'DT', u'JJ', u'NN', u'TO', u'NN', u'.'], u'char_offsets': [[7758, 7761], [7762, 7766], [7767, 7770], [7771, 7779], [7780, 7782], [7783, 7786], [7787, 7790], [7791, 7796], [7797, 7805], [7806, 7810], [7811, 7816], [7817, 7818], [7819, 7822], [7823, 7831], [7832, 7834], [7835, 7845], [7845, 7846]]}) 
answer: set([u'dive', u'heavier', u'dabbl', u'tha'])
candidate Sentence: (0.020087860524654388, {u'tokens': [u'Of', u'the', u'many', u'ducks', u'in', u'fiction', u',', u'many', u'are', u'silly', u'cartoon', u'characters', u'like', u'Daffy', u'Duck', u'-LRB-', u'see', u'the', u'New', u'Scientist', u'article', u'mentioning', u'humor', u'in', u'the', u'word', u'``', u'duck', u"''", u'-RRB-', u'.'], u'lemmas': [u'of', u'the', u'many', u'duck', u'in', u'fiction', u',', u'many', u'be', u'silly', u'cartoon', u'character', u'like', u'Daffy', u'duck', u'-lrb-', u'see', u'the', u'New', u'Scientist', u'article', u'mention', u'humor', u'in', u'the', u'word', u'``', u'duck', u"''", u'-rrb-', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'NNS', u'IN', u'NN', u',', u'JJ', u'VBP', u'JJ', u'NN', u'NNS', u'IN', u'NNP', u'NN', u'-LRB-', u'VB', u'DT', u'NNP', u'NNP', u'NN', u'VBG', u'NN', u'IN', u'DT', u'NN', u'``', u'NN', u"''", u'-RRB-', u'.'], u'char_offsets': [[6243, 6245], [6246, 6249], [6250, 6254], [6255, 6260], [6261, 6263], [6264, 6271], [6271, 6272], [6273, 6277], [6278, 6281], [6282, 6287], [6288, 6295], [6296, 6306], [6307, 6311], [6312, 6317], [6318, 6322], [6323, 6324], [6324, 6327], [6328, 6331], [6332, 6335], [6336, 6345], [6346, 6353], [6355, 6365], [6366, 6371], [6372, 6374], [6375, 6378], [6379, 6383], [6384, 6385], [6385, 6389], [6389, 6390], [6390, 6391], [6391, 6392]]}) 
answer: set([u'dive', u'heavier', u'dabbl', u'tha'])
candidate Sentence: (0.019040545448660851, {u'tokens': [u'All', u'domestic', u'ducks', u'are', u'descended', u'from', u'the', u'wild', u'Mallard', u'Anas', u'platyrhynchos', u',', u'except', u'the', u'Muscovy', u'Duck', u'.'], u'lemmas': [u'all', u'domestic', u'duck', u'be', u'descend', u'from', u'the', u'wild', u'Mallard', u'Anas', u'platyrhyncho', u',', u'except', u'the', u'Muscovy', u'duck', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u'VBP', u'VBN', u'IN', u'DT', u'JJ', u'NNP', u'NNP', u'NNS', u',', u'IN', u'DT', u'NNP', u'NN', u'.'], u'char_offsets': [[4442, 4445], [4446, 4454], [4455, 4460], [4461, 4464], [4465, 4474], [4475, 4479], [4480, 4483], [4484, 4488], [4489, 4496], [4497, 4501], [4502, 4515], [4515, 4516], [4517, 4523], [4524, 4527], [4528, 4535], [4536, 4540], [4541, 4542]]}) 
answer: set([u'dive', u'heavier', u'dabbl', u'tha'])
candidate Sentence: (0.018010783940553665, {u'tokens': [u'a', u'picture', u'of', u'a', u'duck', u'is', u'used', u'to', u'say', u'``', u'heads', u'up', u"''", u'.'], u'lemmas': [u'a', u'picture', u'of', u'a', u'duck', u'be', u'use', u'to', u'say', u'``', u'head', u'up', u"''", u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'VBN', u'TO', u'VB', u'``', u'NNS', u'RB', u"''", u'.'], u'char_offsets': [[6523, 6524], [6525, 6532], [6533, 6535], [6536, 6537], [6538, 6542], [6543, 6545], [6546, 6550], [6551, 6553], [6554, 6557], [6558, 6559], [6559, 6564], [6565, 6567], [6567, 6568], [6568, 6569]]}) 
answer: set([u'dive', u'heavier', u'dabbl', u'tha'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'duck'])

Are diving ducks heavier tha dabbling ducks?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = duck
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a10.txt

No
_____________________________ test_yesno[param77] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156dde18>, (<src.tfidf.TF_IDF object at 0x110787e50>, set(['.', 'egypt'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('no') == True
E            +  where 'no' = <src.question_processing.Question_parser instance at 0x1156dde18>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.40413755178451538, {u'tokens': [u'Egypt', u'is', u'one', u'of', u'the', u'most', u'populous', u'countries', u'in', u'Africa', u'.'], u'lemmas': [u'Egypt', u'be', u'one', u'of', u'the', u'most', u'populous', u'country', u'in', u'Africa', u'.'], u'pos': [u'NNP', u'VBZ', u'CD', u'IN', u'DT', u'RBS', u'JJ', u'NNS', u'IN', u'NNP', u'.'], u'char_offsets': [[431, 436], [437, 439], [440, 443], [444, 446], [447, 450], [451, 455], [456, 464], [465, 474], [475, 477], [478, 484], [484, 485]]}) 
answer: set([])
candidate Sentence: (0.30394184589385986, {u'tokens': [u'Egypt', u'is', u'the', u'most', u'populated', u'country', u'in', u'the', u'Middle', u'East', u'and', u'the', u'second-most', u'populous', u'on', u'the', u'African', u'continent', u',', u'with', u'an', u'estimated', u'78', u'million', u'people', u'.'], u'lemmas': [u'Egypt', u'be', u'the', u'most', u'populated', u'country', u'in', u'the', u'Middle', u'East', u'and', u'the', u'second-most', u'populous', u'on', u'the', u'african', u'continent', u',', u'with', u'a', u'estimate', u'78', u'million', u'people', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'RBS', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'CC', u'DT', u'JJ', u'JJ', u'IN', u'DT', u'JJ', u'NN', u',', u'IN', u'DT', u'VBN', u'CD', u'CD', u'NNS', u'.'], u'char_offsets': [[35374, 35379], [35380, 35382], [35383, 35386], [35387, 35391], [35392, 35401], [35402, 35409], [35410, 35412], [35413, 35416], [35417, 35423], [35424, 35428], [35429, 35432], [35433, 35436], [35437, 35448], [35449, 35457], [35458, 35460], [35461, 35464], [35465, 35472], [35473, 35482], [35482, 35483], [35484, 35488], [35489, 35491], [35492, 35501], [35502, 35504], [35505, 35512], [35513, 35519], [35519, 35520]]}) 
answer: set([u'africa'])
candidate Sentence: (0.2039722353219986, {u'tokens': [u'Pan', u'-', u'Arabism', u':', u'What', u'Destroyed', u'the', u'Ideology', u'of', u'Arab', u'Nationalism', u'?'], u'lemmas': [u'pan', u'-', u'Arabism', u':', u'what', u'destroy', u'the', u'ideology', u'of', u'Arab', u'Nationalism', u'?'], u'pos': [u'NN', u':', u'NNP', u':', u'WP', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[16622, 16625], [16626, 16627], [16628, 16635], [16635, 16636], [16637, 16641], [16642, 16651], [16652, 16655], [16656, 16664], [16665, 16667], [16668, 16672], [16673, 16684], [16684, 16685]]}) 
answer: set([u'countri', u'africa', u'popul'])
candidate Sentence: (0.16203159093856812, {u'tokens': [u'About', u'half', u'of', u'Egypt', u"'s", u'residents', u'live', u'in', u'urban', u'areas', u',', u'with', u'the', u'majority', u'spread', u'across', u'the', u'densely', u'populated', u'centers', u'of', u'greater', u'Cairo', u',', u'Alexandria', u'and', u'other', u'major', u'cities', u'in', u'the', u'Nile', u'Delta', u'.'], u'lemmas': [u'about', u'half', u'of', u'Egypt', u"'s", u'resident', u'live', u'in', u'urban', u'area', u',', u'with', u'the', u'majority', u'spread', u'across', u'the', u'densely', u'populated', u'center', u'of', u'greater', u'Cairo', u',', u'Alexandria', u'and', u'other', u'major', u'city', u'in', u'the', u'Nile', u'Delta', u'.'], u'pos': [u'IN', u'NN', u'IN', u'NNP', u'POS', u'NNS', u'VBP', u'IN', u'JJ', u'NNS', u',', u'IN', u'DT', u'NN', u'NN', u'IN', u'DT', u'RB', u'JJ', u'NNS', u'IN', u'JJR', u'NNP', u',', u'NNP', u'CC', u'JJ', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[718, 723], [724, 728], [729, 731], [732, 737], [737, 739], [740, 749], [750, 754], [755, 757], [758, 763], [764, 769], [769, 770], [771, 775], [776, 779], [780, 788], [789, 795], [796, 802], [803, 806], [807, 814], [815, 824], [825, 832], [833, 835], [836, 843], [844, 849], [849, 850], [851, 861], [862, 865], [866, 871], [872, 877], [878, 884], [885, 887], [888, 891], [892, 896], [897, 902], [902, 903]]}) 
answer: set([u'countri', u'africa'])
candidate Sentence: (0.15029270946979523, {u'tokens': [u'It', u'is', u'also', u'reported', u'that', u'due', u'to', u'Egypt', u"'s", u'indulgence', u'in', u'internal', u'problems', u'and', u'its', u'reluctance', u'to', u'play', u'a', u'positive', u'role', u'in', u'regional', u'matters', u'had', u'lost', u'the', u'country', u'great', u'influence', u'in', u'Africa', u'and', u'the', u'neighbouring', u'countries', u'.'], u'lemmas': [u'it', u'be', u'also', u'report', u'that', u'due', u'to', u'Egypt', u"'s", u'indulgence', u'in', u'internal', u'problem', u'and', u'its', u'reluctance', u'to', u'play', u'a', u'positive', u'role', u'in', u'regional', u'matter', u'have', u'lose', u'the', u'country', u'great', u'influence', u'in', u'Africa', u'and', u'the', u'neighbouring', u'country', u'.'], u'pos': [u'PRP', u'VBZ', u'RB', u'VBN', u'IN', u'JJ', u'TO', u'NNP', u'POS', u'NN', u'IN', u'JJ', u'NNS', u'CC', u'PRP$', u'NN', u'TO', u'VB', u'DT', u'JJ', u'NN', u'IN', u'JJ', u'NNS', u'VBD', u'VBN', u'DT', u'NN', u'JJ', u'NN', u'IN', u'NNP', u'CC', u'DT', u'JJ', u'NNS', u'.'], u'char_offsets': [[30928, 30930], [30931, 30933], [30934, 30938], [30939, 30947], [30948, 30952], [30953, 30956], [30957, 30959], [30960, 30965], [30965, 30967], [30968, 30978], [30979, 30981], [30982, 30990], [30991, 30999], [31000, 31003], [31004, 31007], [31008, 31018], [31019, 31021], [31022, 31026], [31027, 31028], [31029, 31037], [31038, 31042], [31043, 31045], [31046, 31054], [31055, 31062], [31063, 31066], [31067, 31071], [31072, 31075], [31076, 31083], [31084, 31089], [31090, 31099], [31100, 31102], [31103, 31109], [31110, 31113], [31114, 31117], [31118, 31130], [31131, 31140], [31140, 31141]]}) 
answer: set([u'popul'])
candidate Sentence: (0.14382995665073395, {u'tokens': [u'View', u'of', u'Cairo', u',', u'the', u'largest', u'city', u'in', u'Africa', u'and', u'the', u'Middle', u'East', u'.'], u'lemmas': [u'View', u'of', u'Cairo', u',', u'the', u'largest', u'city', u'in', u'Africa', u'and', u'the', u'Middle', u'East', u'.'], u'pos': [u'NNP', u'IN', u'NNP', u',', u'DT', u'JJS', u'NN', u'IN', u'NNP', u'CC', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[11768, 11772], [11773, 11775], [11776, 11781], [11781, 11782], [11783, 11786], [11787, 11794], [11795, 11799], [11800, 11802], [11803, 11809], [11810, 11813], [11814, 11817], [11818, 11824], [11825, 11829], [11829, 11830]]}) 
answer: set([u'countri', u'popul'])
candidate Sentence: (0.13881458342075348, {u'tokens': [u'Egypt', u'has', u'the', u'highest', u'number', u'of', u'Nobel', u'Laureates', u'in', u'Africa', u'and', u'the', u'Arab', u'World', u'.'], u'lemmas': [u'Egypt', u'have', u'the', u'highest', u'number', u'of', u'Nobel', u'Laureates', u'in', u'Africa', u'and', u'the', u'Arab', u'World', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'JJS', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[47870, 47875], [47876, 47879], [47880, 47883], [47884, 47891], [47892, 47898], [47899, 47901], [47902, 47907], [47908, 47917], [47918, 47920], [47921, 47927], [47928, 47931], [47932, 47935], [47936, 47940], [47941, 47946], [47946, 47947]]}) 
answer: set([u'countri', u'popul'])
candidate Sentence: (0.13544608652591705, {u'tokens': [u'The', u'last', u'40', u'years', u'have', u'seen', u'a', u'rapid', u'increase', u'in', u'population', u'due', u'to', u'medical', u'advances', u'and', u'massive', u'increase', u'in', u'agricultural', u'productivity', u',', u'BBC', u'NEWS', u'|', u'The', u'limits', u'of', u'a', u'Green', u'Revolution', u'?'], u'lemmas': [u'the', u'last', u'40', u'year', u'have', u'see', u'a', u'rapid', u'increase', u'in', u'population', u'due', u'to', u'medical', u'advance', u'and', u'massive', u'increase', u'in', u'agricultural', u'productivity', u',', u'BBC', u'NEWS', u'|', u'the', u'limit', u'of', u'a', u'Green', u'Revolution', u'?'], u'pos': [u'DT', u'JJ', u'CD', u'NNS', u'VBP', u'VBN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'JJ', u'TO', u'JJ', u'NNS', u'CC', u'JJ', u'NN', u'IN', u'JJ', u'NN', u',', u'NNP', u'NNP', u'VBD', u'DT', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[35976, 35979], [35980, 35984], [35985, 35987], [35988, 35993], [35994, 35998], [35999, 36003], [36004, 36005], [36006, 36011], [36012, 36020], [36021, 36023], [36024, 36034], [36035, 36038], [36039, 36041], [36042, 36049], [36050, 36058], [36059, 36062], [36063, 36070], [36071, 36079], [36080, 36082], [36083, 36095], [36096, 36108], [36108, 36109], [36111, 36114], [36115, 36119], [36120, 36121], [36122, 36125], [36126, 36132], [36133, 36135], [36136, 36137], [36138, 36143], [36144, 36154], [36154, 36155]]}) 
answer: set([u'countri', u'africa'])
candidate Sentence: (0.11051651835441589, {u'tokens': [u'Egypt', u'-LRB-', u'Egyptian', u':', u'Kemet', u';', u'Coptic', u':', u'Kmi', u';', u';', u'Egyptian', u'Arabic', u':', u'-RRB-', u',', u'officially', u'the', u'Arab', u'Republic', u'of', u'Egypt', u',', u'is', u'a', u'country', u'in', u'North', u'Africa', u'that', u'includes', u'the', u'Sinai', u'Peninsula', u',', u'a', u'land', u'bridge', u'to', u'Asia', u'.'], u'lemmas': [u'Egypt', u'-lrb-', u'Egyptian', u':', u'Kemet', u';', u'Coptic', u':', u'Kmi', u';', u';', u'egyptian', u'arabic', u':', u'-rrb-', u',', u'officially', u'the', u'Arab', u'Republic', u'of', u'Egypt', u',', u'be', u'a', u'country', u'in', u'North', u'Africa', u'that', u'include', u'the', u'Sinai', u'Peninsula', u',', u'a', u'land', u'bridge', u'to', u'Asia', u'.'], u'pos': [u'NNP', u'-LRB-', u'NNP', u':', u'NNP', u':', u'NNP', u':', u'NNP', u':', u':', u'JJ', u'JJ', u':', u'-RRB-', u',', u'RB', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u',', u'VBZ', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'WDT', u'VBZ', u'DT', u'NNP', u'NNP', u',', u'DT', u'NN', u'NN', u'TO', u'NNP', u'.'], u'char_offsets': [[0, 5], [6, 7], [7, 15], [15, 16], [17, 22], [22, 23], [24, 30], [30, 31], [34, 37], [37, 38], [43, 44], [45, 53], [54, 60], [60, 61], [63, 64], [64, 65], [66, 76], [77, 80], [81, 85], [86, 94], [95, 97], [98, 103], [103, 104], [105, 107], [108, 109], [110, 117], [118, 120], [121, 126], [127, 133], [134, 138], [139, 147], [148, 151], [152, 157], [158, 167], [167, 168], [169, 170], [171, 175], [176, 182], [183, 185], [186, 190], [190, 191]]}) 
answer: set([u'popul'])
candidate Sentence: (0.10792549699544907, {u'tokens': [u'Egypt', u'is', u'slated', u'to', u'overcome', u'South', u'Africa', u'as', u'the', u'highest', u'earner', u'of', u'FDI', u'on', u'the', u'African', u'continent', u'in', u'2007', u'.'], u'lemmas': [u'Egypt', u'be', u'slate', u'to', u'overcome', u'South', u'Africa', u'as', u'the', u'highest', u'earner', u'of', u'fdus', u'on', u'the', u'african', u'continent', u'in', u'2007', u'.'], u'pos': [u'NNP', u'VBZ', u'VBN', u'TO', u'VB', u'NNP', u'NNP', u'IN', u'DT', u'JJS', u'NN', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'CD', u'.'], u'char_offsets': [[33804, 33809], [33810, 33812], [33813, 33819], [33820, 33822], [33823, 33831], [33832, 33837], [33838, 33844], [33845, 33847], [33848, 33851], [33852, 33859], [33860, 33866], [33867, 33869], [33870, 33873], [33874, 33876], [33877, 33880], [33881, 33888], [33889, 33898], [33899, 33901], [33902, 33906], [33906, 33907]]}) 
answer: set([u'countri', u'popul'])
['Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'egypt', u'.'])

Is Egypt the most populated country in Africa?
Validity= False
Question Type = NA
Answer Type = NA
Answer = no
Difficulty = easy
Article_Title = Egypt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a6.txt

Yes
_____________________________ test_yesno[param78] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156dde60>, (<src.tfidf.TF_IDF object at 0x110787e50>, set(['.', 'egypt'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('No') == True
E            +  where 'No' = <src.question_processing.Question_parser instance at 0x1156dde60>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.40413755178451538, {u'tokens': [u'Egypt', u'is', u'one', u'of', u'the', u'most', u'populous', u'countries', u'in', u'Africa', u'.'], u'lemmas': [u'Egypt', u'be', u'one', u'of', u'the', u'most', u'populous', u'country', u'in', u'Africa', u'.'], u'pos': [u'NNP', u'VBZ', u'CD', u'IN', u'DT', u'RBS', u'JJ', u'NNS', u'IN', u'NNP', u'.'], u'char_offsets': [[431, 436], [437, 439], [440, 443], [444, 446], [447, 450], [451, 455], [456, 464], [465, 474], [475, 477], [478, 484], [484, 485]]}) 
answer: set([])
candidate Sentence: (0.30394184589385986, {u'tokens': [u'Egypt', u'is', u'the', u'most', u'populated', u'country', u'in', u'the', u'Middle', u'East', u'and', u'the', u'second-most', u'populous', u'on', u'the', u'African', u'continent', u',', u'with', u'an', u'estimated', u'78', u'million', u'people', u'.'], u'lemmas': [u'Egypt', u'be', u'the', u'most', u'populated', u'country', u'in', u'the', u'Middle', u'East', u'and', u'the', u'second-most', u'populous', u'on', u'the', u'african', u'continent', u',', u'with', u'a', u'estimate', u'78', u'million', u'people', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'RBS', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'CC', u'DT', u'JJ', u'JJ', u'IN', u'DT', u'JJ', u'NN', u',', u'IN', u'DT', u'VBN', u'CD', u'CD', u'NNS', u'.'], u'char_offsets': [[35374, 35379], [35380, 35382], [35383, 35386], [35387, 35391], [35392, 35401], [35402, 35409], [35410, 35412], [35413, 35416], [35417, 35423], [35424, 35428], [35429, 35432], [35433, 35436], [35437, 35448], [35449, 35457], [35458, 35460], [35461, 35464], [35465, 35472], [35473, 35482], [35482, 35483], [35484, 35488], [35489, 35491], [35492, 35501], [35502, 35504], [35505, 35512], [35513, 35519], [35519, 35520]]}) 
answer: set([u'africa'])
candidate Sentence: (0.2039722353219986, {u'tokens': [u'Pan', u'-', u'Arabism', u':', u'What', u'Destroyed', u'the', u'Ideology', u'of', u'Arab', u'Nationalism', u'?'], u'lemmas': [u'pan', u'-', u'Arabism', u':', u'what', u'destroy', u'the', u'ideology', u'of', u'Arab', u'Nationalism', u'?'], u'pos': [u'NN', u':', u'NNP', u':', u'WP', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[16622, 16625], [16626, 16627], [16628, 16635], [16635, 16636], [16637, 16641], [16642, 16651], [16652, 16655], [16656, 16664], [16665, 16667], [16668, 16672], [16673, 16684], [16684, 16685]]}) 
answer: set([u'countri', u'africa', u'popul'])
candidate Sentence: (0.16203159093856812, {u'tokens': [u'About', u'half', u'of', u'Egypt', u"'s", u'residents', u'live', u'in', u'urban', u'areas', u',', u'with', u'the', u'majority', u'spread', u'across', u'the', u'densely', u'populated', u'centers', u'of', u'greater', u'Cairo', u',', u'Alexandria', u'and', u'other', u'major', u'cities', u'in', u'the', u'Nile', u'Delta', u'.'], u'lemmas': [u'about', u'half', u'of', u'Egypt', u"'s", u'resident', u'live', u'in', u'urban', u'area', u',', u'with', u'the', u'majority', u'spread', u'across', u'the', u'densely', u'populated', u'center', u'of', u'greater', u'Cairo', u',', u'Alexandria', u'and', u'other', u'major', u'city', u'in', u'the', u'Nile', u'Delta', u'.'], u'pos': [u'IN', u'NN', u'IN', u'NNP', u'POS', u'NNS', u'VBP', u'IN', u'JJ', u'NNS', u',', u'IN', u'DT', u'NN', u'NN', u'IN', u'DT', u'RB', u'JJ', u'NNS', u'IN', u'JJR', u'NNP', u',', u'NNP', u'CC', u'JJ', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[718, 723], [724, 728], [729, 731], [732, 737], [737, 739], [740, 749], [750, 754], [755, 757], [758, 763], [764, 769], [769, 770], [771, 775], [776, 779], [780, 788], [789, 795], [796, 802], [803, 806], [807, 814], [815, 824], [825, 832], [833, 835], [836, 843], [844, 849], [849, 850], [851, 861], [862, 865], [866, 871], [872, 877], [878, 884], [885, 887], [888, 891], [892, 896], [897, 902], [902, 903]]}) 
answer: set([u'countri', u'africa'])
candidate Sentence: (0.15029270946979523, {u'tokens': [u'It', u'is', u'also', u'reported', u'that', u'due', u'to', u'Egypt', u"'s", u'indulgence', u'in', u'internal', u'problems', u'and', u'its', u'reluctance', u'to', u'play', u'a', u'positive', u'role', u'in', u'regional', u'matters', u'had', u'lost', u'the', u'country', u'great', u'influence', u'in', u'Africa', u'and', u'the', u'neighbouring', u'countries', u'.'], u'lemmas': [u'it', u'be', u'also', u'report', u'that', u'due', u'to', u'Egypt', u"'s", u'indulgence', u'in', u'internal', u'problem', u'and', u'its', u'reluctance', u'to', u'play', u'a', u'positive', u'role', u'in', u'regional', u'matter', u'have', u'lose', u'the', u'country', u'great', u'influence', u'in', u'Africa', u'and', u'the', u'neighbouring', u'country', u'.'], u'pos': [u'PRP', u'VBZ', u'RB', u'VBN', u'IN', u'JJ', u'TO', u'NNP', u'POS', u'NN', u'IN', u'JJ', u'NNS', u'CC', u'PRP$', u'NN', u'TO', u'VB', u'DT', u'JJ', u'NN', u'IN', u'JJ', u'NNS', u'VBD', u'VBN', u'DT', u'NN', u'JJ', u'NN', u'IN', u'NNP', u'CC', u'DT', u'JJ', u'NNS', u'.'], u'char_offsets': [[30928, 30930], [30931, 30933], [30934, 30938], [30939, 30947], [30948, 30952], [30953, 30956], [30957, 30959], [30960, 30965], [30965, 30967], [30968, 30978], [30979, 30981], [30982, 30990], [30991, 30999], [31000, 31003], [31004, 31007], [31008, 31018], [31019, 31021], [31022, 31026], [31027, 31028], [31029, 31037], [31038, 31042], [31043, 31045], [31046, 31054], [31055, 31062], [31063, 31066], [31067, 31071], [31072, 31075], [31076, 31083], [31084, 31089], [31090, 31099], [31100, 31102], [31103, 31109], [31110, 31113], [31114, 31117], [31118, 31130], [31131, 31140], [31140, 31141]]}) 
answer: set([u'popul'])
candidate Sentence: (0.14382995665073395, {u'tokens': [u'View', u'of', u'Cairo', u',', u'the', u'largest', u'city', u'in', u'Africa', u'and', u'the', u'Middle', u'East', u'.'], u'lemmas': [u'View', u'of', u'Cairo', u',', u'the', u'largest', u'city', u'in', u'Africa', u'and', u'the', u'Middle', u'East', u'.'], u'pos': [u'NNP', u'IN', u'NNP', u',', u'DT', u'JJS', u'NN', u'IN', u'NNP', u'CC', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[11768, 11772], [11773, 11775], [11776, 11781], [11781, 11782], [11783, 11786], [11787, 11794], [11795, 11799], [11800, 11802], [11803, 11809], [11810, 11813], [11814, 11817], [11818, 11824], [11825, 11829], [11829, 11830]]}) 
answer: set([u'countri', u'popul'])
candidate Sentence: (0.13881458342075348, {u'tokens': [u'Egypt', u'has', u'the', u'highest', u'number', u'of', u'Nobel', u'Laureates', u'in', u'Africa', u'and', u'the', u'Arab', u'World', u'.'], u'lemmas': [u'Egypt', u'have', u'the', u'highest', u'number', u'of', u'Nobel', u'Laureates', u'in', u'Africa', u'and', u'the', u'Arab', u'World', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'JJS', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[47870, 47875], [47876, 47879], [47880, 47883], [47884, 47891], [47892, 47898], [47899, 47901], [47902, 47907], [47908, 47917], [47918, 47920], [47921, 47927], [47928, 47931], [47932, 47935], [47936, 47940], [47941, 47946], [47946, 47947]]}) 
answer: set([u'countri', u'popul'])
candidate Sentence: (0.13544608652591705, {u'tokens': [u'The', u'last', u'40', u'years', u'have', u'seen', u'a', u'rapid', u'increase', u'in', u'population', u'due', u'to', u'medical', u'advances', u'and', u'massive', u'increase', u'in', u'agricultural', u'productivity', u',', u'BBC', u'NEWS', u'|', u'The', u'limits', u'of', u'a', u'Green', u'Revolution', u'?'], u'lemmas': [u'the', u'last', u'40', u'year', u'have', u'see', u'a', u'rapid', u'increase', u'in', u'population', u'due', u'to', u'medical', u'advance', u'and', u'massive', u'increase', u'in', u'agricultural', u'productivity', u',', u'BBC', u'NEWS', u'|', u'the', u'limit', u'of', u'a', u'Green', u'Revolution', u'?'], u'pos': [u'DT', u'JJ', u'CD', u'NNS', u'VBP', u'VBN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'JJ', u'TO', u'JJ', u'NNS', u'CC', u'JJ', u'NN', u'IN', u'JJ', u'NN', u',', u'NNP', u'NNP', u'VBD', u'DT', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[35976, 35979], [35980, 35984], [35985, 35987], [35988, 35993], [35994, 35998], [35999, 36003], [36004, 36005], [36006, 36011], [36012, 36020], [36021, 36023], [36024, 36034], [36035, 36038], [36039, 36041], [36042, 36049], [36050, 36058], [36059, 36062], [36063, 36070], [36071, 36079], [36080, 36082], [36083, 36095], [36096, 36108], [36108, 36109], [36111, 36114], [36115, 36119], [36120, 36121], [36122, 36125], [36126, 36132], [36133, 36135], [36136, 36137], [36138, 36143], [36144, 36154], [36154, 36155]]}) 
answer: set([u'countri', u'africa'])
candidate Sentence: (0.11051651835441589, {u'tokens': [u'Egypt', u'-LRB-', u'Egyptian', u':', u'Kemet', u';', u'Coptic', u':', u'Kmi', u';', u';', u'Egyptian', u'Arabic', u':', u'-RRB-', u',', u'officially', u'the', u'Arab', u'Republic', u'of', u'Egypt', u',', u'is', u'a', u'country', u'in', u'North', u'Africa', u'that', u'includes', u'the', u'Sinai', u'Peninsula', u',', u'a', u'land', u'bridge', u'to', u'Asia', u'.'], u'lemmas': [u'Egypt', u'-lrb-', u'Egyptian', u':', u'Kemet', u';', u'Coptic', u':', u'Kmi', u';', u';', u'egyptian', u'arabic', u':', u'-rrb-', u',', u'officially', u'the', u'Arab', u'Republic', u'of', u'Egypt', u',', u'be', u'a', u'country', u'in', u'North', u'Africa', u'that', u'include', u'the', u'Sinai', u'Peninsula', u',', u'a', u'land', u'bridge', u'to', u'Asia', u'.'], u'pos': [u'NNP', u'-LRB-', u'NNP', u':', u'NNP', u':', u'NNP', u':', u'NNP', u':', u':', u'JJ', u'JJ', u':', u'-RRB-', u',', u'RB', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u',', u'VBZ', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'WDT', u'VBZ', u'DT', u'NNP', u'NNP', u',', u'DT', u'NN', u'NN', u'TO', u'NNP', u'.'], u'char_offsets': [[0, 5], [6, 7], [7, 15], [15, 16], [17, 22], [22, 23], [24, 30], [30, 31], [34, 37], [37, 38], [43, 44], [45, 53], [54, 60], [60, 61], [63, 64], [64, 65], [66, 76], [77, 80], [81, 85], [86, 94], [95, 97], [98, 103], [103, 104], [105, 107], [108, 109], [110, 117], [118, 120], [121, 126], [127, 133], [134, 138], [139, 147], [148, 151], [152, 157], [158, 167], [167, 168], [169, 170], [171, 175], [176, 182], [183, 185], [186, 190], [190, 191]]}) 
answer: set([u'popul'])
candidate Sentence: (0.10792549699544907, {u'tokens': [u'Egypt', u'is', u'slated', u'to', u'overcome', u'South', u'Africa', u'as', u'the', u'highest', u'earner', u'of', u'FDI', u'on', u'the', u'African', u'continent', u'in', u'2007', u'.'], u'lemmas': [u'Egypt', u'be', u'slate', u'to', u'overcome', u'South', u'Africa', u'as', u'the', u'highest', u'earner', u'of', u'fdus', u'on', u'the', u'african', u'continent', u'in', u'2007', u'.'], u'pos': [u'NNP', u'VBZ', u'VBN', u'TO', u'VB', u'NNP', u'NNP', u'IN', u'DT', u'JJS', u'NN', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'CD', u'.'], u'char_offsets': [[33804, 33809], [33810, 33812], [33813, 33819], [33820, 33822], [33823, 33831], [33832, 33837], [33838, 33844], [33845, 33847], [33848, 33851], [33852, 33859], [33860, 33866], [33867, 33869], [33870, 33873], [33874, 33876], [33877, 33880], [33881, 33888], [33889, 33898], [33899, 33901], [33902, 33906], [33906, 33907]]}) 
answer: set([u'countri', u'popul'])
['Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'egypt', u'.'])

Is Egypt the most populated country in Africa?
Validity= False
Question Type = NA
Answer Type = NA
Answer = No
Difficulty = easy
Article_Title = Egypt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a6.txt

Yes
_____________________________ test_yesno[param81] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156ddf38>, (<src.tfidf.TF_IDF object at 0x110787e50>, set(['.', 'egypt'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('No.') == True
E            +  where 'No.' = <src.question_processing.Question_parser instance at 0x1156ddf38>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.24733464419841766, {u'tokens': [u'Pan', u'-', u'Arabism', u':', u'What', u'Destroyed', u'the', u'Ideology', u'of', u'Arab', u'Nationalism', u'?'], u'lemmas': [u'pan', u'-', u'Arabism', u':', u'what', u'destroy', u'the', u'ideology', u'of', u'Arab', u'Nationalism', u'?'], u'pos': [u'NN', u':', u'NNP', u':', u'WP', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[16622, 16625], [16626, 16627], [16628, 16635], [16635, 16636], [16637, 16641], [16642, 16651], [16652, 16655], [16656, 16664], [16665, 16667], [16668, 16672], [16673, 16684], [16684, 16685]]}) 
answer: set([u'asia'])
candidate Sentence: (0.17979776859283447, {u'tokens': [u'Egypt', u'-LRB-', u'Egyptian', u':', u'Kemet', u';', u'Coptic', u':', u'Kmi', u';', u';', u'Egyptian', u'Arabic', u':', u'-RRB-', u',', u'officially', u'the', u'Arab', u'Republic', u'of', u'Egypt', u',', u'is', u'a', u'country', u'in', u'North', u'Africa', u'that', u'includes', u'the', u'Sinai', u'Peninsula', u',', u'a', u'land', u'bridge', u'to', u'Asia', u'.'], u'lemmas': [u'Egypt', u'-lrb-', u'Egyptian', u':', u'Kemet', u';', u'Coptic', u':', u'Kmi', u';', u';', u'egyptian', u'arabic', u':', u'-rrb-', u',', u'officially', u'the', u'Arab', u'Republic', u'of', u'Egypt', u',', u'be', u'a', u'country', u'in', u'North', u'Africa', u'that', u'include', u'the', u'Sinai', u'Peninsula', u',', u'a', u'land', u'bridge', u'to', u'Asia', u'.'], u'pos': [u'NNP', u'-LRB-', u'NNP', u':', u'NNP', u':', u'NNP', u':', u'NNP', u':', u':', u'JJ', u'JJ', u':', u'-RRB-', u',', u'RB', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u',', u'VBZ', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'WDT', u'VBZ', u'DT', u'NNP', u'NNP', u',', u'DT', u'NN', u'NN', u'TO', u'NNP', u'.'], u'char_offsets': [[0, 5], [6, 7], [7, 15], [15, 16], [17, 22], [22, 23], [24, 30], [30, 31], [34, 37], [37, 38], [43, 44], [45, 53], [54, 60], [60, 61], [63, 64], [64, 65], [66, 76], [77, 80], [81, 85], [86, 94], [95, 97], [98, 103], [103, 104], [105, 107], [108, 109], [110, 117], [118, 120], [121, 126], [127, 133], [134, 138], [139, 147], [148, 151], [152, 157], [158, 167], [167, 168], [169, 170], [171, 175], [176, 182], [183, 185], [186, 190], [190, 191]]}) 
answer: set([])
candidate Sentence: (0.16328758001327515, {u'tokens': [u'The', u'last', u'40', u'years', u'have', u'seen', u'a', u'rapid', u'increase', u'in', u'population', u'due', u'to', u'medical', u'advances', u'and', u'massive', u'increase', u'in', u'agricultural', u'productivity', u',', u'BBC', u'NEWS', u'|', u'The', u'limits', u'of', u'a', u'Green', u'Revolution', u'?'], u'lemmas': [u'the', u'last', u'40', u'year', u'have', u'see', u'a', u'rapid', u'increase', u'in', u'population', u'due', u'to', u'medical', u'advance', u'and', u'massive', u'increase', u'in', u'agricultural', u'productivity', u',', u'BBC', u'NEWS', u'|', u'the', u'limit', u'of', u'a', u'Green', u'Revolution', u'?'], u'pos': [u'DT', u'JJ', u'CD', u'NNS', u'VBP', u'VBN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'JJ', u'TO', u'JJ', u'NNS', u'CC', u'JJ', u'NN', u'IN', u'JJ', u'NN', u',', u'NNP', u'NNP', u'VBD', u'DT', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[35976, 35979], [35980, 35984], [35985, 35987], [35988, 35993], [35994, 35998], [35999, 36003], [36004, 36005], [36006, 36011], [36012, 36020], [36021, 36023], [36024, 36034], [36035, 36038], [36039, 36041], [36042, 36049], [36050, 36058], [36059, 36062], [36063, 36070], [36071, 36079], [36080, 36082], [36083, 36095], [36096, 36108], [36108, 36109], [36111, 36114], [36115, 36119], [36120, 36121], [36122, 36125], [36126, 36132], [36133, 36135], [36136, 36137], [36138, 36143], [36144, 36154], [36154, 36155]]}) 
answer: set([u'asia'])
candidate Sentence: (0.13180837035179138, {u'tokens': [u'Egypt', u"'s", u'important', u'role', u'in', u'geopolitics', u'stems', u'from', u'its', u'strategic', u'position', u':', u'a', u'transcontinental', u'nation', u',', u'it', u'possesses', u'a', u'land', u'bridge', u'-LRB-', u'the', u'Isthmus', u'of', u'Suez', u'-RRB-', u'between', u'Africa', u'and', u'Asia', u',', u'which', u'in', u'turn', u'is', u'traversed', u'by', u'a', u'navigable', u'waterway', u'-LRB-', u'the', u'Suez', u'Canal', u'-RRB-', u'that', u'connects', u'the', u'Mediterranean', u'Sea', u'with', u'the', u'Indian', u'Ocean', u'via', u'the', u'Red', u'Sea', u'.'], u'lemmas': [u'Egypt', u"'s", u'important', u'role', u'in', u'geopolitics', u'stem', u'from', u'its', u'strategic', u'position', u':', u'a', u'transcontinental', u'nation', u',', u'it', u'possess', u'a', u'land', u'bridge', u'-lrb-', u'the', u'isthmus', u'of', u'Suez', u'-rrb-', u'between', u'Africa', u'and', u'Asia', u',', u'which', u'in', u'turn', u'be', u'traverse', u'by', u'a', u'navigable', u'waterway', u'-lrb-', u'the', u'Suez', u'Canal', u'-rrb-', u'that', u'connect', u'the', u'Mediterranean', u'Sea', u'with', u'the', u'Indian', u'Ocean', u'via', u'the', u'Red', u'Sea', u'.'], u'pos': [u'NNP', u'POS', u'JJ', u'NN', u'IN', u'NNS', u'VBZ', u'IN', u'PRP$', u'JJ', u'NN', u':', u'DT', u'JJ', u'NN', u',', u'PRP', u'VBZ', u'DT', u'NN', u'NN', u'-LRB-', u'DT', u'NN', u'IN', u'NNP', u'-RRB-', u'IN', u'NNP', u'CC', u'NNP', u',', u'WDT', u'IN', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'-LRB-', u'DT', u'NNP', u'NNP', u'-RRB-', u'WDT', u'VBZ', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[55065, 55070], [55070, 55072], [55073, 55082], [55083, 55087], [55088, 55090], [55091, 55102], [55103, 55108], [55109, 55113], [55114, 55117], [55118, 55127], [55128, 55136], [55136, 55137], [55138, 55139], [55140, 55156], [55157, 55163], [55163, 55164], [55165, 55167], [55168, 55177], [55178, 55179], [55180, 55184], [55185, 55191], [55192, 55193], [55193, 55196], [55197, 55204], [55205, 55207], [55208, 55212], [55212, 55213], [55214, 55221], [55222, 55228], [55229, 55232], [55233, 55237], [55237, 55238], [55239, 55244], [55245, 55247], [55248, 55252], [55253, 55255], [55256, 55265], [55266, 55268], [55269, 55270], [55271, 55280], [55281, 55289], [55290, 55291], [55291, 55294], [55295, 55299], [55300, 55305], [55305, 55306], [55307, 55311], [55312, 55320], [55321, 55324], [55325, 55338], [55339, 55342], [55343, 55347], [55348, 55351], [55352, 55358], [55359, 55364], [55365, 55368], [55369, 55372], [55373, 55376], [55377, 55380], [55380, 55381]]}) 
answer: set([])
candidate Sentence: (0.044057685881853104, {u'tokens': [u'Egypt', u':', u'Overview', u'of', u'human', u'rights', u'issues', u'in', u'Egypt', u'.'], u'lemmas': [u'Egypt', u':', u'overview', u'of', u'human', u'rights', u'issue', u'in', u'Egypt', u'.'], u'pos': [u'NNP', u':', u'NN', u'IN', u'JJ', u'NNS', u'NNS', u'IN', u'NNP', u'.'], u'char_offsets': [[41940, 41945], [41945, 41946], [41947, 41955], [41956, 41958], [41959, 41964], [41965, 41971], [41972, 41978], [41979, 41981], [41982, 41987], [41987, 41988]]}) 
answer: set([u'asia'])
candidate Sentence: (0.044057685881853104, {u'tokens': [u'Egypt', u':', u'Overview', u'of', u'human', u'rights', u'issues', u'in', u'Egypt', u'.'], u'lemmas': [u'Egypt', u':', u'overview', u'of', u'human', u'rights', u'issue', u'in', u'Egypt', u'.'], u'pos': [u'NNP', u':', u'NN', u'IN', u'JJ', u'NNS', u'NNS', u'IN', u'NNP', u'.'], u'char_offsets': [[26086, 26091], [26091, 26092], [26093, 26101], [26102, 26104], [26105, 26110], [26111, 26117], [26118, 26124], [26125, 26127], [26128, 26133], [26133, 26134]]}) 
answer: set([u'asia'])
candidate Sentence: (0.043041247874498367, {u'tokens': [u'Egypt', u'is', u'one', u'of', u'the', u'most', u'populous', u'countries', u'in', u'Africa', u'.'], u'lemmas': [u'Egypt', u'be', u'one', u'of', u'the', u'most', u'populous', u'country', u'in', u'Africa', u'.'], u'pos': [u'NNP', u'VBZ', u'CD', u'IN', u'DT', u'RBS', u'JJ', u'NNS', u'IN', u'NNP', u'.'], u'char_offsets': [[431, 436], [437, 439], [440, 443], [444, 446], [447, 450], [451, 455], [456, 464], [465, 474], [475, 477], [478, 484], [484, 485]]}) 
answer: set([u'asia'])
candidate Sentence: (0.03650105744600296, {u'tokens': [u'Freedom', u'in', u'the', u'World', u'-', u'Egypt', u'.'], u'lemmas': [u'Freedom', u'in', u'the', u'world', u'-', u'Egypt', u'.'], u'pos': [u'NNP', u'IN', u'DT', u'NN', u':', u'NNP', u'.'], u'char_offsets': [[27165, 27172], [27173, 27175], [27176, 27179], [27180, 27185], [27186, 27187], [27188, 27193], [27193, 27194]]}) 
answer: set([u'asia'])
candidate Sentence: (0.034799955785274506, {u'tokens': [u'When', u'the', u'union', u'was', u'dissolved', u',', u'the', u'current', u'official', u'name', u'of', u'Egypt', u'was', u'adopted', u',', u'the', u'Arab', u'Republic', u'of', u'Egypt', u'.'], u'lemmas': [u'when', u'the', u'union', u'be', u'dissolve', u',', u'the', u'current', u'official', u'name', u'of', u'Egypt', u'be', u'adopt', u',', u'the', u'Arab', u'Republic', u'of', u'Egypt', u'.'], u'pos': [u'WRB', u'DT', u'NN', u'VBD', u'VBN', u',', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'NNP', u'VBD', u'VBN', u',', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[16876, 16880], [16881, 16884], [16885, 16890], [16891, 16894], [16895, 16904], [16904, 16905], [16906, 16909], [16910, 16917], [16918, 16926], [16927, 16931], [16932, 16934], [16935, 16940], [16941, 16944], [16945, 16952], [16952, 16953], [16954, 16957], [16958, 16962], [16963, 16971], [16972, 16974], [16975, 16980], [16980, 16981]]}) 
answer: set([u'asia'])
candidate Sentence: (0.033678736537694931, {u'tokens': [u'Being', u'the', u'largest', u'religious', u'minority', u'in', u'Egypt', u',', u'Coptic', u'Christians', u'are', u'the', u'most', u'negatively', u'affected', u'community', u'.'], u'lemmas': [u'be', u'the', u'largest', u'religious', u'minority', u'in', u'Egypt', u',', u'Coptic', u'christian', u'be', u'the', u'most', u'negatively', u'affect', u'community', u'.'], u'pos': [u'VBG', u'DT', u'JJS', u'JJ', u'NN', u'IN', u'NNP', u',', u'NNP', u'NNS', u'VBP', u'DT', u'RBS', u'RB', u'VBN', u'NN', u'.'], u'char_offsets': [[41017, 41022], [41023, 41026], [41027, 41034], [41035, 41044], [41045, 41053], [41054, 41056], [41057, 41062], [41062, 41063], [41064, 41070], [41071, 41081], [41082, 41085], [41086, 41089], [41090, 41094], [41095, 41105], [41106, 41114], [41115, 41124], [41124, 41125]]}) 
answer: set([u'asia'])
['No', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'egypt', u'.'])

Is Egypt in Asia?
Validity= False
Question Type = NA
Answer Type = NA
Answer = No.
Difficulty = easy
Article_Title = Egypt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a6.txt

Yes
_____________________________ test_yesno[param94] ______________________________

param = (<src.question_processing.Question_parser instance at 0x1156de320>, (<src.tfidf.TF_IDF object at 0x11240d3d0>, set(['.', 'elephant'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('no') == True
E            +  where 'no' = <src.question_processing.Question_parser instance at 0x1156de320>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.52895438671112061, {u'tokens': [u'The', u'Asian', u'elephant', u'is', u'smaller', u'than', u'the', u'African', u'.'], u'lemmas': [u'the', u'asian', u'elephant', u'be', u'smaller', u'than', u'the', u'African', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VBZ', u'JJR', u'IN', u'DT', u'NNP', u'.'], u'char_offsets': [[9632, 9635], [9636, 9641], [9642, 9650], [9651, 9653], [9654, 9661], [9662, 9666], [9667, 9670], [9671, 9678], [9678, 9679]]}) 
answer: set([u'larger'])
candidate Sentence: (0.4742768406867981, {u'tokens': [u'The', u'African', u'is', u'typically', u'larger', u'than', u'the', u'Asian', u'and', u'has', u'a', u'concave', u'back', u'.'], u'lemmas': [u'the', u'African', u'be', u'typically', u'larger', u'than', u'the', u'asian', u'and', u'have', u'a', u'concave', u'back', u'.'], u'pos': [u'DT', u'NNP', u'VBZ', u'RB', u'JJR', u'IN', u'DT', u'JJ', u'CC', u'VBZ', u'DT', u'NN', u'RB', u'.'], u'char_offsets': [[6137, 6140], [6141, 6148], [6149, 6151], [6152, 6161], [6162, 6168], [6169, 6173], [6174, 6177], [6178, 6183], [6184, 6187], [6188, 6191], [6192, 6193], [6194, 6201], [6202, 6206], [6206, 6207]]}) 
answer: set([])
candidate Sentence: (0.21070080995559692, {u'tokens': [u'There', u'are', u'three', u'living', u'species', u':', u'the', u'African', u'Bush', u'Elephant', u',', u'the', u'African', u'Forest', u'Elephant', u'-LRB-', u'until', u'recently', u'known', u'collectively', u'as', u'the', u'African', u'Elephant', u'-RRB-', u',', u'and', u'the', u'Asian', u'Elephant', u'-LRB-', u'also', u'known', u'as', u'the', u'Indian', u'Elephant', u'-RRB-', u'.'], u'lemmas': [u'there', u'be', u'three', u'live', u'species', u':', u'the', u'African', u'Bush', u'Elephant', u',', u'the', u'African', u'Forest', u'Elephant', u'-lrb-', u'until', u'recently', u'know', u'collectively', u'as', u'the', u'african', u'elephant', u'-rrb-', u',', u'and', u'the', u'asian', u'elephant', u'-lrb-', u'also', u'know', u'as', u'the', u'indian', u'elephant', u'-rrb-', u'.'], u'pos': [u'EX', u'VBP', u'CD', u'VBG', u'NNS', u':', u'DT', u'NNP', u'NNP', u'NNP', u',', u'DT', u'NNP', u'NNP', u'NNP', u'-LRB-', u'IN', u'RB', u'VBN', u'RB', u'IN', u'DT', u'JJ', u'NN', u'-RRB-', u',', u'CC', u'DT', u'JJ', u'NN', u'-LRB-', u'RB', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'-RRB-', u'.'], u'char_offsets': [[189, 194], [195, 198], [199, 204], [205, 211], [212, 219], [219, 220], [221, 224], [225, 232], [233, 237], [238, 246], [246, 247], [248, 251], [252, 259], [260, 266], [267, 275], [276, 277], [277, 282], [283, 291], [292, 297], [298, 310], [311, 313], [314, 317], [318, 325], [326, 334], [334, 335], [335, 336], [337, 340], [341, 344], [345, 350], [351, 359], [360, 361], [361, 365], [366, 371], [372, 374], [375, 378], [379, 385], [386, 394], [394, 395], [395, 396]]}) 
answer: set([u'larger'])
candidate Sentence: (0.18017005920410156, {u'tokens': [u'African', u'elephants', u',', u'at', u'up', u'to', u'4', u'm', u'-LRB-', u'13', u'ft', u'1', u'in', u'-RRB-', u'tall', u'and', u'weighing', u'7500', u'kg', u'-LRB-', u'8.27', u'short', u'tons', u'-RRB-', u',', u'are', u'usually', u'larger', u'than', u'the', u'Asian', u'species', u'and', u'they', u'have', u'bigger', u'ears', u'.'], u'lemmas': [u'african', u'elephant', u',', u'at', u'up', u'to', u'4', u'm', u'-lrb-', u'13', u'ft', u'1', u'in', u'-rrb-', u'tall', u'and', u'weigh', u'7500', u'kg', u'-lrb-', u'8.27', u'short', u'ton', u'-rrb-', u',', u'be', u'usually', u'larger', u'than', u'the', u'asian', u'species', u'and', u'they', u'have', u'bigger', u'ear', u'.'], u'pos': [u'JJ', u'NNS', u',', u'IN', u'RB', u'TO', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'CD', u'IN', u'-RRB-', u'JJ', u'CC', u'VBG', u'CD', u'NN', u'-LRB-', u'CD', u'JJ', u'NNS', u'-RRB-', u',', u'VBP', u'RB', u'JJR', u'IN', u'DT', u'JJ', u'NNS', u'CC', u'PRP', u'VBP', u'JJR', u'NNS', u'.'], u'char_offsets': [[2818, 2825], [2826, 2835], [2835, 2836], [2837, 2839], [2840, 2842], [2843, 2845], [2846, 2847], [2848, 2849], [2850, 2851], [2851, 2853], [2854, 2856], [2857, 2858], [2859, 2861], [2861, 2862], [2863, 2867], [2868, 2871], [2872, 2880], [2881, 2885], [2886, 2888], [2889, 2890], [2890, 2894], [2895, 2900], [2901, 2905], [2905, 2906], [2906, 2907], [2908, 2911], [2912, 2919], [2921, 2927], [2928, 2932], [2933, 2936], [2937, 2942], [2943, 2950], [2951, 2954], [2955, 2959], [2960, 2964], [2965, 2971], [2972, 2976], [2976, 2977]]}) 
answer: set([])
candidate Sentence: (0.15997253358364105, {u'tokens': [u'African', u'elephants', u'are', u'more', u'temperamental', u'than', u'Asian', u'elephants', u',', u'but', u'are', u'easier', u'to', u'train', u'.'], u'lemmas': [u'african', u'elephant', u'be', u'more', u'temperamental', u'than', u'asian', u'elephant', u',', u'but', u'be', u'easier', u'to', u'train', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'RBR', u'JJ', u'IN', u'JJ', u'NNS', u',', u'CC', u'VBP', u'JJR', u'TO', u'VB', u'.'], u'char_offsets': [[45650, 45657], [45658, 45667], [45668, 45671], [45672, 45676], [45677, 45690], [45691, 45695], [45696, 45701], [45702, 45711], [45711, 45712], [45713, 45716], [45717, 45720], [45721, 45727], [45728, 45730], [45731, 45736], [45736, 45737]]}) 
answer: set([u'larger'])
candidate Sentence: (0.1553100049495697, {u'tokens': [u'Named', u'the', u'Borneo', u'pygmy', u'elephant', u',', u'it', u'is', u'smaller', u'and', u'tamer', u'than', u'other', u'Asian', u'elephants', u'.'], u'lemmas': [u'name', u'the', u'Borneo', u'pygmy', u'elephant', u',', u'it', u'be', u'smaller', u'and', u'tamer', u'than', u'other', u'asian', u'elephant', u'.'], u'pos': [u'VBN', u'DT', u'NNP', u'NN', u'NN', u',', u'PRP', u'VBZ', u'JJR', u'CC', u'JJR', u'IN', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[12699, 12704], [12705, 12708], [12709, 12715], [12716, 12721], [12722, 12730], [12730, 12731], [12732, 12734], [12735, 12737], [12738, 12745], [12746, 12749], [12750, 12755], [12756, 12760], [12761, 12766], [12767, 12772], [12773, 12782], [12782, 12783]]}) 
answer: set([u'larger', u'african'])
candidate Sentence: (0.14546254277229309, {u'tokens': [u'Normally', u',', u'the', u'skin', u'of', u'an', u'Asian', u'is', u'covered', u'with', u'more', u'hair', u'than', u'its', u'African', u'counterpart', u'.'], u'lemmas': [u'normally', u',', u'the', u'skin', u'of', u'a', u'asian', u'be', u'cover', u'with', u'more', u'hair', u'than', u'its', u'african', u'counterpart', u'.'], u'pos': [u'RB', u',', u'DT', u'NN', u'IN', u'DT', u'JJ', u'VBZ', u'VBN', u'IN', u'JJR', u'NN', u'IN', u'PRP$', u'JJ', u'NN', u'.'], u'char_offsets': [[18956, 18964], [18964, 18965], [18966, 18969], [18970, 18974], [18975, 18977], [18978, 18980], [18981, 18986], [18987, 18989], [18990, 18997], [18998, 19002], [19003, 19007], [19008, 19012], [19013, 19017], [19018, 19021], [19022, 19029], [19030, 19041], [19041, 19042]]}) 
answer: set([u'larger'])
candidate Sentence: (0.1425497978925705, {u'tokens': [u'Africans', u"'", u'ears', u'are', u'much', u'larger', u'and', u'are', u'shaped', u'like', u'the', u'continent', u'of', u'their', u'origin', u'.'], u'lemmas': [u'african', u"'", u'ear', u'be', u'much', u'larger', u'and', u'be', u'shape', u'like', u'the', u'continent', u'of', u'they', u'origin', u'.'], u'pos': [u'NNS', u'POS', u'NNS', u'VBP', u'RB', u'JJR', u'CC', u'VBP', u'VBN', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'.'], u'char_offsets': [[6055, 6063], [6063, 6064], [6065, 6069], [6070, 6073], [6074, 6078], [6079, 6085], [6086, 6089], [6090, 6093], [6094, 6100], [6101, 6105], [6106, 6109], [6110, 6119], [6120, 6122], [6123, 6128], [6129, 6135], [6135, 6136]]}) 
answer: set([u'asian'])
candidate Sentence: (0.14073118567466736, {u'tokens': [u'It', u'also', u'has', u'relatively', u'larger', u'ears', u',', u'longer', u'tail', u'and', u'straighter', u'tusks', u'.'], u'lemmas': [u'it', u'also', u'have', u'relatively', u'larger', u'ear', u',', u'longer', u'tail', u'and', u'straighter', u'tusk', u'.'], u'pos': [u'PRP', u'RB', u'VBZ', u'RB', u'JJR', u'NNS', u',', u'JJR', u'NN', u'CC', u'RBR', u'NNS', u'.'], u'char_offsets': [[12784, 12786], [12787, 12791], [12792, 12795], [12796, 12806], [12807, 12813], [12814, 12818], [12818, 12819], [12820, 12826], [12827, 12831], [12832, 12835], [12836, 12846], [12847, 12852], [12852, 12853]]}) 
answer: set([u'asian', u'african'])
candidate Sentence: (0.13572850823402405, {u'tokens': [u'Asian', u'males', u'can', u'have', u'tusks', u'as', u'long', u'as', u'the', u'much', u'larger', u'Africans', u',', u'but', u'they', u'are', u'usually', u'much', u'slimmer', u'and', u'lighter', u';', u'the', u'heaviest', u'recorded', u'is', u'39', u'kg', u'-LRB-', u'86', u'lb', u'-RRB-', u'.'], u'lemmas': [u'asian', u'male', u'can', u'have', u'tusk', u'as', u'long', u'as', u'the', u'much', u'larger', u'african', u',', u'but', u'they', u'be', u'usually', u'much', u'slimmer', u'and', u'lighter', u';', u'the', u'heaviest', u'record', u'be', u'39', u'kg', u'-lrb-', u'86', u'lb', u'-rrb-', u'.'], u'pos': [u'JJ', u'NNS', u'MD', u'VB', u'NNS', u'RB', u'RB', u'IN', u'DT', u'JJ', u'JJR', u'NNS', u',', u'CC', u'PRP', u'VBP', u'RB', u'JJ', u'JJR', u'CC', u'JJR', u':', u'DT', u'JJS', u'VBN', u'VBZ', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u'.'], u'char_offsets': [[16073, 16078], [16079, 16084], [16085, 16088], [16089, 16093], [16094, 16099], [16100, 16102], [16103, 16107], [16108, 16110], [16111, 16114], [16115, 16119], [16120, 16126], [16127, 16135], [16135, 16136], [16137, 16140], [16141, 16145], [16146, 16149], [16150, 16157], [16158, 16162], [16163, 16170], [16171, 16174], [16175, 16182], [16182, 16183], [16184, 16187], [16188, 16196], [16197, 16205], [16206, 16208], [16209, 16211], [16212, 16214], [16215, 16216], [16216, 16218], [16219, 16221], [16221, 16222], [16222, 16223]]}) 
answer: set([])
['No', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'Yes']
set([u'.', u'elephant'])

Is the Asian elephant larger than the African?
Validity= False
Question Type = NA
Answer Type = NA
Answer = no
Difficulty = easy
Article_Title = elephant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a5.txt

Yes
_____________________________ test_yesno[param113] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156de878>, (<src.tfidf.TF_IDF object at 0x110787a10>, set(['.', 'finland'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156de878>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.32174766063690186, {u'tokens': [u'It', u'has', u'borders', u'with', u'Sweden', u'to', u'the', u'west', u',', u'Russia', u'to', u'the', u'east', u',', u'and', u'Norway', u'to', u'the', u'north', u',', u'while', u'Estonia', u'lies', u'to', u'its', u'south', u'across', u'the', u'Gulf', u'of', u'Finland', u'.'], u'lemmas': [u'it', u'have', u'border', u'with', u'Sweden', u'to', u'the', u'west', u',', u'Russia', u'to', u'the', u'east', u',', u'and', u'Norway', u'to', u'the', u'north', u',', u'while', u'Estonia', u'lie', u'to', u'its', u'south', u'across', u'the', u'Gulf', u'of', u'Finland', u'.'], u'pos': [u'PRP', u'VBZ', u'NNS', u'IN', u'NNP', u'TO', u'DT', u'NN', u',', u'NNP', u'TO', u'DT', u'JJ', u',', u'CC', u'NNP', u'TO', u'DT', u'NN', u',', u'IN', u'NNP', u'VBZ', u'TO', u'PRP$', u'JJ', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[296, 298], [299, 302], [303, 310], [311, 315], [316, 322], [323, 325], [326, 329], [330, 334], [334, 335], [336, 342], [343, 345], [346, 349], [350, 354], [354, 355], [356, 359], [360, 366], [367, 369], [370, 373], [374, 379], [379, 380], [381, 386], [387, 394], [395, 399], [400, 402], [403, 406], [407, 412], [413, 419], [420, 423], [424, 428], [429, 431], [432, 439], [439, 440]]}) 
answer: set([])
candidate Sentence: (0.26854151487350464, {u'tokens': [u'Finland', u'has', u'good', u'relations', u'with', u'all', u'its', u'neighbours', u',', u'Sweden', u',', u'Norway', u',', u'Russia', u'and', u'Estonia', u',', u'and', u'is', u'not', u'involved', u'in', u'international', u'conflicts', u'or', u'border', u'disputes', u'.'], u'lemmas': [u'Finland', u'have', u'good', u'relation', u'with', u'all', u'its', u'neighbour', u',', u'Sweden', u',', u'Norway', u',', u'Russia', u'and', u'Estonia', u',', u'and', u'be', u'not', u'involve', u'in', u'international', u'conflict', u'or', u'border', u'dispute', u'.'], u'pos': [u'NNP', u'VBZ', u'JJ', u'NNS', u'IN', u'DT', u'PRP$', u'NNS', u',', u'NNP', u',', u'NNP', u',', u'NNP', u'CC', u'NNP', u',', u'CC', u'VBZ', u'RB', u'VBN', u'IN', u'JJ', u'NNS', u'CC', u'NN', u'NNS', u'.'], u'char_offsets': [[33496, 33503], [33504, 33507], [33508, 33512], [33513, 33522], [33523, 33527], [33528, 33531], [33532, 33535], [33536, 33546], [33546, 33547], [33548, 33554], [33554, 33555], [33556, 33562], [33562, 33563], [33564, 33570], [33571, 33574], [33575, 33582], [33582, 33583], [33584, 33587], [33588, 33590], [33591, 33594], [33595, 33603], [33604, 33606], [33607, 33620], [33621, 33630], [33631, 33633], [33634, 33640], [33641, 33649], [33649, 33650]]}) 
answer: set([])
candidate Sentence: (0.21739239990711212, {u'tokens': [u'This', u'makes', u'it', u',', u'after', u'Norway', u'and', u'Iceland', u',', u'the', u'most', u'sparsely', u'populated', u'country', u'in', u'Europe', u'.'], u'lemmas': [u'this', u'make', u'it', u',', u'after', u'Norway', u'and', u'Iceland', u',', u'the', u'most', u'sparsely', u'populated', u'country', u'in', u'Europe', u'.'], u'pos': [u'DT', u'VBZ', u'PRP', u',', u'IN', u'NNP', u'CC', u'NNP', u',', u'DT', u'RBS', u'RB', u'JJ', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[20306, 20310], [20311, 20316], [20317, 20319], [20319, 20320], [20321, 20326], [20327, 20333], [20334, 20337], [20338, 20345], [20345, 20346], [20347, 20350], [20351, 20355], [20356, 20364], [20365, 20374], [20375, 20382], [20383, 20385], [20386, 20392], [20392, 20393]]}) 
answer: set([u'border'])
candidate Sentence: (0.20943580567836761, {u'tokens': [u'The', u'Finnish', u'landscape', u'is', u'mostly', u'flat', u'with', u'few', u'hills', u'and', u'its', u'highest', u'point', u',', u'the', u'Halti', u'at', u'1,324', u'metres', u',', u'is', u'found', u'in', u'the', u'extreme', u'north', u'of', u'Lapland', u'at', u'the', u'border', u'between', u'Finland', u'and', u'Norway', u'.'], u'lemmas': [u'the', u'finnish', u'landscape', u'be', u'mostly', u'flat', u'with', u'few', u'hill', u'and', u'its', u'highest', u'point', u',', u'the', u'Halti', u'at', u'1,324', u'metre', u',', u'be', u'find', u'in', u'the', u'extreme', u'north', u'of', u'Lapland', u'at', u'the', u'border', u'between', u'Finland', u'and', u'Norway', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VBZ', u'RB', u'JJ', u'IN', u'JJ', u'NNS', u'CC', u'PRP$', u'JJS', u'NN', u',', u'DT', u'NNP', u'IN', u'CD', u'NNS', u',', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'IN', u'DT', u'NN', u'IN', u'NNP', u'CC', u'NNP', u'.'], u'char_offsets': [[12994, 12997], [12998, 13005], [13006, 13015], [13016, 13018], [13019, 13025], [13026, 13030], [13031, 13035], [13036, 13039], [13040, 13045], [13046, 13049], [13050, 13053], [13054, 13061], [13062, 13067], [13067, 13068], [13069, 13072], [13073, 13078], [13079, 13081], [13082, 13087], [13088, 13094], [13094, 13095], [13096, 13098], [13099, 13104], [13105, 13107], [13108, 13111], [13112, 13119], [13120, 13125], [13126, 13128], [13129, 13136], [13137, 13139], [13140, 13143], [13144, 13150], [13151, 13158], [13159, 13166], [13167, 13170], [13171, 13177], [13177, 13178]]}) 
answer: set([])
candidate Sentence: (0.20742511749267578, {u'tokens': [u'Fossil', u'fuels', u'are', u',', u'however', u',', u'all', u'imported', u',', u'because', u'Finland', u'does', u"n't", u'have', u'any', u'fossil', u'fuel', u'sources', u',', u'unlike', u'neighboring', u'Norway', u'with', u'oil', u'and', u'Estonia', u'with', u'oil', u'shale', u'.'], u'lemmas': [u'fossil', u'fuel', u'be', u',', u'however', u',', u'all', u'import', u',', u'because', u'Finland', u'do', u'not', u'have', u'any', u'fossil', u'fuel', u'source', u',', u'unlike', u'neighbor', u'Norway', u'with', u'oil', u'and', u'Estonia', u'with', u'oil', u'shale', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u',', u'RB', u',', u'DT', u'VBN', u',', u'IN', u'NNP', u'VBZ', u'RB', u'VB', u'DT', u'JJ', u'NN', u'NNS', u',', u'IN', u'VBG', u'NNP', u'IN', u'NN', u'CC', u'NNP', u'IN', u'NN', u'NN', u'.'], u'char_offsets': [[37720, 37726], [37727, 37732], [37733, 37736], [37736, 37737], [37738, 37745], [37745, 37746], [37747, 37750], [37751, 37759], [37759, 37760], [37761, 37768], [37769, 37776], [37777, 37781], [37781, 37784], [37785, 37789], [37790, 37793], [37794, 37800], [37801, 37805], [37806, 37813], [37813, 37814], [37815, 37821], [37822, 37833], [37834, 37840], [37841, 37845], [37846, 37849], [37850, 37853], [37854, 37861], [37862, 37866], [37867, 37870], [37871, 37876], [37876, 37877]]}) 
answer: set([u'border'])
candidate Sentence: (0.2017306387424469, {u'tokens': [u'It', u'has', u'thus', u'done', u'pioneering', u'work', u'on', u'developing', u'more', u'efficient', u'ways', u'of', u'using', u'energy', u'.'], u'lemmas': [u'it', u'have', u'thus', u'do', u'pioneering', u'work', u'on', u'develop', u'more', u'efficient', u'way', u'of', u'use', u'energy', u'.'], u'pos': [u'PRP', u'VBZ', u'RB', u'VBN', u'JJ', u'NN', u'IN', u'VBG', u'RBR', u'JJ', u'NNS', u'IN', u'VBG', u'NN', u'.'], u'char_offsets': [[35824, 35826], [35827, 35830], [35831, 35835], [35836, 35840], [35841, 35851], [35852, 35856], [35857, 35859], [35860, 35870], [35871, 35875], [35876, 35885], [35886, 35890], [35891, 35893], [35894, 35899], [35900, 35906], [35906, 35907]]}) 
answer: set([u'norway', u'border'])
candidate Sentence: (0.18851962685585022, {u'tokens': [u'Black', u'borders', u'refer', u'to', u'municipalities', u',', u'red', u'to', u'regions', u'.'], u'lemmas': [u'black', u'border', u'refer', u'to', u'municipality', u',', u'red', u'to', u'region', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'TO', u'NNS', u',', u'JJ', u'TO', u'NNS', u'.'], u'char_offsets': [[18535, 18540], [18541, 18548], [18549, 18554], [18555, 18557], [18558, 18572], [18572, 18573], [18574, 18577], [18578, 18580], [18581, 18588], [18588, 18589]]}) 
answer: set([u'norway'])
candidate Sentence: (0.18342380225658417, {u'tokens': [u'The', u'Finnish', u'Russian', u'border', u'was', u'determined', u'by', u'the', u'Treaty', u'of', u'Tartu', u'in', u'1920', u',', u'largely', u'following', u'the', u'historic', u'border', u'but', u'granting', u'Pechenga', u'-LRB-', u'Finnish', u':', u'Petsamo', u'-RRB-', u'and', u'its', u'Barents', u'Sea', u'harbour', u'to', u'Finland', u'.'], u'lemmas': [u'the', u'finnish', u'russian', u'border', u'be', u'determine', u'by', u'the', u'Treaty', u'of', u'Tartu', u'in', u'1920', u',', u'largely', u'follow', u'the', u'historic', u'border', u'but', u'grant', u'Pechenga', u'-lrb-', u'finnish', u':', u'Petsamo', u'-rrb-', u'and', u'its', u'Barents', u'Sea', u'harbour', u'to', u'Finland', u'.'], u'pos': [u'DT', u'JJ', u'JJ', u'NN', u'VBD', u'VBN', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'IN', u'CD', u',', u'RB', u'VBG', u'DT', u'JJ', u'NN', u'CC', u'VBG', u'NNP', u'-LRB-', u'JJ', u':', u'NNP', u'-RRB-', u'CC', u'PRP$', u'NNP', u'NNP', u'VBP', u'TO', u'NNP', u'.'], u'char_offsets': [[8228, 8231], [8232, 8239], [8240, 8247], [8248, 8254], [8255, 8258], [8259, 8269], [8270, 8272], [8273, 8276], [8277, 8283], [8284, 8286], [8287, 8292], [8293, 8295], [8296, 8300], [8300, 8301], [8302, 8309], [8310, 8319], [8320, 8323], [8324, 8332], [8333, 8339], [8340, 8343], [8344, 8352], [8353, 8361], [8362, 8363], [8363, 8370], [8370, 8371], [8372, 8379], [8379, 8380], [8381, 8384], [8385, 8388], [8389, 8396], [8397, 8400], [8401, 8408], [8409, 8411], [8412, 8419], [8419, 8420]]}) 
answer: set([u'norway'])
candidate Sentence: (0.1787121593952179, {u'tokens': [u'However', u',', u'Finland', u'maintained', u'a', u'democratic', u'government', u'and', u'a', u'market', u'economy', u'unlike', u'most', u'other', u'countries', u'bordering', u'the', u'Soviet', u'Union', u'.'], u'lemmas': [u'however', u',', u'Finland', u'maintain', u'a', u'democratic', u'government', u'and', u'a', u'market', u'economy', u'unlike', u'most', u'other', u'country', u'border', u'the', u'Soviet', u'Union', u'.'], u'pos': [u'RB', u',', u'NNP', u'VBD', u'DT', u'JJ', u'NN', u'CC', u'DT', u'NN', u'NN', u'IN', u'JJS', u'JJ', u'NNS', u'VBG', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[10780, 10787], [10787, 10788], [10789, 10796], [10797, 10807], [10808, 10809], [10810, 10820], [10821, 10831], [10832, 10835], [10836, 10837], [10838, 10844], [10845, 10852], [10853, 10859], [10860, 10864], [10865, 10870], [10871, 10880], [10881, 10890], [10891, 10894], [10895, 10901], [10902, 10907], [10907, 10908]]}) 
answer: set([u'norway'])
candidate Sentence: (0.1736074835062027, {u'tokens': [u'Consequently', u',', u'Finland', u'has', u'less', u'hydropower', u'capacity', u'than', u'Sweden', u'or', u'Norway', u'.'], u'lemmas': [u'consequently', u',', u'Finland', u'have', u'less', u'hydropower', u'capacity', u'than', u'Sweden', u'or', u'Norway', u'.'], u'pos': [u'RB', u',', u'NNP', u'VBZ', u'JJR', u'NN', u'NN', u'IN', u'NNP', u'CC', u'NNP', u'.'], u'char_offsets': [[36422, 36434], [36434, 36435], [36436, 36443], [36444, 36447], [36448, 36452], [36453, 36463], [36464, 36472], [36473, 36477], [36478, 36484], [36485, 36487], [36488, 36494], [36494, 36495]]}) 
answer: set([u'border'])
['Yes', 'No Sure', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'finland', u'.'])

Does it have a border with Norway?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Finland
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a4.txt

No
_____________________________ test_yesno[param114] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156de8c0>, (<src.tfidf.TF_IDF object at 0x110787a10>, set(['.', 'finland'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156de8c0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.32174766063690186, {u'tokens': [u'It', u'has', u'borders', u'with', u'Sweden', u'to', u'the', u'west', u',', u'Russia', u'to', u'the', u'east', u',', u'and', u'Norway', u'to', u'the', u'north', u',', u'while', u'Estonia', u'lies', u'to', u'its', u'south', u'across', u'the', u'Gulf', u'of', u'Finland', u'.'], u'lemmas': [u'it', u'have', u'border', u'with', u'Sweden', u'to', u'the', u'west', u',', u'Russia', u'to', u'the', u'east', u',', u'and', u'Norway', u'to', u'the', u'north', u',', u'while', u'Estonia', u'lie', u'to', u'its', u'south', u'across', u'the', u'Gulf', u'of', u'Finland', u'.'], u'pos': [u'PRP', u'VBZ', u'NNS', u'IN', u'NNP', u'TO', u'DT', u'NN', u',', u'NNP', u'TO', u'DT', u'JJ', u',', u'CC', u'NNP', u'TO', u'DT', u'NN', u',', u'IN', u'NNP', u'VBZ', u'TO', u'PRP$', u'JJ', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[296, 298], [299, 302], [303, 310], [311, 315], [316, 322], [323, 325], [326, 329], [330, 334], [334, 335], [336, 342], [343, 345], [346, 349], [350, 354], [354, 355], [356, 359], [360, 366], [367, 369], [370, 373], [374, 379], [379, 380], [381, 386], [387, 394], [395, 399], [400, 402], [403, 406], [407, 412], [413, 419], [420, 423], [424, 428], [429, 431], [432, 439], [439, 440]]}) 
answer: set([])
candidate Sentence: (0.26854151487350464, {u'tokens': [u'Finland', u'has', u'good', u'relations', u'with', u'all', u'its', u'neighbours', u',', u'Sweden', u',', u'Norway', u',', u'Russia', u'and', u'Estonia', u',', u'and', u'is', u'not', u'involved', u'in', u'international', u'conflicts', u'or', u'border', u'disputes', u'.'], u'lemmas': [u'Finland', u'have', u'good', u'relation', u'with', u'all', u'its', u'neighbour', u',', u'Sweden', u',', u'Norway', u',', u'Russia', u'and', u'Estonia', u',', u'and', u'be', u'not', u'involve', u'in', u'international', u'conflict', u'or', u'border', u'dispute', u'.'], u'pos': [u'NNP', u'VBZ', u'JJ', u'NNS', u'IN', u'DT', u'PRP$', u'NNS', u',', u'NNP', u',', u'NNP', u',', u'NNP', u'CC', u'NNP', u',', u'CC', u'VBZ', u'RB', u'VBN', u'IN', u'JJ', u'NNS', u'CC', u'NN', u'NNS', u'.'], u'char_offsets': [[33496, 33503], [33504, 33507], [33508, 33512], [33513, 33522], [33523, 33527], [33528, 33531], [33532, 33535], [33536, 33546], [33546, 33547], [33548, 33554], [33554, 33555], [33556, 33562], [33562, 33563], [33564, 33570], [33571, 33574], [33575, 33582], [33582, 33583], [33584, 33587], [33588, 33590], [33591, 33594], [33595, 33603], [33604, 33606], [33607, 33620], [33621, 33630], [33631, 33633], [33634, 33640], [33641, 33649], [33649, 33650]]}) 
answer: set([])
candidate Sentence: (0.21739239990711212, {u'tokens': [u'This', u'makes', u'it', u',', u'after', u'Norway', u'and', u'Iceland', u',', u'the', u'most', u'sparsely', u'populated', u'country', u'in', u'Europe', u'.'], u'lemmas': [u'this', u'make', u'it', u',', u'after', u'Norway', u'and', u'Iceland', u',', u'the', u'most', u'sparsely', u'populated', u'country', u'in', u'Europe', u'.'], u'pos': [u'DT', u'VBZ', u'PRP', u',', u'IN', u'NNP', u'CC', u'NNP', u',', u'DT', u'RBS', u'RB', u'JJ', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[20306, 20310], [20311, 20316], [20317, 20319], [20319, 20320], [20321, 20326], [20327, 20333], [20334, 20337], [20338, 20345], [20345, 20346], [20347, 20350], [20351, 20355], [20356, 20364], [20365, 20374], [20375, 20382], [20383, 20385], [20386, 20392], [20392, 20393]]}) 
answer: set([u'border'])
candidate Sentence: (0.20943580567836761, {u'tokens': [u'The', u'Finnish', u'landscape', u'is', u'mostly', u'flat', u'with', u'few', u'hills', u'and', u'its', u'highest', u'point', u',', u'the', u'Halti', u'at', u'1,324', u'metres', u',', u'is', u'found', u'in', u'the', u'extreme', u'north', u'of', u'Lapland', u'at', u'the', u'border', u'between', u'Finland', u'and', u'Norway', u'.'], u'lemmas': [u'the', u'finnish', u'landscape', u'be', u'mostly', u'flat', u'with', u'few', u'hill', u'and', u'its', u'highest', u'point', u',', u'the', u'Halti', u'at', u'1,324', u'metre', u',', u'be', u'find', u'in', u'the', u'extreme', u'north', u'of', u'Lapland', u'at', u'the', u'border', u'between', u'Finland', u'and', u'Norway', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VBZ', u'RB', u'JJ', u'IN', u'JJ', u'NNS', u'CC', u'PRP$', u'JJS', u'NN', u',', u'DT', u'NNP', u'IN', u'CD', u'NNS', u',', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'IN', u'DT', u'NN', u'IN', u'NNP', u'CC', u'NNP', u'.'], u'char_offsets': [[12994, 12997], [12998, 13005], [13006, 13015], [13016, 13018], [13019, 13025], [13026, 13030], [13031, 13035], [13036, 13039], [13040, 13045], [13046, 13049], [13050, 13053], [13054, 13061], [13062, 13067], [13067, 13068], [13069, 13072], [13073, 13078], [13079, 13081], [13082, 13087], [13088, 13094], [13094, 13095], [13096, 13098], [13099, 13104], [13105, 13107], [13108, 13111], [13112, 13119], [13120, 13125], [13126, 13128], [13129, 13136], [13137, 13139], [13140, 13143], [13144, 13150], [13151, 13158], [13159, 13166], [13167, 13170], [13171, 13177], [13177, 13178]]}) 
answer: set([])
candidate Sentence: (0.20742511749267578, {u'tokens': [u'Fossil', u'fuels', u'are', u',', u'however', u',', u'all', u'imported', u',', u'because', u'Finland', u'does', u"n't", u'have', u'any', u'fossil', u'fuel', u'sources', u',', u'unlike', u'neighboring', u'Norway', u'with', u'oil', u'and', u'Estonia', u'with', u'oil', u'shale', u'.'], u'lemmas': [u'fossil', u'fuel', u'be', u',', u'however', u',', u'all', u'import', u',', u'because', u'Finland', u'do', u'not', u'have', u'any', u'fossil', u'fuel', u'source', u',', u'unlike', u'neighbor', u'Norway', u'with', u'oil', u'and', u'Estonia', u'with', u'oil', u'shale', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u',', u'RB', u',', u'DT', u'VBN', u',', u'IN', u'NNP', u'VBZ', u'RB', u'VB', u'DT', u'JJ', u'NN', u'NNS', u',', u'IN', u'VBG', u'NNP', u'IN', u'NN', u'CC', u'NNP', u'IN', u'NN', u'NN', u'.'], u'char_offsets': [[37720, 37726], [37727, 37732], [37733, 37736], [37736, 37737], [37738, 37745], [37745, 37746], [37747, 37750], [37751, 37759], [37759, 37760], [37761, 37768], [37769, 37776], [37777, 37781], [37781, 37784], [37785, 37789], [37790, 37793], [37794, 37800], [37801, 37805], [37806, 37813], [37813, 37814], [37815, 37821], [37822, 37833], [37834, 37840], [37841, 37845], [37846, 37849], [37850, 37853], [37854, 37861], [37862, 37866], [37867, 37870], [37871, 37876], [37876, 37877]]}) 
answer: set([u'border'])
candidate Sentence: (0.2017306387424469, {u'tokens': [u'It', u'has', u'thus', u'done', u'pioneering', u'work', u'on', u'developing', u'more', u'efficient', u'ways', u'of', u'using', u'energy', u'.'], u'lemmas': [u'it', u'have', u'thus', u'do', u'pioneering', u'work', u'on', u'develop', u'more', u'efficient', u'way', u'of', u'use', u'energy', u'.'], u'pos': [u'PRP', u'VBZ', u'RB', u'VBN', u'JJ', u'NN', u'IN', u'VBG', u'RBR', u'JJ', u'NNS', u'IN', u'VBG', u'NN', u'.'], u'char_offsets': [[35824, 35826], [35827, 35830], [35831, 35835], [35836, 35840], [35841, 35851], [35852, 35856], [35857, 35859], [35860, 35870], [35871, 35875], [35876, 35885], [35886, 35890], [35891, 35893], [35894, 35899], [35900, 35906], [35906, 35907]]}) 
answer: set([u'norway', u'border'])
candidate Sentence: (0.18851962685585022, {u'tokens': [u'Black', u'borders', u'refer', u'to', u'municipalities', u',', u'red', u'to', u'regions', u'.'], u'lemmas': [u'black', u'border', u'refer', u'to', u'municipality', u',', u'red', u'to', u'region', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'TO', u'NNS', u',', u'JJ', u'TO', u'NNS', u'.'], u'char_offsets': [[18535, 18540], [18541, 18548], [18549, 18554], [18555, 18557], [18558, 18572], [18572, 18573], [18574, 18577], [18578, 18580], [18581, 18588], [18588, 18589]]}) 
answer: set([u'norway'])
candidate Sentence: (0.18342380225658417, {u'tokens': [u'The', u'Finnish', u'Russian', u'border', u'was', u'determined', u'by', u'the', u'Treaty', u'of', u'Tartu', u'in', u'1920', u',', u'largely', u'following', u'the', u'historic', u'border', u'but', u'granting', u'Pechenga', u'-LRB-', u'Finnish', u':', u'Petsamo', u'-RRB-', u'and', u'its', u'Barents', u'Sea', u'harbour', u'to', u'Finland', u'.'], u'lemmas': [u'the', u'finnish', u'russian', u'border', u'be', u'determine', u'by', u'the', u'Treaty', u'of', u'Tartu', u'in', u'1920', u',', u'largely', u'follow', u'the', u'historic', u'border', u'but', u'grant', u'Pechenga', u'-lrb-', u'finnish', u':', u'Petsamo', u'-rrb-', u'and', u'its', u'Barents', u'Sea', u'harbour', u'to', u'Finland', u'.'], u'pos': [u'DT', u'JJ', u'JJ', u'NN', u'VBD', u'VBN', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'IN', u'CD', u',', u'RB', u'VBG', u'DT', u'JJ', u'NN', u'CC', u'VBG', u'NNP', u'-LRB-', u'JJ', u':', u'NNP', u'-RRB-', u'CC', u'PRP$', u'NNP', u'NNP', u'VBP', u'TO', u'NNP', u'.'], u'char_offsets': [[8228, 8231], [8232, 8239], [8240, 8247], [8248, 8254], [8255, 8258], [8259, 8269], [8270, 8272], [8273, 8276], [8277, 8283], [8284, 8286], [8287, 8292], [8293, 8295], [8296, 8300], [8300, 8301], [8302, 8309], [8310, 8319], [8320, 8323], [8324, 8332], [8333, 8339], [8340, 8343], [8344, 8352], [8353, 8361], [8362, 8363], [8363, 8370], [8370, 8371], [8372, 8379], [8379, 8380], [8381, 8384], [8385, 8388], [8389, 8396], [8397, 8400], [8401, 8408], [8409, 8411], [8412, 8419], [8419, 8420]]}) 
answer: set([u'norway'])
candidate Sentence: (0.1787121593952179, {u'tokens': [u'However', u',', u'Finland', u'maintained', u'a', u'democratic', u'government', u'and', u'a', u'market', u'economy', u'unlike', u'most', u'other', u'countries', u'bordering', u'the', u'Soviet', u'Union', u'.'], u'lemmas': [u'however', u',', u'Finland', u'maintain', u'a', u'democratic', u'government', u'and', u'a', u'market', u'economy', u'unlike', u'most', u'other', u'country', u'border', u'the', u'Soviet', u'Union', u'.'], u'pos': [u'RB', u',', u'NNP', u'VBD', u'DT', u'JJ', u'NN', u'CC', u'DT', u'NN', u'NN', u'IN', u'JJS', u'JJ', u'NNS', u'VBG', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[10780, 10787], [10787, 10788], [10789, 10796], [10797, 10807], [10808, 10809], [10810, 10820], [10821, 10831], [10832, 10835], [10836, 10837], [10838, 10844], [10845, 10852], [10853, 10859], [10860, 10864], [10865, 10870], [10871, 10880], [10881, 10890], [10891, 10894], [10895, 10901], [10902, 10907], [10907, 10908]]}) 
answer: set([u'norway'])
candidate Sentence: (0.1736074835062027, {u'tokens': [u'Consequently', u',', u'Finland', u'has', u'less', u'hydropower', u'capacity', u'than', u'Sweden', u'or', u'Norway', u'.'], u'lemmas': [u'consequently', u',', u'Finland', u'have', u'less', u'hydropower', u'capacity', u'than', u'Sweden', u'or', u'Norway', u'.'], u'pos': [u'RB', u',', u'NNP', u'VBZ', u'JJR', u'NN', u'NN', u'IN', u'NNP', u'CC', u'NNP', u'.'], u'char_offsets': [[36422, 36434], [36434, 36435], [36436, 36443], [36444, 36447], [36448, 36452], [36453, 36463], [36464, 36472], [36473, 36477], [36478, 36484], [36485, 36487], [36488, 36494], [36494, 36495]]}) 
answer: set([u'border'])
['Yes', 'No Sure', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'finland', u'.'])

Does it have a border with Norway?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Finland
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a4.txt

No
_____________________________ test_yesno[param125] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156debd8>, (<src.tfidf.TF_IDF object at 0x11240dc90>, set(['.', 'ford', 'gerald'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156debd8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.31569403409957886, {u'tokens': [u'In', u'1961', u',', u'the', u'U.S.', u'House', u'membership', u'voted', u'Ford', u'a', u'special', u'award', u'as', u'a', u'``', u'Congressman', u"'s", u'Congressman', u"''", u'that', u'praised', u'his', u'committee', u'work', u'on', u'military', u'budgets', u'.'], u'lemmas': [u'in', u'1961', u',', u'the', u'U.S.', u'House', u'membership', u'vote', u'Ford', u'a', u'special', u'award', u'as', u'a', u'``', u'Congressman', u"'s", u'congressman', u"''", u'that', u'praise', u'he', u'committee', u'work', u'on', u'military', u'budget', u'.'], u'pos': [u'IN', u'CD', u',', u'DT', u'NNP', u'NNP', u'NN', u'VBD', u'NNP', u'DT', u'JJ', u'NN', u'IN', u'DT', u'``', u'NNP', u'POS', u'NN', u"''", u'WDT', u'VBD', u'PRP$', u'NN', u'NN', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[16400, 16402], [16403, 16407], [16407, 16408], [16409, 16412], [16413, 16417], [16418, 16423], [16424, 16434], [16435, 16440], [16441, 16445], [16446, 16447], [16448, 16455], [16456, 16461], [16462, 16464], [16465, 16466], [16467, 16468], [16468, 16479], [16479, 16481], [16482, 16493], [16493, 16494], [16495, 16499], [16500, 16507], [16508, 16511], [16512, 16521], [16522, 16526], [16527, 16529], [16530, 16538], [16539, 16546], [16546, 16547]]}) 
answer: set([u'call', u'get'])
candidate Sentence: (0.16100996732711792, {u'tokens': [u'Many', u'in', u'the', u'press', u'jokingly', u'called', u'this', u'``', u'The', u'Ev', u'and', u'Jerry', u'Show', u"''", u'.'], u'lemmas': [u'many', u'in', u'the', u'press', u'jokingly', u'call', u'this', u'``', u'the', u'ev', u'and', u'Jerry', u'Show', u"''", u'.'], u'pos': [u'JJ', u'IN', u'DT', u'NN', u'RB', u'VBN', u'DT', u'``', u'DT', u'NN', u'CC', u'NNP', u'NNP', u"''", u'.'], u'char_offsets': [[20386, 20390], [20391, 20393], [20394, 20397], [20398, 20403], [20404, 20412], [20413, 20419], [20420, 20424], [20425, 20426], [20426, 20429], [20430, 20432], [20433, 20436], [20437, 20442], [20443, 20447], [20447, 20448], [20448, 20449]]}) 
answer: set([u'congressman', u'award', u'get'])
candidate Sentence: (0.13951440155506134, {u'tokens': [u'In', u'subsequent', u'years', u',', u'Ford', u'received', u'the', u'Distinguished', u'Eagle', u'Scout', u'Award', u'in', u'May', u'1970', u'and', u'Silver', u'Buffalo', u'Award', u'from', u'the', u'Boy', u'Scouts', u'of', u'America', u'.'], u'lemmas': [u'in', u'subsequent', u'year', u',', u'Ford', u'receive', u'the', u'distinguish', u'Eagle', u'Scout', u'award', u'in', u'May', u'1970', u'and', u'silver', u'Buffalo', u'award', u'from', u'the', u'boy', u'scout', u'of', u'America', u'.'], u'pos': [u'IN', u'JJ', u'NNS', u',', u'NNP', u'VBD', u'DT', u'VBN', u'NNP', u'NNP', u'NN', u'IN', u'NNP', u'CD', u'CC', u'NN', u'NNP', u'NN', u'IN', u'DT', u'NN', u'NNS', u'IN', u'NNP', u'.'], u'char_offsets': [[4338, 4340], [4341, 4351], [4352, 4357], [4357, 4358], [4359, 4363], [4364, 4372], [4373, 4376], [4377, 4390], [4391, 4396], [4397, 4402], [4403, 4408], [4409, 4411], [4412, 4415], [4416, 4420], [4421, 4424], [4425, 4431], [4432, 4439], [4440, 4445], [4446, 4450], [4451, 4454], [4455, 4458], [4459, 4465], [4466, 4468], [4469, 4476], [4476, 4477]]}) 
answer: set([u'congressman', u'call', u'get'])
candidate Sentence: (0.13697493076324463, {u'tokens': [u'In', u'2001', u',', u'the', u'John', u'F.', u'Kennedy', u'Library', u'Foundation', u'awarded', u'the', u'John', u'F.', u'Kennedy', u'Profile', u'in', u'Courage', u'Award', u'to', u'Ford', u'for', u'his', u'pardon', u'of', u'Nixon', u'.'], u'lemmas': [u'in', u'2001', u',', u'the', u'John', u'F.', u'Kennedy', u'Library', u'Foundation', u'award', u'the', u'John', u'F.', u'Kennedy', u'Profile', u'in', u'Courage', u'award', u'to', u'Ford', u'for', u'he', u'pardon', u'of', u'Nixon', u'.'], u'pos': [u'IN', u'CD', u',', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'VBD', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NN', u'TO', u'NNP', u'IN', u'PRP$', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[27101, 27103], [27104, 27108], [27108, 27109], [27110, 27113], [27114, 27118], [27119, 27121], [27122, 27129], [27130, 27137], [27138, 27148], [27149, 27156], [27157, 27160], [27161, 27165], [27166, 27168], [27169, 27176], [27177, 27184], [27185, 27187], [27188, 27195], [27196, 27201], [27202, 27204], [27205, 27209], [27210, 27213], [27214, 27217], [27218, 27224], [27225, 27227], [27228, 27233], [27233, 27234]]}) 
answer: set([u'congressman', u'call', u'get'])
candidate Sentence: (0.13133929669857025, {u'tokens': [u'She', u'began', u'calling', u'her', u'son', u'Gerald', u'Rudolff', u'Ford', u',', u'Jr.', u'.'], u'lemmas': [u'she', u'begin', u'call', u'she', u'son', u'Gerald', u'Rudolff', u'Ford', u',', u'Jr.', u'.'], u'pos': [u'PRP', u'VBD', u'VBG', u'PRP$', u'NN', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[2784, 2787], [2788, 2793], [2794, 2801], [2802, 2805], [2806, 2809], [2810, 2816], [2817, 2824], [2825, 2829], [2829, 2830], [2831, 2833], [2833, 2834]]}) 
answer: set([u'congressman', u'award', u'get'])
candidate Sentence: (0.12429063022136688, {u'tokens': [u'Congressman', u'Gerald', u'Ford', u',', u'MSFC', u'director', u'Wernher', u'von', u'Braun', u',', u'Congressman', u'George', u'H.', u'Mahon', u',', u'and', u'NASA', u'Administrator', u'James', u'E.', u'Webb', u'visit', u'the', u'Marshall', u'Space', u'Flight', u'Center', u'for', u'a', u'briefing', u'on', u'the', u'Saturn', u'program', u',', u'1964', u'In', u'November', u'1963', u',', u'President', u'Lyndon', u'B.', u'Johnson', u'appointed', u'Ford', u'to', u'the', u'Warren', u'Commission', u',', u'a', u'special', u'task', u'force', u'set', u'up', u'to', u'investigate', u'the', u'assassination', u'of', u'President', u'John', u'F.', u'Kennedy', u'.'], u'lemmas': [u'Congressman', u'Gerald', u'Ford', u',', u'MSFC', u'director', u'Wernher', u'von', u'Braun', u',', u'Congressman', u'George', u'H.', u'Mahon', u',', u'and', u'NASA', u'Administrator', u'James', u'E.', u'Webb', u'visit', u'the', u'Marshall', u'Space', u'Flight', u'Center', u'for', u'a', u'briefing', u'on', u'the', u'Saturn', u'program', u',', u'1964', u'in', u'November', u'1963', u',', u'President', u'Lyndon', u'B.', u'Johnson', u'appoint', u'Ford', u'to', u'the', u'Warren', u'Commission', u',', u'a', u'special', u'task', u'force', u'set', u'up', u'to', u'investigate', u'the', u'assassination', u'of', u'President', u'John', u'F.', u'Kennedy', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u',', u'NNP', u'NN', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'CC', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'VB', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NN', u',', u'CD', u'IN', u'NNP', u'CD', u',', u'NNP', u'NNP', u'NNP', u'NNP', u'VBN', u'NNP', u'TO', u'DT', u'NNP', u'NNP', u',', u'DT', u'JJ', u'NN', u'NN', u'VBD', u'RP', u'TO', u'VB', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[17245, 17256], [17257, 17263], [17264, 17268], [17268, 17269], [17270, 17274], [17275, 17283], [17284, 17291], [17292, 17295], [17296, 17301], [17301, 17302], [17303, 17314], [17315, 17321], [17322, 17324], [17325, 17330], [17330, 17331], [17332, 17335], [17336, 17340], [17341, 17354], [17355, 17360], [17361, 17363], [17364, 17368], [17369, 17374], [17375, 17378], [17379, 17387], [17388, 17393], [17394, 17400], [17401, 17407], [17408, 17411], [17412, 17413], [17414, 17422], [17423, 17425], [17426, 17429], [17430, 17436], [17437, 17444], [17444, 17445], [17446, 17450], [17451, 17453], [17454, 17462], [17463, 17467], [17467, 17468], [17469, 17478], [17479, 17485], [17486, 17488], [17489, 17496], [17497, 17506], [17507, 17511], [17512, 17514], [17515, 17518], [17519, 17525], [17526, 17536], [17536, 17537], [17538, 17539], [17540, 17547], [17548, 17552], [17553, 17558], [17559, 17562], [17563, 17565], [17566, 17568], [17569, 17580], [17581, 17584], [17585, 17598], [17599, 17601], [17602, 17611], [17612, 17616], [17617, 17619], [17620, 17627], [17627, 17628]]}) 
answer: set([u'call', u'award', u'get'])
candidate Sentence: (0.11869728565216064, {u'tokens': [u'But', u'President', u'Johnson', u'disliked', u'Ford', u'for', u'the', u'congressman', u"'s", u'frequent', u'attacks', u'on', u'the', u'administration', u"'s", u'``', u'Great', u'Society', u"''", u'programs', u'as', u'being', u'unneeded', u'or', u'wasteful', u',', u'and', u'for', u'his', u'criticism', u'of', u'the', u'President', u"'s", u'handling', u'of', u'the', u'Vietnam', u'War', u'.'], u'lemmas': [u'but', u'President', u'Johnson', u'dislike', u'Ford', u'for', u'the', u'congressman', u"'s", u'frequent', u'attack', u'on', u'the', u'administration', u"'s", u'``', u'Great', u'Society', u"''", u'program', u'as', u'be', u'unneeded', u'or', u'wasteful', u',', u'and', u'for', u'he', u'criticism', u'of', u'the', u'President', u"'s", u'handling', u'of', u'the', u'Vietnam', u'War', u'.'], u'pos': [u'CC', u'NNP', u'NNP', u'VBD', u'NNP', u'IN', u'DT', u'NN', u'POS', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'POS', u'``', u'NNP', u'NNP', u"''", u'NNS', u'IN', u'VBG', u'JJ', u'CC', u'JJ', u',', u'CC', u'IN', u'PRP$', u'NN', u'IN', u'DT', u'NNP', u'POS', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[19948, 19951], [19952, 19961], [19962, 19969], [19970, 19978], [19979, 19983], [19984, 19987], [19988, 19991], [19992, 20003], [20003, 20005], [20006, 20014], [20015, 20022], [20023, 20025], [20026, 20029], [20030, 20044], [20044, 20046], [20047, 20048], [20048, 20053], [20054, 20061], [20061, 20062], [20063, 20071], [20072, 20074], [20075, 20080], [20081, 20089], [20090, 20092], [20093, 20101], [20101, 20102], [20103, 20106], [20107, 20110], [20111, 20114], [20115, 20124], [20125, 20127], [20128, 20131], [20132, 20141], [20141, 20143], [20144, 20152], [20153, 20155], [20156, 20159], [20160, 20167], [20168, 20171], [20171, 20172]]}) 
answer: set([u'call', u'award', u'get'])
candidate Sentence: (0.11751697957515717, {u'tokens': [u'Ford', u'had', u'changed', u'his', u'view', u'of', u'the', u'world', u'as', u'a', u'result', u'of', u'his', u'military', u'service', u';', u'``', u'I', u'came', u'back', u'a', u'converted', u'internationalist', u"''", u',', u'Ford', u'stated', u',', u'``', u'and', u'of', u'course', u'our', u'congressman', u'at', u'that', u'time', u'was', u'an', u'avowed', u',', u'dedicated', u'isolationist', u'.'], u'lemmas': [u'Ford', u'have', u'change', u'he', u'view', u'of', u'the', u'world', u'as', u'a', u'result', u'of', u'he', u'military', u'service', u';', u'``', u'I', u'come', u'back', u'a', u'convert', u'internationalist', u"''", u',', u'Ford', u'state', u',', u'``', u'and', u'of', u'course', u'we', u'congressman', u'at', u'that', u'time', u'be', u'a', u'avowed', u',', u'dedicated', u'isolationist', u'.'], u'pos': [u'NNP', u'VBD', u'VBN', u'PRP$', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'JJ', u'NN', u':', u'``', u'PRP', u'VBD', u'RB', u'DT', u'VBN', u'JJ', u"''", u',', u'NNP', u'VBD', u',', u'``', u'CC', u'IN', u'NN', u'PRP$', u'NN', u'IN', u'DT', u'NN', u'VBD', u'DT', u'JJ', u',', u'JJ', u'NN', u'.'], u'char_offsets': [[15930, 15934], [15935, 15938], [15939, 15946], [15947, 15950], [15951, 15955], [15956, 15958], [15959, 15962], [15963, 15968], [15969, 15971], [15972, 15973], [15974, 15980], [15981, 15983], [15984, 15987], [15988, 15996], [15997, 16004], [16004, 16005], [16006, 16007], [16007, 16008], [16009, 16013], [16014, 16018], [16019, 16020], [16021, 16030], [16031, 16047], [16047, 16048], [16048, 16049], [16050, 16054], [16055, 16061], [16061, 16062], [16063, 16064], [16064, 16067], [16068, 16070], [16071, 16077], [16078, 16081], [16082, 16093], [16094, 16096], [16097, 16101], [16102, 16106], [16107, 16110], [16111, 16113], [16114, 16120], [16120, 16121], [16122, 16131], [16132, 16144], [16144, 16145]]}) 
answer: set([u'call', u'award', u'get'])
candidate Sentence: (0.10764431208372116, {u'tokens': [u'And', u'he', u'said', u',', u'`', u'I', u"'m", u'just', u'warning', u'you', u'that', u'you', u"'ve", u'got', u'to', u'be', u'prepared', u',', u'that', u'things', u'might', u'change', u'dramatically', u'and', u'you', u'could', u'become', u'President', u'.', u"'"], u'lemmas': [u'and', u'he', u'say', u',', u'`', u'I', u'be', u'just', u'warn', u'you', u'that', u'you', u'have', u'get', u'to', u'be', u'prepare', u',', u'that', u'thing', u'might', u'change', u'dramatically', u'and', u'you', u'could', u'become', u'President', u'.', u"'"], u'pos': [u'CC', u'PRP', u'VBD', u',', u'``', u'PRP', u'VBP', u'RB', u'VBG', u'PRP', u'IN', u'PRP', u'VBP', u'VBN', u'TO', u'VB', u'VBN', u',', u'IN', u'NNS', u'MD', u'VB', u'RB', u'CC', u'PRP', u'MD', u'VB', u'NNP', u'.', u"''"], u'char_offsets': [[22680, 22683], [22684, 22686], [22687, 22691], [22691, 22692], [22693, 22694], [22694, 22695], [22695, 22697], [22698, 22702], [22703, 22710], [22711, 22714], [22715, 22719], [22720, 22723], [22723, 22726], [22727, 22730], [22731, 22733], [22734, 22736], [22737, 22745], [22745, 22746], [22747, 22751], [22752, 22758], [22759, 22764], [22765, 22771], [22772, 22784], [22785, 22788], [22789, 22792], [22793, 22798], [22799, 22805], [22806, 22815], [22815, 22816], [22816, 22817]]}) 
answer: set([u'congressman', u'call', u'award'])
candidate Sentence: (0.10670427978038788, {u'tokens': [u'Ford', u"'s", u'transition', u'chairman', u'and', u'first', u'Chief', u'of', u'Staff', u'was', u'former', u'congressman', u'and', u'ambassador', u'Donald', u'Rumsfeld', u'.'], u'lemmas': [u'Ford', u"'s", u'transition', u'chairman', u'and', u'first', u'Chief', u'of', u'Staff', u'be', u'former', u'congressman', u'and', u'ambassador', u'Donald', u'Rumsfeld', u'.'], u'pos': [u'NNP', u'POS', u'NN', u'NN', u'CC', u'JJ', u'NNP', u'IN', u'NNP', u'VBD', u'JJ', u'NN', u'CC', u'NN', u'NNP', u'NNP', u'.'], u'char_offsets': [[28631, 28635], [28635, 28637], [28638, 28648], [28649, 28657], [28658, 28661], [28662, 28667], [28668, 28673], [28674, 28676], [28677, 28682], [28683, 28686], [28687, 28693], [28694, 28705], [28706, 28709], [28710, 28720], [28721, 28727], [28728, 28736], [28736, 28737]]}) 
answer: set([u'call', u'award', u'get'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'gerald', u'.', u'ford'])

Did ford get an award called "Congressman's congressman"?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Gerald_Ford
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a10.txt

No
_____________________________ test_yesno[param148] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e3290>, (<src.tfidf.TF_IDF object at 0x11240de90>, set(['.', 'gray', 'wolf'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes, They do tend to have darker furs')
E            +    where 'Yes, They do tend to have darker furs' = <src.question_processing.Question_parser instance at 0x1156e3290>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.40190744400024414, {u'tokens': [u'At', u'birth', u',', u'wolf', u'pups', u'tend', u'to', u'have', u'darker', u'fur', u'and', u'blue', u'irises', u'that', u'will', u'change', u'to', u'a', u'yellow-gold', u'or', u'orange', u'color', u'when', u'the', u'pups', u'are', u'between', u'8', u'and', u'16', u'weeks', u'old', u'.'], u'lemmas': [u'at', u'birth', u',', u'wolf', u'pup', u'tend', u'to', u'have', u'darker', u'fur', u'and', u'blue', u'iris', u'that', u'will', u'change', u'to', u'a', u'yellow-gold', u'or', u'orange', u'color', u'when', u'the', u'pup', u'be', u'between', u'8', u'and', u'16', u'week', u'old', u'.'], u'pos': [u'IN', u'NN', u',', u'NN', u'NNS', u'VBP', u'TO', u'VB', u'JJR', u'NN', u'CC', u'JJ', u'NNS', u'WDT', u'MD', u'VB', u'TO', u'DT', u'JJ', u'CC', u'JJ', u'NN', u'WRB', u'DT', u'NNS', u'VBP', u'IN', u'CD', u'CC', u'CD', u'NNS', u'JJ', u'.'], u'char_offsets': [[6223, 6225], [6226, 6231], [6231, 6232], [6233, 6237], [6238, 6242], [6243, 6247], [6248, 6250], [6251, 6255], [6256, 6262], [6263, 6266], [6267, 6270], [6271, 6275], [6276, 6282], [6283, 6287], [6288, 6292], [6293, 6299], [6300, 6302], [6303, 6304], [6305, 6316], [6317, 6319], [6320, 6326], [6327, 6332], [6333, 6337], [6338, 6341], [6342, 6346], [6347, 6350], [6351, 6358], [6359, 6360], [6361, 6364], [6365, 6367], [6368, 6373], [6374, 6377], [6377, 6378]]}) 
answer: set([u'adult'])
candidate Sentence: (0.17382898926734924, {u'tokens': [u'One', u'or', u'two', u'adults', u'stay', u'behind', u'to', u'ensure', u'the', u'safety', u'of', u'the', u'pups', u'.'], u'lemmas': [u'one', u'or', u'two', u'adult', u'stay', u'behind', u'to', u'ensure', u'the', u'safety', u'of', u'the', u'pup', u'.'], u'pos': [u'CD', u'CC', u'CD', u'NNS', u'VBP', u'IN', u'TO', u'VB', u'DT', u'NN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[11637, 11640], [11641, 11643], [11644, 11647], [11648, 11654], [11655, 11659], [11660, 11666], [11667, 11669], [11670, 11676], [11677, 11680], [11681, 11687], [11688, 11690], [11691, 11694], [11695, 11699], [11699, 11700]]}) 
answer: set([u'darker', u'fur', u'tend'])
candidate Sentence: (0.16967852413654327, {u'tokens': [u'Females', u'tend', u'to', u'keep', u'their', u'winter', u'coats', u'further', u'into', u'the', u'spring', u'than', u'males', u'.'], u'lemmas': [u'female', u'tend', u'to', u'keep', u'they', u'winter', u'coat', u'further', u'into', u'the', u'spring', u'than', u'male', u'.'], u'pos': [u'NNS', u'VBP', u'TO', u'VB', u'PRP$', u'NN', u'NNS', u'RBR', u'IN', u'DT', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[5091, 5098], [5099, 5103], [5104, 5106], [5107, 5111], [5112, 5117], [5118, 5124], [5125, 5130], [5131, 5138], [5139, 5143], [5144, 5147], [5148, 5154], [5155, 5159], [5160, 5165], [5165, 5166]]}) 
answer: set([u'pup', u'fur', u'adult', u'darker'])
candidate Sentence: (0.16911421716213226, {u'tokens': [u'Alpha', u'wolves', u'scent', u'mark', u'the', u'most', u'often', u',', u'with', u'males', u'doing', u'so', u'more', u'than', u'females', u'.'], u'lemmas': [u'alpha', u'wolf', u'scent', u'mark', u'the', u'most', u'often', u',', u'with', u'male', u'do', u'so', u'more', u'than', u'female', u'.'], u'pos': [u'NN', u'NNS', u'JJ', u'NN', u'DT', u'RBS', u'RB', u',', u'IN', u'NNS', u'VBG', u'RB', u'JJR', u'IN', u'NNS', u'.'], u'char_offsets': [[20376, 20381], [20382, 20388], [20389, 20394], [20395, 20399], [20400, 20403], [20404, 20408], [20409, 20414], [20414, 20415], [20416, 20420], [20421, 20426], [20427, 20432], [20433, 20435], [20436, 20440], [20441, 20445], [20446, 20453], [20453, 20454]]}) 
answer: set([u'fur', u'tend', u'pup', u'adult', u'darker'])
candidate Sentence: (0.16773819923400879, {u'tokens': [u'Generally', u',', u'pups', u'bark', u'and', u'bark-howl', u'much', u'more', u'frequently', u'than', u'adults', u',', u'using', u'these', u'vocalizations', u'to', u'cry', u'for', u'attention', u',', u'care', u',', u'or', u'food', u'.'], u'lemmas': [u'generally', u',', u'pup', u'bark', u'and', u'bark-howl', u'much', u'more', u'frequently', u'than', u'adult', u',', u'use', u'these', u'vocalization', u'to', u'cry', u'for', u'attention', u',', u'care', u',', u'or', u'food', u'.'], u'pos': [u'RB', u',', u'NNS', u'NN', u'CC', u'NN', u'RB', u'RBR', u'RB', u'IN', u'NNS', u',', u'VBG', u'DT', u'NNS', u'TO', u'VB', u'IN', u'NN', u',', u'NN', u',', u'CC', u'NN', u'.'], u'char_offsets': [[19530, 19539], [19539, 19540], [19541, 19545], [19546, 19550], [19551, 19554], [19555, 19564], [19565, 19569], [19570, 19574], [19575, 19585], [19586, 19590], [19591, 19597], [19597, 19598], [19599, 19604], [19605, 19610], [19611, 19624], [19625, 19627], [19628, 19631], [19632, 19635], [19636, 19645], [19645, 19646], [19647, 19651], [19651, 19652], [19653, 19655], [19656, 19660], [19660, 19661]]}) 
answer: set([u'darker', u'fur', u'tend'])
candidate Sentence: (0.16667141020298004, {u'tokens': [u'It', u'is', u'known', u'that', u'some', u'Native', u'American', u'tribes', u'would', u'occasionally', u'raise', u'wolf', u'pups', u'for', u'their', u'fur', u'.'], u'lemmas': [u'it', u'be', u'know', u'that', u'some', u'native', u'american', u'tribe', u'would', u'occasionally', u'raise', u'wolf', u'pup', u'for', u'they', u'fur', u'.'], u'pos': [u'PRP', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'JJ', u'NNS', u'MD', u'RB', u'VB', u'NN', u'NNS', u'IN', u'PRP$', u'NN', u'.'], u'char_offsets': [[67687, 67689], [67690, 67692], [67693, 67698], [67699, 67703], [67704, 67708], [67709, 67715], [67716, 67724], [67725, 67731], [67732, 67737], [67738, 67750], [67751, 67756], [67757, 67761], [67762, 67766], [67767, 67770], [67771, 67776], [67777, 67780], [67780, 67781]]}) 
answer: set([u'darker', u'adult', u'tend'])
candidate Sentence: (0.1663772314786911, {u'tokens': [u'North', u'American', u'wolves', u'typically', u'have', u'longer', u',', u'silkier', u'fur', u'than', u'their', u'Eurasian', u'counterparts', u'.'], u'lemmas': [u'north', u'american', u'wolf', u'typically', u'have', u'longer', u',', u'silkier', u'fur', u'than', u'they', u'eurasian', u'counterpart', u'.'], u'pos': [u'JJ', u'JJ', u'NNS', u'RB', u'VBP', u'RBR', u',', u'JJR', u'NN', u'IN', u'PRP$', u'JJ', u'NNS', u'.'], u'char_offsets': [[5167, 5172], [5173, 5181], [5182, 5188], [5189, 5198], [5199, 5203], [5204, 5210], [5210, 5211], [5212, 5219], [5220, 5223], [5224, 5228], [5229, 5234], [5235, 5243], [5244, 5256], [5256, 5257]]}) 
answer: set([u'darker', u'pup', u'adult', u'tend'])
candidate Sentence: (0.146675705909729, {u'tokens': [u'Wolves', u'therefore', u'tend', u'to', u'howl', u'with', u'great', u'care', u'.'], u'lemmas': [u'wolf', u'therefore', u'tend', u'to', u'howl', u'with', u'great', u'care', u'.'], u'pos': [u'NNS', u'RB', u'VBP', u'TO', u'NN', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[17358, 17364], [17365, 17374], [17375, 17379], [17380, 17382], [17383, 17387], [17388, 17392], [17393, 17398], [17399, 17403], [17403, 17404]]}) 
answer: set([u'pup', u'fur', u'adult', u'darker'])
candidate Sentence: (0.13476915657520294, {u'tokens': [u'The', u'attacks', u'tended', u'to', u'be', u'clustered', u'in', u'space', u'and', u'time', u'.'], u'lemmas': [u'the', u'attack', u'tend', u'to', u'be', u'cluster', u'in', u'space', u'and', u'time', u'.'], u'pos': [u'DT', u'NNS', u'VBD', u'TO', u'VB', u'VBN', u'IN', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[52835, 52838], [52839, 52846], [52847, 52853], [52854, 52856], [52857, 52859], [52860, 52869], [52870, 52872], [52873, 52878], [52879, 52882], [52883, 52887], [52887, 52888]]}) 
answer: set([u'pup', u'fur', u'adult', u'darker'])
candidate Sentence: (0.13374429941177368, {u'tokens': [u'Desert', u'dwelling', u'grey', u'wolf', u'subspecies', u',', u'such', u'as', u'this', u'Arabian', u'wolf', u',', u'tend', u'to', u'be', u'smaller', u'than', u'their', u'more', u'northern', u'cousins', u'.'], u'lemmas': [u'Desert', u'dwelling', u'grey', u'wolf', u'subspecy', u',', u'such', u'as', u'this', u'arabian', u'wolf', u',', u'tend', u'to', u'be', u'smaller', u'than', u'they', u'more', u'northern', u'cousin', u'.'], u'pos': [u'NNP', u'NN', u'JJ', u'NN', u'NNS', u',', u'JJ', u'IN', u'DT', u'JJ', u'NN', u',', u'VB', u'TO', u'VB', u'JJR', u'IN', u'PRP$', u'JJR', u'JJ', u'NNS', u'.'], u'char_offsets': [[32998, 33004], [33005, 33013], [33014, 33018], [33019, 33023], [33024, 33034], [33034, 33035], [33036, 33040], [33041, 33043], [33044, 33048], [33049, 33056], [33057, 33061], [33061, 33062], [33063, 33067], [33068, 33070], [33071, 33073], [33074, 33081], [33082, 33086], [33087, 33092], [33093, 33097], [33098, 33106], [33107, 33114], [33114, 33115]]}) 
answer: set([u'pup', u'fur', u'adult', u'darker'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'gray', u'wolf', u'.'])

Do wolf pups tend to have darker fur than adults?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes, They do tend to have darker furs
Difficulty = easy
Article_Title = Gray_Wolf
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a6.txt

No
_____________________________ test_yesno[param167] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e37e8>, (<src.tfidf.TF_IDF object at 0x1144af390>, set(['.', 'cleveland', 'grover'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x1156e37e8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.42296448349952698, {u'tokens': [u'Grover', u'Cleveland', u'was', u'the', u'second', u'President', u'married', u'in', u'office', u',', u'and', u'the', u'only', u'President', u'married', u'in', u'the', u'White', u'House', u'itself', u'On', u'June', u'2', u',', u'1886', u',', u'Cleveland', u'married', u'Frances', u'Cornelia', u'Folsom', u',', u'the', u'daughter', u'of', u'his', u'former', u'law', u'partner', u',', u'in', u'the', u'Blue', u'Room', u'in', u'the', u'White', u'House', u'.'], u'lemmas': [u'Grover', u'Cleveland', u'be', u'the', u'second', u'President', u'marry', u'in', u'office', u',', u'and', u'the', u'only', u'President', u'marry', u'in', u'the', u'White', u'House', u'itself', u'on', u'June', u'2', u',', u'1886', u',', u'Cleveland', u'marry', u'Frances', u'Cornelia', u'Folsom', u',', u'the', u'daughter', u'of', u'he', u'former', u'law', u'partner', u',', u'in', u'the', u'Blue', u'Room', u'in', u'the', u'White', u'House', u'.'], u'pos': [u'NNP', u'NNP', u'VBD', u'DT', u'JJ', u'NNP', u'VBN', u'IN', u'NN', u',', u'CC', u'DT', u'JJ', u'NNP', u'VBN', u'IN', u'DT', u'NNP', u'NNP', u'PRP', u'IN', u'NNP', u'CD', u',', u'CD', u',', u'NNP', u'VBD', u'NNP', u'NNP', u'NNP', u',', u'DT', u'NN', u'IN', u'PRP$', u'JJ', u'NN', u'NN', u',', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[9954, 9960], [9961, 9970], [9971, 9974], [9975, 9978], [9979, 9985], [9986, 9995], [9996, 10003], [10004, 10006], [10007, 10013], [10013, 10014], [10015, 10018], [10019, 10022], [10023, 10027], [10028, 10037], [10038, 10045], [10046, 10048], [10049, 10052], [10053, 10058], [10059, 10064], [10065, 10071], [10073, 10075], [10076, 10080], [10081, 10082], [10082, 10083], [10084, 10088], [10088, 10089], [10090, 10099], [10100, 10107], [10108, 10115], [10116, 10124], [10125, 10131], [10131, 10132], [10133, 10136], [10137, 10145], [10146, 10148], [10149, 10152], [10153, 10159], [10160, 10163], [10164, 10171], [10171, 10172], [10173, 10175], [10176, 10179], [10180, 10184], [10185, 10189], [10190, 10192], [10193, 10196], [10197, 10202], [10203, 10208], [10208, 10209]]}) 
answer: set([u'whitehous'])
candidate Sentence: (0.25055798888206482, {u'tokens': [u'He', u'was', u'the', u'second', u'President', u'to', u'marry', u'while', u'in', u'office', u',', u'and', u'the', u'only', u'President', u'to', u'have', u'a', u'wedding', u'in', u'the', u'White', u'House', u'itself', u'.'], u'lemmas': [u'he', u'be', u'the', u'second', u'president', u'to', u'marry', u'while', u'in', u'office', u',', u'and', u'the', u'only', u'president', u'to', u'have', u'a', u'wedding', u'in', u'the', u'White', u'House', u'itself', u'.'], u'pos': [u'PRP', u'VBD', u'DT', u'JJ', u'NN', u'TO', u'VB', u'IN', u'IN', u'NN', u',', u'CC', u'DT', u'JJ', u'NN', u'TO', u'VB', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'PRP', u'.'], u'char_offsets': [[10210, 10212], [10213, 10216], [10217, 10220], [10221, 10227], [10228, 10237], [10238, 10240], [10241, 10246], [10247, 10252], [10253, 10255], [10256, 10262], [10262, 10263], [10264, 10267], [10268, 10271], [10272, 10276], [10277, 10286], [10287, 10289], [10290, 10294], [10295, 10296], [10297, 10304], [10305, 10307], [10308, 10311], [10312, 10317], [10318, 10323], [10324, 10330], [10330, 10331]]}) 
answer: set([u'whitehous'])
candidate Sentence: (0.19834397733211517, {u'tokens': [u'The', u'derisive', u'phrase', u'``', u'Ma', u',', u'Ma', u',', u'where', u"'s", u'my', u'Pa', u'?', u"''"], u'lemmas': [u'the', u'derisive', u'phrase', u'``', u'Ma', u',', u'Ma', u',', u'where', u"'s", u'my', u'Pa', u'?', u"''"], u'pos': [u'DT', u'JJ', u'NN', u'``', u'NNP', u',', u'NNP', u',', u'WRB', u'POS', u'PRP$', u'NNP', u'.', u"''"], u'char_offsets': [[3795, 3798], [3799, 3807], [3808, 3814], [3815, 3816], [3816, 3818], [3818, 3819], [3820, 3822], [3822, 3823], [3824, 3829], [3829, 3831], [3832, 3834], [3835, 3837], [3837, 3838], [3838, 3839]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.1636940985918045, {u'tokens': [u'After', u'Cleveland', u"'s", u'election', u'as', u'President', u',', u'Democratic', u'newspapers', u'added', u'a', u'line', u'to', u'the', u'chant', u'used', u'against', u'Cleveland', u'and', u'made', u'it', u':', u'``', u'Ma', u',', u'Ma', u',', u'where', u"'s", u'my', u'Pa', u'?'], u'lemmas': [u'after', u'Cleveland', u"'s", u'election', u'as', u'President', u',', u'democratic', u'newspaper', u'add', u'a', u'line', u'to', u'the', u'chant', u'use', u'against', u'Cleveland', u'and', u'make', u'it', u':', u'``', u'Ma', u',', u'Ma', u',', u'where', u"'s", u'my', u'Pa', u'?'], u'pos': [u'IN', u'NNP', u'POS', u'NN', u'IN', u'NNP', u',', u'JJ', u'NNS', u'VBD', u'DT', u'NN', u'TO', u'DT', u'NN', u'VBN', u'IN', u'NNP', u'CC', u'VBD', u'PRP', u':', u'``', u'NNP', u',', u'NNP', u',', u'WRB', u'POS', u'PRP$', u'NNP', u'.'], u'char_offsets': [[4375, 4380], [4381, 4390], [4390, 4392], [4393, 4401], [4402, 4404], [4405, 4414], [4414, 4415], [4416, 4426], [4427, 4437], [4438, 4443], [4444, 4445], [4446, 4450], [4451, 4453], [4454, 4457], [4458, 4463], [4464, 4468], [4469, 4476], [4477, 4486], [4487, 4490], [4491, 4495], [4496, 4498], [4498, 4499], [4500, 4501], [4501, 4503], [4503, 4504], [4505, 4507], [4507, 4508], [4509, 4514], [4514, 4516], [4517, 4519], [4520, 4522], [4522, 4523]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.099106810986995697, {u'tokens': [u'The', u'Writings', u'and', u'Speeches', u'of', u'Grover', u'Cleveland', u'-LRB-', u'1892', u'-RRB-', u'full', u'text', u'online', u'at', u'Google', u'Books', u'*', u'Cleveland', u',', u'Grover', u'.'], u'lemmas': [u'the', u'writings', u'and', u'speech', u'of', u'Grover', u'Cleveland', u'-lrb-', u'1892', u'-rrb-', u'full', u'text', u'online', u'at', u'Google', u'Books', u'*', u'Cleveland', u',', u'Grover', u'.'], u'pos': [u'DT', u'NNS', u'CC', u'NNS', u'IN', u'NNP', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'JJ', u'NN', u'NN', u'IN', u'NNP', u'NNPS', u'SYM', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[21474, 21477], [21478, 21486], [21487, 21490], [21491, 21499], [21500, 21502], [21503, 21509], [21510, 21519], [21520, 21521], [21521, 21525], [21525, 21526], [21528, 21532], [21533, 21537], [21538, 21544], [21545, 21547], [21548, 21554], [21555, 21560], [21561, 21562], [21563, 21572], [21572, 21573], [21574, 21580], [21580, 21581]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.097014352679252625, {u'tokens': [u'-LRB-', u'1904', u'-RRB-', u'online', u'edition', u'*', u'Cleveland', u',', u'Grover', u'.'], u'lemmas': [u'-lrb-', u'1904', u'-rrb-', u'online', u'edition', u'*', u'Cleveland', u',', u'Grover', u'.'], u'pos': [u'-LRB-', u'CD', u'-RRB-', u'JJ', u'NN', u'SYM', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[21605, 21606], [21606, 21610], [21610, 21611], [21613, 21619], [21620, 21627], [21628, 21629], [21630, 21639], [21639, 21640], [21641, 21647], [21647, 21648]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.093538366258144379, {u'tokens': [u'*', u'Extensive', u'essay', u'on', u'Grover', u'Cleveland', u'and', u'shorter', u'essays', u'on', u'each', u'member', u'of', u'his', u'cabinet', u'and', u'First', u'Lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'White', u'House', u'website', u'biography', u'of', u'Grover', u'Cleveland', u'*', u'POTUS', u'-', u'Grover', u'Cleveland', u'*', u'Audio', u'clips', u'of', u'Cleveland', u"'s", u'speeches', u'*', u'Obituary', u'for', u'Grover', u'Cleveland', u'*', u'Cleveland', u"'s", u'grandson', u',', u'George', u',', u'impersonating', u'him', u'on', u'Heritage', u'Day', u'in', u'Tamworth', u',', u'New', u'Hampshire', u'.'], u'lemmas': [u'*', u'extensive', u'essay', u'on', u'Grover', u'Cleveland', u'and', u'shorter', u'essay', u'on', u'each', u'member', u'of', u'he', u'cabinet', u'and', u'first', u'lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'White', u'House', u'website', u'biography', u'of', u'Grover', u'Cleveland', u'*', u'potus', u'-', u'Grover', u'Cleveland', u'*', u'Audio', u'clip', u'of', u'Cleveland', u"'s", u'speech', u'*', u'Obituary', u'for', u'Grover', u'Cleveland', u'*', u'Cleveland', u"'s", u'grandson', u',', u'George', u',', u'impersonate', u'he', u'on', u'Heritage', u'Day', u'in', u'Tamworth', u',', u'New', u'Hampshire', u'.'], u'pos': [u'SYM', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'CC', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNPS', u'SYM', u'NNP', u'NNP', u'NN', u'NN', u'IN', u'NNP', u'NNP', u'SYM', u'SYM', u':', u'NNP', u'NNP', u'SYM', u'NNP', u'NNS', u'IN', u'NNP', u'POS', u'NNS', u'SYM', u'NNP', u'IN', u'NNP', u'NNP', u'SYM', u'NNP', u'POS', u'NN', u',', u'NNP', u',', u'VBG', u'PRP', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u',', u'NNP', u'NNP', u'.'], u'char_offsets': [[24459, 24460], [24462, 24471], [24472, 24477], [24478, 24480], [24481, 24487], [24488, 24497], [24498, 24501], [24502, 24509], [24510, 24516], [24517, 24519], [24520, 24524], [24525, 24531], [24532, 24534], [24535, 24538], [24539, 24546], [24547, 24550], [24551, 24556], [24557, 24561], [24562, 24566], [24567, 24570], [24571, 24577], [24578, 24584], [24585, 24587], [24588, 24594], [24595, 24602], [24603, 24604], [24606, 24611], [24612, 24617], [24618, 24625], [24626, 24635], [24636, 24638], [24639, 24645], [24646, 24655], [24656, 24657], [24659, 24664], [24665, 24666], [24667, 24673], [24674, 24683], [24684, 24685], [24687, 24692], [24693, 24698], [24699, 24701], [24702, 24711], [24711, 24713], [24714, 24722], [24723, 24724], [24726, 24734], [24735, 24738], [24739, 24745], [24746, 24755], [24756, 24757], [24759, 24768], [24768, 24770], [24771, 24779], [24779, 24780], [24781, 24787], [24787, 24788], [24789, 24802], [24803, 24806], [24807, 24809], [24810, 24818], [24819, 24822], [24823, 24825], [24826, 24834], [24834, 24835], [24836, 24839], [24840, 24849], [24849, 24850]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.083604007959365845, {u'tokens': [u'In', u'1871', u'Grover', u'Cleveland', u'was', u'elected', u'Sheriff', u'of', u'Erie', u'County', u',', u'New', u'York', u'.'], u'lemmas': [u'in', u'1871', u'Grover', u'Cleveland', u'be', u'elect', u'Sheriff', u'of', u'Erie', u'County', u',', u'New', u'York', u'.'], u'pos': [u'IN', u'CD', u'NNP', u'NNP', u'VBD', u'VBN', u'NNP', u'IN', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'.'], u'char_offsets': [[2813, 2815], [2816, 2820], [2821, 2827], [2828, 2837], [2838, 2841], [2842, 2849], [2850, 2857], [2858, 2860], [2861, 2865], [2866, 2872], [2872, 2873], [2874, 2877], [2878, 2882], [2882, 2883]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.061878286302089691, {u'tokens': [u'Statue', u'of', u'Grover', u'Cleveland', u'outside', u'City', u'Hall', u'in', u'Buffalo', u',', u'New', u'York', u'*', u'U.S.', u'presidential', u'election', u',', u'1884', u'*', u'U.S.', u'presidential', u'election', u',', u'1888', u'*', u'U.S.', u'presidential', u'election', u',', u'1892', u'*', u'History', u'of', u'the', u'United', u'States', u'-LRB-', u'1865-1918', u'-RRB-', u'*', u'Cleveland', u',', u'Grover', u'.'], u'lemmas': [u'Statue', u'of', u'Grover', u'Cleveland', u'outside', u'City', u'Hall', u'in', u'Buffalo', u',', u'New', u'York', u'*', u'U.S.', u'presidential', u'election', u',', u'1884', u'*', u'U.S.', u'presidential', u'election', u',', u'1888', u'*', u'U.S.', u'presidential', u'election', u',', u'1892', u'*', u'history', u'of', u'the', u'United', u'States', u'-lrb-', u'1865-1918', u'-rrb-', u'*', u'Cleveland', u',', u'Grover', u'.'], u'pos': [u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u',', u'NNP', u'NNP', u'SYM', u'NNP', u'JJ', u'NN', u',', u'CD', u'SYM', u'NNP', u'JJ', u'NN', u',', u'CD', u'SYM', u'NNP', u'JJ', u'NN', u',', u'CD', u'SYM', u'NN', u'IN', u'DT', u'NNP', u'NNPS', u'-LRB-', u'CD', u'-RRB-', u'SYM', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[21239, 21245], [21246, 21248], [21249, 21255], [21256, 21265], [21266, 21273], [21274, 21278], [21279, 21283], [21284, 21286], [21287, 21294], [21294, 21295], [21296, 21299], [21300, 21304], [21305, 21306], [21307, 21311], [21312, 21324], [21325, 21333], [21333, 21334], [21335, 21339], [21340, 21341], [21342, 21346], [21347, 21359], [21360, 21368], [21368, 21369], [21370, 21374], [21375, 21376], [21377, 21381], [21382, 21394], [21395, 21403], [21403, 21404], [21405, 21409], [21410, 21411], [21412, 21419], [21420, 21422], [21423, 21426], [21427, 21433], [21434, 21440], [21441, 21442], [21442, 21451], [21451, 21452], [21453, 21454], [21455, 21464], [21464, 21465], [21466, 21472], [21472, 21473]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.060932192951440811, {u'tokens': [u'Oil', u'painting', u'of', u'Grover', u'Cleveland', u',', u'painted', u'in', u'1899', u'by', u'Anders', u'Zorn', u'.'], u'lemmas': [u'Oil', u'painting', u'of', u'Grover', u'Cleveland', u',', u'paint', u'in', u'1899', u'by', u'Anders', u'Zorn', u'.'], u'pos': [u'NNP', u'NN', u'IN', u'NNP', u'NNP', u',', u'VBN', u'IN', u'CD', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[19597, 19600], [19601, 19609], [19610, 19612], [19613, 19619], [19620, 19629], [19629, 19630], [19631, 19638], [19639, 19641], [19642, 19646], [19647, 19649], [19650, 19656], [19657, 19661], [19661, 19662]]}) 
answer: set([u'marri', u'whitehous'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'grover', u'cleveland'])

Was Grover Cleveland married in the whitehouse?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Grover_Cleveland
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a6.txt

No
_____________________________ test_yesno[param168] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e3830>, (<src.tfidf.TF_IDF object at 0x1144af390>, set(['.', 'cleveland', 'grover'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x1156e3830>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.42296448349952698, {u'tokens': [u'Grover', u'Cleveland', u'was', u'the', u'second', u'President', u'married', u'in', u'office', u',', u'and', u'the', u'only', u'President', u'married', u'in', u'the', u'White', u'House', u'itself', u'On', u'June', u'2', u',', u'1886', u',', u'Cleveland', u'married', u'Frances', u'Cornelia', u'Folsom', u',', u'the', u'daughter', u'of', u'his', u'former', u'law', u'partner', u',', u'in', u'the', u'Blue', u'Room', u'in', u'the', u'White', u'House', u'.'], u'lemmas': [u'Grover', u'Cleveland', u'be', u'the', u'second', u'President', u'marry', u'in', u'office', u',', u'and', u'the', u'only', u'President', u'marry', u'in', u'the', u'White', u'House', u'itself', u'on', u'June', u'2', u',', u'1886', u',', u'Cleveland', u'marry', u'Frances', u'Cornelia', u'Folsom', u',', u'the', u'daughter', u'of', u'he', u'former', u'law', u'partner', u',', u'in', u'the', u'Blue', u'Room', u'in', u'the', u'White', u'House', u'.'], u'pos': [u'NNP', u'NNP', u'VBD', u'DT', u'JJ', u'NNP', u'VBN', u'IN', u'NN', u',', u'CC', u'DT', u'JJ', u'NNP', u'VBN', u'IN', u'DT', u'NNP', u'NNP', u'PRP', u'IN', u'NNP', u'CD', u',', u'CD', u',', u'NNP', u'VBD', u'NNP', u'NNP', u'NNP', u',', u'DT', u'NN', u'IN', u'PRP$', u'JJ', u'NN', u'NN', u',', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[9954, 9960], [9961, 9970], [9971, 9974], [9975, 9978], [9979, 9985], [9986, 9995], [9996, 10003], [10004, 10006], [10007, 10013], [10013, 10014], [10015, 10018], [10019, 10022], [10023, 10027], [10028, 10037], [10038, 10045], [10046, 10048], [10049, 10052], [10053, 10058], [10059, 10064], [10065, 10071], [10073, 10075], [10076, 10080], [10081, 10082], [10082, 10083], [10084, 10088], [10088, 10089], [10090, 10099], [10100, 10107], [10108, 10115], [10116, 10124], [10125, 10131], [10131, 10132], [10133, 10136], [10137, 10145], [10146, 10148], [10149, 10152], [10153, 10159], [10160, 10163], [10164, 10171], [10171, 10172], [10173, 10175], [10176, 10179], [10180, 10184], [10185, 10189], [10190, 10192], [10193, 10196], [10197, 10202], [10203, 10208], [10208, 10209]]}) 
answer: set([u'whitehous'])
candidate Sentence: (0.25055798888206482, {u'tokens': [u'He', u'was', u'the', u'second', u'President', u'to', u'marry', u'while', u'in', u'office', u',', u'and', u'the', u'only', u'President', u'to', u'have', u'a', u'wedding', u'in', u'the', u'White', u'House', u'itself', u'.'], u'lemmas': [u'he', u'be', u'the', u'second', u'president', u'to', u'marry', u'while', u'in', u'office', u',', u'and', u'the', u'only', u'president', u'to', u'have', u'a', u'wedding', u'in', u'the', u'White', u'House', u'itself', u'.'], u'pos': [u'PRP', u'VBD', u'DT', u'JJ', u'NN', u'TO', u'VB', u'IN', u'IN', u'NN', u',', u'CC', u'DT', u'JJ', u'NN', u'TO', u'VB', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'PRP', u'.'], u'char_offsets': [[10210, 10212], [10213, 10216], [10217, 10220], [10221, 10227], [10228, 10237], [10238, 10240], [10241, 10246], [10247, 10252], [10253, 10255], [10256, 10262], [10262, 10263], [10264, 10267], [10268, 10271], [10272, 10276], [10277, 10286], [10287, 10289], [10290, 10294], [10295, 10296], [10297, 10304], [10305, 10307], [10308, 10311], [10312, 10317], [10318, 10323], [10324, 10330], [10330, 10331]]}) 
answer: set([u'whitehous'])
candidate Sentence: (0.19834397733211517, {u'tokens': [u'The', u'derisive', u'phrase', u'``', u'Ma', u',', u'Ma', u',', u'where', u"'s", u'my', u'Pa', u'?', u"''"], u'lemmas': [u'the', u'derisive', u'phrase', u'``', u'Ma', u',', u'Ma', u',', u'where', u"'s", u'my', u'Pa', u'?', u"''"], u'pos': [u'DT', u'JJ', u'NN', u'``', u'NNP', u',', u'NNP', u',', u'WRB', u'POS', u'PRP$', u'NNP', u'.', u"''"], u'char_offsets': [[3795, 3798], [3799, 3807], [3808, 3814], [3815, 3816], [3816, 3818], [3818, 3819], [3820, 3822], [3822, 3823], [3824, 3829], [3829, 3831], [3832, 3834], [3835, 3837], [3837, 3838], [3838, 3839]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.1636940985918045, {u'tokens': [u'After', u'Cleveland', u"'s", u'election', u'as', u'President', u',', u'Democratic', u'newspapers', u'added', u'a', u'line', u'to', u'the', u'chant', u'used', u'against', u'Cleveland', u'and', u'made', u'it', u':', u'``', u'Ma', u',', u'Ma', u',', u'where', u"'s", u'my', u'Pa', u'?'], u'lemmas': [u'after', u'Cleveland', u"'s", u'election', u'as', u'President', u',', u'democratic', u'newspaper', u'add', u'a', u'line', u'to', u'the', u'chant', u'use', u'against', u'Cleveland', u'and', u'make', u'it', u':', u'``', u'Ma', u',', u'Ma', u',', u'where', u"'s", u'my', u'Pa', u'?'], u'pos': [u'IN', u'NNP', u'POS', u'NN', u'IN', u'NNP', u',', u'JJ', u'NNS', u'VBD', u'DT', u'NN', u'TO', u'DT', u'NN', u'VBN', u'IN', u'NNP', u'CC', u'VBD', u'PRP', u':', u'``', u'NNP', u',', u'NNP', u',', u'WRB', u'POS', u'PRP$', u'NNP', u'.'], u'char_offsets': [[4375, 4380], [4381, 4390], [4390, 4392], [4393, 4401], [4402, 4404], [4405, 4414], [4414, 4415], [4416, 4426], [4427, 4437], [4438, 4443], [4444, 4445], [4446, 4450], [4451, 4453], [4454, 4457], [4458, 4463], [4464, 4468], [4469, 4476], [4477, 4486], [4487, 4490], [4491, 4495], [4496, 4498], [4498, 4499], [4500, 4501], [4501, 4503], [4503, 4504], [4505, 4507], [4507, 4508], [4509, 4514], [4514, 4516], [4517, 4519], [4520, 4522], [4522, 4523]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.099106810986995697, {u'tokens': [u'The', u'Writings', u'and', u'Speeches', u'of', u'Grover', u'Cleveland', u'-LRB-', u'1892', u'-RRB-', u'full', u'text', u'online', u'at', u'Google', u'Books', u'*', u'Cleveland', u',', u'Grover', u'.'], u'lemmas': [u'the', u'writings', u'and', u'speech', u'of', u'Grover', u'Cleveland', u'-lrb-', u'1892', u'-rrb-', u'full', u'text', u'online', u'at', u'Google', u'Books', u'*', u'Cleveland', u',', u'Grover', u'.'], u'pos': [u'DT', u'NNS', u'CC', u'NNS', u'IN', u'NNP', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'JJ', u'NN', u'NN', u'IN', u'NNP', u'NNPS', u'SYM', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[21474, 21477], [21478, 21486], [21487, 21490], [21491, 21499], [21500, 21502], [21503, 21509], [21510, 21519], [21520, 21521], [21521, 21525], [21525, 21526], [21528, 21532], [21533, 21537], [21538, 21544], [21545, 21547], [21548, 21554], [21555, 21560], [21561, 21562], [21563, 21572], [21572, 21573], [21574, 21580], [21580, 21581]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.097014352679252625, {u'tokens': [u'-LRB-', u'1904', u'-RRB-', u'online', u'edition', u'*', u'Cleveland', u',', u'Grover', u'.'], u'lemmas': [u'-lrb-', u'1904', u'-rrb-', u'online', u'edition', u'*', u'Cleveland', u',', u'Grover', u'.'], u'pos': [u'-LRB-', u'CD', u'-RRB-', u'JJ', u'NN', u'SYM', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[21605, 21606], [21606, 21610], [21610, 21611], [21613, 21619], [21620, 21627], [21628, 21629], [21630, 21639], [21639, 21640], [21641, 21647], [21647, 21648]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.093538366258144379, {u'tokens': [u'*', u'Extensive', u'essay', u'on', u'Grover', u'Cleveland', u'and', u'shorter', u'essays', u'on', u'each', u'member', u'of', u'his', u'cabinet', u'and', u'First', u'Lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'White', u'House', u'website', u'biography', u'of', u'Grover', u'Cleveland', u'*', u'POTUS', u'-', u'Grover', u'Cleveland', u'*', u'Audio', u'clips', u'of', u'Cleveland', u"'s", u'speeches', u'*', u'Obituary', u'for', u'Grover', u'Cleveland', u'*', u'Cleveland', u"'s", u'grandson', u',', u'George', u',', u'impersonating', u'him', u'on', u'Heritage', u'Day', u'in', u'Tamworth', u',', u'New', u'Hampshire', u'.'], u'lemmas': [u'*', u'extensive', u'essay', u'on', u'Grover', u'Cleveland', u'and', u'shorter', u'essay', u'on', u'each', u'member', u'of', u'he', u'cabinet', u'and', u'first', u'lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'White', u'House', u'website', u'biography', u'of', u'Grover', u'Cleveland', u'*', u'potus', u'-', u'Grover', u'Cleveland', u'*', u'Audio', u'clip', u'of', u'Cleveland', u"'s", u'speech', u'*', u'Obituary', u'for', u'Grover', u'Cleveland', u'*', u'Cleveland', u"'s", u'grandson', u',', u'George', u',', u'impersonate', u'he', u'on', u'Heritage', u'Day', u'in', u'Tamworth', u',', u'New', u'Hampshire', u'.'], u'pos': [u'SYM', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'CC', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNPS', u'SYM', u'NNP', u'NNP', u'NN', u'NN', u'IN', u'NNP', u'NNP', u'SYM', u'SYM', u':', u'NNP', u'NNP', u'SYM', u'NNP', u'NNS', u'IN', u'NNP', u'POS', u'NNS', u'SYM', u'NNP', u'IN', u'NNP', u'NNP', u'SYM', u'NNP', u'POS', u'NN', u',', u'NNP', u',', u'VBG', u'PRP', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u',', u'NNP', u'NNP', u'.'], u'char_offsets': [[24459, 24460], [24462, 24471], [24472, 24477], [24478, 24480], [24481, 24487], [24488, 24497], [24498, 24501], [24502, 24509], [24510, 24516], [24517, 24519], [24520, 24524], [24525, 24531], [24532, 24534], [24535, 24538], [24539, 24546], [24547, 24550], [24551, 24556], [24557, 24561], [24562, 24566], [24567, 24570], [24571, 24577], [24578, 24584], [24585, 24587], [24588, 24594], [24595, 24602], [24603, 24604], [24606, 24611], [24612, 24617], [24618, 24625], [24626, 24635], [24636, 24638], [24639, 24645], [24646, 24655], [24656, 24657], [24659, 24664], [24665, 24666], [24667, 24673], [24674, 24683], [24684, 24685], [24687, 24692], [24693, 24698], [24699, 24701], [24702, 24711], [24711, 24713], [24714, 24722], [24723, 24724], [24726, 24734], [24735, 24738], [24739, 24745], [24746, 24755], [24756, 24757], [24759, 24768], [24768, 24770], [24771, 24779], [24779, 24780], [24781, 24787], [24787, 24788], [24789, 24802], [24803, 24806], [24807, 24809], [24810, 24818], [24819, 24822], [24823, 24825], [24826, 24834], [24834, 24835], [24836, 24839], [24840, 24849], [24849, 24850]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.083604007959365845, {u'tokens': [u'In', u'1871', u'Grover', u'Cleveland', u'was', u'elected', u'Sheriff', u'of', u'Erie', u'County', u',', u'New', u'York', u'.'], u'lemmas': [u'in', u'1871', u'Grover', u'Cleveland', u'be', u'elect', u'Sheriff', u'of', u'Erie', u'County', u',', u'New', u'York', u'.'], u'pos': [u'IN', u'CD', u'NNP', u'NNP', u'VBD', u'VBN', u'NNP', u'IN', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'.'], u'char_offsets': [[2813, 2815], [2816, 2820], [2821, 2827], [2828, 2837], [2838, 2841], [2842, 2849], [2850, 2857], [2858, 2860], [2861, 2865], [2866, 2872], [2872, 2873], [2874, 2877], [2878, 2882], [2882, 2883]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.061878286302089691, {u'tokens': [u'Statue', u'of', u'Grover', u'Cleveland', u'outside', u'City', u'Hall', u'in', u'Buffalo', u',', u'New', u'York', u'*', u'U.S.', u'presidential', u'election', u',', u'1884', u'*', u'U.S.', u'presidential', u'election', u',', u'1888', u'*', u'U.S.', u'presidential', u'election', u',', u'1892', u'*', u'History', u'of', u'the', u'United', u'States', u'-LRB-', u'1865-1918', u'-RRB-', u'*', u'Cleveland', u',', u'Grover', u'.'], u'lemmas': [u'Statue', u'of', u'Grover', u'Cleveland', u'outside', u'City', u'Hall', u'in', u'Buffalo', u',', u'New', u'York', u'*', u'U.S.', u'presidential', u'election', u',', u'1884', u'*', u'U.S.', u'presidential', u'election', u',', u'1888', u'*', u'U.S.', u'presidential', u'election', u',', u'1892', u'*', u'history', u'of', u'the', u'United', u'States', u'-lrb-', u'1865-1918', u'-rrb-', u'*', u'Cleveland', u',', u'Grover', u'.'], u'pos': [u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u',', u'NNP', u'NNP', u'SYM', u'NNP', u'JJ', u'NN', u',', u'CD', u'SYM', u'NNP', u'JJ', u'NN', u',', u'CD', u'SYM', u'NNP', u'JJ', u'NN', u',', u'CD', u'SYM', u'NN', u'IN', u'DT', u'NNP', u'NNPS', u'-LRB-', u'CD', u'-RRB-', u'SYM', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[21239, 21245], [21246, 21248], [21249, 21255], [21256, 21265], [21266, 21273], [21274, 21278], [21279, 21283], [21284, 21286], [21287, 21294], [21294, 21295], [21296, 21299], [21300, 21304], [21305, 21306], [21307, 21311], [21312, 21324], [21325, 21333], [21333, 21334], [21335, 21339], [21340, 21341], [21342, 21346], [21347, 21359], [21360, 21368], [21368, 21369], [21370, 21374], [21375, 21376], [21377, 21381], [21382, 21394], [21395, 21403], [21403, 21404], [21405, 21409], [21410, 21411], [21412, 21419], [21420, 21422], [21423, 21426], [21427, 21433], [21434, 21440], [21441, 21442], [21442, 21451], [21451, 21452], [21453, 21454], [21455, 21464], [21464, 21465], [21466, 21472], [21472, 21473]]}) 
answer: set([u'marri', u'whitehous'])
candidate Sentence: (0.060932192951440811, {u'tokens': [u'Oil', u'painting', u'of', u'Grover', u'Cleveland', u',', u'painted', u'in', u'1899', u'by', u'Anders', u'Zorn', u'.'], u'lemmas': [u'Oil', u'painting', u'of', u'Grover', u'Cleveland', u',', u'paint', u'in', u'1899', u'by', u'Anders', u'Zorn', u'.'], u'pos': [u'NNP', u'NN', u'IN', u'NNP', u'NNP', u',', u'VBN', u'IN', u'CD', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[19597, 19600], [19601, 19609], [19610, 19612], [19613, 19619], [19620, 19629], [19629, 19630], [19631, 19638], [19639, 19641], [19642, 19646], [19647, 19649], [19650, 19656], [19657, 19661], [19661, 19662]]}) 
answer: set([u'marri', u'whitehous'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'grover', u'cleveland'])

Was Grover Cleveland married in the whitehouse?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Grover_Cleveland
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a6.txt

No
_____________________________ test_yesno[param174] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e39e0>, (<src.tfidf.TF_IDF object at 0x11240dc10>, set(['.', 'james', 'monroe'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156e39e0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.34089449048042297, {u'tokens': [u'James', u'Monroe', u'-LRB-', u'April', u'28', u',', u'1758', u'July', u'4', u',', u'1831', u'-RRB-', u'was', u'the', u'fifth', u'President', u'of', u'the', u'United', u'States', u'-LRB-', u'1817-1825', u'-RRB-', u'.'], u'lemmas': [u'James', u'Monroe', u'-lrb-', u'April', u'28', u',', u'1758', u'July', u'4', u',', u'1831', u'-rrb-', u'be', u'the', u'fifth', u'president', u'of', u'the', u'United', u'States', u'-lrb-', u'1817-1825', u'-rrb-', u'.'], u'pos': [u'NNP', u'NNP', u'-LRB-', u'NNP', u'CD', u',', u'CD', u'NNP', u'CD', u',', u'CD', u'-RRB-', u'VBD', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNPS', u'-LRB-', u'CD', u'-RRB-', u'.'], u'char_offsets': [[0, 5], [6, 12], [13, 14], [14, 19], [20, 22], [22, 23], [24, 28], [30, 34], [35, 36], [36, 37], [38, 42], [42, 43], [44, 47], [48, 51], [52, 57], [58, 67], [68, 70], [71, 74], [75, 81], [82, 88], [89, 90], [90, 99], [99, 100], [100, 101]]}) 
answer: set([u'monrow', u'us'])
candidate Sentence: (0.17062491178512573, {u'tokens': [u'He', u'was', u'alarmed', u'at', u'Spanish', u'diplomat', u'Diego', u'Mara', u'de', u'Gardoqui', u',', u'involving', u'a', u'US', u'attempt', u'to', u'secure', u'the', u'opening', u'of', u'the', u'Mississippi', u'River', u'to', u'American', u'commerce', u'.'], u'lemmas': [u'he', u'be', u'alarm', u'at', u'spanish', u'diplomat', u'diego', u'Mara', u'de', u'Gardoqui', u',', u'involve', u'a', u'US', u'attempt', u'to', u'secure', u'the', u'opening', u'of', u'the', u'Mississippi', u'River', u'to', u'American', u'commerce', u'.'], u'pos': [u'PRP', u'VBD', u'VBN', u'IN', u'JJ', u'NN', u'JJ', u'NNP', u'IN', u'NNP', u',', u'VBG', u'DT', u'NNP', u'NN', u'TO', u'VB', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'TO', u'NNP', u'NN', u'.'], u'char_offsets': [[12486, 12488], [12489, 12492], [12493, 12500], [12501, 12503], [12504, 12511], [12512, 12520], [12521, 12526], [12527, 12531], [12532, 12534], [12535, 12543], [12543, 12544], [12545, 12554], [12555, 12556], [12557, 12559], [12560, 12567], [12568, 12570], [12571, 12577], [12578, 12581], [12582, 12589], [12590, 12592], [12593, 12596], [12597, 12608], [12609, 12614], [12615, 12617], [12618, 12626], [12627, 12635], [12635, 12636]]}) 
answer: set([u'monrow', u'fifth', u'presid'])
candidate Sentence: (0.12416522949934006, {u'tokens': [u'Following', u'the', u'War', u'of', u'1812', u',', u'Monroe', u'was', u'elected', u'president', u'in', u'the', u'election', u'of', u'1816', u',', u'and', u're-elected', u'in', u'1820', u'.'], u'lemmas': [u'follow', u'the', u'war', u'of', u'1812', u',', u'Monroe', u'be', u'elect', u'president', u'in', u'the', u'election', u'of', u'1816', u',', u'and', u're-elected', u'in', u'1820', u'.'], u'pos': [u'VBG', u'DT', u'NN', u'IN', u'CD', u',', u'NNP', u'VBD', u'VBN', u'NN', u'IN', u'DT', u'NN', u'IN', u'CD', u',', u'CC', u'JJ', u'IN', u'CD', u'.'], u'char_offsets': [[3099, 3108], [3109, 3112], [3113, 3116], [3117, 3119], [3120, 3124], [3124, 3125], [3126, 3132], [3133, 3136], [3137, 3144], [3145, 3154], [3155, 3157], [3158, 3161], [3162, 3170], [3171, 3173], [3174, 3178], [3178, 3179], [3180, 3183], [3184, 3194], [3195, 3197], [3198, 3202], [3202, 3203]]}) 
answer: set([u'monrow', u'fifth', u'us'])
candidate Sentence: (0.10428860783576965, {u'tokens': [u'The', u'Political', u'Writings', u'of', u'James', u'Monroe', u'.'], u'lemmas': [u'the', u'political', u'writings', u'of', u'James', u'Monroe', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[14759, 14762], [14763, 14772], [14773, 14781], [14782, 14784], [14785, 14790], [14791, 14797], [14797, 14798]]}) 
answer: set([u'monrow', u'fifth', u'us', u'presid'])
candidate Sentence: (0.090497799217700958, {u'tokens': [u'*', u'In', u'the', u'famous', u'painting', u'of', u'Washington', u'Crossing', u'the', u'Delaware', u'-LRB-', u'also', u'depicted', u'on', u'the', u'New', u'Jersey', u'state', u'quarter', u'-RRB-', u',', u'Monroe', u'is', u'standing', u'behind', u'George', u'Washington', u'and', u'holds', u'the', u'American', u'Flag', u'*', u'Monroe', u'is', u'considered', u'to', u'be', u'the', u'president', u'who', u'was', u'in', u'the', u'most', u'paintings', u';', u'throughout', u'the', u'1800s', u'he', u'was', u'in', u'over', u'350', u'.'], u'lemmas': [u'*', u'in', u'the', u'famous', u'painting', u'of', u'Washington', u'cross', u'the', u'Delaware', u'-lrb-', u'also', u'depict', u'on', u'the', u'New', u'Jersey', u'state', u'quarter', u'-rrb-', u',', u'Monroe', u'be', u'stand', u'behind', u'George', u'Washington', u'and', u'hold', u'the', u'american', u'flag', u'*', u'Monroe', u'be', u'consider', u'to', u'be', u'the', u'president', u'who', u'be', u'in', u'the', u'most', u'painting', u';', u'throughout', u'the', u'1800', u'he', u'be', u'in', u'over', u'350', u'.'], u'pos': [u'SYM', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'VBG', u'DT', u'NNP', u'-LRB-', u'RB', u'VBN', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'NN', u'-RRB-', u',', u'NNP', u'VBZ', u'VBG', u'IN', u'NNP', u'NNP', u'CC', u'VBZ', u'DT', u'JJ', u'NN', u'SYM', u'NNP', u'VBZ', u'VBN', u'TO', u'VB', u'DT', u'NN', u'WP', u'VBD', u'IN', u'DT', u'RBS', u'NNS', u':', u'IN', u'DT', u'NNS', u'PRP', u'VBD', u'IN', u'IN', u'CD', u'.'], u'char_offsets': [[9825, 9826], [9827, 9829], [9830, 9833], [9834, 9840], [9841, 9849], [9850, 9852], [9853, 9863], [9864, 9872], [9873, 9876], [9877, 9885], [9886, 9887], [9887, 9891], [9892, 9900], [9901, 9903], [9904, 9907], [9908, 9911], [9912, 9918], [9919, 9924], [9925, 9932], [9932, 9933], [9933, 9934], [9935, 9941], [9942, 9944], [9945, 9953], [9954, 9960], [9961, 9967], [9968, 9978], [9979, 9982], [9983, 9988], [9989, 9992], [9993, 10001], [10002, 10006], [10007, 10008], [10009, 10015], [10016, 10018], [10019, 10029], [10030, 10032], [10033, 10035], [10036, 10039], [10040, 10049], [10050, 10053], [10054, 10057], [10058, 10060], [10061, 10064], [10065, 10069], [10070, 10079], [10079, 10080], [10081, 10091], [10092, 10095], [10096, 10101], [10102, 10104], [10105, 10108], [10109, 10111], [10112, 10116], [10117, 10120], [10120, 10121]]}) 
answer: set([u'monrow', u'fifth', u'us'])
candidate Sentence: (0.08585994690656662, {u'tokens': [u'*', u'Monroe', u'was', u'-LRB-', u'arguably', u'-RRB-', u'the', u'last', u'president', u'to', u'have', u'fought', u'in', u'the', u'Revolutionary', u'War', u',', u'although', u'Andrew', u'Jackson', u'served', u'as', u'a', u'13-year-old', u'courier', u'in', u'the', u'Continental', u'Army', u'and', u'was', u'taken', u'as', u'a', u'prisoner', u'of', u'war', u'by', u'the', u'British', u'.'], u'lemmas': [u'*', u'Monroe', u'be', u'-lrb-', u'arguably', u'-rrb-', u'the', u'last', u'president', u'to', u'have', u'fight', u'in', u'the', u'Revolutionary', u'War', u',', u'although', u'Andrew', u'Jackson', u'serve', u'as', u'a', u'13-year-old', u'courier', u'in', u'the', u'Continental', u'Army', u'and', u'be', u'take', u'as', u'a', u'prisoner', u'of', u'war', u'by', u'the', u'British', u'.'], u'pos': [u'SYM', u'NNP', u'VBD', u'-LRB-', u'RB', u'-RRB-', u'DT', u'JJ', u'NN', u'TO', u'VB', u'VBN', u'IN', u'DT', u'NNP', u'NNP', u',', u'IN', u'NNP', u'NNP', u'VBD', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'CC', u'VBD', u'VBN', u'IN', u'DT', u'NN', u'IN', u'NN', u'IN', u'DT', u'NNP', u'.'], u'char_offsets': [[9610, 9611], [9612, 9618], [9619, 9622], [9623, 9624], [9624, 9632], [9632, 9633], [9634, 9637], [9638, 9642], [9643, 9652], [9653, 9655], [9656, 9660], [9661, 9667], [9668, 9670], [9671, 9674], [9675, 9688], [9689, 9692], [9692, 9693], [9694, 9702], [9703, 9709], [9710, 9717], [9718, 9724], [9725, 9727], [9728, 9729], [9730, 9741], [9742, 9749], [9750, 9752], [9753, 9756], [9757, 9768], [9769, 9773], [9774, 9777], [9778, 9781], [9782, 9787], [9788, 9790], [9791, 9792], [9793, 9801], [9802, 9804], [9805, 9808], [9809, 9811], [9812, 9815], [9816, 9823], [9823, 9824]]}) 
answer: set([u'monrow', u'fifth', u'us'])
candidate Sentence: (0.083531811833381653, {u'tokens': [u'His', u'death', u'came', u'55', u'years', u'after', u'the', u'U.S.', u'Declaration', u'of', u'Independence', u'was', u'proclaimed', u'and', u'5', u'years', u'after', u'the', u'death', u'of', u'Presidents', u'John', u'Adams', u'and', u'Thomas', u'Jefferson', u'.'], u'lemmas': [u'he', u'death', u'come', u'55', u'year', u'after', u'the', u'U.S.', u'declaration', u'of', u'independence', u'be', u'proclaimed', u'and', u'5', u'year', u'after', u'the', u'death', u'of', u'president', u'John', u'Adams', u'and', u'Thomas', u'Jefferson', u'.'], u'pos': [u'PRP$', u'NN', u'VBD', u'CD', u'NNS', u'IN', u'DT', u'NNP', u'NN', u'IN', u'NN', u'VBD', u'JJ', u'CC', u'CD', u'NNS', u'IN', u'DT', u'NN', u'IN', u'NNS', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'.'], u'char_offsets': [[7957, 7960], [7961, 7966], [7967, 7971], [7972, 7974], [7975, 7980], [7981, 7986], [7987, 7990], [7991, 7995], [7996, 8007], [8008, 8010], [8011, 8023], [8024, 8027], [8028, 8038], [8039, 8042], [8043, 8044], [8045, 8050], [8051, 8056], [8057, 8060], [8061, 8066], [8067, 8069], [8070, 8080], [8081, 8085], [8086, 8091], [8092, 8095], [8096, 8102], [8103, 8112], [8112, 8113]]}) 
answer: set([u'monrow', u'fifth', u'us'])
candidate Sentence: (0.079346053302288055, {u'tokens': [u'-LRB-', u'1898-1903', u'-RRB-', u'online', u'edition', u'*', u'Extensive', u'essay', u'on', u'James', u'Monroe', u'and', u'shorter', u'essays', u'on', u'each', u'member', u'of', u'his', u'cabinet', u'and', u'First', u'Lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'James', u'Monroe', u'Biography', u'and', u'Fact', u'File', u'*', u'The', u'Presidential', u'Home', u'of', u'James', u'Monroe', u'-LRB-', u'College', u'of', u'William', u'and', u'Mary', u'-RRB-', u'*', u'James', u'Monroe', u'Memorial', u'Foundation', u'*', u'James', u'Monroe', u'Scholarship', u'Award', u'*', u'The', u'Papers', u'of', u'James', u'Monroe', u'at', u'the', u'Avalon', u'Project', u'*', u'Monroe', u'Doctrine', u'and', u'related', u'resources', u'at', u'the', u'Library', u'of', u'Congress', u'*', u'James', u'Monroe', u"'s", u'Health', u'and', u'Medical', u'History', u'*', u'James', u'Monroe', u'Birthplace', u'Commission', u'*', u'The', u'Religion', u'of', u'James', u'Monroe', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'President', u'of', u'the', u'United', u'States', u'College', u'of', u'William', u'and', u'Mary', u'U.S.', u'Ambassador', u'to', u'Great', u'Britain', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u'Brown', u'College', u'at', u'Monroe', u'Hill', u'College', u'of', u'William', u'and', u'Mary', u'New', u'York', u'City', u'Marble', u'Cemetery', u'Episcopal', u'Church', u'in', u'the', u'United', u'States', u'of', u'America', u'List', u'of', u'United', u'States', u'political', u'appointments', u'that', u'crossed', u'party', u'lines', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'United', u'States', u'Secretary', u'of', u'State', u'President', u'of', u'the', u'United', u'States', u'List', u'of', u'United', u'States', u'Senators', u'from', u'Virginia', u'U.S.', u'Minister', u'Plenipotentiary', u'to', u'France', u'United', u'States', u'Ambassador', u'to', u'Great', u'Britain', u'President', u'of', u'the', u'United', u'States'], u'lemmas': [u'-lrb-', u'1898-1903', u'-rrb-', u'online', u'edition', u'*', u'extensive', u'essay', u'on', u'James', u'Monroe', u'and', u'shorter', u'essay', u'on', u'each', u'member', u'of', u'he', u'cabinet', u'and', u'first', u'lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'James', u'Monroe', u'biography', u'and', u'fact', u'file', u'*', u'the', u'Presidential', u'Home', u'of', u'James', u'Monroe', u'-lrb-', u'College', u'of', u'William', u'and', u'Mary', u'-rrb-', u'*', u'James', u'Monroe', u'Memorial', u'Foundation', u'*', u'James', u'Monroe', u'Scholarship', u'award', u'*', u'the', u'Papers', u'of', u'James', u'Monroe', u'at', u'the', u'Avalon', u'Project', u'*', u'Monroe', u'Doctrine', u'and', u'related', u'resource', u'at', u'the', u'Library', u'of', u'Congress', u'*', u'James', u'Monroe', u"'s", u'Health', u'and', u'Medical', u'history', u'*', u'James', u'Monroe', u'Birthplace', u'Commission', u'*', u'the', u'Religion', u'of', u'James', u'Monroe', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'President', u'of', u'the', u'United', u'States', u'College', u'of', u'William', u'and', u'Mary', u'U.S.', u'Ambassador', u'to', u'Great', u'Britain', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u'Brown', u'College', u'at', u'Monroe', u'Hill', u'College', u'of', u'William', u'and', u'Mary', u'New', u'York', u'City', u'Marble', u'Cemetery', u'Episcopal', u'Church', u'in', u'the', u'United', u'States', u'of', u'America', u'list', u'of', u'United', u'States', u'political', u'appointment', u'that', u'cross', u'party', u'line', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'United', u'States', u'Secretary', u'of', u'State', u'President', u'of', u'the', u'United', u'States', u'list', u'of', u'United', u'States', u'Senators', u'from', u'Virginia', u'U.S.', u'Minister', u'Plenipotentiary', u'to', u'France', u'United', u'States', u'Ambassador', u'to', u'Great', u'Britain', u'President', u'of', u'the', u'United', u'States'], u'pos': [u'-LRB-', u'CD', u'-RRB-', u'JJ', u'NN', u'SYM', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'CC', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNPS', u'SYM', u'NNP', u'NNP', u'NN', u'CC', u'NN', u'VBP', u'SYM', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'-LRB-', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'-RRB-', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'NN', u'SYM', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'CC', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'SYM', u'NNP', u'NNP', u'POS', u'NNP', u'CC', u'NNP', u'NN', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'SYM', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNPS', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'TO', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'IN', u'NNP', u'NN', u'IN', u'NNP', u'NNPS', u'JJ', u'NNS', u'WDT', u'VBD', u'NN', u'NNS', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NN', u'IN', u'NNP', u'NNPS', u'NNPS', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'TO', u'NNP', u'NNP', u'NNPS', u'NNP', u'TO', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS'], u'char_offsets': [[14912, 14913], [14913, 14922], [14922, 14923], [14926, 14932], [14933, 14940], [14941, 14942], [14943, 14952], [14953, 14958], [14959, 14961], [14962, 14967], [14968, 14974], [14975, 14978], [14979, 14986], [14987, 14993], [14994, 14996], [14997, 15001], [15002, 15008], [15009, 15011], [15012, 15015], [15016, 15023], [15024, 15027], [15028, 15033], [15034, 15038], [15039, 15043], [15044, 15047], [15048, 15054], [15055, 15061], [15062, 15064], [15065, 15071], [15072, 15079], [15080, 15081], [15082, 15087], [15088, 15094], [15095, 15104], [15105, 15108], [15109, 15113], [15114, 15118], [15119, 15120], [15121, 15124], [15125, 15137], [15138, 15142], [15143, 15145], [15146, 15151], [15152, 15158], [15159, 15160], [15160, 15167], [15168, 15170], [15171, 15178], [15179, 15182], [15183, 15187], [15187, 15188], [15189, 15190], [15191, 15196], [15197, 15203], [15204, 15212], [15213, 15223], [15224, 15225], [15226, 15231], [15232, 15238], [15239, 15250], [15251, 15256], [15257, 15258], [15259, 15262], [15263, 15269], [15270, 15272], [15273, 15278], [15279, 15285], [15286, 15288], [15289, 15292], [15293, 15299], [15300, 15307], [15308, 15309], [15310, 15316], [15317, 15325], [15326, 15329], [15330, 15337], [15338, 15347], [15348, 15350], [15351, 15354], [15355, 15362], [15363, 15365], [15366, 15374], [15375, 15376], [15377, 15382], [15383, 15389], [15389, 15391], [15392, 15398], [15399, 15402], [15403, 15410], [15411, 15418], [15419, 15420], [15421, 15426], [15427, 15433], [15434, 15444], [15445, 15455], [15456, 15457], [15458, 15461], [15462, 15470], [15471, 15473], [15474, 15479], [15480, 15486], [15487, 15496], [15497, 15499], [15500, 15503], [15504, 15510], [15511, 15517], [15518, 15524], [15525, 15531], [15532, 15541], [15542, 15544], [15545, 15550], [15551, 15557], [15558, 15564], [15565, 15574], [15575, 15577], [15578, 15581], [15582, 15591], [15592, 15594], [15595, 15598], [15599, 15605], [15606, 15612], [15613, 15620], [15621, 15623], [15624, 15631], [15632, 15635], [15636, 15640], [15641, 15645], [15646, 15656], [15657, 15659], [15660, 15665], [15666, 15673], [15674, 15681], [15682, 15687], [15688, 15690], [15691, 15694], [15695, 15701], [15702, 15708], [15709, 15714], [15715, 15722], [15723, 15725], [15726, 15732], [15733, 15737], [15738, 15745], [15746, 15748], [15749, 15756], [15757, 15760], [15761, 15765], [15766, 15769], [15770, 15774], [15775, 15779], [15780, 15786], [15787, 15795], [15796, 15805], [15806, 15812], [15813, 15815], [15816, 15819], [15820, 15826], [15827, 15833], [15834, 15836], [15837, 15844], [15845, 15849], [15850, 15852], [15853, 15859], [15860, 15866], [15867, 15876], [15877, 15889], [15890, 15894], [15895, 15902], [15903, 15908], [15909, 15914], [15915, 15921], [15922, 15928], [15929, 15938], [15939, 15941], [15942, 15947], [15948, 15954], [15955, 15961], [15962, 15971], [15972, 15974], [15975, 15978], [15979, 15985], [15986, 15992], [15993, 16002], [16003, 16005], [16006, 16011], [16012, 16021], [16022, 16024], [16025, 16028], [16029, 16035], [16036, 16042], [16043, 16047], [16048, 16050], [16051, 16057], [16058, 16064], [16065, 16073], [16074, 16078], [16079, 16087], [16088, 16092], [16093, 16101], [16102, 16117], [16118, 16120], [16121, 16127], [16128, 16134], [16135, 16141], [16142, 16152], [16153, 16155], [16156, 16161], [16162, 16169], [16170, 16179], [16180, 16182], [16183, 16186], [16187, 16193], [16194, 16200]]}) 
answer: set([u'monrow', u'fifth', u'us'])
candidate Sentence: (0.070479609072208405, {u'tokens': [u'Monroe', u'died', u'there', u'from', u'heart', u'failure', u'and', u'tuberculosis', u'on', u'July', u'4', u',', u'1831', u',', u'becoming', u'the', u'third', u'president', u'to', u'die', u'on', u'the', u'4th', u'of', u'July', u'.'], u'lemmas': [u'Monroe', u'die', u'there', u'from', u'heart', u'failure', u'and', u'tuberculosis', u'on', u'July', u'4', u',', u'1831', u',', u'become', u'the', u'third', u'president', u'to', u'die', u'on', u'the', u'4th', u'of', u'July', u'.'], u'pos': [u'NNP', u'VBD', u'EX', u'IN', u'NN', u'NN', u'CC', u'NN', u'IN', u'NNP', u'CD', u',', u'CD', u',', u'VBG', u'DT', u'JJ', u'NN', u'TO', u'VB', u'IN', u'DT', u'JJ', u'IN', u'NNP', u'.'], u'char_offsets': [[7830, 7836], [7837, 7841], [7842, 7847], [7848, 7852], [7853, 7858], [7859, 7866], [7867, 7870], [7871, 7883], [7884, 7886], [7887, 7891], [7892, 7893], [7893, 7894], [7895, 7899], [7899, 7900], [7901, 7909], [7910, 7913], [7914, 7919], [7920, 7929], [7930, 7932], [7933, 7936], [7937, 7939], [7940, 7943], [7944, 7947], [7948, 7950], [7951, 7955], [7955, 7956]]}) 
answer: set([u'monrow', u'fifth', u'us'])
candidate Sentence: (0.069489225745201111, {u'tokens': [u'Official', u'White', u'House', u'portrait', u'of', u'James', u'Monroe', u'Monroe', u'appointed', u'the', u'following', u'Justices', u'to', u'the', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u':', u'When', u'his', u'presidency', u'expired', u'on', u'March', u'4', u',', u'1825', u',', u'James', u'Monroe', u'lived', u'at', u'Monroe', u'Hill', u'on', u'the', u'grounds', u'of', u'the', u'University', u'of', u'Virginia', u'.'], u'lemmas': [u'Official', u'White', u'House', u'portrait', u'of', u'James', u'Monroe', u'Monroe', u'appoint', u'the', u'follow', u'Justices', u'to', u'the', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u':', u'when', u'he', u'presidency', u'expire', u'on', u'March', u'4', u',', u'1825', u',', u'James', u'Monroe', u'live', u'at', u'Monroe', u'Hill', u'on', u'the', u'grounds', u'of', u'the', u'University', u'of', u'Virginia', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'NN', u'IN', u'NNP', u'NNP', u'NNP', u'VBD', u'DT', u'VBG', u'NNPS', u'TO', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u':', u'WRB', u'PRP$', u'NN', u'VBD', u'IN', u'NNP', u'CD', u',', u'CD', u',', u'NNP', u'NNP', u'VBD', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[6616, 6624], [6625, 6630], [6631, 6636], [6637, 6645], [6646, 6648], [6649, 6654], [6655, 6661], [6662, 6668], [6669, 6678], [6679, 6682], [6683, 6692], [6693, 6701], [6702, 6704], [6705, 6708], [6709, 6716], [6717, 6722], [6723, 6725], [6726, 6729], [6730, 6736], [6737, 6743], [6743, 6744], [6745, 6749], [6750, 6753], [6754, 6764], [6765, 6772], [6773, 6775], [6776, 6781], [6782, 6783], [6783, 6784], [6785, 6789], [6789, 6790], [6791, 6796], [6797, 6803], [6804, 6809], [6810, 6812], [6813, 6819], [6820, 6824], [6825, 6827], [6828, 6831], [6832, 6839], [6840, 6842], [6843, 6846], [6847, 6857], [6858, 6860], [6861, 6869], [6869, 6870]]}) 
answer: set([u'monrow', u'fifth', u'us'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'james', u'monroe', u'.'])

Is James Monrow the fifth president of US?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = James_Monroe
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a2.txt

No
_____________________________ test_yesno[param175] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e3a28>, (<src.tfidf.TF_IDF object at 0x11240dc10>, set(['.', 'james', 'monroe'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x1156e3a28>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.34089449048042297, {u'tokens': [u'James', u'Monroe', u'-LRB-', u'April', u'28', u',', u'1758', u'July', u'4', u',', u'1831', u'-RRB-', u'was', u'the', u'fifth', u'President', u'of', u'the', u'United', u'States', u'-LRB-', u'1817-1825', u'-RRB-', u'.'], u'lemmas': [u'James', u'Monroe', u'-lrb-', u'April', u'28', u',', u'1758', u'July', u'4', u',', u'1831', u'-rrb-', u'be', u'the', u'fifth', u'president', u'of', u'the', u'United', u'States', u'-lrb-', u'1817-1825', u'-rrb-', u'.'], u'pos': [u'NNP', u'NNP', u'-LRB-', u'NNP', u'CD', u',', u'CD', u'NNP', u'CD', u',', u'CD', u'-RRB-', u'VBD', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNPS', u'-LRB-', u'CD', u'-RRB-', u'.'], u'char_offsets': [[0, 5], [6, 12], [13, 14], [14, 19], [20, 22], [22, 23], [24, 28], [30, 34], [35, 36], [36, 37], [38, 42], [42, 43], [44, 47], [48, 51], [52, 57], [58, 67], [68, 70], [71, 74], [75, 81], [82, 88], [89, 90], [90, 99], [99, 100], [100, 101]]}) 
answer: set([u'monrow', u'us'])
candidate Sentence: (0.17062491178512573, {u'tokens': [u'He', u'was', u'alarmed', u'at', u'Spanish', u'diplomat', u'Diego', u'Mara', u'de', u'Gardoqui', u',', u'involving', u'a', u'US', u'attempt', u'to', u'secure', u'the', u'opening', u'of', u'the', u'Mississippi', u'River', u'to', u'American', u'commerce', u'.'], u'lemmas': [u'he', u'be', u'alarm', u'at', u'spanish', u'diplomat', u'diego', u'Mara', u'de', u'Gardoqui', u',', u'involve', u'a', u'US', u'attempt', u'to', u'secure', u'the', u'opening', u'of', u'the', u'Mississippi', u'River', u'to', u'American', u'commerce', u'.'], u'pos': [u'PRP', u'VBD', u'VBN', u'IN', u'JJ', u'NN', u'JJ', u'NNP', u'IN', u'NNP', u',', u'VBG', u'DT', u'NNP', u'NN', u'TO', u'VB', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'TO', u'NNP', u'NN', u'.'], u'char_offsets': [[12486, 12488], [12489, 12492], [12493, 12500], [12501, 12503], [12504, 12511], [12512, 12520], [12521, 12526], [12527, 12531], [12532, 12534], [12535, 12543], [12543, 12544], [12545, 12554], [12555, 12556], [12557, 12559], [12560, 12567], [12568, 12570], [12571, 12577], [12578, 12581], [12582, 12589], [12590, 12592], [12593, 12596], [12597, 12608], [12609, 12614], [12615, 12617], [12618, 12626], [12627, 12635], [12635, 12636]]}) 
answer: set([u'monrow', u'fifth', u'presid'])
candidate Sentence: (0.12416522949934006, {u'tokens': [u'Following', u'the', u'War', u'of', u'1812', u',', u'Monroe', u'was', u'elected', u'president', u'in', u'the', u'election', u'of', u'1816', u',', u'and', u're-elected', u'in', u'1820', u'.'], u'lemmas': [u'follow', u'the', u'war', u'of', u'1812', u',', u'Monroe', u'be', u'elect', u'president', u'in', u'the', u'election', u'of', u'1816', u',', u'and', u're-elected', u'in', u'1820', u'.'], u'pos': [u'VBG', u'DT', u'NN', u'IN', u'CD', u',', u'NNP', u'VBD', u'VBN', u'NN', u'IN', u'DT', u'NN', u'IN', u'CD', u',', u'CC', u'JJ', u'IN', u'CD', u'.'], u'char_offsets': [[3099, 3108], [3109, 3112], [3113, 3116], [3117, 3119], [3120, 3124], [3124, 3125], [3126, 3132], [3133, 3136], [3137, 3144], [3145, 3154], [3155, 3157], [3158, 3161], [3162, 3170], [3171, 3173], [3174, 3178], [3178, 3179], [3180, 3183], [3184, 3194], [3195, 3197], [3198, 3202], [3202, 3203]]}) 
answer: set([u'monrow', u'fifth', u'us'])
candidate Sentence: (0.10428860783576965, {u'tokens': [u'The', u'Political', u'Writings', u'of', u'James', u'Monroe', u'.'], u'lemmas': [u'the', u'political', u'writings', u'of', u'James', u'Monroe', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[14759, 14762], [14763, 14772], [14773, 14781], [14782, 14784], [14785, 14790], [14791, 14797], [14797, 14798]]}) 
answer: set([u'monrow', u'fifth', u'us', u'presid'])
candidate Sentence: (0.090497799217700958, {u'tokens': [u'*', u'In', u'the', u'famous', u'painting', u'of', u'Washington', u'Crossing', u'the', u'Delaware', u'-LRB-', u'also', u'depicted', u'on', u'the', u'New', u'Jersey', u'state', u'quarter', u'-RRB-', u',', u'Monroe', u'is', u'standing', u'behind', u'George', u'Washington', u'and', u'holds', u'the', u'American', u'Flag', u'*', u'Monroe', u'is', u'considered', u'to', u'be', u'the', u'president', u'who', u'was', u'in', u'the', u'most', u'paintings', u';', u'throughout', u'the', u'1800s', u'he', u'was', u'in', u'over', u'350', u'.'], u'lemmas': [u'*', u'in', u'the', u'famous', u'painting', u'of', u'Washington', u'cross', u'the', u'Delaware', u'-lrb-', u'also', u'depict', u'on', u'the', u'New', u'Jersey', u'state', u'quarter', u'-rrb-', u',', u'Monroe', u'be', u'stand', u'behind', u'George', u'Washington', u'and', u'hold', u'the', u'american', u'flag', u'*', u'Monroe', u'be', u'consider', u'to', u'be', u'the', u'president', u'who', u'be', u'in', u'the', u'most', u'painting', u';', u'throughout', u'the', u'1800', u'he', u'be', u'in', u'over', u'350', u'.'], u'pos': [u'SYM', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'VBG', u'DT', u'NNP', u'-LRB-', u'RB', u'VBN', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'NN', u'-RRB-', u',', u'NNP', u'VBZ', u'VBG', u'IN', u'NNP', u'NNP', u'CC', u'VBZ', u'DT', u'JJ', u'NN', u'SYM', u'NNP', u'VBZ', u'VBN', u'TO', u'VB', u'DT', u'NN', u'WP', u'VBD', u'IN', u'DT', u'RBS', u'NNS', u':', u'IN', u'DT', u'NNS', u'PRP', u'VBD', u'IN', u'IN', u'CD', u'.'], u'char_offsets': [[9825, 9826], [9827, 9829], [9830, 9833], [9834, 9840], [9841, 9849], [9850, 9852], [9853, 9863], [9864, 9872], [9873, 9876], [9877, 9885], [9886, 9887], [9887, 9891], [9892, 9900], [9901, 9903], [9904, 9907], [9908, 9911], [9912, 9918], [9919, 9924], [9925, 9932], [9932, 9933], [9933, 9934], [9935, 9941], [9942, 9944], [9945, 9953], [9954, 9960], [9961, 9967], [9968, 9978], [9979, 9982], [9983, 9988], [9989, 9992], [9993, 10001], [10002, 10006], [10007, 10008], [10009, 10015], [10016, 10018], [10019, 10029], [10030, 10032], [10033, 10035], [10036, 10039], [10040, 10049], [10050, 10053], [10054, 10057], [10058, 10060], [10061, 10064], [10065, 10069], [10070, 10079], [10079, 10080], [10081, 10091], [10092, 10095], [10096, 10101], [10102, 10104], [10105, 10108], [10109, 10111], [10112, 10116], [10117, 10120], [10120, 10121]]}) 
answer: set([u'monrow', u'fifth', u'us'])
candidate Sentence: (0.08585994690656662, {u'tokens': [u'*', u'Monroe', u'was', u'-LRB-', u'arguably', u'-RRB-', u'the', u'last', u'president', u'to', u'have', u'fought', u'in', u'the', u'Revolutionary', u'War', u',', u'although', u'Andrew', u'Jackson', u'served', u'as', u'a', u'13-year-old', u'courier', u'in', u'the', u'Continental', u'Army', u'and', u'was', u'taken', u'as', u'a', u'prisoner', u'of', u'war', u'by', u'the', u'British', u'.'], u'lemmas': [u'*', u'Monroe', u'be', u'-lrb-', u'arguably', u'-rrb-', u'the', u'last', u'president', u'to', u'have', u'fight', u'in', u'the', u'Revolutionary', u'War', u',', u'although', u'Andrew', u'Jackson', u'serve', u'as', u'a', u'13-year-old', u'courier', u'in', u'the', u'Continental', u'Army', u'and', u'be', u'take', u'as', u'a', u'prisoner', u'of', u'war', u'by', u'the', u'British', u'.'], u'pos': [u'SYM', u'NNP', u'VBD', u'-LRB-', u'RB', u'-RRB-', u'DT', u'JJ', u'NN', u'TO', u'VB', u'VBN', u'IN', u'DT', u'NNP', u'NNP', u',', u'IN', u'NNP', u'NNP', u'VBD', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'CC', u'VBD', u'VBN', u'IN', u'DT', u'NN', u'IN', u'NN', u'IN', u'DT', u'NNP', u'.'], u'char_offsets': [[9610, 9611], [9612, 9618], [9619, 9622], [9623, 9624], [9624, 9632], [9632, 9633], [9634, 9637], [9638, 9642], [9643, 9652], [9653, 9655], [9656, 9660], [9661, 9667], [9668, 9670], [9671, 9674], [9675, 9688], [9689, 9692], [9692, 9693], [9694, 9702], [9703, 9709], [9710, 9717], [9718, 9724], [9725, 9727], [9728, 9729], [9730, 9741], [9742, 9749], [9750, 9752], [9753, 9756], [9757, 9768], [9769, 9773], [9774, 9777], [9778, 9781], [9782, 9787], [9788, 9790], [9791, 9792], [9793, 9801], [9802, 9804], [9805, 9808], [9809, 9811], [9812, 9815], [9816, 9823], [9823, 9824]]}) 
answer: set([u'monrow', u'fifth', u'us'])
candidate Sentence: (0.083531811833381653, {u'tokens': [u'His', u'death', u'came', u'55', u'years', u'after', u'the', u'U.S.', u'Declaration', u'of', u'Independence', u'was', u'proclaimed', u'and', u'5', u'years', u'after', u'the', u'death', u'of', u'Presidents', u'John', u'Adams', u'and', u'Thomas', u'Jefferson', u'.'], u'lemmas': [u'he', u'death', u'come', u'55', u'year', u'after', u'the', u'U.S.', u'declaration', u'of', u'independence', u'be', u'proclaimed', u'and', u'5', u'year', u'after', u'the', u'death', u'of', u'president', u'John', u'Adams', u'and', u'Thomas', u'Jefferson', u'.'], u'pos': [u'PRP$', u'NN', u'VBD', u'CD', u'NNS', u'IN', u'DT', u'NNP', u'NN', u'IN', u'NN', u'VBD', u'JJ', u'CC', u'CD', u'NNS', u'IN', u'DT', u'NN', u'IN', u'NNS', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'.'], u'char_offsets': [[7957, 7960], [7961, 7966], [7967, 7971], [7972, 7974], [7975, 7980], [7981, 7986], [7987, 7990], [7991, 7995], [7996, 8007], [8008, 8010], [8011, 8023], [8024, 8027], [8028, 8038], [8039, 8042], [8043, 8044], [8045, 8050], [8051, 8056], [8057, 8060], [8061, 8066], [8067, 8069], [8070, 8080], [8081, 8085], [8086, 8091], [8092, 8095], [8096, 8102], [8103, 8112], [8112, 8113]]}) 
answer: set([u'monrow', u'fifth', u'us'])
candidate Sentence: (0.079346053302288055, {u'tokens': [u'-LRB-', u'1898-1903', u'-RRB-', u'online', u'edition', u'*', u'Extensive', u'essay', u'on', u'James', u'Monroe', u'and', u'shorter', u'essays', u'on', u'each', u'member', u'of', u'his', u'cabinet', u'and', u'First', u'Lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'James', u'Monroe', u'Biography', u'and', u'Fact', u'File', u'*', u'The', u'Presidential', u'Home', u'of', u'James', u'Monroe', u'-LRB-', u'College', u'of', u'William', u'and', u'Mary', u'-RRB-', u'*', u'James', u'Monroe', u'Memorial', u'Foundation', u'*', u'James', u'Monroe', u'Scholarship', u'Award', u'*', u'The', u'Papers', u'of', u'James', u'Monroe', u'at', u'the', u'Avalon', u'Project', u'*', u'Monroe', u'Doctrine', u'and', u'related', u'resources', u'at', u'the', u'Library', u'of', u'Congress', u'*', u'James', u'Monroe', u"'s", u'Health', u'and', u'Medical', u'History', u'*', u'James', u'Monroe', u'Birthplace', u'Commission', u'*', u'The', u'Religion', u'of', u'James', u'Monroe', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'President', u'of', u'the', u'United', u'States', u'College', u'of', u'William', u'and', u'Mary', u'U.S.', u'Ambassador', u'to', u'Great', u'Britain', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u'Brown', u'College', u'at', u'Monroe', u'Hill', u'College', u'of', u'William', u'and', u'Mary', u'New', u'York', u'City', u'Marble', u'Cemetery', u'Episcopal', u'Church', u'in', u'the', u'United', u'States', u'of', u'America', u'List', u'of', u'United', u'States', u'political', u'appointments', u'that', u'crossed', u'party', u'lines', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'United', u'States', u'Secretary', u'of', u'State', u'President', u'of', u'the', u'United', u'States', u'List', u'of', u'United', u'States', u'Senators', u'from', u'Virginia', u'U.S.', u'Minister', u'Plenipotentiary', u'to', u'France', u'United', u'States', u'Ambassador', u'to', u'Great', u'Britain', u'President', u'of', u'the', u'United', u'States'], u'lemmas': [u'-lrb-', u'1898-1903', u'-rrb-', u'online', u'edition', u'*', u'extensive', u'essay', u'on', u'James', u'Monroe', u'and', u'shorter', u'essay', u'on', u'each', u'member', u'of', u'he', u'cabinet', u'and', u'first', u'lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'James', u'Monroe', u'biography', u'and', u'fact', u'file', u'*', u'the', u'Presidential', u'Home', u'of', u'James', u'Monroe', u'-lrb-', u'College', u'of', u'William', u'and', u'Mary', u'-rrb-', u'*', u'James', u'Monroe', u'Memorial', u'Foundation', u'*', u'James', u'Monroe', u'Scholarship', u'award', u'*', u'the', u'Papers', u'of', u'James', u'Monroe', u'at', u'the', u'Avalon', u'Project', u'*', u'Monroe', u'Doctrine', u'and', u'related', u'resource', u'at', u'the', u'Library', u'of', u'Congress', u'*', u'James', u'Monroe', u"'s", u'Health', u'and', u'Medical', u'history', u'*', u'James', u'Monroe', u'Birthplace', u'Commission', u'*', u'the', u'Religion', u'of', u'James', u'Monroe', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'President', u'of', u'the', u'United', u'States', u'College', u'of', u'William', u'and', u'Mary', u'U.S.', u'Ambassador', u'to', u'Great', u'Britain', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u'Brown', u'College', u'at', u'Monroe', u'Hill', u'College', u'of', u'William', u'and', u'Mary', u'New', u'York', u'City', u'Marble', u'Cemetery', u'Episcopal', u'Church', u'in', u'the', u'United', u'States', u'of', u'America', u'list', u'of', u'United', u'States', u'political', u'appointment', u'that', u'cross', u'party', u'line', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'United', u'States', u'Secretary', u'of', u'State', u'President', u'of', u'the', u'United', u'States', u'list', u'of', u'United', u'States', u'Senators', u'from', u'Virginia', u'U.S.', u'Minister', u'Plenipotentiary', u'to', u'France', u'United', u'States', u'Ambassador', u'to', u'Great', u'Britain', u'President', u'of', u'the', u'United', u'States'], u'pos': [u'-LRB-', u'CD', u'-RRB-', u'JJ', u'NN', u'SYM', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'CC', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNPS', u'SYM', u'NNP', u'NNP', u'NN', u'CC', u'NN', u'VBP', u'SYM', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'-LRB-', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'-RRB-', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'NN', u'SYM', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'CC', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'SYM', u'NNP', u'NNP', u'POS', u'NNP', u'CC', u'NNP', u'NN', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'SYM', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNPS', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'TO', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'IN', u'NNP', u'NN', u'IN', u'NNP', u'NNPS', u'JJ', u'NNS', u'WDT', u'VBD', u'NN', u'NNS', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NN', u'IN', u'NNP', u'NNPS', u'NNPS', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'TO', u'NNP', u'NNP', u'NNPS', u'NNP', u'TO', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS'], u'char_offsets': [[14912, 14913], [14913, 14922], [14922, 14923], [14926, 14932], [14933, 14940], [14941, 14942], [14943, 14952], [14953, 14958], [14959, 14961], [14962, 14967], [14968, 14974], [14975, 14978], [14979, 14986], [14987, 14993], [14994, 14996], [14997, 15001], [15002, 15008], [15009, 15011], [15012, 15015], [15016, 15023], [15024, 15027], [15028, 15033], [15034, 15038], [15039, 15043], [15044, 15047], [15048, 15054], [15055, 15061], [15062, 15064], [15065, 15071], [15072, 15079], [15080, 15081], [15082, 15087], [15088, 15094], [15095, 15104], [15105, 15108], [15109, 15113], [15114, 15118], [15119, 15120], [15121, 15124], [15125, 15137], [15138, 15142], [15143, 15145], [15146, 15151], [15152, 15158], [15159, 15160], [15160, 15167], [15168, 15170], [15171, 15178], [15179, 15182], [15183, 15187], [15187, 15188], [15189, 15190], [15191, 15196], [15197, 15203], [15204, 15212], [15213, 15223], [15224, 15225], [15226, 15231], [15232, 15238], [15239, 15250], [15251, 15256], [15257, 15258], [15259, 15262], [15263, 15269], [15270, 15272], [15273, 15278], [15279, 15285], [15286, 15288], [15289, 15292], [15293, 15299], [15300, 15307], [15308, 15309], [15310, 15316], [15317, 15325], [15326, 15329], [15330, 15337], [15338, 15347], [15348, 15350], [15351, 15354], [15355, 15362], [15363, 15365], [15366, 15374], [15375, 15376], [15377, 15382], [15383, 15389], [15389, 15391], [15392, 15398], [15399, 15402], [15403, 15410], [15411, 15418], [15419, 15420], [15421, 15426], [15427, 15433], [15434, 15444], [15445, 15455], [15456, 15457], [15458, 15461], [15462, 15470], [15471, 15473], [15474, 15479], [15480, 15486], [15487, 15496], [15497, 15499], [15500, 15503], [15504, 15510], [15511, 15517], [15518, 15524], [15525, 15531], [15532, 15541], [15542, 15544], [15545, 15550], [15551, 15557], [15558, 15564], [15565, 15574], [15575, 15577], [15578, 15581], [15582, 15591], [15592, 15594], [15595, 15598], [15599, 15605], [15606, 15612], [15613, 15620], [15621, 15623], [15624, 15631], [15632, 15635], [15636, 15640], [15641, 15645], [15646, 15656], [15657, 15659], [15660, 15665], [15666, 15673], [15674, 15681], [15682, 15687], [15688, 15690], [15691, 15694], [15695, 15701], [15702, 15708], [15709, 15714], [15715, 15722], [15723, 15725], [15726, 15732], [15733, 15737], [15738, 15745], [15746, 15748], [15749, 15756], [15757, 15760], [15761, 15765], [15766, 15769], [15770, 15774], [15775, 15779], [15780, 15786], [15787, 15795], [15796, 15805], [15806, 15812], [15813, 15815], [15816, 15819], [15820, 15826], [15827, 15833], [15834, 15836], [15837, 15844], [15845, 15849], [15850, 15852], [15853, 15859], [15860, 15866], [15867, 15876], [15877, 15889], [15890, 15894], [15895, 15902], [15903, 15908], [15909, 15914], [15915, 15921], [15922, 15928], [15929, 15938], [15939, 15941], [15942, 15947], [15948, 15954], [15955, 15961], [15962, 15971], [15972, 15974], [15975, 15978], [15979, 15985], [15986, 15992], [15993, 16002], [16003, 16005], [16006, 16011], [16012, 16021], [16022, 16024], [16025, 16028], [16029, 16035], [16036, 16042], [16043, 16047], [16048, 16050], [16051, 16057], [16058, 16064], [16065, 16073], [16074, 16078], [16079, 16087], [16088, 16092], [16093, 16101], [16102, 16117], [16118, 16120], [16121, 16127], [16128, 16134], [16135, 16141], [16142, 16152], [16153, 16155], [16156, 16161], [16162, 16169], [16170, 16179], [16180, 16182], [16183, 16186], [16187, 16193], [16194, 16200]]}) 
answer: set([u'monrow', u'fifth', u'us'])
candidate Sentence: (0.070479609072208405, {u'tokens': [u'Monroe', u'died', u'there', u'from', u'heart', u'failure', u'and', u'tuberculosis', u'on', u'July', u'4', u',', u'1831', u',', u'becoming', u'the', u'third', u'president', u'to', u'die', u'on', u'the', u'4th', u'of', u'July', u'.'], u'lemmas': [u'Monroe', u'die', u'there', u'from', u'heart', u'failure', u'and', u'tuberculosis', u'on', u'July', u'4', u',', u'1831', u',', u'become', u'the', u'third', u'president', u'to', u'die', u'on', u'the', u'4th', u'of', u'July', u'.'], u'pos': [u'NNP', u'VBD', u'EX', u'IN', u'NN', u'NN', u'CC', u'NN', u'IN', u'NNP', u'CD', u',', u'CD', u',', u'VBG', u'DT', u'JJ', u'NN', u'TO', u'VB', u'IN', u'DT', u'JJ', u'IN', u'NNP', u'.'], u'char_offsets': [[7830, 7836], [7837, 7841], [7842, 7847], [7848, 7852], [7853, 7858], [7859, 7866], [7867, 7870], [7871, 7883], [7884, 7886], [7887, 7891], [7892, 7893], [7893, 7894], [7895, 7899], [7899, 7900], [7901, 7909], [7910, 7913], [7914, 7919], [7920, 7929], [7930, 7932], [7933, 7936], [7937, 7939], [7940, 7943], [7944, 7947], [7948, 7950], [7951, 7955], [7955, 7956]]}) 
answer: set([u'monrow', u'fifth', u'us'])
candidate Sentence: (0.069489225745201111, {u'tokens': [u'Official', u'White', u'House', u'portrait', u'of', u'James', u'Monroe', u'Monroe', u'appointed', u'the', u'following', u'Justices', u'to', u'the', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u':', u'When', u'his', u'presidency', u'expired', u'on', u'March', u'4', u',', u'1825', u',', u'James', u'Monroe', u'lived', u'at', u'Monroe', u'Hill', u'on', u'the', u'grounds', u'of', u'the', u'University', u'of', u'Virginia', u'.'], u'lemmas': [u'Official', u'White', u'House', u'portrait', u'of', u'James', u'Monroe', u'Monroe', u'appoint', u'the', u'follow', u'Justices', u'to', u'the', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u':', u'when', u'he', u'presidency', u'expire', u'on', u'March', u'4', u',', u'1825', u',', u'James', u'Monroe', u'live', u'at', u'Monroe', u'Hill', u'on', u'the', u'grounds', u'of', u'the', u'University', u'of', u'Virginia', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'NN', u'IN', u'NNP', u'NNP', u'NNP', u'VBD', u'DT', u'VBG', u'NNPS', u'TO', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u':', u'WRB', u'PRP$', u'NN', u'VBD', u'IN', u'NNP', u'CD', u',', u'CD', u',', u'NNP', u'NNP', u'VBD', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[6616, 6624], [6625, 6630], [6631, 6636], [6637, 6645], [6646, 6648], [6649, 6654], [6655, 6661], [6662, 6668], [6669, 6678], [6679, 6682], [6683, 6692], [6693, 6701], [6702, 6704], [6705, 6708], [6709, 6716], [6717, 6722], [6723, 6725], [6726, 6729], [6730, 6736], [6737, 6743], [6743, 6744], [6745, 6749], [6750, 6753], [6754, 6764], [6765, 6772], [6773, 6775], [6776, 6781], [6782, 6783], [6783, 6784], [6785, 6789], [6789, 6790], [6791, 6796], [6797, 6803], [6804, 6809], [6810, 6812], [6813, 6819], [6820, 6824], [6825, 6827], [6828, 6831], [6832, 6839], [6840, 6842], [6843, 6846], [6847, 6857], [6858, 6860], [6861, 6869], [6869, 6870]]}) 
answer: set([u'monrow', u'fifth', u'us'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'james', u'monroe', u'.'])

Is James Monrow the fifth president of US?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = James_Monroe
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a2.txt

No
_____________________________ test_yesno[param178] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e3b00>, (<src.tfidf.TF_IDF object at 0x11240dc10>, set(['.', 'james', 'monroe'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156e3b00>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.28656372427940369, {u'tokens': [u'Born', u'in', u'Westmoreland', u'County', u',', u'Virginia', u',', u'Monroe', u'went', u'to', u'school', u'at', u'Campbelltown', u'Academy', u'and', u'then', u'the', u'College', u'of', u'William', u'and', u'Mary', u',', u'both', u'in', u'Virginia', u'.'], u'lemmas': [u'bear', u'in', u'Westmoreland', u'County', u',', u'Virginia', u',', u'Monroe', u'go', u'to', u'school', u'at', u'Campbelltown', u'Academy', u'and', u'then', u'the', u'College', u'of', u'William', u'and', u'Mary', u',', u'both', u'in', u'Virginia', u'.'], u'pos': [u'VBN', u'IN', u'NNP', u'NNP', u',', u'NNP', u',', u'NNP', u'VBD', u'TO', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'RB', u'DT', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u',', u'DT', u'IN', u'NNP', u'.'], u'char_offsets': [[583, 587], [588, 590], [591, 603], [604, 610], [610, 611], [612, 620], [620, 621], [622, 628], [629, 633], [634, 636], [637, 643], [644, 646], [647, 659], [660, 667], [668, 671], [672, 676], [677, 680], [681, 688], [689, 691], [692, 699], [700, 703], [704, 708], [708, 709], [710, 714], [715, 717], [718, 726], [726, 727]]}) 
answer: set([u'attend'])
candidate Sentence: (0.27138882875442505, {u'tokens': [u'-LRB-', u'1898-1903', u'-RRB-', u'online', u'edition', u'*', u'Extensive', u'essay', u'on', u'James', u'Monroe', u'and', u'shorter', u'essays', u'on', u'each', u'member', u'of', u'his', u'cabinet', u'and', u'First', u'Lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'James', u'Monroe', u'Biography', u'and', u'Fact', u'File', u'*', u'The', u'Presidential', u'Home', u'of', u'James', u'Monroe', u'-LRB-', u'College', u'of', u'William', u'and', u'Mary', u'-RRB-', u'*', u'James', u'Monroe', u'Memorial', u'Foundation', u'*', u'James', u'Monroe', u'Scholarship', u'Award', u'*', u'The', u'Papers', u'of', u'James', u'Monroe', u'at', u'the', u'Avalon', u'Project', u'*', u'Monroe', u'Doctrine', u'and', u'related', u'resources', u'at', u'the', u'Library', u'of', u'Congress', u'*', u'James', u'Monroe', u"'s", u'Health', u'and', u'Medical', u'History', u'*', u'James', u'Monroe', u'Birthplace', u'Commission', u'*', u'The', u'Religion', u'of', u'James', u'Monroe', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'President', u'of', u'the', u'United', u'States', u'College', u'of', u'William', u'and', u'Mary', u'U.S.', u'Ambassador', u'to', u'Great', u'Britain', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u'Brown', u'College', u'at', u'Monroe', u'Hill', u'College', u'of', u'William', u'and', u'Mary', u'New', u'York', u'City', u'Marble', u'Cemetery', u'Episcopal', u'Church', u'in', u'the', u'United', u'States', u'of', u'America', u'List', u'of', u'United', u'States', u'political', u'appointments', u'that', u'crossed', u'party', u'lines', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'United', u'States', u'Secretary', u'of', u'State', u'President', u'of', u'the', u'United', u'States', u'List', u'of', u'United', u'States', u'Senators', u'from', u'Virginia', u'U.S.', u'Minister', u'Plenipotentiary', u'to', u'France', u'United', u'States', u'Ambassador', u'to', u'Great', u'Britain', u'President', u'of', u'the', u'United', u'States'], u'lemmas': [u'-lrb-', u'1898-1903', u'-rrb-', u'online', u'edition', u'*', u'extensive', u'essay', u'on', u'James', u'Monroe', u'and', u'shorter', u'essay', u'on', u'each', u'member', u'of', u'he', u'cabinet', u'and', u'first', u'lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'James', u'Monroe', u'biography', u'and', u'fact', u'file', u'*', u'the', u'Presidential', u'Home', u'of', u'James', u'Monroe', u'-lrb-', u'College', u'of', u'William', u'and', u'Mary', u'-rrb-', u'*', u'James', u'Monroe', u'Memorial', u'Foundation', u'*', u'James', u'Monroe', u'Scholarship', u'award', u'*', u'the', u'Papers', u'of', u'James', u'Monroe', u'at', u'the', u'Avalon', u'Project', u'*', u'Monroe', u'Doctrine', u'and', u'related', u'resource', u'at', u'the', u'Library', u'of', u'Congress', u'*', u'James', u'Monroe', u"'s", u'Health', u'and', u'Medical', u'history', u'*', u'James', u'Monroe', u'Birthplace', u'Commission', u'*', u'the', u'Religion', u'of', u'James', u'Monroe', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'President', u'of', u'the', u'United', u'States', u'College', u'of', u'William', u'and', u'Mary', u'U.S.', u'Ambassador', u'to', u'Great', u'Britain', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u'Brown', u'College', u'at', u'Monroe', u'Hill', u'College', u'of', u'William', u'and', u'Mary', u'New', u'York', u'City', u'Marble', u'Cemetery', u'Episcopal', u'Church', u'in', u'the', u'United', u'States', u'of', u'America', u'list', u'of', u'United', u'States', u'political', u'appointment', u'that', u'cross', u'party', u'line', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'United', u'States', u'Secretary', u'of', u'State', u'President', u'of', u'the', u'United', u'States', u'list', u'of', u'United', u'States', u'Senators', u'from', u'Virginia', u'U.S.', u'Minister', u'Plenipotentiary', u'to', u'France', u'United', u'States', u'Ambassador', u'to', u'Great', u'Britain', u'President', u'of', u'the', u'United', u'States'], u'pos': [u'-LRB-', u'CD', u'-RRB-', u'JJ', u'NN', u'SYM', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'CC', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNPS', u'SYM', u'NNP', u'NNP', u'NN', u'CC', u'NN', u'VBP', u'SYM', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'-LRB-', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'-RRB-', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'NN', u'SYM', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'CC', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'SYM', u'NNP', u'NNP', u'POS', u'NNP', u'CC', u'NNP', u'NN', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'SYM', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNPS', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'TO', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'IN', u'NNP', u'NN', u'IN', u'NNP', u'NNPS', u'JJ', u'NNS', u'WDT', u'VBD', u'NN', u'NNS', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NN', u'IN', u'NNP', u'NNPS', u'NNPS', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'TO', u'NNP', u'NNP', u'NNPS', u'NNP', u'TO', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS'], u'char_offsets': [[14912, 14913], [14913, 14922], [14922, 14923], [14926, 14932], [14933, 14940], [14941, 14942], [14943, 14952], [14953, 14958], [14959, 14961], [14962, 14967], [14968, 14974], [14975, 14978], [14979, 14986], [14987, 14993], [14994, 14996], [14997, 15001], [15002, 15008], [15009, 15011], [15012, 15015], [15016, 15023], [15024, 15027], [15028, 15033], [15034, 15038], [15039, 15043], [15044, 15047], [15048, 15054], [15055, 15061], [15062, 15064], [15065, 15071], [15072, 15079], [15080, 15081], [15082, 15087], [15088, 15094], [15095, 15104], [15105, 15108], [15109, 15113], [15114, 15118], [15119, 15120], [15121, 15124], [15125, 15137], [15138, 15142], [15143, 15145], [15146, 15151], [15152, 15158], [15159, 15160], [15160, 15167], [15168, 15170], [15171, 15178], [15179, 15182], [15183, 15187], [15187, 15188], [15189, 15190], [15191, 15196], [15197, 15203], [15204, 15212], [15213, 15223], [15224, 15225], [15226, 15231], [15232, 15238], [15239, 15250], [15251, 15256], [15257, 15258], [15259, 15262], [15263, 15269], [15270, 15272], [15273, 15278], [15279, 15285], [15286, 15288], [15289, 15292], [15293, 15299], [15300, 15307], [15308, 15309], [15310, 15316], [15317, 15325], [15326, 15329], [15330, 15337], [15338, 15347], [15348, 15350], [15351, 15354], [15355, 15362], [15363, 15365], [15366, 15374], [15375, 15376], [15377, 15382], [15383, 15389], [15389, 15391], [15392, 15398], [15399, 15402], [15403, 15410], [15411, 15418], [15419, 15420], [15421, 15426], [15427, 15433], [15434, 15444], [15445, 15455], [15456, 15457], [15458, 15461], [15462, 15470], [15471, 15473], [15474, 15479], [15480, 15486], [15487, 15496], [15497, 15499], [15500, 15503], [15504, 15510], [15511, 15517], [15518, 15524], [15525, 15531], [15532, 15541], [15542, 15544], [15545, 15550], [15551, 15557], [15558, 15564], [15565, 15574], [15575, 15577], [15578, 15581], [15582, 15591], [15592, 15594], [15595, 15598], [15599, 15605], [15606, 15612], [15613, 15620], [15621, 15623], [15624, 15631], [15632, 15635], [15636, 15640], [15641, 15645], [15646, 15656], [15657, 15659], [15660, 15665], [15666, 15673], [15674, 15681], [15682, 15687], [15688, 15690], [15691, 15694], [15695, 15701], [15702, 15708], [15709, 15714], [15715, 15722], [15723, 15725], [15726, 15732], [15733, 15737], [15738, 15745], [15746, 15748], [15749, 15756], [15757, 15760], [15761, 15765], [15766, 15769], [15770, 15774], [15775, 15779], [15780, 15786], [15787, 15795], [15796, 15805], [15806, 15812], [15813, 15815], [15816, 15819], [15820, 15826], [15827, 15833], [15834, 15836], [15837, 15844], [15845, 15849], [15850, 15852], [15853, 15859], [15860, 15866], [15867, 15876], [15877, 15889], [15890, 15894], [15895, 15902], [15903, 15908], [15909, 15914], [15915, 15921], [15922, 15928], [15929, 15938], [15939, 15941], [15942, 15947], [15948, 15954], [15955, 15961], [15962, 15971], [15972, 15974], [15975, 15978], [15979, 15985], [15986, 15992], [15993, 16002], [16003, 16005], [16006, 16011], [16012, 16021], [16022, 16024], [16025, 16028], [16029, 16035], [16036, 16042], [16043, 16047], [16048, 16050], [16051, 16057], [16058, 16064], [16065, 16073], [16074, 16078], [16079, 16087], [16088, 16092], [16093, 16101], [16102, 16117], [16118, 16120], [16121, 16127], [16128, 16134], [16135, 16141], [16142, 16152], [16153, 16155], [16156, 16161], [16162, 16169], [16170, 16179], [16180, 16182], [16183, 16186], [16187, 16193], [16194, 16200]]}) 
answer: set([u'attend'])
candidate Sentence: (0.21520054340362549, {u'tokens': [u'As', u'a', u'result', u',', u'he', u'was', u'forced', u'to', u'sell', u'off', u'his', u'Highland', u'Plantation', u'-LRB-', u'now', u'called', u'Ash', u'Lawn-Highland', u';', u'it', u'is', u'owned', u'by', u'his', u'alma', u'mater', u',', u'the', u'College', u'of', u'William', u'and', u'Mary', u',', u'which', u'has', u'opened', u'it', u'to', u'the', u'public', u'-RRB-', u'.'], u'lemmas': [u'as', u'a', u'result', u',', u'he', u'be', u'force', u'to', u'sell', u'off', u'he', u'Highland', u'Plantation', u'-lrb-', u'now', u'call', u'Ash', u'Lawn-Highland', u';', u'it', u'be', u'own', u'by', u'he', u'alma', u'mater', u',', u'the', u'College', u'of', u'William', u'and', u'Mary', u',', u'which', u'have', u'open', u'it', u'to', u'the', u'public', u'-rrb-', u'.'], u'pos': [u'IN', u'DT', u'NN', u',', u'PRP', u'VBD', u'VBN', u'TO', u'VB', u'RP', u'PRP$', u'NNP', u'NNP', u'-LRB-', u'RB', u'VBN', u'NNP', u'NNP', u':', u'PRP', u'VBZ', u'VBN', u'IN', u'PRP$', u'JJ', u'NN', u',', u'DT', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u',', u'WDT', u'VBZ', u'VBN', u'PRP', u'TO', u'DT', u'NN', u'-RRB-', u'.'], u'char_offsets': [[7244, 7246], [7247, 7248], [7249, 7255], [7255, 7256], [7257, 7259], [7260, 7263], [7264, 7270], [7271, 7273], [7274, 7278], [7279, 7282], [7283, 7286], [7287, 7295], [7296, 7306], [7307, 7308], [7308, 7311], [7312, 7318], [7319, 7322], [7323, 7336], [7336, 7337], [7338, 7340], [7341, 7343], [7344, 7349], [7350, 7352], [7353, 7356], [7357, 7361], [7362, 7367], [7367, 7368], [7369, 7372], [7373, 7380], [7381, 7383], [7384, 7391], [7392, 7395], [7396, 7400], [7400, 7401], [7402, 7407], [7408, 7411], [7412, 7418], [7419, 7421], [7422, 7424], [7425, 7428], [7429, 7435], [7435, 7436], [7436, 7437]]}) 
answer: set([u'attend'])
candidate Sentence: (0.16044172644615173, {u'tokens': [u'After', u'graduating', u'from', u'William', u'and', u'Mary', u'in', u'1776', u',', u'Monroe', u'fought', u'in', u'the', u'Continental', u'Army', u',', u'serving', u'with', u'distinction', u'at', u'the', u'Battle', u'of', u'Trenton', u',', u'where', u'he', u'was', u'shot', u'in', u'his', u'left', u'shoulder', u'.'], u'lemmas': [u'after', u'graduate', u'from', u'William', u'and', u'Mary', u'in', u'1776', u',', u'Monroe', u'fight', u'in', u'the', u'Continental', u'Army', u',', u'serve', u'with', u'distinction', u'at', u'the', u'battle', u'of', u'Trenton', u',', u'where', u'he', u'be', u'shoot', u'in', u'he', u'left', u'shoulder', u'.'], u'pos': [u'IN', u'VBG', u'IN', u'NNP', u'CC', u'NNP', u'IN', u'CD', u',', u'NNP', u'VBD', u'IN', u'DT', u'NNP', u'NNP', u',', u'VBG', u'IN', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u',', u'WRB', u'PRP', u'VBD', u'VBN', u'IN', u'PRP$', u'JJ', u'NN', u'.'], u'char_offsets': [[729, 734], [735, 745], [746, 750], [751, 758], [759, 762], [763, 767], [768, 770], [771, 775], [775, 776], [777, 783], [784, 790], [791, 793], [794, 797], [798, 809], [810, 814], [814, 815], [816, 823], [824, 828], [829, 840], [841, 843], [844, 847], [848, 854], [855, 857], [858, 865], [865, 866], [867, 872], [873, 875], [876, 879], [880, 884], [885, 887], [888, 891], [892, 896], [897, 905], [905, 906]]}) 
answer: set([u'colleg', u'attend'])
candidate Sentence: (0.13431006669998169, {u'tokens': [u'Monroe', u'was', u'raised', u'in', u'a', u'family', u'that', u'belonged', u'to', u'the', u'Church', u'of', u'England', u'when', u'it', u'was', u'the', u'state', u'church', u'in', u'Virginia', u',', u'and', u'as', u'an', u'adult', u'frequently', u'attended', u'Episcopalian', u'churches', u',', u'though', u'there', u'is', u'no', u'record', u'he', u'ever', u'took', u'communion', u'.'], u'lemmas': [u'Monroe', u'be', u'raise', u'in', u'a', u'family', u'that', u'belong', u'to', u'the', u'Church', u'of', u'England', u'when', u'it', u'be', u'the', u'state', u'church', u'in', u'Virginia', u',', u'and', u'as', u'a', u'adult', u'frequently', u'attend', u'episcopalian', u'church', u',', u'though', u'there', u'be', u'no', u'record', u'he', u'ever', u'take', u'communion', u'.'], u'pos': [u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'NN', u'WDT', u'VBD', u'TO', u'DT', u'NNP', u'IN', u'NNP', u'WRB', u'PRP', u'VBD', u'DT', u'NN', u'NN', u'IN', u'NNP', u',', u'CC', u'IN', u'DT', u'JJ', u'RB', u'VBD', u'JJ', u'NNS', u',', u'IN', u'EX', u'VBZ', u'DT', u'NN', u'PRP', u'RB', u'VBD', u'NN', u'.'], u'char_offsets': [[8863, 8869], [8870, 8873], [8874, 8880], [8881, 8883], [8884, 8885], [8886, 8892], [8893, 8897], [8898, 8906], [8907, 8909], [8910, 8913], [8914, 8920], [8921, 8923], [8924, 8931], [8932, 8936], [8937, 8939], [8940, 8943], [8944, 8947], [8948, 8953], [8954, 8960], [8961, 8963], [8964, 8972], [8972, 8973], [8974, 8977], [8978, 8980], [8981, 8983], [8984, 8989], [8990, 9000], [9001, 9009], [9010, 9022], [9023, 9031], [9031, 9032], [9033, 9039], [9040, 9045], [9046, 9048], [9049, 9051], [9052, 9058], [9059, 9061], [9062, 9066], [9067, 9071], [9072, 9081], [9081, 9082]]}) 
answer: set([u'william', u'colleg', u'mari'])
candidate Sentence: (0.10391971468925476, {u'tokens': [u'The', u'Political', u'Writings', u'of', u'James', u'Monroe', u'.'], u'lemmas': [u'the', u'political', u'writings', u'of', u'James', u'Monroe', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[14759, 14762], [14763, 14772], [14773, 14781], [14782, 14784], [14785, 14790], [14791, 14797], [14797, 14798]]}) 
answer: set([u'william', u'colleg', u'mari', u'attend'])
candidate Sentence: (0.093194045126438141, {u'tokens': [u'Nor', u'did', u'his', u'friends', u',', u'family', u'or', u'associates', u'write', u'about', u'his', u'beliefs', u'.'], u'lemmas': [u'nor', u'do', u'he', u'friend', u',', u'family', u'or', u'associate', u'write', u'about', u'he', u'belief', u'.'], u'pos': [u'CC', u'VBD', u'PRP$', u'NNS', u',', u'NN', u'CC', u'NNS', u'VBP', u'IN', u'PRP$', u'NNS', u'.'], u'char_offsets': [[8674, 8677], [8678, 8681], [8682, 8685], [8686, 8693], [8693, 8694], [8695, 8701], [8702, 8704], [8705, 8715], [8716, 8721], [8722, 8727], [8728, 8731], [8732, 8739], [8739, 8740]]}) 
answer: set([u'william', u'colleg', u'mari', u'attend'])
candidate Sentence: (0.086432985961437225, {u'tokens': [u'Letters', u'that', u'do', u'survive', u',', u'such', u'as', u'ones', u'written', u'on', u'the', u'occasion', u'of', u'the', u'death', u'of', u'his', u'son', u',', u'contain', u'no', u'discussion', u'of', u'religion', u'.'], u'lemmas': [u'letter', u'that', u'do', u'survive', u',', u'such', u'as', u'one', u'write', u'on', u'the', u'occasion', u'of', u'the', u'death', u'of', u'he', u'son', u',', u'contain', u'no', u'discussion', u'of', u'religion', u'.'], u'pos': [u'NNS', u'WDT', u'VBP', u'VB', u',', u'JJ', u'IN', u'NNS', u'VBN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u',', u'VBP', u'DT', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[8741, 8748], [8749, 8753], [8754, 8756], [8757, 8764], [8764, 8765], [8766, 8770], [8771, 8773], [8774, 8778], [8779, 8786], [8787, 8789], [8790, 8793], [8794, 8802], [8803, 8805], [8806, 8809], [8810, 8815], [8816, 8818], [8819, 8822], [8823, 8826], [8826, 8827], [8828, 8835], [8836, 8838], [8839, 8849], [8850, 8852], [8853, 8861], [8861, 8862]]}) 
answer: set([u'william', u'colleg', u'mari', u'attend'])
candidate Sentence: (0.086024314165115356, {u'tokens': [u'He', u'has', u'been', u'classified', u'by', u'some', u'historians', u'as', u'a', u'Deist', u',', u'and', u'he', u'did', u'use', u'deistic', u'language', u'to', u'refer', u'to', u'God', u'.'], u'lemmas': [u'he', u'have', u'be', u'classify', u'by', u'some', u'historian', u'as', u'a', u'Deist', u',', u'and', u'he', u'do', u'use', u'deistic', u'language', u'to', u'refer', u'to', u'God', u'.'], u'pos': [u'PRP', u'VBZ', u'VBN', u'VBN', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NNP', u',', u'CC', u'PRP', u'VBD', u'VB', u'JJ', u'NN', u'TO', u'VB', u'TO', u'NNP', u'.'], u'char_offsets': [[9083, 9085], [9086, 9089], [9090, 9094], [9095, 9105], [9106, 9108], [9109, 9113], [9114, 9124], [9125, 9127], [9128, 9129], [9130, 9135], [9135, 9136], [9137, 9140], [9141, 9143], [9144, 9147], [9148, 9151], [9152, 9159], [9160, 9168], [9169, 9171], [9172, 9177], [9178, 9180], [9181, 9184], [9184, 9185]]}) 
answer: set([u'william', u'colleg', u'mari', u'attend'])
candidate Sentence: (0.081719771027565002, {u'tokens': [u'He', u'and', u'Secretary', u'of', u'State', u'John', u'Quincy', u'Adams', u'wished', u'to', u'avoid', u'trouble', u'with', u'Spain', u'until', u'it', u'had', u'ceded', u'the', u'Floridas', u'to', u'the', u'U.S.', u',', u'which', u'was', u'done', u'in', u'1821', u'.'], u'lemmas': [u'he', u'and', u'Secretary', u'of', u'State', u'John', u'Quincy', u'Adams', u'wish', u'to', u'avoid', u'trouble', u'with', u'Spain', u'until', u'it', u'have', u'cede', u'the', u'Floridas', u'to', u'the', u'U.S.', u',', u'which', u'be', u'do', u'in', u'1821', u'.'], u'pos': [u'PRP', u'CC', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'VBD', u'TO', u'VB', u'NN', u'IN', u'NNP', u'IN', u'PRP', u'VBD', u'VBN', u'DT', u'NNPS', u'TO', u'DT', u'NNP', u',', u'WDT', u'VBD', u'VBN', u'IN', u'CD', u'.'], u'char_offsets': [[5075, 5077], [5078, 5081], [5082, 5091], [5092, 5094], [5095, 5100], [5101, 5105], [5106, 5112], [5113, 5118], [5119, 5125], [5126, 5128], [5129, 5134], [5135, 5142], [5143, 5147], [5148, 5153], [5154, 5159], [5160, 5162], [5163, 5166], [5167, 5172], [5173, 5176], [5177, 5185], [5186, 5188], [5189, 5192], [5193, 5197], [5197, 5198], [5199, 5204], [5205, 5208], [5209, 5213], [5214, 5216], [5217, 5221], [5221, 5222]]}) 
answer: set([u'william', u'colleg', u'mari', u'attend'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'james', u'monroe', u'.'])

Did James Monroe attend the College of William and Mary?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = James_Monroe
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a2.txt

No
_____________________________ test_yesno[param179] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e3b48>, (<src.tfidf.TF_IDF object at 0x11240dc10>, set(['.', 'james', 'monroe'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156e3b48>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.28656372427940369, {u'tokens': [u'Born', u'in', u'Westmoreland', u'County', u',', u'Virginia', u',', u'Monroe', u'went', u'to', u'school', u'at', u'Campbelltown', u'Academy', u'and', u'then', u'the', u'College', u'of', u'William', u'and', u'Mary', u',', u'both', u'in', u'Virginia', u'.'], u'lemmas': [u'bear', u'in', u'Westmoreland', u'County', u',', u'Virginia', u',', u'Monroe', u'go', u'to', u'school', u'at', u'Campbelltown', u'Academy', u'and', u'then', u'the', u'College', u'of', u'William', u'and', u'Mary', u',', u'both', u'in', u'Virginia', u'.'], u'pos': [u'VBN', u'IN', u'NNP', u'NNP', u',', u'NNP', u',', u'NNP', u'VBD', u'TO', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'RB', u'DT', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u',', u'DT', u'IN', u'NNP', u'.'], u'char_offsets': [[583, 587], [588, 590], [591, 603], [604, 610], [610, 611], [612, 620], [620, 621], [622, 628], [629, 633], [634, 636], [637, 643], [644, 646], [647, 659], [660, 667], [668, 671], [672, 676], [677, 680], [681, 688], [689, 691], [692, 699], [700, 703], [704, 708], [708, 709], [710, 714], [715, 717], [718, 726], [726, 727]]}) 
answer: set([u'attend'])
candidate Sentence: (0.27138882875442505, {u'tokens': [u'-LRB-', u'1898-1903', u'-RRB-', u'online', u'edition', u'*', u'Extensive', u'essay', u'on', u'James', u'Monroe', u'and', u'shorter', u'essays', u'on', u'each', u'member', u'of', u'his', u'cabinet', u'and', u'First', u'Lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'James', u'Monroe', u'Biography', u'and', u'Fact', u'File', u'*', u'The', u'Presidential', u'Home', u'of', u'James', u'Monroe', u'-LRB-', u'College', u'of', u'William', u'and', u'Mary', u'-RRB-', u'*', u'James', u'Monroe', u'Memorial', u'Foundation', u'*', u'James', u'Monroe', u'Scholarship', u'Award', u'*', u'The', u'Papers', u'of', u'James', u'Monroe', u'at', u'the', u'Avalon', u'Project', u'*', u'Monroe', u'Doctrine', u'and', u'related', u'resources', u'at', u'the', u'Library', u'of', u'Congress', u'*', u'James', u'Monroe', u"'s", u'Health', u'and', u'Medical', u'History', u'*', u'James', u'Monroe', u'Birthplace', u'Commission', u'*', u'The', u'Religion', u'of', u'James', u'Monroe', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'President', u'of', u'the', u'United', u'States', u'College', u'of', u'William', u'and', u'Mary', u'U.S.', u'Ambassador', u'to', u'Great', u'Britain', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u'Brown', u'College', u'at', u'Monroe', u'Hill', u'College', u'of', u'William', u'and', u'Mary', u'New', u'York', u'City', u'Marble', u'Cemetery', u'Episcopal', u'Church', u'in', u'the', u'United', u'States', u'of', u'America', u'List', u'of', u'United', u'States', u'political', u'appointments', u'that', u'crossed', u'party', u'lines', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'United', u'States', u'Secretary', u'of', u'State', u'President', u'of', u'the', u'United', u'States', u'List', u'of', u'United', u'States', u'Senators', u'from', u'Virginia', u'U.S.', u'Minister', u'Plenipotentiary', u'to', u'France', u'United', u'States', u'Ambassador', u'to', u'Great', u'Britain', u'President', u'of', u'the', u'United', u'States'], u'lemmas': [u'-lrb-', u'1898-1903', u'-rrb-', u'online', u'edition', u'*', u'extensive', u'essay', u'on', u'James', u'Monroe', u'and', u'shorter', u'essay', u'on', u'each', u'member', u'of', u'he', u'cabinet', u'and', u'first', u'lady', u'from', u'the', u'Miller', u'Center', u'of', u'Public', u'Affairs', u'*', u'James', u'Monroe', u'biography', u'and', u'fact', u'file', u'*', u'the', u'Presidential', u'Home', u'of', u'James', u'Monroe', u'-lrb-', u'College', u'of', u'William', u'and', u'Mary', u'-rrb-', u'*', u'James', u'Monroe', u'Memorial', u'Foundation', u'*', u'James', u'Monroe', u'Scholarship', u'award', u'*', u'the', u'Papers', u'of', u'James', u'Monroe', u'at', u'the', u'Avalon', u'Project', u'*', u'Monroe', u'Doctrine', u'and', u'related', u'resource', u'at', u'the', u'Library', u'of', u'Congress', u'*', u'James', u'Monroe', u"'s", u'Health', u'and', u'Medical', u'history', u'*', u'James', u'Monroe', u'Birthplace', u'Commission', u'*', u'the', u'Religion', u'of', u'James', u'Monroe', u'President', u'of', u'the', u'United', u'States', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'President', u'of', u'the', u'United', u'States', u'College', u'of', u'William', u'and', u'Mary', u'U.S.', u'Ambassador', u'to', u'Great', u'Britain', u'Supreme', u'Court', u'of', u'the', u'United', u'States', u'Brown', u'College', u'at', u'Monroe', u'Hill', u'College', u'of', u'William', u'and', u'Mary', u'New', u'York', u'City', u'Marble', u'Cemetery', u'Episcopal', u'Church', u'in', u'the', u'United', u'States', u'of', u'America', u'list', u'of', u'United', u'States', u'political', u'appointment', u'that', u'cross', u'party', u'line', u'United', u'States', u'Secretary', u'of', u'State', u'United', u'States', u'Secretary', u'of', u'War', u'United', u'States', u'Secretary', u'of', u'State', u'President', u'of', u'the', u'United', u'States', u'list', u'of', u'United', u'States', u'Senators', u'from', u'Virginia', u'U.S.', u'Minister', u'Plenipotentiary', u'to', u'France', u'United', u'States', u'Ambassador', u'to', u'Great', u'Britain', u'President', u'of', u'the', u'United', u'States'], u'pos': [u'-LRB-', u'CD', u'-RRB-', u'JJ', u'NN', u'SYM', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'CC', u'JJR', u'NNS', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'CC', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNPS', u'SYM', u'NNP', u'NNP', u'NN', u'CC', u'NN', u'VBP', u'SYM', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'-LRB-', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'-RRB-', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'NN', u'SYM', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'CC', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'SYM', u'NNP', u'NNP', u'POS', u'NNP', u'CC', u'NNP', u'NN', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'SYM', u'DT', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'NNPS', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'TO', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'IN', u'NNP', u'NN', u'IN', u'NNP', u'NNPS', u'JJ', u'NNS', u'WDT', u'VBD', u'NN', u'NNS', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NN', u'IN', u'NNP', u'NNPS', u'NNPS', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'TO', u'NNP', u'NNP', u'NNPS', u'NNP', u'TO', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS'], u'char_offsets': [[14912, 14913], [14913, 14922], [14922, 14923], [14926, 14932], [14933, 14940], [14941, 14942], [14943, 14952], [14953, 14958], [14959, 14961], [14962, 14967], [14968, 14974], [14975, 14978], [14979, 14986], [14987, 14993], [14994, 14996], [14997, 15001], [15002, 15008], [15009, 15011], [15012, 15015], [15016, 15023], [15024, 15027], [15028, 15033], [15034, 15038], [15039, 15043], [15044, 15047], [15048, 15054], [15055, 15061], [15062, 15064], [15065, 15071], [15072, 15079], [15080, 15081], [15082, 15087], [15088, 15094], [15095, 15104], [15105, 15108], [15109, 15113], [15114, 15118], [15119, 15120], [15121, 15124], [15125, 15137], [15138, 15142], [15143, 15145], [15146, 15151], [15152, 15158], [15159, 15160], [15160, 15167], [15168, 15170], [15171, 15178], [15179, 15182], [15183, 15187], [15187, 15188], [15189, 15190], [15191, 15196], [15197, 15203], [15204, 15212], [15213, 15223], [15224, 15225], [15226, 15231], [15232, 15238], [15239, 15250], [15251, 15256], [15257, 15258], [15259, 15262], [15263, 15269], [15270, 15272], [15273, 15278], [15279, 15285], [15286, 15288], [15289, 15292], [15293, 15299], [15300, 15307], [15308, 15309], [15310, 15316], [15317, 15325], [15326, 15329], [15330, 15337], [15338, 15347], [15348, 15350], [15351, 15354], [15355, 15362], [15363, 15365], [15366, 15374], [15375, 15376], [15377, 15382], [15383, 15389], [15389, 15391], [15392, 15398], [15399, 15402], [15403, 15410], [15411, 15418], [15419, 15420], [15421, 15426], [15427, 15433], [15434, 15444], [15445, 15455], [15456, 15457], [15458, 15461], [15462, 15470], [15471, 15473], [15474, 15479], [15480, 15486], [15487, 15496], [15497, 15499], [15500, 15503], [15504, 15510], [15511, 15517], [15518, 15524], [15525, 15531], [15532, 15541], [15542, 15544], [15545, 15550], [15551, 15557], [15558, 15564], [15565, 15574], [15575, 15577], [15578, 15581], [15582, 15591], [15592, 15594], [15595, 15598], [15599, 15605], [15606, 15612], [15613, 15620], [15621, 15623], [15624, 15631], [15632, 15635], [15636, 15640], [15641, 15645], [15646, 15656], [15657, 15659], [15660, 15665], [15666, 15673], [15674, 15681], [15682, 15687], [15688, 15690], [15691, 15694], [15695, 15701], [15702, 15708], [15709, 15714], [15715, 15722], [15723, 15725], [15726, 15732], [15733, 15737], [15738, 15745], [15746, 15748], [15749, 15756], [15757, 15760], [15761, 15765], [15766, 15769], [15770, 15774], [15775, 15779], [15780, 15786], [15787, 15795], [15796, 15805], [15806, 15812], [15813, 15815], [15816, 15819], [15820, 15826], [15827, 15833], [15834, 15836], [15837, 15844], [15845, 15849], [15850, 15852], [15853, 15859], [15860, 15866], [15867, 15876], [15877, 15889], [15890, 15894], [15895, 15902], [15903, 15908], [15909, 15914], [15915, 15921], [15922, 15928], [15929, 15938], [15939, 15941], [15942, 15947], [15948, 15954], [15955, 15961], [15962, 15971], [15972, 15974], [15975, 15978], [15979, 15985], [15986, 15992], [15993, 16002], [16003, 16005], [16006, 16011], [16012, 16021], [16022, 16024], [16025, 16028], [16029, 16035], [16036, 16042], [16043, 16047], [16048, 16050], [16051, 16057], [16058, 16064], [16065, 16073], [16074, 16078], [16079, 16087], [16088, 16092], [16093, 16101], [16102, 16117], [16118, 16120], [16121, 16127], [16128, 16134], [16135, 16141], [16142, 16152], [16153, 16155], [16156, 16161], [16162, 16169], [16170, 16179], [16180, 16182], [16183, 16186], [16187, 16193], [16194, 16200]]}) 
answer: set([u'attend'])
candidate Sentence: (0.21520054340362549, {u'tokens': [u'As', u'a', u'result', u',', u'he', u'was', u'forced', u'to', u'sell', u'off', u'his', u'Highland', u'Plantation', u'-LRB-', u'now', u'called', u'Ash', u'Lawn-Highland', u';', u'it', u'is', u'owned', u'by', u'his', u'alma', u'mater', u',', u'the', u'College', u'of', u'William', u'and', u'Mary', u',', u'which', u'has', u'opened', u'it', u'to', u'the', u'public', u'-RRB-', u'.'], u'lemmas': [u'as', u'a', u'result', u',', u'he', u'be', u'force', u'to', u'sell', u'off', u'he', u'Highland', u'Plantation', u'-lrb-', u'now', u'call', u'Ash', u'Lawn-Highland', u';', u'it', u'be', u'own', u'by', u'he', u'alma', u'mater', u',', u'the', u'College', u'of', u'William', u'and', u'Mary', u',', u'which', u'have', u'open', u'it', u'to', u'the', u'public', u'-rrb-', u'.'], u'pos': [u'IN', u'DT', u'NN', u',', u'PRP', u'VBD', u'VBN', u'TO', u'VB', u'RP', u'PRP$', u'NNP', u'NNP', u'-LRB-', u'RB', u'VBN', u'NNP', u'NNP', u':', u'PRP', u'VBZ', u'VBN', u'IN', u'PRP$', u'JJ', u'NN', u',', u'DT', u'NNP', u'IN', u'NNP', u'CC', u'NNP', u',', u'WDT', u'VBZ', u'VBN', u'PRP', u'TO', u'DT', u'NN', u'-RRB-', u'.'], u'char_offsets': [[7244, 7246], [7247, 7248], [7249, 7255], [7255, 7256], [7257, 7259], [7260, 7263], [7264, 7270], [7271, 7273], [7274, 7278], [7279, 7282], [7283, 7286], [7287, 7295], [7296, 7306], [7307, 7308], [7308, 7311], [7312, 7318], [7319, 7322], [7323, 7336], [7336, 7337], [7338, 7340], [7341, 7343], [7344, 7349], [7350, 7352], [7353, 7356], [7357, 7361], [7362, 7367], [7367, 7368], [7369, 7372], [7373, 7380], [7381, 7383], [7384, 7391], [7392, 7395], [7396, 7400], [7400, 7401], [7402, 7407], [7408, 7411], [7412, 7418], [7419, 7421], [7422, 7424], [7425, 7428], [7429, 7435], [7435, 7436], [7436, 7437]]}) 
answer: set([u'attend'])
candidate Sentence: (0.16044172644615173, {u'tokens': [u'After', u'graduating', u'from', u'William', u'and', u'Mary', u'in', u'1776', u',', u'Monroe', u'fought', u'in', u'the', u'Continental', u'Army', u',', u'serving', u'with', u'distinction', u'at', u'the', u'Battle', u'of', u'Trenton', u',', u'where', u'he', u'was', u'shot', u'in', u'his', u'left', u'shoulder', u'.'], u'lemmas': [u'after', u'graduate', u'from', u'William', u'and', u'Mary', u'in', u'1776', u',', u'Monroe', u'fight', u'in', u'the', u'Continental', u'Army', u',', u'serve', u'with', u'distinction', u'at', u'the', u'battle', u'of', u'Trenton', u',', u'where', u'he', u'be', u'shoot', u'in', u'he', u'left', u'shoulder', u'.'], u'pos': [u'IN', u'VBG', u'IN', u'NNP', u'CC', u'NNP', u'IN', u'CD', u',', u'NNP', u'VBD', u'IN', u'DT', u'NNP', u'NNP', u',', u'VBG', u'IN', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u',', u'WRB', u'PRP', u'VBD', u'VBN', u'IN', u'PRP$', u'JJ', u'NN', u'.'], u'char_offsets': [[729, 734], [735, 745], [746, 750], [751, 758], [759, 762], [763, 767], [768, 770], [771, 775], [775, 776], [777, 783], [784, 790], [791, 793], [794, 797], [798, 809], [810, 814], [814, 815], [816, 823], [824, 828], [829, 840], [841, 843], [844, 847], [848, 854], [855, 857], [858, 865], [865, 866], [867, 872], [873, 875], [876, 879], [880, 884], [885, 887], [888, 891], [892, 896], [897, 905], [905, 906]]}) 
answer: set([u'colleg', u'attend'])
candidate Sentence: (0.13431006669998169, {u'tokens': [u'Monroe', u'was', u'raised', u'in', u'a', u'family', u'that', u'belonged', u'to', u'the', u'Church', u'of', u'England', u'when', u'it', u'was', u'the', u'state', u'church', u'in', u'Virginia', u',', u'and', u'as', u'an', u'adult', u'frequently', u'attended', u'Episcopalian', u'churches', u',', u'though', u'there', u'is', u'no', u'record', u'he', u'ever', u'took', u'communion', u'.'], u'lemmas': [u'Monroe', u'be', u'raise', u'in', u'a', u'family', u'that', u'belong', u'to', u'the', u'Church', u'of', u'England', u'when', u'it', u'be', u'the', u'state', u'church', u'in', u'Virginia', u',', u'and', u'as', u'a', u'adult', u'frequently', u'attend', u'episcopalian', u'church', u',', u'though', u'there', u'be', u'no', u'record', u'he', u'ever', u'take', u'communion', u'.'], u'pos': [u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'NN', u'WDT', u'VBD', u'TO', u'DT', u'NNP', u'IN', u'NNP', u'WRB', u'PRP', u'VBD', u'DT', u'NN', u'NN', u'IN', u'NNP', u',', u'CC', u'IN', u'DT', u'JJ', u'RB', u'VBD', u'JJ', u'NNS', u',', u'IN', u'EX', u'VBZ', u'DT', u'NN', u'PRP', u'RB', u'VBD', u'NN', u'.'], u'char_offsets': [[8863, 8869], [8870, 8873], [8874, 8880], [8881, 8883], [8884, 8885], [8886, 8892], [8893, 8897], [8898, 8906], [8907, 8909], [8910, 8913], [8914, 8920], [8921, 8923], [8924, 8931], [8932, 8936], [8937, 8939], [8940, 8943], [8944, 8947], [8948, 8953], [8954, 8960], [8961, 8963], [8964, 8972], [8972, 8973], [8974, 8977], [8978, 8980], [8981, 8983], [8984, 8989], [8990, 9000], [9001, 9009], [9010, 9022], [9023, 9031], [9031, 9032], [9033, 9039], [9040, 9045], [9046, 9048], [9049, 9051], [9052, 9058], [9059, 9061], [9062, 9066], [9067, 9071], [9072, 9081], [9081, 9082]]}) 
answer: set([u'william', u'colleg', u'mari'])
candidate Sentence: (0.10391971468925476, {u'tokens': [u'The', u'Political', u'Writings', u'of', u'James', u'Monroe', u'.'], u'lemmas': [u'the', u'political', u'writings', u'of', u'James', u'Monroe', u'.'], u'pos': [u'DT', u'JJ', u'NNS', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[14759, 14762], [14763, 14772], [14773, 14781], [14782, 14784], [14785, 14790], [14791, 14797], [14797, 14798]]}) 
answer: set([u'william', u'colleg', u'mari', u'attend'])
candidate Sentence: (0.093194045126438141, {u'tokens': [u'Nor', u'did', u'his', u'friends', u',', u'family', u'or', u'associates', u'write', u'about', u'his', u'beliefs', u'.'], u'lemmas': [u'nor', u'do', u'he', u'friend', u',', u'family', u'or', u'associate', u'write', u'about', u'he', u'belief', u'.'], u'pos': [u'CC', u'VBD', u'PRP$', u'NNS', u',', u'NN', u'CC', u'NNS', u'VBP', u'IN', u'PRP$', u'NNS', u'.'], u'char_offsets': [[8674, 8677], [8678, 8681], [8682, 8685], [8686, 8693], [8693, 8694], [8695, 8701], [8702, 8704], [8705, 8715], [8716, 8721], [8722, 8727], [8728, 8731], [8732, 8739], [8739, 8740]]}) 
answer: set([u'william', u'colleg', u'mari', u'attend'])
candidate Sentence: (0.086432985961437225, {u'tokens': [u'Letters', u'that', u'do', u'survive', u',', u'such', u'as', u'ones', u'written', u'on', u'the', u'occasion', u'of', u'the', u'death', u'of', u'his', u'son', u',', u'contain', u'no', u'discussion', u'of', u'religion', u'.'], u'lemmas': [u'letter', u'that', u'do', u'survive', u',', u'such', u'as', u'one', u'write', u'on', u'the', u'occasion', u'of', u'the', u'death', u'of', u'he', u'son', u',', u'contain', u'no', u'discussion', u'of', u'religion', u'.'], u'pos': [u'NNS', u'WDT', u'VBP', u'VB', u',', u'JJ', u'IN', u'NNS', u'VBN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u',', u'VBP', u'DT', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[8741, 8748], [8749, 8753], [8754, 8756], [8757, 8764], [8764, 8765], [8766, 8770], [8771, 8773], [8774, 8778], [8779, 8786], [8787, 8789], [8790, 8793], [8794, 8802], [8803, 8805], [8806, 8809], [8810, 8815], [8816, 8818], [8819, 8822], [8823, 8826], [8826, 8827], [8828, 8835], [8836, 8838], [8839, 8849], [8850, 8852], [8853, 8861], [8861, 8862]]}) 
answer: set([u'william', u'colleg', u'mari', u'attend'])
candidate Sentence: (0.086024314165115356, {u'tokens': [u'He', u'has', u'been', u'classified', u'by', u'some', u'historians', u'as', u'a', u'Deist', u',', u'and', u'he', u'did', u'use', u'deistic', u'language', u'to', u'refer', u'to', u'God', u'.'], u'lemmas': [u'he', u'have', u'be', u'classify', u'by', u'some', u'historian', u'as', u'a', u'Deist', u',', u'and', u'he', u'do', u'use', u'deistic', u'language', u'to', u'refer', u'to', u'God', u'.'], u'pos': [u'PRP', u'VBZ', u'VBN', u'VBN', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NNP', u',', u'CC', u'PRP', u'VBD', u'VB', u'JJ', u'NN', u'TO', u'VB', u'TO', u'NNP', u'.'], u'char_offsets': [[9083, 9085], [9086, 9089], [9090, 9094], [9095, 9105], [9106, 9108], [9109, 9113], [9114, 9124], [9125, 9127], [9128, 9129], [9130, 9135], [9135, 9136], [9137, 9140], [9141, 9143], [9144, 9147], [9148, 9151], [9152, 9159], [9160, 9168], [9169, 9171], [9172, 9177], [9178, 9180], [9181, 9184], [9184, 9185]]}) 
answer: set([u'william', u'colleg', u'mari', u'attend'])
candidate Sentence: (0.081719771027565002, {u'tokens': [u'He', u'and', u'Secretary', u'of', u'State', u'John', u'Quincy', u'Adams', u'wished', u'to', u'avoid', u'trouble', u'with', u'Spain', u'until', u'it', u'had', u'ceded', u'the', u'Floridas', u'to', u'the', u'U.S.', u',', u'which', u'was', u'done', u'in', u'1821', u'.'], u'lemmas': [u'he', u'and', u'Secretary', u'of', u'State', u'John', u'Quincy', u'Adams', u'wish', u'to', u'avoid', u'trouble', u'with', u'Spain', u'until', u'it', u'have', u'cede', u'the', u'Floridas', u'to', u'the', u'U.S.', u',', u'which', u'be', u'do', u'in', u'1821', u'.'], u'pos': [u'PRP', u'CC', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'VBD', u'TO', u'VB', u'NN', u'IN', u'NNP', u'IN', u'PRP', u'VBD', u'VBN', u'DT', u'NNPS', u'TO', u'DT', u'NNP', u',', u'WDT', u'VBD', u'VBN', u'IN', u'CD', u'.'], u'char_offsets': [[5075, 5077], [5078, 5081], [5082, 5091], [5092, 5094], [5095, 5100], [5101, 5105], [5106, 5112], [5113, 5118], [5119, 5125], [5126, 5128], [5129, 5134], [5135, 5142], [5143, 5147], [5148, 5153], [5154, 5159], [5160, 5162], [5163, 5166], [5167, 5172], [5173, 5176], [5177, 5185], [5186, 5188], [5189, 5192], [5193, 5197], [5197, 5198], [5199, 5204], [5205, 5208], [5209, 5213], [5214, 5216], [5217, 5221], [5221, 5222]]}) 
answer: set([u'william', u'colleg', u'mari', u'attend'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'james', u'monroe', u'.'])

Did James Monroe attend the College of William and Mary?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = James_Monroe
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a2.txt

No
_____________________________ test_yesno[param197] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e8098>, (<src.tfidf.TF_IDF object at 0x10ff474d0>, set(['.', 'kangaroo'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('no') == True
E            +  where 'no' = <src.question_processing.Question_parser instance at 0x1156e8098>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.3361610472202301, {u'tokens': [u'Goannas', u'and', u'other', u'carnivorous', u'reptiles', u'also', u'pose', u'a', u'danger', u'to', u'smaller', u'kangaroo', u'species', u'when', u'other', u'food', u'sources', u'are', u'lacking', u'.'], u'lemmas': [u'Goannas', u'and', u'other', u'carnivorous', u'reptile', u'also', u'pose', u'a', u'danger', u'to', u'smaller', u'kangaroo', u'species', u'when', u'other', u'food', u'source', u'be', u'lack', u'.'], u'pos': [u'NNP', u'CC', u'JJ', u'JJ', u'NNS', u'RB', u'VBP', u'DT', u'NN', u'TO', u'JJR', u'NN', u'NNS', u'WRB', u'JJ', u'NN', u'NNS', u'VBP', u'VBG', u'.'], u'char_offsets': [[7381, 7388], [7389, 7392], [7393, 7398], [7399, 7410], [7411, 7419], [7420, 7424], [7425, 7429], [7430, 7431], [7432, 7438], [7439, 7441], [7442, 7449], [7450, 7458], [7459, 7466], [7467, 7471], [7472, 7477], [7478, 7482], [7483, 7490], [7491, 7494], [7495, 7502], [7502, 7503]]}) 
answer: set([])
candidate Sentence: (0.12250503897666931, {u'tokens': [u'A', u'collision', u'with', u'a', u'vehicle', u'is', u'capable', u'of', u'killing', u'a', u'kangaroo', u'.'], u'lemmas': [u'a', u'collision', u'with', u'a', u'vehicle', u'be', u'capable', u'of', u'kill', u'a', u'kangaroo', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'JJ', u'IN', u'VBG', u'DT', u'NN', u'.'], u'char_offsets': [[14147, 14148], [14149, 14158], [14159, 14163], [14164, 14165], [14166, 14173], [14174, 14176], [14177, 14184], [14185, 14187], [14188, 14195], [14196, 14197], [14198, 14206], [14206, 14207]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.12207270413637161, {u'tokens': [u'A', u'kangaroo', u'crossing', u'a', u'highway', u'.'], u'lemmas': [u'a', u'kangaroo', u'cross', u'a', u'highway', u'.'], u'pos': [u'DT', u'NN', u'VBG', u'DT', u'NN', u'.'], u'char_offsets': [[14116, 14117], [14118, 14126], [14127, 14135], [14136, 14137], [14138, 14145], [14145, 14146]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.081699512898921967, {u'tokens': [u'A', u'``', u'kangaroo', u'crossing', u"''", u'sign', u'on', u'an', u'Australian', u'highway', u'.'], u'lemmas': [u'a', u'``', u'kangaroo', u'cross', u"''", u'sign', u'on', u'a', u'australian', u'highway', u'.'], u'pos': [u'DT', u'``', u'NN', u'VBG', u"''", u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[14063, 14064], [14065, 14066], [14066, 14074], [14075, 14083], [14083, 14084], [14085, 14089], [14090, 14092], [14093, 14095], [14096, 14106], [14107, 14114], [14114, 14115]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.067191585898399353, {u'tokens': [u'A', u'kangaroo', u'is', u'a', u'marsupial', u'from', u'the', u'family', u'Macropodidae', u'-LRB-', u'macropods', u',', u'meaning', u'`', u'large', u'foot', u"'", u'-RRB-', u'.'], u'lemmas': [u'a', u'kangaroo', u'be', u'a', u'marsupial', u'from', u'the', u'family', u'Macropodidae', u'-lrb-', u'macropod', u',', u'mean', u'`', u'large', u'foot', u"'", u'-rrb-', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NN', u'NNP', u'-LRB-', u'NNS', u',', u'VBG', u'``', u'JJ', u'NN', u"''", u'-RRB-', u'.'], u'char_offsets': [[48, 49], [50, 58], [59, 61], [62, 63], [64, 73], [74, 78], [79, 82], [83, 89], [90, 102], [103, 104], [104, 113], [113, 114], [115, 122], [123, 124], [124, 129], [130, 134], [134, 135], [135, 136], [136, 137]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.066336065530776978, {u'tokens': [u'Newborn', u'joey', u'sucking', u'on', u'a', u'teat', u'in', u'the', u'pouch', u'Kangaroos', u'have', u'developed', u'a', u'number', u'of', u'adaptations', u'to', u'a', u'dry', u',', u'infertile', u'continent', u'and', u'highly', u'variable', u'climate', u'.'], u'lemmas': [u'newborn', u'joey', u'suck', u'on', u'a', u'teat', u'in', u'the', u'pouch', u'kangaroo', u'have', u'develop', u'a', u'number', u'of', u'adaptation', u'to', u'a', u'dry', u',', u'infertile', u'continent', u'and', u'highly', u'variable', u'climate', u'.'], u'pos': [u'JJ', u'NN', u'VBG', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'NNS', u'VBP', u'VBN', u'DT', u'NN', u'IN', u'NNS', u'TO', u'DT', u'JJ', u',', u'JJ', u'NN', u'CC', u'RB', u'JJ', u'NN', u'.'], u'char_offsets': [[8057, 8064], [8065, 8069], [8070, 8077], [8078, 8080], [8081, 8082], [8083, 8087], [8088, 8090], [8091, 8094], [8095, 8100], [8101, 8110], [8111, 8115], [8116, 8125], [8126, 8127], [8128, 8134], [8135, 8137], [8138, 8149], [8150, 8152], [8153, 8154], [8155, 8158], [8158, 8159], [8160, 8169], [8170, 8179], [8180, 8183], [8184, 8190], [8191, 8199], [8200, 8207], [8207, 8208]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.065304331481456757, {u'tokens': [u'The', u'mere', u'barking', u'of', u'a', u'dog', u'can', u'set', u'a', u'full-grown', u'male', u'boomer', u'into', u'a', u'wild', u'frenzy', u'.'], u'lemmas': [u'the', u'mere', u'bark', u'of', u'a', u'dog', u'can', u'set', u'a', u'full-grown', u'male', u'boomer', u'into', u'a', u'wild', u'frenzy', u'.'], u'pos': [u'DT', u'JJ', u'VBG', u'IN', u'DT', u'NN', u'MD', u'VB', u'DT', u'JJ', u'NN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[7232, 7235], [7236, 7240], [7241, 7248], [7249, 7251], [7252, 7253], [7254, 7257], [7258, 7261], [7262, 7265], [7266, 7267], [7268, 7278], [7279, 7283], [7284, 7290], [7291, 7295], [7296, 7297], [7298, 7302], [7303, 7309], [7309, 7310]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.06489051878452301, {u'tokens': [u'Likewise', u',', u'when', u'an', u'adult', u'kangaroo', u'is', u'injured', u'in', u'a', u'collision', u',', u'a', u'vet', u',', u'the', u'RSPCA', u'or', u'the', u'National', u'Parks', u'and', u'Wildlife', u'Service', u'can', u'be', u'consulted', u'for', u'instructions', u'on', u'proper', u'care', u'.'], u'lemmas': [u'likewise', u',', u'when', u'a', u'adult', u'kangaroo', u'be', u'injure', u'in', u'a', u'collision', u',', u'a', u'vet', u',', u'the', u'RSPCA', u'or', u'the', u'National', u'Parks', u'and', u'Wildlife', u'Service', u'can', u'be', u'consult', u'for', u'instruction', u'on', u'proper', u'care', u'.'], u'pos': [u'RB', u',', u'WRB', u'DT', u'JJ', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'NN', u',', u'DT', u'NN', u',', u'DT', u'NNP', u'CC', u'DT', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'MD', u'VB', u'VBN', u'IN', u'NNS', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[15199, 15207], [15207, 15208], [15209, 15213], [15214, 15216], [15217, 15222], [15223, 15231], [15232, 15234], [15235, 15242], [15243, 15245], [15246, 15247], [15248, 15257], [15257, 15258], [15259, 15260], [15261, 15264], [15264, 15265], [15266, 15269], [15270, 15275], [15276, 15278], [15279, 15282], [15283, 15291], [15292, 15297], [15298, 15301], [15302, 15310], [15311, 15318], [15319, 15322], [15323, 15325], [15326, 15335], [15336, 15339], [15340, 15352], [15353, 15355], [15356, 15362], [15363, 15367], [15367, 15368]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.06087697297334671, {u'tokens': [u'For', u'kangaroos', u',', u'the', u'key', u'benefit', u'of', u'hopping', u'is', u'not', u'speed', u'to', u'escape', u'predators', u'the', u'top', u'speed', u'of', u'a', u'kangaroo', u'is', u'no', u'higher', u'than', u'that', u'of', u'a', u'similarly-sized', u'quadruped', u',', u'and', u'the', u'Australian', u'native', u'predators', u'are', u'in', u'any', u'case', u'less', u'fearsome', u'than', u'those', u'of', u'other', u'continents', u'but', u'economy', u':', u'in', u'an', u'infertile', u'continent', u'with', u'highly', u'variable', u'weather', u'patterns', u',', u'the', u'ability', u'of', u'a', u'kangaroo', u'to', u'travel', u'long', u'distances', u'at', u'moderately', u'high', u'speed', u'in', u'search', u'of', u'food', u'sources', u'is', u'crucial', u'to', u'survival', u'.'], u'lemmas': [u'for', u'kangaroo', u',', u'the', u'key', u'benefit', u'of', u'hop', u'be', u'not', u'speed', u'to', u'escape', u'predator', u'the', u'top', u'speed', u'of', u'a', u'kangaroo', u'be', u'no', u'higher', u'than', u'that', u'of', u'a', u'similarly-sized', u'quadruped', u',', u'and', u'the', u'australian', u'native', u'predator', u'be', u'in', u'any', u'case', u'less', u'fearsome', u'than', u'those', u'of', u'other', u'continent', u'but', u'economy', u':', u'in', u'a', u'infertile', u'continent', u'with', u'highly', u'variable', u'weather', u'pattern', u',', u'the', u'ability', u'of', u'a', u'kangaroo', u'to', u'travel', u'long', u'distance', u'at', u'moderately', u'high', u'speed', u'in', u'search', u'of', u'food', u'source', u'be', u'crucial', u'to', u'survival', u'.'], u'pos': [u'IN', u'NNS', u',', u'DT', u'JJ', u'NN', u'IN', u'VBG', u'VBZ', u'RB', u'VB', u'TO', u'VB', u'NNS', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'DT', u'JJR', u'IN', u'DT', u'IN', u'DT', u'JJ', u'NN', u',', u'CC', u'DT', u'JJ', u'JJ', u'NNS', u'VBP', u'IN', u'DT', u'NN', u'RBR', u'JJ', u'IN', u'DT', u'IN', u'JJ', u'NNS', u'CC', u'NN', u':', u'IN', u'DT', u'JJ', u'NN', u'IN', u'RB', u'JJ', u'NN', u'NNS', u',', u'DT', u'NN', u'IN', u'DT', u'NN', u'TO', u'VB', u'JJ', u'NNS', u'IN', u'RB', u'JJ', u'NN', u'IN', u'NN', u'IN', u'NN', u'NNS', u'VBZ', u'JJ', u'TO', u'NN', u'.'], u'char_offsets': [[10563, 10566], [10567, 10576], [10576, 10577], [10578, 10581], [10582, 10585], [10586, 10593], [10594, 10596], [10597, 10604], [10605, 10607], [10608, 10611], [10612, 10617], [10618, 10620], [10621, 10627], [10628, 10637], [10638, 10641], [10642, 10645], [10646, 10651], [10652, 10654], [10655, 10656], [10657, 10665], [10666, 10668], [10669, 10671], [10672, 10678], [10679, 10683], [10684, 10688], [10689, 10691], [10692, 10693], [10694, 10709], [10710, 10719], [10719, 10720], [10721, 10724], [10725, 10728], [10729, 10739], [10740, 10746], [10747, 10756], [10757, 10760], [10761, 10763], [10764, 10767], [10768, 10772], [10773, 10777], [10778, 10786], [10787, 10791], [10792, 10797], [10798, 10800], [10801, 10806], [10807, 10817], [10818, 10821], [10822, 10829], [10829, 10830], [10831, 10833], [10834, 10836], [10837, 10846], [10847, 10856], [10857, 10861], [10862, 10868], [10869, 10877], [10878, 10885], [10886, 10894], [10894, 10895], [10896, 10899], [10900, 10907], [10908, 10910], [10911, 10912], [10913, 10921], [10922, 10924], [10925, 10931], [10932, 10936], [10937, 10946], [10947, 10949], [10950, 10960], [10961, 10965], [10966, 10971], [10972, 10974], [10975, 10981], [10982, 10984], [10985, 10989], [10990, 10997], [10998, 11000], [11001, 11008], [11009, 11011], [11012, 11020], [11020, 11021]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.056451059877872467, {u'tokens': [u'If', u'a', u'female', u'is', u'the', u'victim', u'of', u'a', u'collision', u',', u'animal', u'welfare', u'groups', u'ask', u'that', u'her', u'pouch', u'be', u'checked', u'for', u'any', u'surviving', u'joey', u',', u'in', u'which', u'case', u'it', u'may', u'be', u'removed', u'to', u'a', u'wildlife', u'sanctuary', u'or', u'veterinary', u'surgeon', u'for', u'rehabilitation', u'.'], u'lemmas': [u'if', u'a', u'female', u'be', u'the', u'victim', u'of', u'a', u'collision', u',', u'animal', u'welfare', u'group', u'ask', u'that', u'she', u'pouch', u'be', u'check', u'for', u'any', u'survive', u'joey', u',', u'in', u'which', u'case', u'it', u'may', u'be', u'remove', u'to', u'a', u'wildlife', u'sanctuary', u'or', u'veterinary', u'surgeon', u'for', u'rehabilitation', u'.'], u'pos': [u'IN', u'DT', u'NN', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NN', u',', u'NN', u'NN', u'NNS', u'VBP', u'IN', u'PRP$', u'NN', u'VB', u'VBN', u'IN', u'DT', u'VBG', u'NN', u',', u'IN', u'WDT', u'NN', u'PRP', u'MD', u'VB', u'VBN', u'TO', u'DT', u'NN', u'NN', u'CC', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[14982, 14984], [14985, 14986], [14987, 14993], [14994, 14996], [14997, 15000], [15001, 15007], [15008, 15010], [15011, 15012], [15013, 15022], [15022, 15023], [15024, 15030], [15031, 15038], [15039, 15045], [15046, 15049], [15050, 15054], [15055, 15058], [15059, 15064], [15065, 15067], [15068, 15075], [15076, 15079], [15080, 15083], [15084, 15093], [15094, 15098], [15098, 15099], [15100, 15102], [15103, 15108], [15109, 15113], [15114, 15116], [15117, 15120], [15121, 15123], [15124, 15131], [15132, 15134], [15135, 15136], [15137, 15145], [15146, 15155], [15156, 15158], [15159, 15169], [15170, 15177], [15178, 15181], [15182, 15196], [15196, 15197]]}) 
answer: set([u'reptil'])
['Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'kangaroo', u'.'])

Is a kangaroo a reptile?
Validity= False
Question Type = NA
Answer Type = NA
Answer = no
Difficulty = easy
Article_Title = kangaroo
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a1.txt

Yes
_____________________________ test_yesno[param198] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e80e0>, (<src.tfidf.TF_IDF object at 0x10ff474d0>, set(['.', 'kangaroo'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('No') == True
E            +  where 'No' = <src.question_processing.Question_parser instance at 0x1156e80e0>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.3361610472202301, {u'tokens': [u'Goannas', u'and', u'other', u'carnivorous', u'reptiles', u'also', u'pose', u'a', u'danger', u'to', u'smaller', u'kangaroo', u'species', u'when', u'other', u'food', u'sources', u'are', u'lacking', u'.'], u'lemmas': [u'Goannas', u'and', u'other', u'carnivorous', u'reptile', u'also', u'pose', u'a', u'danger', u'to', u'smaller', u'kangaroo', u'species', u'when', u'other', u'food', u'source', u'be', u'lack', u'.'], u'pos': [u'NNP', u'CC', u'JJ', u'JJ', u'NNS', u'RB', u'VBP', u'DT', u'NN', u'TO', u'JJR', u'NN', u'NNS', u'WRB', u'JJ', u'NN', u'NNS', u'VBP', u'VBG', u'.'], u'char_offsets': [[7381, 7388], [7389, 7392], [7393, 7398], [7399, 7410], [7411, 7419], [7420, 7424], [7425, 7429], [7430, 7431], [7432, 7438], [7439, 7441], [7442, 7449], [7450, 7458], [7459, 7466], [7467, 7471], [7472, 7477], [7478, 7482], [7483, 7490], [7491, 7494], [7495, 7502], [7502, 7503]]}) 
answer: set([])
candidate Sentence: (0.12250503897666931, {u'tokens': [u'A', u'collision', u'with', u'a', u'vehicle', u'is', u'capable', u'of', u'killing', u'a', u'kangaroo', u'.'], u'lemmas': [u'a', u'collision', u'with', u'a', u'vehicle', u'be', u'capable', u'of', u'kill', u'a', u'kangaroo', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'JJ', u'IN', u'VBG', u'DT', u'NN', u'.'], u'char_offsets': [[14147, 14148], [14149, 14158], [14159, 14163], [14164, 14165], [14166, 14173], [14174, 14176], [14177, 14184], [14185, 14187], [14188, 14195], [14196, 14197], [14198, 14206], [14206, 14207]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.12207270413637161, {u'tokens': [u'A', u'kangaroo', u'crossing', u'a', u'highway', u'.'], u'lemmas': [u'a', u'kangaroo', u'cross', u'a', u'highway', u'.'], u'pos': [u'DT', u'NN', u'VBG', u'DT', u'NN', u'.'], u'char_offsets': [[14116, 14117], [14118, 14126], [14127, 14135], [14136, 14137], [14138, 14145], [14145, 14146]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.081699512898921967, {u'tokens': [u'A', u'``', u'kangaroo', u'crossing', u"''", u'sign', u'on', u'an', u'Australian', u'highway', u'.'], u'lemmas': [u'a', u'``', u'kangaroo', u'cross', u"''", u'sign', u'on', u'a', u'australian', u'highway', u'.'], u'pos': [u'DT', u'``', u'NN', u'VBG', u"''", u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[14063, 14064], [14065, 14066], [14066, 14074], [14075, 14083], [14083, 14084], [14085, 14089], [14090, 14092], [14093, 14095], [14096, 14106], [14107, 14114], [14114, 14115]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.067191585898399353, {u'tokens': [u'A', u'kangaroo', u'is', u'a', u'marsupial', u'from', u'the', u'family', u'Macropodidae', u'-LRB-', u'macropods', u',', u'meaning', u'`', u'large', u'foot', u"'", u'-RRB-', u'.'], u'lemmas': [u'a', u'kangaroo', u'be', u'a', u'marsupial', u'from', u'the', u'family', u'Macropodidae', u'-lrb-', u'macropod', u',', u'mean', u'`', u'large', u'foot', u"'", u'-rrb-', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NN', u'NNP', u'-LRB-', u'NNS', u',', u'VBG', u'``', u'JJ', u'NN', u"''", u'-RRB-', u'.'], u'char_offsets': [[48, 49], [50, 58], [59, 61], [62, 63], [64, 73], [74, 78], [79, 82], [83, 89], [90, 102], [103, 104], [104, 113], [113, 114], [115, 122], [123, 124], [124, 129], [130, 134], [134, 135], [135, 136], [136, 137]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.066336065530776978, {u'tokens': [u'Newborn', u'joey', u'sucking', u'on', u'a', u'teat', u'in', u'the', u'pouch', u'Kangaroos', u'have', u'developed', u'a', u'number', u'of', u'adaptations', u'to', u'a', u'dry', u',', u'infertile', u'continent', u'and', u'highly', u'variable', u'climate', u'.'], u'lemmas': [u'newborn', u'joey', u'suck', u'on', u'a', u'teat', u'in', u'the', u'pouch', u'kangaroo', u'have', u'develop', u'a', u'number', u'of', u'adaptation', u'to', u'a', u'dry', u',', u'infertile', u'continent', u'and', u'highly', u'variable', u'climate', u'.'], u'pos': [u'JJ', u'NN', u'VBG', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'NNS', u'VBP', u'VBN', u'DT', u'NN', u'IN', u'NNS', u'TO', u'DT', u'JJ', u',', u'JJ', u'NN', u'CC', u'RB', u'JJ', u'NN', u'.'], u'char_offsets': [[8057, 8064], [8065, 8069], [8070, 8077], [8078, 8080], [8081, 8082], [8083, 8087], [8088, 8090], [8091, 8094], [8095, 8100], [8101, 8110], [8111, 8115], [8116, 8125], [8126, 8127], [8128, 8134], [8135, 8137], [8138, 8149], [8150, 8152], [8153, 8154], [8155, 8158], [8158, 8159], [8160, 8169], [8170, 8179], [8180, 8183], [8184, 8190], [8191, 8199], [8200, 8207], [8207, 8208]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.065304331481456757, {u'tokens': [u'The', u'mere', u'barking', u'of', u'a', u'dog', u'can', u'set', u'a', u'full-grown', u'male', u'boomer', u'into', u'a', u'wild', u'frenzy', u'.'], u'lemmas': [u'the', u'mere', u'bark', u'of', u'a', u'dog', u'can', u'set', u'a', u'full-grown', u'male', u'boomer', u'into', u'a', u'wild', u'frenzy', u'.'], u'pos': [u'DT', u'JJ', u'VBG', u'IN', u'DT', u'NN', u'MD', u'VB', u'DT', u'JJ', u'NN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[7232, 7235], [7236, 7240], [7241, 7248], [7249, 7251], [7252, 7253], [7254, 7257], [7258, 7261], [7262, 7265], [7266, 7267], [7268, 7278], [7279, 7283], [7284, 7290], [7291, 7295], [7296, 7297], [7298, 7302], [7303, 7309], [7309, 7310]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.06489051878452301, {u'tokens': [u'Likewise', u',', u'when', u'an', u'adult', u'kangaroo', u'is', u'injured', u'in', u'a', u'collision', u',', u'a', u'vet', u',', u'the', u'RSPCA', u'or', u'the', u'National', u'Parks', u'and', u'Wildlife', u'Service', u'can', u'be', u'consulted', u'for', u'instructions', u'on', u'proper', u'care', u'.'], u'lemmas': [u'likewise', u',', u'when', u'a', u'adult', u'kangaroo', u'be', u'injure', u'in', u'a', u'collision', u',', u'a', u'vet', u',', u'the', u'RSPCA', u'or', u'the', u'National', u'Parks', u'and', u'Wildlife', u'Service', u'can', u'be', u'consult', u'for', u'instruction', u'on', u'proper', u'care', u'.'], u'pos': [u'RB', u',', u'WRB', u'DT', u'JJ', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'NN', u',', u'DT', u'NN', u',', u'DT', u'NNP', u'CC', u'DT', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'MD', u'VB', u'VBN', u'IN', u'NNS', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[15199, 15207], [15207, 15208], [15209, 15213], [15214, 15216], [15217, 15222], [15223, 15231], [15232, 15234], [15235, 15242], [15243, 15245], [15246, 15247], [15248, 15257], [15257, 15258], [15259, 15260], [15261, 15264], [15264, 15265], [15266, 15269], [15270, 15275], [15276, 15278], [15279, 15282], [15283, 15291], [15292, 15297], [15298, 15301], [15302, 15310], [15311, 15318], [15319, 15322], [15323, 15325], [15326, 15335], [15336, 15339], [15340, 15352], [15353, 15355], [15356, 15362], [15363, 15367], [15367, 15368]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.06087697297334671, {u'tokens': [u'For', u'kangaroos', u',', u'the', u'key', u'benefit', u'of', u'hopping', u'is', u'not', u'speed', u'to', u'escape', u'predators', u'the', u'top', u'speed', u'of', u'a', u'kangaroo', u'is', u'no', u'higher', u'than', u'that', u'of', u'a', u'similarly-sized', u'quadruped', u',', u'and', u'the', u'Australian', u'native', u'predators', u'are', u'in', u'any', u'case', u'less', u'fearsome', u'than', u'those', u'of', u'other', u'continents', u'but', u'economy', u':', u'in', u'an', u'infertile', u'continent', u'with', u'highly', u'variable', u'weather', u'patterns', u',', u'the', u'ability', u'of', u'a', u'kangaroo', u'to', u'travel', u'long', u'distances', u'at', u'moderately', u'high', u'speed', u'in', u'search', u'of', u'food', u'sources', u'is', u'crucial', u'to', u'survival', u'.'], u'lemmas': [u'for', u'kangaroo', u',', u'the', u'key', u'benefit', u'of', u'hop', u'be', u'not', u'speed', u'to', u'escape', u'predator', u'the', u'top', u'speed', u'of', u'a', u'kangaroo', u'be', u'no', u'higher', u'than', u'that', u'of', u'a', u'similarly-sized', u'quadruped', u',', u'and', u'the', u'australian', u'native', u'predator', u'be', u'in', u'any', u'case', u'less', u'fearsome', u'than', u'those', u'of', u'other', u'continent', u'but', u'economy', u':', u'in', u'a', u'infertile', u'continent', u'with', u'highly', u'variable', u'weather', u'pattern', u',', u'the', u'ability', u'of', u'a', u'kangaroo', u'to', u'travel', u'long', u'distance', u'at', u'moderately', u'high', u'speed', u'in', u'search', u'of', u'food', u'source', u'be', u'crucial', u'to', u'survival', u'.'], u'pos': [u'IN', u'NNS', u',', u'DT', u'JJ', u'NN', u'IN', u'VBG', u'VBZ', u'RB', u'VB', u'TO', u'VB', u'NNS', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'DT', u'JJR', u'IN', u'DT', u'IN', u'DT', u'JJ', u'NN', u',', u'CC', u'DT', u'JJ', u'JJ', u'NNS', u'VBP', u'IN', u'DT', u'NN', u'RBR', u'JJ', u'IN', u'DT', u'IN', u'JJ', u'NNS', u'CC', u'NN', u':', u'IN', u'DT', u'JJ', u'NN', u'IN', u'RB', u'JJ', u'NN', u'NNS', u',', u'DT', u'NN', u'IN', u'DT', u'NN', u'TO', u'VB', u'JJ', u'NNS', u'IN', u'RB', u'JJ', u'NN', u'IN', u'NN', u'IN', u'NN', u'NNS', u'VBZ', u'JJ', u'TO', u'NN', u'.'], u'char_offsets': [[10563, 10566], [10567, 10576], [10576, 10577], [10578, 10581], [10582, 10585], [10586, 10593], [10594, 10596], [10597, 10604], [10605, 10607], [10608, 10611], [10612, 10617], [10618, 10620], [10621, 10627], [10628, 10637], [10638, 10641], [10642, 10645], [10646, 10651], [10652, 10654], [10655, 10656], [10657, 10665], [10666, 10668], [10669, 10671], [10672, 10678], [10679, 10683], [10684, 10688], [10689, 10691], [10692, 10693], [10694, 10709], [10710, 10719], [10719, 10720], [10721, 10724], [10725, 10728], [10729, 10739], [10740, 10746], [10747, 10756], [10757, 10760], [10761, 10763], [10764, 10767], [10768, 10772], [10773, 10777], [10778, 10786], [10787, 10791], [10792, 10797], [10798, 10800], [10801, 10806], [10807, 10817], [10818, 10821], [10822, 10829], [10829, 10830], [10831, 10833], [10834, 10836], [10837, 10846], [10847, 10856], [10857, 10861], [10862, 10868], [10869, 10877], [10878, 10885], [10886, 10894], [10894, 10895], [10896, 10899], [10900, 10907], [10908, 10910], [10911, 10912], [10913, 10921], [10922, 10924], [10925, 10931], [10932, 10936], [10937, 10946], [10947, 10949], [10950, 10960], [10961, 10965], [10966, 10971], [10972, 10974], [10975, 10981], [10982, 10984], [10985, 10989], [10990, 10997], [10998, 11000], [11001, 11008], [11009, 11011], [11012, 11020], [11020, 11021]]}) 
answer: set([u'reptil'])
candidate Sentence: (0.056451059877872467, {u'tokens': [u'If', u'a', u'female', u'is', u'the', u'victim', u'of', u'a', u'collision', u',', u'animal', u'welfare', u'groups', u'ask', u'that', u'her', u'pouch', u'be', u'checked', u'for', u'any', u'surviving', u'joey', u',', u'in', u'which', u'case', u'it', u'may', u'be', u'removed', u'to', u'a', u'wildlife', u'sanctuary', u'or', u'veterinary', u'surgeon', u'for', u'rehabilitation', u'.'], u'lemmas': [u'if', u'a', u'female', u'be', u'the', u'victim', u'of', u'a', u'collision', u',', u'animal', u'welfare', u'group', u'ask', u'that', u'she', u'pouch', u'be', u'check', u'for', u'any', u'survive', u'joey', u',', u'in', u'which', u'case', u'it', u'may', u'be', u'remove', u'to', u'a', u'wildlife', u'sanctuary', u'or', u'veterinary', u'surgeon', u'for', u'rehabilitation', u'.'], u'pos': [u'IN', u'DT', u'NN', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NN', u',', u'NN', u'NN', u'NNS', u'VBP', u'IN', u'PRP$', u'NN', u'VB', u'VBN', u'IN', u'DT', u'VBG', u'NN', u',', u'IN', u'WDT', u'NN', u'PRP', u'MD', u'VB', u'VBN', u'TO', u'DT', u'NN', u'NN', u'CC', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[14982, 14984], [14985, 14986], [14987, 14993], [14994, 14996], [14997, 15000], [15001, 15007], [15008, 15010], [15011, 15012], [15013, 15022], [15022, 15023], [15024, 15030], [15031, 15038], [15039, 15045], [15046, 15049], [15050, 15054], [15055, 15058], [15059, 15064], [15065, 15067], [15068, 15075], [15076, 15079], [15080, 15083], [15084, 15093], [15094, 15098], [15098, 15099], [15100, 15102], [15103, 15108], [15109, 15113], [15114, 15116], [15117, 15120], [15121, 15123], [15124, 15131], [15132, 15134], [15135, 15136], [15137, 15145], [15146, 15155], [15156, 15158], [15159, 15169], [15170, 15177], [15178, 15181], [15182, 15196], [15196, 15197]]}) 
answer: set([u'reptil'])
['Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'kangaroo', u'.'])

Is a kangaroo a reptile?
Validity= False
Question Type = NA
Answer Type = NA
Answer = No
Difficulty = easy
Article_Title = kangaroo
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a1.txt

Yes
_____________________________ test_yesno[param203] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e8248>, (<src.tfidf.TF_IDF object at 0x10ff474d0>, set(['.', 'kangaroo'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156e8248>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.55460375547409058, {u'tokens': [u'They', u'are', u'not', u'farmed', u'to', u'any', u'extent', u',', u'but', u'wild', u'kangaroos', u'are', u'shot', u'for', u'meat', u',', u'over', u'which', u'there', u'is', u'controversy', u'.'], u'lemmas': [u'they', u'be', u'not', u'farm', u'to', u'any', u'extent', u',', u'but', u'wild', u'kangaroo', u'be', u'shoot', u'for', u'meat', u',', u'over', u'which', u'there', u'be', u'controversy', u'.'], u'pos': [u'PRP', u'VBP', u'RB', u'VBN', u'TO', u'DT', u'NN', u',', u'CC', u'JJ', u'NNS', u'VBP', u'VBN', u'IN', u'NN', u',', u'IN', u'WDT', u'EX', u'VBZ', u'NN', u'.'], u'char_offsets': [[796, 800], [801, 804], [805, 808], [809, 815], [816, 818], [819, 822], [823, 829], [829, 830], [831, 834], [835, 839], [840, 849], [850, 853], [854, 858], [859, 862], [863, 867], [867, 868], [869, 873], [874, 879], [880, 885], [886, 888], [889, 900], [900, 901]]}) 
answer: set([])
candidate Sentence: (0.21416331827640533, {u'tokens': [u'Before', u'European', u'settlement', u',', u'the', u'kangaroo', u'was', u'a', u'very', u'important', u'animal', u'for', u'Australian', u'Aborigines', u',', u'for', u'its', u'meat', u',', u'hide', u',', u'bones', u'and', u'sinews', u'.'], u'lemmas': [u'before', u'european', u'settlement', u',', u'the', u'kangaroo', u'be', u'a', u'very', u'important', u'animal', u'for', u'australian', u'Aborigines', u',', u'for', u'its', u'meat', u',', u'hide', u',', u'bone', u'and', u'sinew', u'.'], u'pos': [u'IN', u'JJ', u'NN', u',', u'DT', u'NN', u'VBD', u'DT', u'RB', u'JJ', u'NN', u'IN', u'JJ', u'NNPS', u',', u'IN', u'PRP$', u'NN', u',', u'VB', u',', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[12371, 12377], [12378, 12386], [12387, 12397], [12397, 12398], [12399, 12402], [12403, 12411], [12412, 12415], [12416, 12417], [12418, 12422], [12423, 12432], [12433, 12439], [12440, 12443], [12444, 12454], [12455, 12465], [12465, 12466], [12467, 12470], [12471, 12474], [12475, 12479], [12479, 12480], [12481, 12485], [12485, 12486], [12487, 12492], [12493, 12496], [12497, 12503], [12503, 12504]]}) 
answer: set([u'shoot', u'wild'])
candidate Sentence: (0.13269001245498657, {u'tokens': [u'The', u'mere', u'barking', u'of', u'a', u'dog', u'can', u'set', u'a', u'full-grown', u'male', u'boomer', u'into', u'a', u'wild', u'frenzy', u'.'], u'lemmas': [u'the', u'mere', u'bark', u'of', u'a', u'dog', u'can', u'set', u'a', u'full-grown', u'male', u'boomer', u'into', u'a', u'wild', u'frenzy', u'.'], u'pos': [u'DT', u'JJ', u'VBG', u'IN', u'DT', u'NN', u'MD', u'VB', u'DT', u'JJ', u'NN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[7232, 7235], [7236, 7240], [7241, 7248], [7249, 7251], [7252, 7253], [7254, 7257], [7258, 7261], [7262, 7265], [7266, 7267], [7268, 7278], [7279, 7283], [7284, 7290], [7291, 7295], [7296, 7297], [7298, 7302], [7303, 7309], [7309, 7310]]}) 
answer: set([u'shoot', u'meat'])
candidate Sentence: (0.11902295053005219, {u'tokens': [u'The', u'joey', u"'s", u'instinct', u'is', u'to', u'``', u'cuddle', u'up', u"''", u',', u'thereby', u'endearing', u'themselves', u'to', u'their', u'keepers', u',', u'but', u'after', u'hand-rearing', u'a', u'joey', u',', u'it', u'can', u'not', u'usually', u'be', u'released', u'into', u'the', u'wild', u'and', u'be', u'expected', u'to', u'provide', u'for', u'itself', u'immediately', u'.'], u'lemmas': [u'the', u'joey', u"'s", u'instinct', u'be', u'to', u'``', u'cuddle', u'up', u"''", u',', u'thereby', u'endearing', u'themselves', u'to', u'they', u'keeper', u',', u'but', u'after', u'hand-rear', u'a', u'joey', u',', u'it', u'can', u'not', u'usually', u'be', u'release', u'into', u'the', u'wild', u'and', u'be', u'expect', u'to', u'provide', u'for', u'itself', u'immediately', u'.'], u'pos': [u'DT', u'NN', u'POS', u'NN', u'VBZ', u'TO', u'``', u'VB', u'RP', u"''", u',', u'RB', u'JJ', u'PRP', u'TO', u'PRP$', u'NNS', u',', u'CC', u'IN', u'VBG', u'DT', u'NN', u',', u'PRP', u'MD', u'RB', u'RB', u'VB', u'VBN', u'IN', u'DT', u'JJ', u'CC', u'VB', u'VBN', u'TO', u'VB', u'IN', u'PRP', u'RB', u'.'], u'char_offsets': [[15945, 15948], [15949, 15953], [15953, 15955], [15956, 15964], [15965, 15967], [15968, 15970], [15971, 15972], [15972, 15978], [15979, 15981], [15981, 15982], [15982, 15983], [15984, 15991], [15992, 16001], [16002, 16012], [16013, 16015], [16016, 16021], [16022, 16029], [16029, 16030], [16031, 16034], [16035, 16040], [16041, 16053], [16054, 16055], [16056, 16060], [16060, 16061], [16062, 16064], [16065, 16068], [16068, 16071], [16072, 16079], [16080, 16082], [16083, 16091], [16092, 16096], [16097, 16100], [16101, 16105], [16106, 16109], [16110, 16112], [16113, 16121], [16122, 16124], [16125, 16132], [16133, 16136], [16137, 16143], [16144, 16155], [16155, 16156]]}) 
answer: set([u'shoot', u'meat'])
candidate Sentence: (0.069073408842086792, {u'tokens': [u'The', u'joey', u'will', u'usually', u'stay', u'in', u'the', u'pouch', u'for', u'about', u'nine', u'months', u'-LRB-', u'180', u'320', u'days', u'for', u'the', u'Western', u'Grey', u'-RRB-', u'before', u'starting', u'to', u'leave', u'the', u'pouch', u'for', u'small', u'periods', u'of', u'time', u'.'], u'lemmas': [u'the', u'joey', u'will', u'usually', u'stay', u'in', u'the', u'pouch', u'for', u'about', u'nine', u'month', u'-lrb-', u'180', u'320', u'day', u'for', u'the', u'western', u'Grey', u'-rrb-', u'before', u'start', u'to', u'leave', u'the', u'pouch', u'for', u'small', u'period', u'of', u'time', u'.'], u'pos': [u'DT', u'NN', u'MD', u'RB', u'VB', u'IN', u'DT', u'NN', u'IN', u'IN', u'CD', u'NNS', u'-LRB-', u'CD', u'CD', u'NNS', u'IN', u'DT', u'JJ', u'NNP', u'-RRB-', u'IN', u'VBG', u'TO', u'VB', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[8633, 8636], [8637, 8641], [8642, 8646], [8647, 8654], [8655, 8659], [8660, 8662], [8663, 8666], [8667, 8672], [8673, 8676], [8677, 8682], [8683, 8687], [8688, 8694], [8695, 8696], [8696, 8699], [8700, 8703], [8704, 8708], [8709, 8712], [8713, 8716], [8717, 8724], [8725, 8729], [8729, 8730], [8731, 8737], [8738, 8746], [8747, 8749], [8750, 8755], [8756, 8759], [8760, 8765], [8766, 8769], [8770, 8775], [8776, 8783], [8784, 8786], [8787, 8791], [8791, 8792]]}) 
answer: set([u'shoot', u'wild', u'meat'])
candidate Sentence: (0.063696622848510742, {u'tokens': [u'Male', u'kangaroos', u'often', u'``', u'box', u"''", u'amongst', u'each', u'other', u',', u'playfully', u',', u'for', u'dominance', u',', u'or', u'in', u'competition', u'for', u'mates', u'.'], u'lemmas': [u'male', u'kangaroo', u'often', u'``', u'box', u"''", u'amongst', u'each', u'other', u',', u'playfully', u',', u'for', u'dominance', u',', u'or', u'in', u'competition', u'for', u'mate', u'.'], u'pos': [u'JJ', u'NNS', u'RB', u'``', u'NN', u"''", u'IN', u'DT', u'JJ', u',', u'RB', u',', u'IN', u'NN', u',', u'CC', u'IN', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[13136, 13140], [13141, 13150], [13151, 13156], [13157, 13158], [13158, 13161], [13161, 13162], [13163, 13170], [13171, 13175], [13176, 13181], [13181, 13182], [13183, 13192], [13192, 13193], [13194, 13197], [13198, 13207], [13207, 13208], [13209, 13211], [13212, 13214], [13215, 13226], [13227, 13230], [13231, 13236], [13236, 13237]]}) 
answer: set([u'shoot', u'wild', u'meat'])
candidate Sentence: (0.06147255003452301, {u'tokens': [u'Kangaroos', u'have', u'large', u',', u'powerful', u'hind', u'legs', u',', u'large', u'feet', u'adapted', u'for', u'leaping', u',', u'a', u'long', u'muscular', u'tail', u'for', u'balance', u',', u'and', u'a', u'small', u'head', u'.'], u'lemmas': [u'kangaroo', u'have', u'large', u',', u'powerful', u'hind', u'leg', u',', u'large', u'foot', u'adapt', u'for', u'leap', u',', u'a', u'long', u'muscular', u'tail', u'for', u'balance', u',', u'and', u'a', u'small', u'head', u'.'], u'pos': [u'NNS', u'VBP', u'JJ', u',', u'JJ', u'JJ', u'NNS', u',', u'JJ', u'NNS', u'VBN', u'IN', u'VBG', u',', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'NN', u',', u'CC', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[4172, 4181], [4182, 4186], [4187, 4192], [4192, 4193], [4194, 4202], [4203, 4207], [4208, 4212], [4212, 4213], [4214, 4219], [4220, 4224], [4225, 4232], [4233, 4236], [4237, 4244], [4244, 4245], [4246, 4247], [4248, 4252], [4253, 4261], [4262, 4266], [4267, 4270], [4271, 4278], [4278, 4279], [4280, 4283], [4284, 4285], [4286, 4291], [4292, 4296], [4296, 4297]]}) 
answer: set([u'shoot', u'wild', u'meat'])
candidate Sentence: (0.060175836086273193, {u'tokens': [u':', u'For', u'other', u'uses', u',', u'see', u'kangaroo', u'-LRB-', u'disambiguation', u'-RRB-', u'.'], u'lemmas': [u':', u'for', u'other', u'use', u',', u'see', u'kangaroo', u'-lrb-', u'disambiguation', u'-rrb-', u'.'], u'pos': [u':', u'IN', u'JJ', u'NNS', u',', u'VBP', u'NN', u'-LRB-', u'NN', u'-RRB-', u'.'], u'char_offsets': [[0, 1], [1, 4], [5, 10], [11, 15], [15, 16], [17, 20], [21, 29], [30, 31], [31, 45], [45, 46], [46, 47]]}) 
answer: set([u'shoot', u'wild', u'meat'])
candidate Sentence: (0.050698917359113693, {u'tokens': [u'If', u'a', u'female', u'is', u'the', u'victim', u'of', u'a', u'collision', u',', u'animal', u'welfare', u'groups', u'ask', u'that', u'her', u'pouch', u'be', u'checked', u'for', u'any', u'surviving', u'joey', u',', u'in', u'which', u'case', u'it', u'may', u'be', u'removed', u'to', u'a', u'wildlife', u'sanctuary', u'or', u'veterinary', u'surgeon', u'for', u'rehabilitation', u'.'], u'lemmas': [u'if', u'a', u'female', u'be', u'the', u'victim', u'of', u'a', u'collision', u',', u'animal', u'welfare', u'group', u'ask', u'that', u'she', u'pouch', u'be', u'check', u'for', u'any', u'survive', u'joey', u',', u'in', u'which', u'case', u'it', u'may', u'be', u'remove', u'to', u'a', u'wildlife', u'sanctuary', u'or', u'veterinary', u'surgeon', u'for', u'rehabilitation', u'.'], u'pos': [u'IN', u'DT', u'NN', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NN', u',', u'NN', u'NN', u'NNS', u'VBP', u'IN', u'PRP$', u'NN', u'VB', u'VBN', u'IN', u'DT', u'VBG', u'NN', u',', u'IN', u'WDT', u'NN', u'PRP', u'MD', u'VB', u'VBN', u'TO', u'DT', u'NN', u'NN', u'CC', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[14982, 14984], [14985, 14986], [14987, 14993], [14994, 14996], [14997, 15000], [15001, 15007], [15008, 15010], [15011, 15012], [15013, 15022], [15022, 15023], [15024, 15030], [15031, 15038], [15039, 15045], [15046, 15049], [15050, 15054], [15055, 15058], [15059, 15064], [15065, 15067], [15068, 15075], [15076, 15079], [15080, 15083], [15084, 15093], [15094, 15098], [15098, 15099], [15100, 15102], [15103, 15108], [15109, 15113], [15114, 15116], [15117, 15120], [15121, 15123], [15124, 15131], [15132, 15134], [15135, 15136], [15137, 15145], [15146, 15155], [15156, 15158], [15159, 15169], [15170, 15177], [15178, 15181], [15182, 15196], [15196, 15197]]}) 
answer: set([u'shoot', u'wild', u'meat'])
candidate Sentence: (0.050192516297101974, {u'tokens': [u'Kangaroo', u'hops', u'in', u'line', u'for', u'genome', u'sequencing', u'URL', u'accessed', u'January', u'6', u',', u'2007', u'.'], u'lemmas': [u'kangaroo', u'hop', u'in', u'line', u'for', u'genome', u'sequencing', u'url', u'access', u'January', u'6', u',', u'2007', u'.'], u'pos': [u'NN', u'VBZ', u'IN', u'NN', u'IN', u'NN', u'NN', u'NN', u'VBD', u'NNP', u'CD', u',', u'CD', u'.'], u'char_offsets': [[11214, 11222], [11223, 11227], [11228, 11230], [11231, 11235], [11236, 11239], [11240, 11246], [11247, 11257], [11258, 11261], [11262, 11270], [11271, 11278], [11279, 11280], [11280, 11281], [11282, 11286], [11286, 11287]]}) 
answer: set([u'shoot', u'wild', u'meat'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'kangaroo', u'.'])

Are wild kangaroos shot for meat?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = kangaroo
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a1.txt

No
----------------------------- Captured stderr call -----------------------------
INFO:CoreNLP_JavaServer: INPUT: 400 documents, 17906 characters, 3471 tokens, 44.8 char/doc, 8.7 tok/doc RATES: 18.329 doc/sec, 159.1 tok/sec

_____________________________ test_yesno[param204] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e8290>, (<src.tfidf.TF_IDF object at 0x10ff474d0>, set(['.', 'kangaroo'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156e8290>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.55460375547409058, {u'tokens': [u'They', u'are', u'not', u'farmed', u'to', u'any', u'extent', u',', u'but', u'wild', u'kangaroos', u'are', u'shot', u'for', u'meat', u',', u'over', u'which', u'there', u'is', u'controversy', u'.'], u'lemmas': [u'they', u'be', u'not', u'farm', u'to', u'any', u'extent', u',', u'but', u'wild', u'kangaroo', u'be', u'shoot', u'for', u'meat', u',', u'over', u'which', u'there', u'be', u'controversy', u'.'], u'pos': [u'PRP', u'VBP', u'RB', u'VBN', u'TO', u'DT', u'NN', u',', u'CC', u'JJ', u'NNS', u'VBP', u'VBN', u'IN', u'NN', u',', u'IN', u'WDT', u'EX', u'VBZ', u'NN', u'.'], u'char_offsets': [[796, 800], [801, 804], [805, 808], [809, 815], [816, 818], [819, 822], [823, 829], [829, 830], [831, 834], [835, 839], [840, 849], [850, 853], [854, 858], [859, 862], [863, 867], [867, 868], [869, 873], [874, 879], [880, 885], [886, 888], [889, 900], [900, 901]]}) 
answer: set([])
candidate Sentence: (0.21416331827640533, {u'tokens': [u'Before', u'European', u'settlement', u',', u'the', u'kangaroo', u'was', u'a', u'very', u'important', u'animal', u'for', u'Australian', u'Aborigines', u',', u'for', u'its', u'meat', u',', u'hide', u',', u'bones', u'and', u'sinews', u'.'], u'lemmas': [u'before', u'european', u'settlement', u',', u'the', u'kangaroo', u'be', u'a', u'very', u'important', u'animal', u'for', u'australian', u'Aborigines', u',', u'for', u'its', u'meat', u',', u'hide', u',', u'bone', u'and', u'sinew', u'.'], u'pos': [u'IN', u'JJ', u'NN', u',', u'DT', u'NN', u'VBD', u'DT', u'RB', u'JJ', u'NN', u'IN', u'JJ', u'NNPS', u',', u'IN', u'PRP$', u'NN', u',', u'VB', u',', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[12371, 12377], [12378, 12386], [12387, 12397], [12397, 12398], [12399, 12402], [12403, 12411], [12412, 12415], [12416, 12417], [12418, 12422], [12423, 12432], [12433, 12439], [12440, 12443], [12444, 12454], [12455, 12465], [12465, 12466], [12467, 12470], [12471, 12474], [12475, 12479], [12479, 12480], [12481, 12485], [12485, 12486], [12487, 12492], [12493, 12496], [12497, 12503], [12503, 12504]]}) 
answer: set([u'shoot', u'wild'])
candidate Sentence: (0.13269001245498657, {u'tokens': [u'The', u'mere', u'barking', u'of', u'a', u'dog', u'can', u'set', u'a', u'full-grown', u'male', u'boomer', u'into', u'a', u'wild', u'frenzy', u'.'], u'lemmas': [u'the', u'mere', u'bark', u'of', u'a', u'dog', u'can', u'set', u'a', u'full-grown', u'male', u'boomer', u'into', u'a', u'wild', u'frenzy', u'.'], u'pos': [u'DT', u'JJ', u'VBG', u'IN', u'DT', u'NN', u'MD', u'VB', u'DT', u'JJ', u'NN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[7232, 7235], [7236, 7240], [7241, 7248], [7249, 7251], [7252, 7253], [7254, 7257], [7258, 7261], [7262, 7265], [7266, 7267], [7268, 7278], [7279, 7283], [7284, 7290], [7291, 7295], [7296, 7297], [7298, 7302], [7303, 7309], [7309, 7310]]}) 
answer: set([u'shoot', u'meat'])
candidate Sentence: (0.11902295053005219, {u'tokens': [u'The', u'joey', u"'s", u'instinct', u'is', u'to', u'``', u'cuddle', u'up', u"''", u',', u'thereby', u'endearing', u'themselves', u'to', u'their', u'keepers', u',', u'but', u'after', u'hand-rearing', u'a', u'joey', u',', u'it', u'can', u'not', u'usually', u'be', u'released', u'into', u'the', u'wild', u'and', u'be', u'expected', u'to', u'provide', u'for', u'itself', u'immediately', u'.'], u'lemmas': [u'the', u'joey', u"'s", u'instinct', u'be', u'to', u'``', u'cuddle', u'up', u"''", u',', u'thereby', u'endearing', u'themselves', u'to', u'they', u'keeper', u',', u'but', u'after', u'hand-rear', u'a', u'joey', u',', u'it', u'can', u'not', u'usually', u'be', u'release', u'into', u'the', u'wild', u'and', u'be', u'expect', u'to', u'provide', u'for', u'itself', u'immediately', u'.'], u'pos': [u'DT', u'NN', u'POS', u'NN', u'VBZ', u'TO', u'``', u'VB', u'RP', u"''", u',', u'RB', u'JJ', u'PRP', u'TO', u'PRP$', u'NNS', u',', u'CC', u'IN', u'VBG', u'DT', u'NN', u',', u'PRP', u'MD', u'RB', u'RB', u'VB', u'VBN', u'IN', u'DT', u'JJ', u'CC', u'VB', u'VBN', u'TO', u'VB', u'IN', u'PRP', u'RB', u'.'], u'char_offsets': [[15945, 15948], [15949, 15953], [15953, 15955], [15956, 15964], [15965, 15967], [15968, 15970], [15971, 15972], [15972, 15978], [15979, 15981], [15981, 15982], [15982, 15983], [15984, 15991], [15992, 16001], [16002, 16012], [16013, 16015], [16016, 16021], [16022, 16029], [16029, 16030], [16031, 16034], [16035, 16040], [16041, 16053], [16054, 16055], [16056, 16060], [16060, 16061], [16062, 16064], [16065, 16068], [16068, 16071], [16072, 16079], [16080, 16082], [16083, 16091], [16092, 16096], [16097, 16100], [16101, 16105], [16106, 16109], [16110, 16112], [16113, 16121], [16122, 16124], [16125, 16132], [16133, 16136], [16137, 16143], [16144, 16155], [16155, 16156]]}) 
answer: set([u'shoot', u'meat'])
candidate Sentence: (0.069073408842086792, {u'tokens': [u'The', u'joey', u'will', u'usually', u'stay', u'in', u'the', u'pouch', u'for', u'about', u'nine', u'months', u'-LRB-', u'180', u'320', u'days', u'for', u'the', u'Western', u'Grey', u'-RRB-', u'before', u'starting', u'to', u'leave', u'the', u'pouch', u'for', u'small', u'periods', u'of', u'time', u'.'], u'lemmas': [u'the', u'joey', u'will', u'usually', u'stay', u'in', u'the', u'pouch', u'for', u'about', u'nine', u'month', u'-lrb-', u'180', u'320', u'day', u'for', u'the', u'western', u'Grey', u'-rrb-', u'before', u'start', u'to', u'leave', u'the', u'pouch', u'for', u'small', u'period', u'of', u'time', u'.'], u'pos': [u'DT', u'NN', u'MD', u'RB', u'VB', u'IN', u'DT', u'NN', u'IN', u'IN', u'CD', u'NNS', u'-LRB-', u'CD', u'CD', u'NNS', u'IN', u'DT', u'JJ', u'NNP', u'-RRB-', u'IN', u'VBG', u'TO', u'VB', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[8633, 8636], [8637, 8641], [8642, 8646], [8647, 8654], [8655, 8659], [8660, 8662], [8663, 8666], [8667, 8672], [8673, 8676], [8677, 8682], [8683, 8687], [8688, 8694], [8695, 8696], [8696, 8699], [8700, 8703], [8704, 8708], [8709, 8712], [8713, 8716], [8717, 8724], [8725, 8729], [8729, 8730], [8731, 8737], [8738, 8746], [8747, 8749], [8750, 8755], [8756, 8759], [8760, 8765], [8766, 8769], [8770, 8775], [8776, 8783], [8784, 8786], [8787, 8791], [8791, 8792]]}) 
answer: set([u'shoot', u'wild', u'meat'])
candidate Sentence: (0.063696622848510742, {u'tokens': [u'Male', u'kangaroos', u'often', u'``', u'box', u"''", u'amongst', u'each', u'other', u',', u'playfully', u',', u'for', u'dominance', u',', u'or', u'in', u'competition', u'for', u'mates', u'.'], u'lemmas': [u'male', u'kangaroo', u'often', u'``', u'box', u"''", u'amongst', u'each', u'other', u',', u'playfully', u',', u'for', u'dominance', u',', u'or', u'in', u'competition', u'for', u'mate', u'.'], u'pos': [u'JJ', u'NNS', u'RB', u'``', u'NN', u"''", u'IN', u'DT', u'JJ', u',', u'RB', u',', u'IN', u'NN', u',', u'CC', u'IN', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[13136, 13140], [13141, 13150], [13151, 13156], [13157, 13158], [13158, 13161], [13161, 13162], [13163, 13170], [13171, 13175], [13176, 13181], [13181, 13182], [13183, 13192], [13192, 13193], [13194, 13197], [13198, 13207], [13207, 13208], [13209, 13211], [13212, 13214], [13215, 13226], [13227, 13230], [13231, 13236], [13236, 13237]]}) 
answer: set([u'shoot', u'wild', u'meat'])
candidate Sentence: (0.06147255003452301, {u'tokens': [u'Kangaroos', u'have', u'large', u',', u'powerful', u'hind', u'legs', u',', u'large', u'feet', u'adapted', u'for', u'leaping', u',', u'a', u'long', u'muscular', u'tail', u'for', u'balance', u',', u'and', u'a', u'small', u'head', u'.'], u'lemmas': [u'kangaroo', u'have', u'large', u',', u'powerful', u'hind', u'leg', u',', u'large', u'foot', u'adapt', u'for', u'leap', u',', u'a', u'long', u'muscular', u'tail', u'for', u'balance', u',', u'and', u'a', u'small', u'head', u'.'], u'pos': [u'NNS', u'VBP', u'JJ', u',', u'JJ', u'JJ', u'NNS', u',', u'JJ', u'NNS', u'VBN', u'IN', u'VBG', u',', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'NN', u',', u'CC', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[4172, 4181], [4182, 4186], [4187, 4192], [4192, 4193], [4194, 4202], [4203, 4207], [4208, 4212], [4212, 4213], [4214, 4219], [4220, 4224], [4225, 4232], [4233, 4236], [4237, 4244], [4244, 4245], [4246, 4247], [4248, 4252], [4253, 4261], [4262, 4266], [4267, 4270], [4271, 4278], [4278, 4279], [4280, 4283], [4284, 4285], [4286, 4291], [4292, 4296], [4296, 4297]]}) 
answer: set([u'shoot', u'wild', u'meat'])
candidate Sentence: (0.060175836086273193, {u'tokens': [u':', u'For', u'other', u'uses', u',', u'see', u'kangaroo', u'-LRB-', u'disambiguation', u'-RRB-', u'.'], u'lemmas': [u':', u'for', u'other', u'use', u',', u'see', u'kangaroo', u'-lrb-', u'disambiguation', u'-rrb-', u'.'], u'pos': [u':', u'IN', u'JJ', u'NNS', u',', u'VBP', u'NN', u'-LRB-', u'NN', u'-RRB-', u'.'], u'char_offsets': [[0, 1], [1, 4], [5, 10], [11, 15], [15, 16], [17, 20], [21, 29], [30, 31], [31, 45], [45, 46], [46, 47]]}) 
answer: set([u'shoot', u'wild', u'meat'])
candidate Sentence: (0.050698917359113693, {u'tokens': [u'If', u'a', u'female', u'is', u'the', u'victim', u'of', u'a', u'collision', u',', u'animal', u'welfare', u'groups', u'ask', u'that', u'her', u'pouch', u'be', u'checked', u'for', u'any', u'surviving', u'joey', u',', u'in', u'which', u'case', u'it', u'may', u'be', u'removed', u'to', u'a', u'wildlife', u'sanctuary', u'or', u'veterinary', u'surgeon', u'for', u'rehabilitation', u'.'], u'lemmas': [u'if', u'a', u'female', u'be', u'the', u'victim', u'of', u'a', u'collision', u',', u'animal', u'welfare', u'group', u'ask', u'that', u'she', u'pouch', u'be', u'check', u'for', u'any', u'survive', u'joey', u',', u'in', u'which', u'case', u'it', u'may', u'be', u'remove', u'to', u'a', u'wildlife', u'sanctuary', u'or', u'veterinary', u'surgeon', u'for', u'rehabilitation', u'.'], u'pos': [u'IN', u'DT', u'NN', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NN', u',', u'NN', u'NN', u'NNS', u'VBP', u'IN', u'PRP$', u'NN', u'VB', u'VBN', u'IN', u'DT', u'VBG', u'NN', u',', u'IN', u'WDT', u'NN', u'PRP', u'MD', u'VB', u'VBN', u'TO', u'DT', u'NN', u'NN', u'CC', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[14982, 14984], [14985, 14986], [14987, 14993], [14994, 14996], [14997, 15000], [15001, 15007], [15008, 15010], [15011, 15012], [15013, 15022], [15022, 15023], [15024, 15030], [15031, 15038], [15039, 15045], [15046, 15049], [15050, 15054], [15055, 15058], [15059, 15064], [15065, 15067], [15068, 15075], [15076, 15079], [15080, 15083], [15084, 15093], [15094, 15098], [15098, 15099], [15100, 15102], [15103, 15108], [15109, 15113], [15114, 15116], [15117, 15120], [15121, 15123], [15124, 15131], [15132, 15134], [15135, 15136], [15137, 15145], [15146, 15155], [15156, 15158], [15159, 15169], [15170, 15177], [15178, 15181], [15182, 15196], [15196, 15197]]}) 
answer: set([u'shoot', u'wild', u'meat'])
candidate Sentence: (0.050192516297101974, {u'tokens': [u'Kangaroo', u'hops', u'in', u'line', u'for', u'genome', u'sequencing', u'URL', u'accessed', u'January', u'6', u',', u'2007', u'.'], u'lemmas': [u'kangaroo', u'hop', u'in', u'line', u'for', u'genome', u'sequencing', u'url', u'access', u'January', u'6', u',', u'2007', u'.'], u'pos': [u'NN', u'VBZ', u'IN', u'NN', u'IN', u'NN', u'NN', u'NN', u'VBD', u'NNP', u'CD', u',', u'CD', u'.'], u'char_offsets': [[11214, 11222], [11223, 11227], [11228, 11230], [11231, 11235], [11236, 11239], [11240, 11246], [11247, 11257], [11258, 11261], [11262, 11270], [11271, 11278], [11279, 11280], [11280, 11281], [11282, 11286], [11286, 11287]]}) 
answer: set([u'shoot', u'wild', u'meat'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'kangaroo', u'.'])

Are wild kangaroos shot for meat?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = kangaroo
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a1.txt

No
_____________________________ test_yesno[param210] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e8440>, (<src.tfidf.TF_IDF object at 0x10ff474d0>, set(['.', 'kangaroo'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156e8440>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.26315087080001831, {u'tokens': [u'A', u'collision', u'with', u'a', u'vehicle', u'is', u'capable', u'of', u'killing', u'a', u'kangaroo', u'.'], u'lemmas': [u'a', u'collision', u'with', u'a', u'vehicle', u'be', u'capable', u'of', u'kill', u'a', u'kangaroo', u'.'], u'pos': [u'DT', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'JJ', u'IN', u'VBG', u'DT', u'NN', u'.'], u'char_offsets': [[14147, 14148], [14149, 14158], [14159, 14163], [14164, 14165], [14166, 14173], [14174, 14176], [14177, 14184], [14185, 14187], [14188, 14195], [14196, 14197], [14198, 14206], [14206, 14207]]}) 
answer: set([u'herbivour'])
candidate Sentence: (0.25980418920516968, {u'tokens': [u'A', u'kangaroo', u'crossing', u'a', u'highway', u'.'], u'lemmas': [u'a', u'kangaroo', u'cross', u'a', u'highway', u'.'], u'pos': [u'DT', u'NN', u'VBG', u'DT', u'NN', u'.'], u'char_offsets': [[14116, 14117], [14118, 14126], [14127, 14135], [14136, 14137], [14138, 14145], [14145, 14146]]}) 
answer: set([u'herbivour'])
candidate Sentence: (0.17387896776199341, {u'tokens': [u'A', u'``', u'kangaroo', u'crossing', u"''", u'sign', u'on', u'an', u'Australian', u'highway', u'.'], u'lemmas': [u'a', u'``', u'kangaroo', u'cross', u"''", u'sign', u'on', u'a', u'australian', u'highway', u'.'], u'pos': [u'DT', u'``', u'NN', u'VBG', u"''", u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[14063, 14064], [14065, 14066], [14066, 14074], [14075, 14083], [14083, 14084], [14085, 14089], [14090, 14092], [14093, 14095], [14096, 14106], [14107, 14114], [14114, 14115]]}) 
answer: set([u'herbivour'])
candidate Sentence: (0.17289406061172485, {u'tokens': [u'For', u'kangaroos', u',', u'the', u'key', u'benefit', u'of', u'hopping', u'is', u'not', u'speed', u'to', u'escape', u'predators', u'the', u'top', u'speed', u'of', u'a', u'kangaroo', u'is', u'no', u'higher', u'than', u'that', u'of', u'a', u'similarly-sized', u'quadruped', u',', u'and', u'the', u'Australian', u'native', u'predators', u'are', u'in', u'any', u'case', u'less', u'fearsome', u'than', u'those', u'of', u'other', u'continents', u'but', u'economy', u':', u'in', u'an', u'infertile', u'continent', u'with', u'highly', u'variable', u'weather', u'patterns', u',', u'the', u'ability', u'of', u'a', u'kangaroo', u'to', u'travel', u'long', u'distances', u'at', u'moderately', u'high', u'speed', u'in', u'search', u'of', u'food', u'sources', u'is', u'crucial', u'to', u'survival', u'.'], u'lemmas': [u'for', u'kangaroo', u',', u'the', u'key', u'benefit', u'of', u'hop', u'be', u'not', u'speed', u'to', u'escape', u'predator', u'the', u'top', u'speed', u'of', u'a', u'kangaroo', u'be', u'no', u'higher', u'than', u'that', u'of', u'a', u'similarly-sized', u'quadruped', u',', u'and', u'the', u'australian', u'native', u'predator', u'be', u'in', u'any', u'case', u'less', u'fearsome', u'than', u'those', u'of', u'other', u'continent', u'but', u'economy', u':', u'in', u'a', u'infertile', u'continent', u'with', u'highly', u'variable', u'weather', u'pattern', u',', u'the', u'ability', u'of', u'a', u'kangaroo', u'to', u'travel', u'long', u'distance', u'at', u'moderately', u'high', u'speed', u'in', u'search', u'of', u'food', u'source', u'be', u'crucial', u'to', u'survival', u'.'], u'pos': [u'IN', u'NNS', u',', u'DT', u'JJ', u'NN', u'IN', u'VBG', u'VBZ', u'RB', u'VB', u'TO', u'VB', u'NNS', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'DT', u'JJR', u'IN', u'DT', u'IN', u'DT', u'JJ', u'NN', u',', u'CC', u'DT', u'JJ', u'JJ', u'NNS', u'VBP', u'IN', u'DT', u'NN', u'RBR', u'JJ', u'IN', u'DT', u'IN', u'JJ', u'NNS', u'CC', u'NN', u':', u'IN', u'DT', u'JJ', u'NN', u'IN', u'RB', u'JJ', u'NN', u'NNS', u',', u'DT', u'NN', u'IN', u'DT', u'NN', u'TO', u'VB', u'JJ', u'NNS', u'IN', u'RB', u'JJ', u'NN', u'IN', u'NN', u'IN', u'NN', u'NNS', u'VBZ', u'JJ', u'TO', u'NN', u'.'], u'char_offsets': [[10563, 10566], [10567, 10576], [10576, 10577], [10578, 10581], [10582, 10585], [10586, 10593], [10594, 10596], [10597, 10604], [10605, 10607], [10608, 10611], [10612, 10617], [10618, 10620], [10621, 10627], [10628, 10637], [10638, 10641], [10642, 10645], [10646, 10651], [10652, 10654], [10655, 10656], [10657, 10665], [10666, 10668], [10669, 10671], [10672, 10678], [10679, 10683], [10684, 10688], [10689, 10691], [10692, 10693], [10694, 10709], [10710, 10719], [10719, 10720], [10721, 10724], [10725, 10728], [10729, 10739], [10740, 10746], [10747, 10756], [10757, 10760], [10761, 10763], [10764, 10767], [10768, 10772], [10773, 10777], [10778, 10786], [10787, 10791], [10792, 10797], [10798, 10800], [10801, 10806], [10807, 10817], [10818, 10821], [10822, 10829], [10829, 10830], [10831, 10833], [10834, 10836], [10837, 10846], [10847, 10856], [10857, 10861], [10862, 10868], [10869, 10877], [10878, 10885], [10886, 10894], [10894, 10895], [10896, 10899], [10900, 10907], [10908, 10910], [10911, 10912], [10913, 10921], [10922, 10924], [10925, 10931], [10932, 10936], [10937, 10946], [10947, 10949], [10950, 10960], [10961, 10965], [10966, 10971], [10972, 10974], [10975, 10981], [10982, 10984], [10985, 10989], [10990, 10997], [10998, 11000], [11001, 11008], [11009, 11011], [11012, 11020], [11020, 11021]]}) 
answer: set([u'herbivour'])
candidate Sentence: (0.16707488894462585, {u'tokens': [u'A', u'kangaroo', u'is', u'a', u'marsupial', u'from', u'the', u'family', u'Macropodidae', u'-LRB-', u'macropods', u',', u'meaning', u'`', u'large', u'foot', u"'", u'-RRB-', u'.'], u'lemmas': [u'a', u'kangaroo', u'be', u'a', u'marsupial', u'from', u'the', u'family', u'Macropodidae', u'-lrb-', u'macropod', u',', u'mean', u'`', u'large', u'foot', u"'", u'-rrb-', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NN', u'NNP', u'-LRB-', u'NNS', u',', u'VBG', u'``', u'JJ', u'NN', u"''", u'-RRB-', u'.'], u'char_offsets': [[48, 49], [50, 58], [59, 61], [62, 63], [64, 73], [74, 78], [79, 82], [83, 89], [90, 102], [103, 104], [104, 113], [113, 114], [115, 122], [123, 124], [124, 129], [130, 134], [134, 135], [135, 136], [136, 137]]}) 
answer: set([u'herbivour'])
candidate Sentence: (0.16469214856624603, {u'tokens': [u'Likewise', u',', u'when', u'an', u'adult', u'kangaroo', u'is', u'injured', u'in', u'a', u'collision', u',', u'a', u'vet', u',', u'the', u'RSPCA', u'or', u'the', u'National', u'Parks', u'and', u'Wildlife', u'Service', u'can', u'be', u'consulted', u'for', u'instructions', u'on', u'proper', u'care', u'.'], u'lemmas': [u'likewise', u',', u'when', u'a', u'adult', u'kangaroo', u'be', u'injure', u'in', u'a', u'collision', u',', u'a', u'vet', u',', u'the', u'RSPCA', u'or', u'the', u'National', u'Parks', u'and', u'Wildlife', u'Service', u'can', u'be', u'consult', u'for', u'instruction', u'on', u'proper', u'care', u'.'], u'pos': [u'RB', u',', u'WRB', u'DT', u'JJ', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'NN', u',', u'DT', u'NN', u',', u'DT', u'NNP', u'CC', u'DT', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'MD', u'VB', u'VBN', u'IN', u'NNS', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[15199, 15207], [15207, 15208], [15209, 15213], [15214, 15216], [15217, 15222], [15223, 15231], [15232, 15234], [15235, 15242], [15243, 15245], [15246, 15247], [15248, 15257], [15257, 15258], [15259, 15260], [15261, 15264], [15264, 15265], [15266, 15269], [15270, 15275], [15276, 15278], [15279, 15282], [15283, 15291], [15292, 15297], [15298, 15301], [15302, 15310], [15311, 15318], [15319, 15322], [15323, 15325], [15326, 15335], [15336, 15339], [15340, 15352], [15353, 15355], [15356, 15362], [15363, 15367], [15367, 15368]]}) 
answer: set([u'herbivour'])
candidate Sentence: (0.15167301893234253, {u'tokens': [u'Kangaroos', u'are', u'the', u'only', u'large', u'animals', u'to', u'use', u'hopping', u'as', u'a', u'means', u'of', u'locomotion', u'.'], u'lemmas': [u'kangaroo', u'be', u'the', u'only', u'large', u'animal', u'to', u'use', u'hop', u'as', u'a', u'means', u'of', u'locomotion', u'.'], u'pos': [u'NNS', u'VBP', u'DT', u'RB', u'JJ', u'NNS', u'TO', u'VB', u'VBG', u'IN', u'DT', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[4415, 4424], [4425, 4428], [4429, 4432], [4433, 4437], [4438, 4443], [4444, 4451], [4452, 4454], [4455, 4458], [4459, 4466], [4467, 4469], [4470, 4471], [4472, 4477], [4478, 4480], [4481, 4491], [4491, 4492]]}) 
answer: set([u'herbivour'])
candidate Sentence: (0.14653688669204712, {u'tokens': [u'Newborn', u'joey', u'sucking', u'on', u'a', u'teat', u'in', u'the', u'pouch', u'Kangaroos', u'have', u'developed', u'a', u'number', u'of', u'adaptations', u'to', u'a', u'dry', u',', u'infertile', u'continent', u'and', u'highly', u'variable', u'climate', u'.'], u'lemmas': [u'newborn', u'joey', u'suck', u'on', u'a', u'teat', u'in', u'the', u'pouch', u'kangaroo', u'have', u'develop', u'a', u'number', u'of', u'adaptation', u'to', u'a', u'dry', u',', u'infertile', u'continent', u'and', u'highly', u'variable', u'climate', u'.'], u'pos': [u'JJ', u'NN', u'VBG', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'NNS', u'VBP', u'VBN', u'DT', u'NN', u'IN', u'NNS', u'TO', u'DT', u'JJ', u',', u'JJ', u'NN', u'CC', u'RB', u'JJ', u'NN', u'.'], u'char_offsets': [[8057, 8064], [8065, 8069], [8070, 8077], [8078, 8080], [8081, 8082], [8083, 8087], [8088, 8090], [8091, 8094], [8095, 8100], [8101, 8110], [8111, 8115], [8116, 8125], [8126, 8127], [8128, 8134], [8135, 8137], [8138, 8149], [8150, 8152], [8153, 8154], [8155, 8158], [8158, 8159], [8160, 8169], [8170, 8179], [8180, 8183], [8184, 8190], [8191, 8199], [8200, 8207], [8207, 8208]]}) 
answer: set([u'herbivour'])
candidate Sentence: (0.13608753681182861, {u'tokens': [u'There', u'are', u'four', u'species', u'that', u'are', u'commonly', u'referred', u'to', u'as', u'kangaroos', u':', u'*', u'The', u'Red', u'Kangaroo', u'-LRB-', u'Macropus', u'rufus', u'-RRB-', u'is', u'the', u'largest', u'surviving', u'marsupial', u'anywhere', u'in', u'the', u'world', u'.'], u'lemmas': [u'there', u'be', u'four', u'species', u'that', u'be', u'commonly', u'refer', u'to', u'as', u'kangaroo', u':', u'*', u'the', u'red', u'kangaroo', u'-lrb-', u'macropus', u'rufus', u'-rrb-', u'be', u'the', u'largest', u'survive', u'marsupial', u'anywhere', u'in', u'the', u'world', u'.'], u'pos': [u'EX', u'VBP', u'CD', u'NNS', u'WDT', u'VBP', u'RB', u'VBN', u'TO', u'IN', u'NNS', u':', u'SYM', u'DT', u'JJ', u'NN', u'-LRB-', u'NN', u'NN', u'-RRB-', u'VBZ', u'DT', u'JJS', u'VBG', u'JJ', u'RB', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[2749, 2754], [2755, 2758], [2759, 2763], [2764, 2771], [2772, 2776], [2777, 2780], [2781, 2789], [2790, 2798], [2799, 2801], [2802, 2804], [2805, 2814], [2814, 2815], [2816, 2817], [2818, 2821], [2822, 2825], [2826, 2834], [2835, 2836], [2836, 2844], [2845, 2850], [2850, 2851], [2852, 2854], [2855, 2858], [2859, 2866], [2867, 2876], [2877, 2886], [2887, 2895], [2896, 2898], [2899, 2902], [2903, 2908], [2908, 2909]]}) 
answer: set([u'herbivour'])
candidate Sentence: (0.13519878685474396, {u'tokens': [u'The', u'average', u'life', u'expectancy', u'of', u'a', u'kangaroo', u'is', u'about', u'4', u'6', u'years', u'.'], u'lemmas': [u'the', u'average', u'life', u'expectancy', u'of', u'a', u'kangaroo', u'be', u'about', u'4', u'6', u'year', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'NN', u'IN', u'DT', u'NN', u'VBZ', u'IN', u'CD', u'CD', u'NNS', u'.'], u'char_offsets': [[5135, 5138], [5139, 5146], [5147, 5151], [5152, 5162], [5163, 5165], [5166, 5167], [5168, 5176], [5177, 5179], [5180, 5185], [5186, 5187], [5188, 5189], [5190, 5195], [5195, 5196]]}) 
answer: set([u'herbivour'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'kangaroo', u'.'])

Is the kangaroo an herbivour?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = kangaroo
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a1.txt

No
_____________________________ test_yesno[param211] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e8488>, (<src.tfidf.TF_IDF object at 0x10ff474d0>, set(['.', 'kangaroo'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156e8488>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.32835710048675537, {u'tokens': [u'Kangaroos', u':', u'Biology', u'of', u'the', u'Largest', u'Marsupials', u'.'], u'lemmas': [u'Kangaroos', u':', u'Biology', u'of', u'the', u'Largest', u'Marsupials', u'.'], u'pos': [u'NNP', u':', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'.'], u'char_offsets': [[16633, 16642], [16642, 16643], [16644, 16651], [16652, 16654], [16655, 16658], [16659, 16666], [16667, 16677], [16677, 16678]]}) 
answer: set([u'shi'])
candidate Sentence: (0.29523679614067078, {u'tokens': [u'Europeans', u'have', u'long', u'regarded', u'Kangaroos', u'as', u'strange', u'animals', u'.'], u'lemmas': [u'Europeans', u'have', u'long', u'regard', u'Kangaroos', u'as', u'strange', u'animal', u'.'], u'pos': [u'NNPS', u'VBP', u'JJ', u'VBN', u'NNP', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[3833, 3842], [3843, 3847], [3848, 3852], [3853, 3861], [3862, 3871], [3872, 3874], [3875, 3882], [3883, 3890], [3890, 3891]]}) 
answer: set([u'shi'])
candidate Sentence: (0.27759763598442078, {u'tokens': [u'Hindleg', u'of', u'a', u'kangaroo', u'Kangaroos', u'and', u'wallabies', u'have', u'large', u',', u'stretchy', u'tendons', u'in', u'their', u'hind', u'legs', u'.'], u'lemmas': [u'Hindleg', u'of', u'a', u'kangaroo', u'Kangaroos', u'and', u'wallaby', u'have', u'large', u',', u'stretchy', u'tendon', u'in', u'they', u'hind', u'leg', u'.'], u'pos': [u'NNP', u'IN', u'DT', u'NN', u'NNP', u'CC', u'NNS', u'VBP', u'JJ', u',', u'JJ', u'NNS', u'IN', u'PRP$', u'JJ', u'NNS', u'.'], u'char_offsets': [[9568, 9575], [9576, 9578], [9579, 9580], [9581, 9589], [9590, 9599], [9600, 9603], [9604, 9613], [9614, 9618], [9619, 9624], [9624, 9625], [9626, 9634], [9636, 9643], [9644, 9646], [9647, 9652], [9653, 9657], [9658, 9662], [9662, 9663]]}) 
answer: set([u'shi'])
candidate Sentence: (0.22964669764041901, {u'tokens': [u'*', u'The', u'Antilopine', u'Kangaroo', u'-LRB-', u'Macropus', u'antilopinus', u'-RRB-', u'is', u',', u'essentially', u',', u'the', u'far-northern', u'equivalent', u'of', u'the', u'Eastern', u'and', u'Western', u'Grey', u'Kangaroos', u'.'], u'lemmas': [u'*', u'the', u'Antilopine', u'Kangaroo', u'-lrb-', u'Macropus', u'antilopinus', u'-rrb-', u'be', u',', u'essentially', u',', u'the', u'far-northern', u'equivalent', u'of', u'the', u'Eastern', u'and', u'Western', u'Grey', u'Kangaroos', u'.'], u'pos': [u'SYM', u'DT', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNS', u'-RRB-', u'VBZ', u',', u'RB', u',', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[3506, 3507], [3508, 3511], [3512, 3522], [3523, 3531], [3532, 3533], [3533, 3541], [3542, 3553], [3553, 3554], [3555, 3557], [3557, 3558], [3559, 3570], [3570, 3571], [3572, 3575], [3576, 3588], [3589, 3599], [3600, 3602], [3603, 3606], [3607, 3614], [3615, 3618], [3619, 3626], [3627, 3631], [3632, 3641], [3641, 3642]]}) 
answer: set([u'shi'])
candidate Sentence: (0.22811026871204376, {u'tokens': [u'Kangaroos', u'and', u'wallabies', u'are', u'adept', u'swimmers', u',', u'and', u'often', u'flee', u'into', u'waterways', u'if', u'presented', u'with', u'the', u'option', u'.'], u'lemmas': [u'Kangaroos', u'and', u'wallaby', u'be', u'adept', u'swimmer', u',', u'and', u'often', u'flee', u'into', u'waterway', u'if', u'present', u'with', u'the', u'option', u'.'], u'pos': [u'NNP', u'CC', u'NNS', u'VBP', u'JJ', u'NNS', u',', u'CC', u'RB', u'VBP', u'IN', u'NNS', u'IN', u'VBN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[7629, 7638], [7639, 7642], [7643, 7652], [7653, 7656], [7657, 7662], [7663, 7671], [7671, 7672], [7673, 7676], [7677, 7682], [7683, 7687], [7688, 7692], [7693, 7702], [7703, 7705], [7706, 7715], [7716, 7720], [7721, 7724], [7725, 7731], [7731, 7732]]}) 
answer: set([u'shi'])
candidate Sentence: (0.21044920384883881, {u'tokens': [u'Kangaroos', u'dazzled', u'by', u'headlights', u'or', u'startled', u'by', u'engine', u'noise', u'have', u'been', u'known', u'to', u'leap', u'in', u'front', u'of', u'cars', u'.'], u'lemmas': [u'Kangaroos', u'dazzle', u'by', u'headlight', u'or', u'startle', u'by', u'engine', u'noise', u'have', u'be', u'know', u'to', u'leap', u'in', u'front', u'of', u'car', u'.'], u'pos': [u'NNP', u'VBN', u'IN', u'NNS', u'CC', u'VBN', u'IN', u'NN', u'NN', u'VBP', u'VBN', u'VBN', u'TO', u'VB', u'IN', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[14208, 14217], [14218, 14225], [14226, 14228], [14229, 14239], [14240, 14242], [14243, 14251], [14252, 14254], [14255, 14261], [14262, 14267], [14268, 14272], [14273, 14277], [14278, 14283], [14284, 14286], [14287, 14291], [14292, 14294], [14295, 14300], [14301, 14303], [14304, 14308], [14308, 14309]]}) 
answer: set([u'shi'])
candidate Sentence: (0.025943312793970108, {u'tokens': [u'They', u'are', u'not', u'farmed', u'to', u'any', u'extent', u',', u'but', u'wild', u'kangaroos', u'are', u'shot', u'for', u'meat', u',', u'over', u'which', u'there', u'is', u'controversy', u'.'], u'lemmas': [u'they', u'be', u'not', u'farm', u'to', u'any', u'extent', u',', u'but', u'wild', u'kangaroo', u'be', u'shoot', u'for', u'meat', u',', u'over', u'which', u'there', u'be', u'controversy', u'.'], u'pos': [u'PRP', u'VBP', u'RB', u'VBN', u'TO', u'DT', u'NN', u',', u'CC', u'JJ', u'NNS', u'VBP', u'VBN', u'IN', u'NN', u',', u'IN', u'WDT', u'EX', u'VBZ', u'NN', u'.'], u'char_offsets': [[796, 800], [801, 804], [805, 808], [809, 815], [816, 818], [819, 822], [823, 829], [829, 830], [831, 834], [835, 839], [840, 849], [850, 853], [854, 858], [859, 862], [863, 867], [867, 868], [869, 873], [874, 879], [880, 885], [886, 888], [889, 900], [900, 901]]}) 
answer: set([u'shi'])
candidate Sentence: (0.022587137296795845, {u'tokens': [u'There', u'are', u'four', u'species', u'that', u'are', u'commonly', u'referred', u'to', u'as', u'kangaroos', u':', u'*', u'The', u'Red', u'Kangaroo', u'-LRB-', u'Macropus', u'rufus', u'-RRB-', u'is', u'the', u'largest', u'surviving', u'marsupial', u'anywhere', u'in', u'the', u'world', u'.'], u'lemmas': [u'there', u'be', u'four', u'species', u'that', u'be', u'commonly', u'refer', u'to', u'as', u'kangaroo', u':', u'*', u'the', u'red', u'kangaroo', u'-lrb-', u'macropus', u'rufus', u'-rrb-', u'be', u'the', u'largest', u'survive', u'marsupial', u'anywhere', u'in', u'the', u'world', u'.'], u'pos': [u'EX', u'VBP', u'CD', u'NNS', u'WDT', u'VBP', u'RB', u'VBN', u'TO', u'IN', u'NNS', u':', u'SYM', u'DT', u'JJ', u'NN', u'-LRB-', u'NN', u'NN', u'-RRB-', u'VBZ', u'DT', u'JJS', u'VBG', u'JJ', u'RB', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[2749, 2754], [2755, 2758], [2759, 2763], [2764, 2771], [2772, 2776], [2777, 2780], [2781, 2789], [2790, 2798], [2799, 2801], [2802, 2804], [2805, 2814], [2814, 2815], [2816, 2817], [2818, 2821], [2822, 2825], [2826, 2834], [2835, 2836], [2836, 2844], [2845, 2850], [2850, 2851], [2852, 2854], [2855, 2858], [2859, 2866], [2867, 2876], [2877, 2886], [2887, 2895], [2896, 2898], [2899, 2902], [2903, 2908], [2908, 2909]]}) 
answer: set([u'shi'])
candidate Sentence: (0.021335016936063766, {u'tokens': [u'Male', u'kangaroos', u'are', u'called', u'bucks', u',', u'boomers', u',', u'jacks', u',', u'or', u'old', u'men', u';', u'females', u'are', u'does', u',', u'flyers', u',', u'or', u'jills', u',', u'and', u'the', u'young', u'ones', u'are', u'joeys', u'.'], u'lemmas': [u'male', u'kangaroo', u'be', u'call', u'buck', u',', u'boomer', u',', u'jack', u',', u'or', u'old', u'man', u';', u'female', u'be', u'do', u',', u'flyer', u',', u'or', u'jill', u',', u'and', u'the', u'young', u'one', u'be', u'joey', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'VBN', u'NNS', u',', u'NNS', u',', u'NNS', u',', u'CC', u'JJ', u'NNS', u':', u'NNS', u'VBP', u'VBZ', u',', u'NNS', u',', u'CC', u'NNS', u',', u'CC', u'DT', u'JJ', u'NNS', u'VBP', u'NNS', u'.'], u'char_offsets': [[2380, 2384], [2385, 2394], [2395, 2398], [2399, 2405], [2406, 2411], [2411, 2412], [2413, 2420], [2420, 2421], [2422, 2427], [2427, 2428], [2429, 2431], [2432, 2435], [2436, 2439], [2439, 2440], [2441, 2448], [2449, 2452], [2453, 2457], [2457, 2458], [2459, 2465], [2465, 2466], [2467, 2469], [2470, 2475], [2475, 2476], [2477, 2480], [2481, 2484], [2485, 2490], [2491, 2495], [2496, 2499], [2500, 2505], [2505, 2506]]}) 
answer: set([u'shi'])
candidate Sentence: (0.020103663206100464, {u'tokens': [u'Kangaroos', u'are', u'endemic', u'to', u'the', u'continent', u'of', u'Australia', u',', u'while', u'the', u'smaller', u'macropods', u'are', u'found', u'in', u'Australia', u'and', u'New', u'Guinea', u'.'], u'lemmas': [u'kangaroo', u'be', u'endemic', u'to', u'the', u'continent', u'of', u'Australia', u',', u'while', u'the', u'smaller', u'macropod', u'be', u'find', u'in', u'Australia', u'and', u'New', u'Guinea', u'.'], u'pos': [u'NNS', u'VBP', u'JJ', u'TO', u'DT', u'NN', u'IN', u'NNP', u',', u'IN', u'DT', u'JJR', u'NNS', u'VBP', u'VBN', u'IN', u'NNP', u'CC', u'NNP', u'NNP', u'.'], u'char_offsets': [[488, 497], [498, 501], [502, 509], [510, 512], [513, 516], [517, 526], [527, 529], [530, 539], [539, 540], [541, 546], [547, 550], [551, 558], [559, 568], [569, 572], [573, 578], [579, 581], [582, 591], [592, 595], [596, 599], [600, 606], [606, 607]]}) 
answer: set([u'shi'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'kangaroo', u'.'])

Are Kangaroos Shy?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = kangaroo
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a1.txt

No
_____________________________ test_yesno[param222] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e87a0>, (<src.tfidf.TF_IDF object at 0x11240d190>, set(['.', 'leopard'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156e87a0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.47908809781074524, {u'tokens': [u'The', u'leopard', u'-LRB-', u'Panthera', u'pardus', u'-RRB-', u'is', u'an', u'Old', u'World', u'mammal', u'of', u'the', u'Felidae', u'family', u'and', u'the', u'smallest', u'of', u'the', u'four', u'`', u'big', u'cats', u"'", u'of', u'the', u'genus', u'Panthera', u',', u'along', u'with', u'the', u'tiger', u',', u'lion', u',', u'and', u'jaguar', u'.'], u'lemmas': [u'the', u'leopard', u'-lrb-', u'panthera', u'pardus', u'-rrb-', u'be', u'a', u'old', u'world', u'mammal', u'of', u'the', u'Felidae', u'family', u'and', u'the', u'smallest', u'of', u'the', u'four', u'`', u'big', u'cat', u"'", u'of', u'the', u'genus', u'panthera', u',', u'along', u'with', u'the', u'tiger', u',', u'lion', u',', u'and', u'jaguar', u'.'], u'pos': [u'DT', u'NN', u'-LRB-', u'NN', u'NN', u'-RRB-', u'VBZ', u'DT', u'JJ', u'NN', u'NN', u'IN', u'DT', u'NNP', u'NN', u'CC', u'DT', u'JJS', u'IN', u'DT', u'CD', u'``', u'JJ', u'NNS', u'POS', u'IN', u'DT', u'NN', u'NN', u',', u'IN', u'IN', u'DT', u'NN', u',', u'NN', u',', u'CC', u'NN', u'.'], u'char_offsets': [[0, 3], [4, 11], [12, 13], [13, 21], [22, 28], [28, 29], [30, 32], [33, 35], [36, 39], [40, 45], [46, 52], [53, 55], [56, 59], [60, 67], [68, 74], [75, 78], [79, 82], [83, 91], [92, 94], [95, 98], [99, 103], [104, 105], [105, 108], [109, 113], [113, 114], [115, 117], [118, 121], [122, 127], [128, 136], [136, 137], [138, 143], [144, 148], [149, 152], [153, 158], [158, 159], [160, 164], [164, 165], [166, 169], [170, 176], [176, 177]]}) 
answer: set([u'one'])
candidate Sentence: (0.19897578656673431, {u'tokens': [u'However', u',', u'three', u'or', u'four', u'are', u'sometimes', u'seen', u'together', u'.'], u'lemmas': [u'however', u',', u'three', u'or', u'four', u'be', u'sometimes', u'see', u'together', u'.'], u'pos': [u'RB', u',', u'CD', u'CC', u'CD', u'VBP', u'RB', u'VBN', u'RB', u'.'], u'char_offsets': [[5444, 5451], [5451, 5452], [5453, 5458], [5459, 5461], [5462, 5466], [5467, 5470], [5471, 5480], [5481, 5485], [5486, 5494], [5494, 5495]]}) 
answer: set([u'big', u'cat', u'one'])
candidate Sentence: (0.16335420310497284, {u'tokens': [u'These', u'cats', u'are', u'solitary', u',', u'avoiding', u'one', u'another', u'.'], u'lemmas': [u'these', u'cat', u'be', u'solitary', u',', u'avoid', u'one', u'another', u'.'], u'pos': [u'DT', u'NNS', u'VBP', u'JJ', u',', u'VBG', u'CD', u'DT', u'.'], u'char_offsets': [[5397, 5402], [5403, 5407], [5408, 5411], [5412, 5420], [5420, 5421], [5422, 5430], [5431, 5434], [5435, 5442], [5442, 5443]]}) 
answer: set([u'four', u'big'])
candidate Sentence: (0.15100601315498352, {u'tokens': [u'Hearing', u'and', u'eyesight', u'are', u'the', u'strongest', u'of', u'these', u'cats', u"'", u'senses', u'and', u'are', u'extremely', u'acute', u'.'], u'lemmas': [u'hearing', u'and', u'eyesight', u'be', u'the', u'strongest', u'of', u'these', u'cat', u"'", u'sens', u'and', u'be', u'extremely', u'acute', u'.'], u'pos': [u'NN', u'CC', u'NN', u'VBP', u'DT', u'JJS', u'IN', u'DT', u'NNS', u'POS', u'NNS', u'CC', u'VBP', u'RB', u'JJ', u'.'], u'char_offsets': [[5496, 5503], [5504, 5507], [5508, 5516], [5517, 5520], [5521, 5524], [5525, 5534], [5535, 5537], [5538, 5543], [5544, 5548], [5548, 5549], [5550, 5556], [5557, 5560], [5561, 5564], [5565, 5574], [5575, 5580], [5580, 5581]]}) 
answer: set([u'four', u'big', u'one'])
candidate Sentence: (0.10590791702270508, {u'tokens': [u'The', u'victims', u"'", u'flesh', u'would', u'be', u'cut', u'from', u'their', u'bodies', u'and', u'distributed', u'to', u'members', u'of', u'the', u'society', u'.'], u'lemmas': [u'the', u'victim', u"'", u'flesh', u'would', u'be', u'cut', u'from', u'they', u'body', u'and', u'distribute', u'to', u'member', u'of', u'the', u'society', u'.'], u'pos': [u'DT', u'NNS', u'POS', u'NN', u'MD', u'VB', u'VBN', u'IN', u'PRP$', u'NNS', u'CC', u'VBN', u'TO', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[19924, 19927], [19928, 19935], [19935, 19936], [19937, 19942], [19943, 19948], [19949, 19951], [19952, 19955], [19956, 19960], [19961, 19966], [19967, 19973], [19974, 19977], [19978, 19989], [19990, 19992], [19993, 20000], [20001, 20003], [20004, 20007], [20008, 20015], [20015, 20016]]}) 
answer: set([u'four', u'big', u'cat', u'one'])
candidate Sentence: (0.093532398343086243, {u'tokens': [u'Johns', u'Hopkins', u'University', u'Press', u',', u'1999', u'ISBN', u'0-8018-5789-9', u'One', u'of', u'many', u'spotted', u'cats', u',', u'a', u'leopard', u'may', u'be', u'mistaken', u'for', u'a', u'cheetah', u'or', u'a', u'jaguar', u'.'], u'lemmas': [u'Johns', u'Hopkins', u'University', u'Press', u',', u'1999', u'ISBN', u'0-8018-5789-9', u'one', u'of', u'many', u'spotted', u'cat', u',', u'a', u'leopard', u'may', u'be', u'mistake', u'for', u'a', u'cheetah', u'or', u'a', u'jaguar', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'NNP', u',', u'CD', u'NNP', u'CD', u'CD', u'IN', u'JJ', u'JJ', u'NNS', u',', u'DT', u'NN', u'MD', u'VB', u'VBN', u'IN', u'DT', u'NN', u'CC', u'DT', u'NN', u'.'], u'char_offsets': [[2848, 2853], [2854, 2861], [2862, 2872], [2873, 2878], [2878, 2879], [2880, 2884], [2885, 2889], [2890, 2903], [2904, 2907], [2908, 2910], [2911, 2915], [2916, 2923], [2924, 2928], [2928, 2929], [2930, 2931], [2932, 2939], [2940, 2943], [2944, 2946], [2947, 2955], [2956, 2959], [2960, 2961], [2962, 2969], [2970, 2972], [2973, 2974], [2975, 2981], [2981, 2982]]}) 
answer: set([u'four', u'big'])
candidate Sentence: (0.089797534048557281, {u'tokens': [u'*', u'Leopardus', u',', u'a', u'separate', u'genus', u'of', u'cats', u'*', u'Center', u'for', u'Animal', u'Research', u'and', u'Education', u'Providing', u'Sanctuary', u'for', u'over', u'50', u'big', u'cats', u'*', u'Pictures', u'and', u'Information', u'on', u'Leopards', u'*', u'South', u'African', u'Leopard', u'and', u'Predator', u'Conservation', u'*', u'Leopard', u':', u'Wildlife', u'summary', u'from', u'the', u'African', u'Wildlife', u'Foundation', u'*', u'The', u'Nature', u'Conservatory', u"'s", u'Species', u'Profile', u':', u'Leopard', u'*', u'Images', u'and', u'movies', u'of', u'the', u'South', u'Arabian', u'leopard', u'-LRB-', u'Panthera', u'pardus', u'nimr', u'-RRB-', u'from', u'ARKive', u'*', u'Images', u'and', u'movies', u'of', u'the', u'Sri', u'Lankan', u'leopard', u'-LRB-', u'Panthera', u'pardus', u'kotiya', u'-RRB-', u'from', u'ARKive', u'Frederick', u'II', u',', u'Holy', u'Roman', u'Emperor', u'coat', u'of', u'arms', u'of', u'England', u'coat', u'of', u'arms', u'of', u'Benin', u'Coat', u'of', u'arms', u'of', u'Malawi', u'Coat', u'of', u'arms', u'of', u'Somalia', u'Coat', u'of', u'arms', u'of', u'the', u'Democratic', u'Republic', u'of', u'the', u'Congo', u'Coat', u'of', u'arms', u'of', u'Gabon', u'Sierra', u'Leone', u'National', u'Premier', u'League'], u'lemmas': [u'*', u'leopardus', u',', u'a', u'separate', u'genus', u'of', u'cat', u'*', u'Center', u'for', u'Animal', u'Research', u'and', u'Education', u'Providing', u'Sanctuary', u'for', u'over', u'50', u'big', u'cat', u'*', u'Pictures', u'and', u'Information', u'on', u'Leopards', u'*', u'South', u'African', u'Leopard', u'and', u'Predator', u'Conservation', u'*', u'Leopard', u':', u'Wildlife', u'summary', u'from', u'the', u'african', u'Wildlife', u'Foundation', u'*', u'the', u'Nature', u'Conservatory', u"'s", u'Species', u'Profile', u':', u'Leopard', u'*', u'Images', u'and', u'movie', u'of', u'the', u'South', u'Arabian', u'leopard', u'-lrb-', u'panthera', u'pardus', u'nimr', u'-rrb-', u'from', u'arkive', u'*', u'Images', u'and', u'movie', u'of', u'the', u'Sri', u'Lankan', u'leopard', u'-lrb-', u'panthera', u'pardus', u'kotiya', u'-rrb-', u'from', u'ARKive', u'Frederick', u'II', u',', u'Holy', u'Roman', u'Emperor', u'coat', u'of', u'arm', u'of', u'England', u'coat', u'of', u'arm', u'of', u'Benin', u'Coat', u'of', u'arm', u'of', u'Malawi', u'Coat', u'of', u'arm', u'of', u'Somalia', u'Coat', u'of', u'arm', u'of', u'the', u'democratic', u'republic', u'of', u'the', u'Congo', u'coat', u'of', u'arm', u'of', u'Gabon', u'Sierra', u'Leone', u'National', u'Premier', u'League'], u'pos': [u'SYM', u'NN', u',', u'DT', u'JJ', u'NN', u'IN', u'NNS', u'SYM', u'NNP', u'IN', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'IN', u'IN', u'CD', u'JJ', u'NNS', u'SYM', u'NNPS', u'CC', u'NNP', u'IN', u'NNPS', u'SYM', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'SYM', u'NNP', u':', u'NNP', u'NN', u'IN', u'DT', u'JJ', u'NNP', u'NNP', u'SYM', u'DT', u'NNP', u'NNP', u'POS', u'NNP', u'NNP', u':', u'NNP', u'SYM', u'NNPS', u'CC', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'-LRB-', u'NN', u'NN', u'NN', u'-RRB-', u'IN', u'NN', u'SYM', u'NNPS', u'CC', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'-LRB-', u'NN', u'NN', u'NN', u'-RRB-', u'IN', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'NNP', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'IN', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP'], u'char_offsets': [[23921, 23922], [23922, 23931], [23931, 23932], [23933, 23934], [23935, 23943], [23944, 23949], [23950, 23952], [23953, 23957], [23958, 23959], [23960, 23966], [23967, 23970], [23971, 23977], [23978, 23986], [23987, 23990], [23991, 24000], [24001, 24010], [24011, 24020], [24021, 24024], [24025, 24029], [24030, 24032], [24033, 24036], [24037, 24041], [24042, 24043], [24045, 24053], [24054, 24057], [24058, 24069], [24070, 24072], [24073, 24081], [24082, 24083], [24085, 24090], [24091, 24098], [24099, 24106], [24107, 24110], [24111, 24119], [24120, 24132], [24133, 24134], [24136, 24143], [24143, 24144], [24145, 24153], [24154, 24161], [24162, 24166], [24167, 24170], [24171, 24178], [24179, 24187], [24188, 24198], [24199, 24200], [24202, 24205], [24206, 24212], [24213, 24225], [24225, 24227], [24228, 24235], [24236, 24243], [24243, 24244], [24245, 24252], [24253, 24254], [24256, 24262], [24263, 24266], [24267, 24273], [24274, 24276], [24277, 24280], [24281, 24286], [24287, 24294], [24295, 24302], [24303, 24304], [24304, 24312], [24313, 24319], [24320, 24324], [24324, 24325], [24326, 24330], [24331, 24337], [24338, 24339], [24341, 24347], [24348, 24351], [24352, 24358], [24359, 24361], [24362, 24365], [24366, 24369], [24370, 24376], [24377, 24384], [24385, 24386], [24386, 24394], [24395, 24401], [24402, 24408], [24408, 24409], [24410, 24414], [24415, 24421], [24422, 24431], [24432, 24434], [24434, 24435], [24436, 24440], [24441, 24446], [24447, 24454], [24455, 24459], [24460, 24462], [24463, 24467], [24468, 24470], [24471, 24478], [24479, 24483], [24484, 24486], [24487, 24491], [24492, 24494], [24495, 24500], [24501, 24505], [24506, 24508], [24509, 24513], [24514, 24516], [24517, 24523], [24524, 24528], [24529, 24531], [24532, 24536], [24537, 24539], [24540, 24547], [24548, 24552], [24553, 24555], [24556, 24560], [24561, 24563], [24564, 24567], [24568, 24578], [24579, 24587], [24588, 24590], [24591, 24594], [24595, 24600], [24601, 24605], [24606, 24608], [24609, 24613], [24614, 24616], [24617, 24622], [24623, 24629], [24630, 24635], [24636, 24644], [24645, 24652], [24653, 24659]]}) 
answer: set([u'four', u'one'])
candidate Sentence: (0.087508462369441986, {u'tokens': [u'Members', u'would', u'dress', u'in', u'leopard', u'skins', u',', u'waylaying', u'travellers', u'with', u'sharp', u'claw-like', u'weapons', u'in', u'the', u'form', u'of', u'leopards', u"'", u'claws', u'and', u'teeth', u'.'], u'lemmas': [u'member', u'would', u'dress', u'in', u'leopard', u'skin', u',', u'waylay', u'traveller', u'with', u'sharp', u'claw-like', u'weapon', u'in', u'the', u'form', u'of', u'leopard', u"'", u'claw', u'and', u'tooth', u'.'], u'pos': [u'NNS', u'MD', u'VB', u'IN', u'NN', u'NNS', u',', u'VBG', u'NNS', u'IN', u'JJ', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'IN', u'NNS', u'POS', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[19794, 19801], [19802, 19807], [19808, 19813], [19814, 19816], [19817, 19824], [19825, 19830], [19830, 19831], [19832, 19841], [19842, 19852], [19853, 19857], [19858, 19863], [19864, 19873], [19874, 19881], [19882, 19884], [19885, 19888], [19889, 19893], [19894, 19896], [19897, 19905], [19905, 19906], [19907, 19912], [19913, 19916], [19917, 19922], [19922, 19923]]}) 
answer: set([u'four', u'big', u'cat', u'one'])
candidate Sentence: (0.086240045726299286, {u'tokens': [u'In', u'Asia', u',', u'one', u'can', u'see', u'leopards', u'Yala', u'National', u'Park', u'in', u'Sri', u'Lanka', u',', u'which', u'has', u'one', u'of', u'the', u'world', u"'s", u'highest', u'density', u'of', u'wild', u'leopards', u',', u'but', u'even', u'here', u'sightings', u'are', u'by', u'no', u'means', u'guaranteed', u'because', u'more', u'than', u'half', u'the', u'park', u'is', u'closed', u'off', u'to', u'the', u'public', u',', u'allowing', u'the', u'animals', u'to', u'thrive', u'.'], u'lemmas': [u'in', u'Asia', u',', u'one', u'can', u'see', u'leopard', u'Yala', u'National', u'Park', u'in', u'Sri', u'Lanka', u',', u'which', u'have', u'one', u'of', u'the', u'world', u"'s", u'highest', u'density', u'of', u'wild', u'leopard', u',', u'but', u'even', u'here', u'sighting', u'be', u'by', u'no', u'means', u'guarantee', u'because', u'more', u'than', u'half', u'the', u'park', u'be', u'close', u'off', u'to', u'the', u'public', u',', u'allow', u'the', u'animal', u'to', u'thrive', u'.'], u'pos': [u'IN', u'NNP', u',', u'CD', u'MD', u'VB', u'NNS', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u',', u'WDT', u'VBZ', u'CD', u'IN', u'DT', u'NN', u'POS', u'JJS', u'NN', u'IN', u'JJ', u'NNS', u',', u'CC', u'RB', u'RB', u'NNS', u'VBP', u'IN', u'DT', u'NNS', u'VBN', u'IN', u'JJR', u'IN', u'PDT', u'DT', u'NN', u'VBZ', u'VBN', u'RB', u'TO', u'DT', u'NN', u',', u'VBG', u'DT', u'NNS', u'TO', u'VB', u'.'], u'char_offsets': [[18167, 18169], [18170, 18174], [18174, 18175], [18176, 18179], [18180, 18183], [18184, 18187], [18188, 18196], [18197, 18201], [18202, 18210], [18211, 18215], [18216, 18218], [18219, 18222], [18223, 18228], [18228, 18229], [18230, 18235], [18236, 18239], [18240, 18243], [18244, 18246], [18247, 18250], [18251, 18256], [18256, 18258], [18259, 18266], [18267, 18274], [18275, 18277], [18278, 18282], [18283, 18291], [18291, 18292], [18293, 18296], [18297, 18301], [18302, 18306], [18307, 18316], [18317, 18320], [18321, 18323], [18324, 18326], [18327, 18332], [18333, 18343], [18344, 18351], [18352, 18356], [18357, 18361], [18362, 18366], [18367, 18370], [18371, 18375], [18376, 18378], [18379, 18385], [18386, 18389], [18390, 18392], [18393, 18396], [18397, 18403], [18403, 18404], [18405, 18413], [18414, 18417], [18418, 18425], [18426, 18428], [18429, 18435], [18435, 18436]]}) 
answer: set([u'four', u'big', u'cat'])
candidate Sentence: (0.083545103669166565, {u'tokens': [u'The', u'species', u"'", u'success', u'owes', u'in', u'part', u'to', u'its', u'opportunistic', u'hunting', u'behaviour', u'and', u'its', u'adaptability', u'to', u'a', u'variety', u'of', u'habitats', u'.'], u'lemmas': [u'the', u'species', u"'", u'success', u'owe', u'in', u'part', u'to', u'its', u'opportunistic', u'hunting', u'behaviour', u'and', u'its', u'adaptability', u'to', u'a', u'variety', u'of', u'habitat', u'.'], u'pos': [u'DT', u'NNS', u'POS', u'NN', u'VBZ', u'IN', u'NN', u'TO', u'PRP$', u'JJ', u'NN', u'NN', u'CC', u'PRP$', u'NN', u'TO', u'DT', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[809, 812], [813, 820], [820, 821], [822, 829], [830, 834], [835, 837], [838, 842], [843, 845], [846, 849], [850, 863], [864, 871], [872, 881], [882, 885], [886, 889], [890, 902], [903, 905], [906, 907], [908, 915], [916, 918], [919, 927], [927, 928]]}) 
answer: set([u'four', u'big', u'cat', u'one'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'leopard', u'.'])

Is the leopard one of the four 'big cats'?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = leopard
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a2.txt

No
_____________________________ test_yesno[param223] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e87e8>, (<src.tfidf.TF_IDF object at 0x11240d190>, set(['.', 'leopard'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156e87e8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.47908809781074524, {u'tokens': [u'The', u'leopard', u'-LRB-', u'Panthera', u'pardus', u'-RRB-', u'is', u'an', u'Old', u'World', u'mammal', u'of', u'the', u'Felidae', u'family', u'and', u'the', u'smallest', u'of', u'the', u'four', u'`', u'big', u'cats', u"'", u'of', u'the', u'genus', u'Panthera', u',', u'along', u'with', u'the', u'tiger', u',', u'lion', u',', u'and', u'jaguar', u'.'], u'lemmas': [u'the', u'leopard', u'-lrb-', u'panthera', u'pardus', u'-rrb-', u'be', u'a', u'old', u'world', u'mammal', u'of', u'the', u'Felidae', u'family', u'and', u'the', u'smallest', u'of', u'the', u'four', u'`', u'big', u'cat', u"'", u'of', u'the', u'genus', u'panthera', u',', u'along', u'with', u'the', u'tiger', u',', u'lion', u',', u'and', u'jaguar', u'.'], u'pos': [u'DT', u'NN', u'-LRB-', u'NN', u'NN', u'-RRB-', u'VBZ', u'DT', u'JJ', u'NN', u'NN', u'IN', u'DT', u'NNP', u'NN', u'CC', u'DT', u'JJS', u'IN', u'DT', u'CD', u'``', u'JJ', u'NNS', u'POS', u'IN', u'DT', u'NN', u'NN', u',', u'IN', u'IN', u'DT', u'NN', u',', u'NN', u',', u'CC', u'NN', u'.'], u'char_offsets': [[0, 3], [4, 11], [12, 13], [13, 21], [22, 28], [28, 29], [30, 32], [33, 35], [36, 39], [40, 45], [46, 52], [53, 55], [56, 59], [60, 67], [68, 74], [75, 78], [79, 82], [83, 91], [92, 94], [95, 98], [99, 103], [104, 105], [105, 108], [109, 113], [113, 114], [115, 117], [118, 121], [122, 127], [128, 136], [136, 137], [138, 143], [144, 148], [149, 152], [153, 158], [158, 159], [160, 164], [164, 165], [166, 169], [170, 176], [176, 177]]}) 
answer: set([u'one'])
candidate Sentence: (0.19897578656673431, {u'tokens': [u'However', u',', u'three', u'or', u'four', u'are', u'sometimes', u'seen', u'together', u'.'], u'lemmas': [u'however', u',', u'three', u'or', u'four', u'be', u'sometimes', u'see', u'together', u'.'], u'pos': [u'RB', u',', u'CD', u'CC', u'CD', u'VBP', u'RB', u'VBN', u'RB', u'.'], u'char_offsets': [[5444, 5451], [5451, 5452], [5453, 5458], [5459, 5461], [5462, 5466], [5467, 5470], [5471, 5480], [5481, 5485], [5486, 5494], [5494, 5495]]}) 
answer: set([u'big', u'cat', u'one'])
candidate Sentence: (0.16335420310497284, {u'tokens': [u'These', u'cats', u'are', u'solitary', u',', u'avoiding', u'one', u'another', u'.'], u'lemmas': [u'these', u'cat', u'be', u'solitary', u',', u'avoid', u'one', u'another', u'.'], u'pos': [u'DT', u'NNS', u'VBP', u'JJ', u',', u'VBG', u'CD', u'DT', u'.'], u'char_offsets': [[5397, 5402], [5403, 5407], [5408, 5411], [5412, 5420], [5420, 5421], [5422, 5430], [5431, 5434], [5435, 5442], [5442, 5443]]}) 
answer: set([u'four', u'big'])
candidate Sentence: (0.15100601315498352, {u'tokens': [u'Hearing', u'and', u'eyesight', u'are', u'the', u'strongest', u'of', u'these', u'cats', u"'", u'senses', u'and', u'are', u'extremely', u'acute', u'.'], u'lemmas': [u'hearing', u'and', u'eyesight', u'be', u'the', u'strongest', u'of', u'these', u'cat', u"'", u'sens', u'and', u'be', u'extremely', u'acute', u'.'], u'pos': [u'NN', u'CC', u'NN', u'VBP', u'DT', u'JJS', u'IN', u'DT', u'NNS', u'POS', u'NNS', u'CC', u'VBP', u'RB', u'JJ', u'.'], u'char_offsets': [[5496, 5503], [5504, 5507], [5508, 5516], [5517, 5520], [5521, 5524], [5525, 5534], [5535, 5537], [5538, 5543], [5544, 5548], [5548, 5549], [5550, 5556], [5557, 5560], [5561, 5564], [5565, 5574], [5575, 5580], [5580, 5581]]}) 
answer: set([u'four', u'big', u'one'])
candidate Sentence: (0.10590791702270508, {u'tokens': [u'The', u'victims', u"'", u'flesh', u'would', u'be', u'cut', u'from', u'their', u'bodies', u'and', u'distributed', u'to', u'members', u'of', u'the', u'society', u'.'], u'lemmas': [u'the', u'victim', u"'", u'flesh', u'would', u'be', u'cut', u'from', u'they', u'body', u'and', u'distribute', u'to', u'member', u'of', u'the', u'society', u'.'], u'pos': [u'DT', u'NNS', u'POS', u'NN', u'MD', u'VB', u'VBN', u'IN', u'PRP$', u'NNS', u'CC', u'VBN', u'TO', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[19924, 19927], [19928, 19935], [19935, 19936], [19937, 19942], [19943, 19948], [19949, 19951], [19952, 19955], [19956, 19960], [19961, 19966], [19967, 19973], [19974, 19977], [19978, 19989], [19990, 19992], [19993, 20000], [20001, 20003], [20004, 20007], [20008, 20015], [20015, 20016]]}) 
answer: set([u'four', u'big', u'cat', u'one'])
candidate Sentence: (0.093532398343086243, {u'tokens': [u'Johns', u'Hopkins', u'University', u'Press', u',', u'1999', u'ISBN', u'0-8018-5789-9', u'One', u'of', u'many', u'spotted', u'cats', u',', u'a', u'leopard', u'may', u'be', u'mistaken', u'for', u'a', u'cheetah', u'or', u'a', u'jaguar', u'.'], u'lemmas': [u'Johns', u'Hopkins', u'University', u'Press', u',', u'1999', u'ISBN', u'0-8018-5789-9', u'one', u'of', u'many', u'spotted', u'cat', u',', u'a', u'leopard', u'may', u'be', u'mistake', u'for', u'a', u'cheetah', u'or', u'a', u'jaguar', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'NNP', u',', u'CD', u'NNP', u'CD', u'CD', u'IN', u'JJ', u'JJ', u'NNS', u',', u'DT', u'NN', u'MD', u'VB', u'VBN', u'IN', u'DT', u'NN', u'CC', u'DT', u'NN', u'.'], u'char_offsets': [[2848, 2853], [2854, 2861], [2862, 2872], [2873, 2878], [2878, 2879], [2880, 2884], [2885, 2889], [2890, 2903], [2904, 2907], [2908, 2910], [2911, 2915], [2916, 2923], [2924, 2928], [2928, 2929], [2930, 2931], [2932, 2939], [2940, 2943], [2944, 2946], [2947, 2955], [2956, 2959], [2960, 2961], [2962, 2969], [2970, 2972], [2973, 2974], [2975, 2981], [2981, 2982]]}) 
answer: set([u'four', u'big'])
candidate Sentence: (0.089797534048557281, {u'tokens': [u'*', u'Leopardus', u',', u'a', u'separate', u'genus', u'of', u'cats', u'*', u'Center', u'for', u'Animal', u'Research', u'and', u'Education', u'Providing', u'Sanctuary', u'for', u'over', u'50', u'big', u'cats', u'*', u'Pictures', u'and', u'Information', u'on', u'Leopards', u'*', u'South', u'African', u'Leopard', u'and', u'Predator', u'Conservation', u'*', u'Leopard', u':', u'Wildlife', u'summary', u'from', u'the', u'African', u'Wildlife', u'Foundation', u'*', u'The', u'Nature', u'Conservatory', u"'s", u'Species', u'Profile', u':', u'Leopard', u'*', u'Images', u'and', u'movies', u'of', u'the', u'South', u'Arabian', u'leopard', u'-LRB-', u'Panthera', u'pardus', u'nimr', u'-RRB-', u'from', u'ARKive', u'*', u'Images', u'and', u'movies', u'of', u'the', u'Sri', u'Lankan', u'leopard', u'-LRB-', u'Panthera', u'pardus', u'kotiya', u'-RRB-', u'from', u'ARKive', u'Frederick', u'II', u',', u'Holy', u'Roman', u'Emperor', u'coat', u'of', u'arms', u'of', u'England', u'coat', u'of', u'arms', u'of', u'Benin', u'Coat', u'of', u'arms', u'of', u'Malawi', u'Coat', u'of', u'arms', u'of', u'Somalia', u'Coat', u'of', u'arms', u'of', u'the', u'Democratic', u'Republic', u'of', u'the', u'Congo', u'Coat', u'of', u'arms', u'of', u'Gabon', u'Sierra', u'Leone', u'National', u'Premier', u'League'], u'lemmas': [u'*', u'leopardus', u',', u'a', u'separate', u'genus', u'of', u'cat', u'*', u'Center', u'for', u'Animal', u'Research', u'and', u'Education', u'Providing', u'Sanctuary', u'for', u'over', u'50', u'big', u'cat', u'*', u'Pictures', u'and', u'Information', u'on', u'Leopards', u'*', u'South', u'African', u'Leopard', u'and', u'Predator', u'Conservation', u'*', u'Leopard', u':', u'Wildlife', u'summary', u'from', u'the', u'african', u'Wildlife', u'Foundation', u'*', u'the', u'Nature', u'Conservatory', u"'s", u'Species', u'Profile', u':', u'Leopard', u'*', u'Images', u'and', u'movie', u'of', u'the', u'South', u'Arabian', u'leopard', u'-lrb-', u'panthera', u'pardus', u'nimr', u'-rrb-', u'from', u'arkive', u'*', u'Images', u'and', u'movie', u'of', u'the', u'Sri', u'Lankan', u'leopard', u'-lrb-', u'panthera', u'pardus', u'kotiya', u'-rrb-', u'from', u'ARKive', u'Frederick', u'II', u',', u'Holy', u'Roman', u'Emperor', u'coat', u'of', u'arm', u'of', u'England', u'coat', u'of', u'arm', u'of', u'Benin', u'Coat', u'of', u'arm', u'of', u'Malawi', u'Coat', u'of', u'arm', u'of', u'Somalia', u'Coat', u'of', u'arm', u'of', u'the', u'democratic', u'republic', u'of', u'the', u'Congo', u'coat', u'of', u'arm', u'of', u'Gabon', u'Sierra', u'Leone', u'National', u'Premier', u'League'], u'pos': [u'SYM', u'NN', u',', u'DT', u'JJ', u'NN', u'IN', u'NNS', u'SYM', u'NNP', u'IN', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'IN', u'IN', u'CD', u'JJ', u'NNS', u'SYM', u'NNPS', u'CC', u'NNP', u'IN', u'NNPS', u'SYM', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'SYM', u'NNP', u':', u'NNP', u'NN', u'IN', u'DT', u'JJ', u'NNP', u'NNP', u'SYM', u'DT', u'NNP', u'NNP', u'POS', u'NNP', u'NNP', u':', u'NNP', u'SYM', u'NNPS', u'CC', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'-LRB-', u'NN', u'NN', u'NN', u'-RRB-', u'IN', u'NN', u'SYM', u'NNPS', u'CC', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'NN', u'-LRB-', u'NN', u'NN', u'NN', u'-RRB-', u'IN', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'NNP', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'IN', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP'], u'char_offsets': [[23921, 23922], [23922, 23931], [23931, 23932], [23933, 23934], [23935, 23943], [23944, 23949], [23950, 23952], [23953, 23957], [23958, 23959], [23960, 23966], [23967, 23970], [23971, 23977], [23978, 23986], [23987, 23990], [23991, 24000], [24001, 24010], [24011, 24020], [24021, 24024], [24025, 24029], [24030, 24032], [24033, 24036], [24037, 24041], [24042, 24043], [24045, 24053], [24054, 24057], [24058, 24069], [24070, 24072], [24073, 24081], [24082, 24083], [24085, 24090], [24091, 24098], [24099, 24106], [24107, 24110], [24111, 24119], [24120, 24132], [24133, 24134], [24136, 24143], [24143, 24144], [24145, 24153], [24154, 24161], [24162, 24166], [24167, 24170], [24171, 24178], [24179, 24187], [24188, 24198], [24199, 24200], [24202, 24205], [24206, 24212], [24213, 24225], [24225, 24227], [24228, 24235], [24236, 24243], [24243, 24244], [24245, 24252], [24253, 24254], [24256, 24262], [24263, 24266], [24267, 24273], [24274, 24276], [24277, 24280], [24281, 24286], [24287, 24294], [24295, 24302], [24303, 24304], [24304, 24312], [24313, 24319], [24320, 24324], [24324, 24325], [24326, 24330], [24331, 24337], [24338, 24339], [24341, 24347], [24348, 24351], [24352, 24358], [24359, 24361], [24362, 24365], [24366, 24369], [24370, 24376], [24377, 24384], [24385, 24386], [24386, 24394], [24395, 24401], [24402, 24408], [24408, 24409], [24410, 24414], [24415, 24421], [24422, 24431], [24432, 24434], [24434, 24435], [24436, 24440], [24441, 24446], [24447, 24454], [24455, 24459], [24460, 24462], [24463, 24467], [24468, 24470], [24471, 24478], [24479, 24483], [24484, 24486], [24487, 24491], [24492, 24494], [24495, 24500], [24501, 24505], [24506, 24508], [24509, 24513], [24514, 24516], [24517, 24523], [24524, 24528], [24529, 24531], [24532, 24536], [24537, 24539], [24540, 24547], [24548, 24552], [24553, 24555], [24556, 24560], [24561, 24563], [24564, 24567], [24568, 24578], [24579, 24587], [24588, 24590], [24591, 24594], [24595, 24600], [24601, 24605], [24606, 24608], [24609, 24613], [24614, 24616], [24617, 24622], [24623, 24629], [24630, 24635], [24636, 24644], [24645, 24652], [24653, 24659]]}) 
answer: set([u'four', u'one'])
candidate Sentence: (0.087508462369441986, {u'tokens': [u'Members', u'would', u'dress', u'in', u'leopard', u'skins', u',', u'waylaying', u'travellers', u'with', u'sharp', u'claw-like', u'weapons', u'in', u'the', u'form', u'of', u'leopards', u"'", u'claws', u'and', u'teeth', u'.'], u'lemmas': [u'member', u'would', u'dress', u'in', u'leopard', u'skin', u',', u'waylay', u'traveller', u'with', u'sharp', u'claw-like', u'weapon', u'in', u'the', u'form', u'of', u'leopard', u"'", u'claw', u'and', u'tooth', u'.'], u'pos': [u'NNS', u'MD', u'VB', u'IN', u'NN', u'NNS', u',', u'VBG', u'NNS', u'IN', u'JJ', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'IN', u'NNS', u'POS', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[19794, 19801], [19802, 19807], [19808, 19813], [19814, 19816], [19817, 19824], [19825, 19830], [19830, 19831], [19832, 19841], [19842, 19852], [19853, 19857], [19858, 19863], [19864, 19873], [19874, 19881], [19882, 19884], [19885, 19888], [19889, 19893], [19894, 19896], [19897, 19905], [19905, 19906], [19907, 19912], [19913, 19916], [19917, 19922], [19922, 19923]]}) 
answer: set([u'four', u'big', u'cat', u'one'])
candidate Sentence: (0.086240045726299286, {u'tokens': [u'In', u'Asia', u',', u'one', u'can', u'see', u'leopards', u'Yala', u'National', u'Park', u'in', u'Sri', u'Lanka', u',', u'which', u'has', u'one', u'of', u'the', u'world', u"'s", u'highest', u'density', u'of', u'wild', u'leopards', u',', u'but', u'even', u'here', u'sightings', u'are', u'by', u'no', u'means', u'guaranteed', u'because', u'more', u'than', u'half', u'the', u'park', u'is', u'closed', u'off', u'to', u'the', u'public', u',', u'allowing', u'the', u'animals', u'to', u'thrive', u'.'], u'lemmas': [u'in', u'Asia', u',', u'one', u'can', u'see', u'leopard', u'Yala', u'National', u'Park', u'in', u'Sri', u'Lanka', u',', u'which', u'have', u'one', u'of', u'the', u'world', u"'s", u'highest', u'density', u'of', u'wild', u'leopard', u',', u'but', u'even', u'here', u'sighting', u'be', u'by', u'no', u'means', u'guarantee', u'because', u'more', u'than', u'half', u'the', u'park', u'be', u'close', u'off', u'to', u'the', u'public', u',', u'allow', u'the', u'animal', u'to', u'thrive', u'.'], u'pos': [u'IN', u'NNP', u',', u'CD', u'MD', u'VB', u'NNS', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u',', u'WDT', u'VBZ', u'CD', u'IN', u'DT', u'NN', u'POS', u'JJS', u'NN', u'IN', u'JJ', u'NNS', u',', u'CC', u'RB', u'RB', u'NNS', u'VBP', u'IN', u'DT', u'NNS', u'VBN', u'IN', u'JJR', u'IN', u'PDT', u'DT', u'NN', u'VBZ', u'VBN', u'RB', u'TO', u'DT', u'NN', u',', u'VBG', u'DT', u'NNS', u'TO', u'VB', u'.'], u'char_offsets': [[18167, 18169], [18170, 18174], [18174, 18175], [18176, 18179], [18180, 18183], [18184, 18187], [18188, 18196], [18197, 18201], [18202, 18210], [18211, 18215], [18216, 18218], [18219, 18222], [18223, 18228], [18228, 18229], [18230, 18235], [18236, 18239], [18240, 18243], [18244, 18246], [18247, 18250], [18251, 18256], [18256, 18258], [18259, 18266], [18267, 18274], [18275, 18277], [18278, 18282], [18283, 18291], [18291, 18292], [18293, 18296], [18297, 18301], [18302, 18306], [18307, 18316], [18317, 18320], [18321, 18323], [18324, 18326], [18327, 18332], [18333, 18343], [18344, 18351], [18352, 18356], [18357, 18361], [18362, 18366], [18367, 18370], [18371, 18375], [18376, 18378], [18379, 18385], [18386, 18389], [18390, 18392], [18393, 18396], [18397, 18403], [18403, 18404], [18405, 18413], [18414, 18417], [18418, 18425], [18426, 18428], [18429, 18435], [18435, 18436]]}) 
answer: set([u'four', u'big', u'cat'])
candidate Sentence: (0.083545103669166565, {u'tokens': [u'The', u'species', u"'", u'success', u'owes', u'in', u'part', u'to', u'its', u'opportunistic', u'hunting', u'behaviour', u'and', u'its', u'adaptability', u'to', u'a', u'variety', u'of', u'habitats', u'.'], u'lemmas': [u'the', u'species', u"'", u'success', u'owe', u'in', u'part', u'to', u'its', u'opportunistic', u'hunting', u'behaviour', u'and', u'its', u'adaptability', u'to', u'a', u'variety', u'of', u'habitat', u'.'], u'pos': [u'DT', u'NNS', u'POS', u'NN', u'VBZ', u'IN', u'NN', u'TO', u'PRP$', u'JJ', u'NN', u'NN', u'CC', u'PRP$', u'NN', u'TO', u'DT', u'NN', u'IN', u'NNS', u'.'], u'char_offsets': [[809, 812], [813, 820], [820, 821], [822, 829], [830, 834], [835, 837], [838, 842], [843, 845], [846, 849], [850, 863], [864, 871], [872, 881], [882, 885], [886, 889], [890, 902], [903, 905], [906, 907], [908, 915], [916, 918], [919, 927], [927, 928]]}) 
answer: set([u'four', u'big', u'cat', u'one'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'leopard', u'.'])

Is the leopard one of the four 'big cats'?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = leopard
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a2.txt

No
_____________________________ test_yesno[param228] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e8950>, (<src.tfidf.TF_IDF object at 0x1144af890>, set(['.', 'liechtenstein'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156e8950>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.6859670877456665, {u'tokens': [u'At', u'one', u'time', u',', u'the', u'territory', u'of', u'Liechtenstein', u'formed', u'a', u'part', u'of', u'the', u'ancient', u'Roman', u'province', u'of', u'Raetia', u'.'], u'lemmas': [u'at', u'one', u'time', u',', u'the', u'territory', u'of', u'liechtenstein', u'form', u'a', u'part', u'of', u'the', u'ancient', u'roman', u'province', u'of', u'raetium', u'.'], u'pos': [u'IN', u'CD', u'NN', u',', u'DT', u'NN', u'IN', u'NN', u'VBD', u'DT', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[490, 492], [493, 496], [497, 501], [501, 502], [503, 506], [507, 516], [517, 519], [520, 533], [534, 540], [541, 542], [543, 547], [548, 550], [551, 554], [555, 562], [563, 568], [569, 577], [578, 580], [581, 587], [587, 588]]}) 
answer: set([u'raetia'])
candidate Sentence: (0.19360548257827759, {u'tokens': [u'Music', u'and', u'theatre', u'are', u'an', u'important', u'part', u'of', u'the', u'culture', u'.'], u'lemmas': [u'music', u'and', u'theatre', u'be', u'a', u'important', u'part', u'of', u'the', u'culture', u'.'], u'pos': [u'NN', u'CC', u'NN', u'VBP', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[20466, 20471], [20472, 20475], [20476, 20483], [20484, 20487], [20488, 20490], [20491, 20500], [20501, 20505], [20506, 20508], [20509, 20512], [20513, 20520], [20520, 20521]]}) 
answer: set([u'provinc', u'raetia', u'roman', u'ancient'])
candidate Sentence: (0.12235861271619797, {u'tokens': [u'The', u'country', u"'s", u'railways', u'are', u'administered', u'by', u'the', u'Austrian', u'Federal', u'Railways', u'as', u'part', u'of', u'the', u'route', u'between', u'Feldkirch', u',', u'Austria', u',', u'and', u'Buchs', u'SG', u',', u'Switzerland', u'.'], u'lemmas': [u'the', u'country', u"'s", u'railway', u'be', u'administer', u'by', u'the', u'austrian', u'Federal', u'Railways', u'as', u'part', u'of', u'the', u'route', u'between', u'Feldkirch', u',', u'Austria', u',', u'and', u'Buchs', u'SG', u',', u'Switzerland', u'.'], u'pos': [u'DT', u'NN', u'POS', u'NNS', u'VBP', u'VBN', u'IN', u'DT', u'JJ', u'NNP', u'NNPS', u'IN', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u',', u'NNP', u',', u'CC', u'NNP', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[18242, 18245], [18246, 18253], [18253, 18255], [18256, 18264], [18265, 18268], [18269, 18281], [18282, 18284], [18285, 18288], [18289, 18297], [18298, 18305], [18306, 18314], [18315, 18317], [18318, 18322], [18323, 18325], [18326, 18329], [18330, 18335], [18336, 18343], [18344, 18353], [18353, 18354], [18355, 18362], [18362, 18363], [18364, 18367], [18368, 18373], [18374, 18376], [18376, 18377], [18378, 18389], [18389, 18390]]}) 
answer: set([u'provinc', u'raetia', u'roman', u'ancient'])
candidate Sentence: (0.11274498701095581, {u'tokens': [u'It', u'is', u'on', u'this', u'date', u'that', u'Liechtenstein', u'became', u'a', u'sovereign', u'member', u'state', u'of', u'the', u'Holy', u'Roman', u'Empire', u'.'], u'lemmas': [u'it', u'be', u'on', u'this', u'date', u'that', u'Liechtenstein', u'become', u'a', u'sovereign', u'member', u'state', u'of', u'the', u'holy', u'roman', u'empire', u'.'], u'pos': [u'PRP', u'VBZ', u'IN', u'DT', u'NN', u'WDT', u'NNP', u'VBD', u'DT', u'JJ', u'NN', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[2540, 2542], [2543, 2545], [2546, 2548], [2549, 2553], [2554, 2558], [2559, 2563], [2564, 2577], [2578, 2584], [2585, 2586], [2587, 2596], [2597, 2603], [2604, 2609], [2610, 2612], [2613, 2616], [2617, 2621], [2622, 2627], [2628, 2634], [2634, 2635]]}) 
answer: set([u'provinc', u'raetia', u'part', u'ancient'])
candidate Sentence: (0.095187738537788391, {u'tokens': [u'Liechtenstein', u'is', u'thus', u'the', u'last', u'independent', u'state', u'in', u'Europe', u'which', u'can', u'claim', u'an', u'element', u'of', u'continuity', u'from', u'the', u'Holy', u'Roman', u'Empire', u'.'], u'lemmas': [u'Liechtenstein', u'be', u'thus', u'the', u'last', u'independent', u'state', u'in', u'Europe', u'which', u'can', u'claim', u'a', u'element', u'of', u'continuity', u'from', u'the', u'holy', u'roman', u'empire', u'.'], u'pos': [u'NNP', u'VBZ', u'RB', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'NNP', u'WDT', u'MD', u'VB', u'DT', u'NN', u'IN', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[5713, 5726], [5727, 5729], [5730, 5734], [5735, 5738], [5739, 5743], [5744, 5755], [5756, 5761], [5762, 5764], [5765, 5771], [5772, 5777], [5778, 5781], [5782, 5787], [5788, 5790], [5791, 5798], [5799, 5801], [5802, 5812], [5813, 5817], [5818, 5821], [5822, 5826], [5827, 5832], [5833, 5839], [5839, 5840]]}) 
answer: set([u'provinc', u'raetia', u'part', u'ancient'])
candidate Sentence: (0.083324819803237915, {u'tokens': [u'Schloss', u'Vaduz', u',', u'overlooking', u'the', u'capital', u',', u'is', u'still', u'home', u'to', u'the', u'prince', u'of', u'Liechtenstein', u'In', u'1806', u',', u'most', u'of', u'the', u'Holy', u'Roman', u'Empire', u'was', u'invaded', u'by', u'Napoleon', u'I', u'of', u'the', u'First', u'French', u'Empire', u'.'], u'lemmas': [u'Schloss', u'Vaduz', u',', u'overlook', u'the', u'capital', u',', u'be', u'still', u'home', u'to', u'the', u'prince', u'of', u'Liechtenstein', u'in', u'1806', u',', u'most', u'of', u'the', u'holy', u'roman', u'empire', u'be', u'invade', u'by', u'Napoleon', u'i', u'of', u'the', u'First', u'French', u'Empire', u'.'], u'pos': [u'NNP', u'NNP', u',', u'VBG', u'DT', u'NN', u',', u'VBZ', u'RB', u'NN', u'TO', u'DT', u'NN', u'IN', u'NNP', u'IN', u'CD', u',', u'JJS', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'VBD', u'VBN', u'IN', u'NNP', u'CD', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[2794, 2801], [2802, 2807], [2807, 2808], [2809, 2820], [2821, 2824], [2825, 2832], [2832, 2833], [2834, 2836], [2837, 2842], [2843, 2847], [2848, 2850], [2851, 2854], [2855, 2861], [2862, 2864], [2865, 2878], [2879, 2881], [2882, 2886], [2886, 2887], [2888, 2892], [2893, 2895], [2896, 2899], [2900, 2904], [2905, 2910], [2911, 2917], [2918, 2921], [2922, 2929], [2930, 2932], [2933, 2941], [2942, 2943], [2944, 2946], [2947, 2950], [2951, 2956], [2957, 2963], [2964, 2970], [2970, 2971]]}) 
answer: set([u'provinc', u'raetia', u'part', u'ancient'])
candidate Sentence: (0.049090441316366196, {u'tokens': [u'At', u'the', u'time', u'of', u'the', u'dissolution', u'of', u'the', u'Austro-Hungarian', u'Empire', u',', u'it', u'was', u'argued', u'that', u'Liechtenstein', u'as', u'a', u'fief', u'of', u'the', u'Holy', u'Roman', u'Empire', u'-LRB-', u'supposedly', u'still', u'incarnated', u'in', u'Liechtensteiner', u'eyes', u'at', u'an', u'abstract', u'level', u'in', u'the', u'person', u'of', u'the', u'then-dethroned', u'Austro-Hungarian', u'Emperor', u',', u'despite', u'its', u'formal', u'dissolution', u'in', u'1806', u'-RRB-', u'was', u'no', u'longer', u'bound', u'to', u'Austria', u',', u'then', u'emerging', u'as', u'an', u'independent', u'state', u',', u'which', u'did', u'not', u'consider', u'itself', u'as', u'the', u'legal', u'successor', u'to', u'the', u'Empire', u'.'], u'lemmas': [u'at', u'the', u'time', u'of', u'the', u'dissolution', u'of', u'the', u'Austro-Hungarian', u'Empire', u',', u'it', u'be', u'argue', u'that', u'liechtenstein', u'as', u'a', u'fief', u'of', u'the', u'holy', u'roman', u'empire', u'-lrb-', u'supposedly', u'still', u'incarnate', u'in', u'Liechtensteiner', u'eye', u'at', u'a', u'abstract', u'level', u'in', u'the', u'person', u'of', u'the', u'then-dethroned', u'Austro-Hungarian', u'Emperor', u',', u'despite', u'its', u'formal', u'dissolution', u'in', u'1806', u'-rrb-', u'be', u'no', u'longer', u'bind', u'to', u'Austria', u',', u'then', u'emerge', u'as', u'a', u'independent', u'state', u',', u'which', u'do', u'not', u'consider', u'itself', u'as', u'the', u'legal', u'successor', u'to', u'the', u'Empire', u'.'], u'pos': [u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u',', u'PRP', u'VBD', u'VBN', u'IN', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'-LRB-', u'RB', u'RB', u'VBN', u'IN', u'NNP', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NNP', u'NNP', u',', u'IN', u'PRP$', u'JJ', u'NN', u'IN', u'CD', u'-RRB-', u'VBD', u'RB', u'RB', u'VBN', u'TO', u'NNP', u',', u'RB', u'VBG', u'IN', u'DT', u'JJ', u'NN', u',', u'WDT', u'VBD', u'RB', u'VB', u'PRP', u'IN', u'DT', u'JJ', u'NN', u'TO', u'DT', u'NNP', u'.'], u'char_offsets': [[5267, 5269], [5270, 5273], [5274, 5278], [5279, 5281], [5282, 5285], [5286, 5297], [5298, 5300], [5301, 5304], [5305, 5321], [5322, 5328], [5328, 5329], [5330, 5332], [5333, 5336], [5337, 5343], [5344, 5348], [5349, 5362], [5363, 5365], [5366, 5367], [5368, 5372], [5373, 5375], [5376, 5379], [5380, 5384], [5385, 5390], [5391, 5397], [5398, 5399], [5399, 5409], [5410, 5415], [5416, 5426], [5427, 5429], [5430, 5445], [5446, 5450], [5451, 5453], [5454, 5456], [5457, 5465], [5466, 5471], [5472, 5474], [5475, 5478], [5479, 5485], [5486, 5488], [5489, 5492], [5493, 5507], [5508, 5524], [5525, 5532], [5532, 5533], [5534, 5541], [5542, 5545], [5546, 5552], [5553, 5564], [5565, 5567], [5568, 5572], [5572, 5573], [5574, 5577], [5578, 5580], [5581, 5587], [5588, 5593], [5594, 5596], [5597, 5604], [5604, 5605], [5606, 5610], [5611, 5619], [5620, 5622], [5623, 5625], [5626, 5637], [5638, 5643], [5643, 5644], [5645, 5650], [5651, 5654], [5655, 5658], [5659, 5667], [5668, 5674], [5675, 5677], [5678, 5681], [5682, 5687], [5688, 5697], [5698, 5700], [5701, 5704], [5705, 5711], [5711, 5712]]}) 
answer: set([u'provinc', u'raetia', u'part', u'ancient'])
candidate Sentence: (0.048644881695508957, {u'tokens': [u'The', u'family', u'yearned', u'greatly', u'for', u'the', u'added', u'power', u'which', u'a', u'seat', u'in', u'the', u'Imperial', u'government', u'would', u'garner', u',', u'and', u'therefore', u',', u'searched', u'for', u'lands', u'to', u'acquire', u'which', u'would', u'be', u'unmittelbar', u'or', u'held', u'without', u'any', u'feudal', u'personage', u'other', u'than', u'the', u'Holy', u'Roman', u'Emperor', u'himself', u'having', u'rights', u'on', u'the', u'land', u'.'], u'lemmas': [u'the', u'family', u'yearn', u'greatly', u'for', u'the', u'add', u'power', u'which', u'a', u'seat', u'in', u'the', u'Imperial', u'government', u'would', u'garner', u',', u'and', u'therefore', u',', u'search', u'for', u'land', u'to', u'acquire', u'which', u'would', u'be', u'unmittelbar', u'or', u'hold', u'without', u'any', u'feudal', u'personage', u'other', u'than', u'the', u'holy', u'roman', u'emperor', u'himself', u'have', u'rights', u'on', u'the', u'land', u'.'], u'pos': [u'DT', u'NN', u'VBD', u'RB', u'IN', u'DT', u'VBN', u'NN', u'WDT', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NN', u'MD', u'VB', u',', u'CC', u'RB', u',', u'VBD', u'IN', u'NNS', u'TO', u'VB', u'WDT', u'MD', u'VB', u'JJ', u'CC', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'JJ', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'PRP', u'VBG', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[1625, 1628], [1629, 1635], [1636, 1643], [1644, 1651], [1652, 1655], [1656, 1659], [1660, 1665], [1666, 1671], [1672, 1677], [1678, 1679], [1680, 1684], [1685, 1687], [1688, 1691], [1692, 1700], [1701, 1711], [1712, 1717], [1718, 1724], [1724, 1725], [1726, 1729], [1730, 1739], [1739, 1740], [1741, 1749], [1750, 1753], [1754, 1759], [1760, 1762], [1763, 1770], [1771, 1776], [1777, 1782], [1783, 1785], [1786, 1797], [1798, 1800], [1801, 1805], [1806, 1813], [1814, 1817], [1818, 1824], [1825, 1834], [1835, 1840], [1841, 1845], [1846, 1849], [1850, 1854], [1855, 1860], [1861, 1868], [1869, 1876], [1877, 1883], [1884, 1890], [1891, 1893], [1894, 1897], [1898, 1902], [1902, 1903]]}) 
answer: set([u'provinc', u'raetia', u'part', u'ancient'])
candidate Sentence: (0.025947682559490204, {u'tokens': [u'The', u'Kunstmuseum', u'Liechtenstein', u'is', u'the', u'museum', u'of', u'modern', u'and', u'contemporary', u'art', u'in', u'Vaduz', u'and', u'the', u'national', u'gallery', u'of', u'the', u'Principality', u'of', u'Liechtenstein', u'.'], u'lemmas': [u'the', u'Kunstmuseum', u'Liechtenstein', u'be', u'the', u'museum', u'of', u'modern', u'and', u'contemporary', u'art', u'in', u'Vaduz', u'and', u'the', u'national', u'gallery', u'of', u'the', u'Principality', u'of', u'Liechtenstein', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'JJ', u'CC', u'JJ', u'NN', u'IN', u'NNP', u'CC', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[19172, 19175], [19176, 19187], [19188, 19201], [19202, 19204], [19205, 19208], [19209, 19215], [19216, 19218], [19219, 19225], [19226, 19229], [19230, 19242], [19243, 19246], [19247, 19249], [19250, 19255], [19256, 19259], [19260, 19263], [19264, 19272], [19273, 19280], [19281, 19283], [19284, 19287], [19288, 19300], [19301, 19303], [19304, 19317], [19317, 19318]]}) 
answer: set([u'provinc', u'raetia', u'roman', u'ancient', u'part'])
candidate Sentence: (0.021188821643590927, {u'tokens': [u'The', u'reigning', u'prince', u'of', u'the', u'Princely', u'House', u'of', u'Liechtenstein', u'is', u'the', u'head', u'of', u'state', u'and', u',', u'as', u'such', u',', u'represents', u'Liechtenstein', u'in', u'its', u'international', u'relations', u'-LRB-', u'although', u'Switzerland', u'has', u'taken', u'responsibility', u'for', u'much', u'of', u'Liechtenstein', u"'s", u'diplomatic', u'relations', u'-RRB-', u'.'], u'lemmas': [u'the', u'reign', u'prince', u'of', u'the', u'Princely', u'House', u'of', u'Liechtenstein', u'be', u'the', u'head', u'of', u'state', u'and', u',', u'as', u'such', u',', u'represent', u'Liechtenstein', u'in', u'its', u'international', u'relation', u'-lrb-', u'although', u'Switzerland', u'have', u'take', u'responsibility', u'for', u'much', u'of', u'Liechtenstein', u"'s", u'diplomatic', u'relation', u'-rrb-', u'.'], u'pos': [u'DT', u'VBG', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'NN', u'CC', u',', u'IN', u'JJ', u',', u'VBZ', u'NNP', u'IN', u'PRP$', u'JJ', u'NNS', u'-LRB-', u'IN', u'NNP', u'VBZ', u'VBN', u'NN', u'IN', u'JJ', u'IN', u'NNP', u'POS', u'JJ', u'NNS', u'-RRB-', u'.'], u'char_offsets': [[9047, 9050], [9051, 9059], [9060, 9066], [9067, 9069], [9070, 9073], [9074, 9082], [9083, 9088], [9089, 9091], [9092, 9105], [9106, 9108], [9109, 9112], [9113, 9117], [9118, 9120], [9121, 9126], [9127, 9130], [9130, 9131], [9132, 9134], [9135, 9139], [9139, 9140], [9141, 9151], [9152, 9165], [9166, 9168], [9169, 9172], [9173, 9186], [9187, 9196], [9197, 9198], [9198, 9206], [9207, 9218], [9219, 9222], [9223, 9228], [9229, 9243], [9244, 9247], [9248, 9252], [9253, 9255], [9256, 9269], [9269, 9271], [9272, 9282], [9283, 9292], [9292, 9293], [9293, 9294]]}) 
answer: set([u'provinc', u'raetia', u'roman', u'ancient', u'part'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'liechtenstein', u'.'])

Was Liechtenstein part of the ancient Roman province of Raetia?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Liechtenstein
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a1.txt

No
_____________________________ test_yesno[param229] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e8998>, (<src.tfidf.TF_IDF object at 0x1144af890>, set(['.', 'liechtenstein'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156e8998>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.6859670877456665, {u'tokens': [u'At', u'one', u'time', u',', u'the', u'territory', u'of', u'Liechtenstein', u'formed', u'a', u'part', u'of', u'the', u'ancient', u'Roman', u'province', u'of', u'Raetia', u'.'], u'lemmas': [u'at', u'one', u'time', u',', u'the', u'territory', u'of', u'liechtenstein', u'form', u'a', u'part', u'of', u'the', u'ancient', u'roman', u'province', u'of', u'raetium', u'.'], u'pos': [u'IN', u'CD', u'NN', u',', u'DT', u'NN', u'IN', u'NN', u'VBD', u'DT', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[490, 492], [493, 496], [497, 501], [501, 502], [503, 506], [507, 516], [517, 519], [520, 533], [534, 540], [541, 542], [543, 547], [548, 550], [551, 554], [555, 562], [563, 568], [569, 577], [578, 580], [581, 587], [587, 588]]}) 
answer: set([u'raetia'])
candidate Sentence: (0.19360548257827759, {u'tokens': [u'Music', u'and', u'theatre', u'are', u'an', u'important', u'part', u'of', u'the', u'culture', u'.'], u'lemmas': [u'music', u'and', u'theatre', u'be', u'a', u'important', u'part', u'of', u'the', u'culture', u'.'], u'pos': [u'NN', u'CC', u'NN', u'VBP', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[20466, 20471], [20472, 20475], [20476, 20483], [20484, 20487], [20488, 20490], [20491, 20500], [20501, 20505], [20506, 20508], [20509, 20512], [20513, 20520], [20520, 20521]]}) 
answer: set([u'provinc', u'raetia', u'roman', u'ancient'])
candidate Sentence: (0.12235861271619797, {u'tokens': [u'The', u'country', u"'s", u'railways', u'are', u'administered', u'by', u'the', u'Austrian', u'Federal', u'Railways', u'as', u'part', u'of', u'the', u'route', u'between', u'Feldkirch', u',', u'Austria', u',', u'and', u'Buchs', u'SG', u',', u'Switzerland', u'.'], u'lemmas': [u'the', u'country', u"'s", u'railway', u'be', u'administer', u'by', u'the', u'austrian', u'Federal', u'Railways', u'as', u'part', u'of', u'the', u'route', u'between', u'Feldkirch', u',', u'Austria', u',', u'and', u'Buchs', u'SG', u',', u'Switzerland', u'.'], u'pos': [u'DT', u'NN', u'POS', u'NNS', u'VBP', u'VBN', u'IN', u'DT', u'JJ', u'NNP', u'NNPS', u'IN', u'NN', u'IN', u'DT', u'NN', u'IN', u'NNP', u',', u'NNP', u',', u'CC', u'NNP', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[18242, 18245], [18246, 18253], [18253, 18255], [18256, 18264], [18265, 18268], [18269, 18281], [18282, 18284], [18285, 18288], [18289, 18297], [18298, 18305], [18306, 18314], [18315, 18317], [18318, 18322], [18323, 18325], [18326, 18329], [18330, 18335], [18336, 18343], [18344, 18353], [18353, 18354], [18355, 18362], [18362, 18363], [18364, 18367], [18368, 18373], [18374, 18376], [18376, 18377], [18378, 18389], [18389, 18390]]}) 
answer: set([u'provinc', u'raetia', u'roman', u'ancient'])
candidate Sentence: (0.11274498701095581, {u'tokens': [u'It', u'is', u'on', u'this', u'date', u'that', u'Liechtenstein', u'became', u'a', u'sovereign', u'member', u'state', u'of', u'the', u'Holy', u'Roman', u'Empire', u'.'], u'lemmas': [u'it', u'be', u'on', u'this', u'date', u'that', u'Liechtenstein', u'become', u'a', u'sovereign', u'member', u'state', u'of', u'the', u'holy', u'roman', u'empire', u'.'], u'pos': [u'PRP', u'VBZ', u'IN', u'DT', u'NN', u'WDT', u'NNP', u'VBD', u'DT', u'JJ', u'NN', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[2540, 2542], [2543, 2545], [2546, 2548], [2549, 2553], [2554, 2558], [2559, 2563], [2564, 2577], [2578, 2584], [2585, 2586], [2587, 2596], [2597, 2603], [2604, 2609], [2610, 2612], [2613, 2616], [2617, 2621], [2622, 2627], [2628, 2634], [2634, 2635]]}) 
answer: set([u'provinc', u'raetia', u'part', u'ancient'])
candidate Sentence: (0.095187738537788391, {u'tokens': [u'Liechtenstein', u'is', u'thus', u'the', u'last', u'independent', u'state', u'in', u'Europe', u'which', u'can', u'claim', u'an', u'element', u'of', u'continuity', u'from', u'the', u'Holy', u'Roman', u'Empire', u'.'], u'lemmas': [u'Liechtenstein', u'be', u'thus', u'the', u'last', u'independent', u'state', u'in', u'Europe', u'which', u'can', u'claim', u'a', u'element', u'of', u'continuity', u'from', u'the', u'holy', u'roman', u'empire', u'.'], u'pos': [u'NNP', u'VBZ', u'RB', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'NNP', u'WDT', u'MD', u'VB', u'DT', u'NN', u'IN', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[5713, 5726], [5727, 5729], [5730, 5734], [5735, 5738], [5739, 5743], [5744, 5755], [5756, 5761], [5762, 5764], [5765, 5771], [5772, 5777], [5778, 5781], [5782, 5787], [5788, 5790], [5791, 5798], [5799, 5801], [5802, 5812], [5813, 5817], [5818, 5821], [5822, 5826], [5827, 5832], [5833, 5839], [5839, 5840]]}) 
answer: set([u'provinc', u'raetia', u'part', u'ancient'])
candidate Sentence: (0.083324819803237915, {u'tokens': [u'Schloss', u'Vaduz', u',', u'overlooking', u'the', u'capital', u',', u'is', u'still', u'home', u'to', u'the', u'prince', u'of', u'Liechtenstein', u'In', u'1806', u',', u'most', u'of', u'the', u'Holy', u'Roman', u'Empire', u'was', u'invaded', u'by', u'Napoleon', u'I', u'of', u'the', u'First', u'French', u'Empire', u'.'], u'lemmas': [u'Schloss', u'Vaduz', u',', u'overlook', u'the', u'capital', u',', u'be', u'still', u'home', u'to', u'the', u'prince', u'of', u'Liechtenstein', u'in', u'1806', u',', u'most', u'of', u'the', u'holy', u'roman', u'empire', u'be', u'invade', u'by', u'Napoleon', u'i', u'of', u'the', u'First', u'French', u'Empire', u'.'], u'pos': [u'NNP', u'NNP', u',', u'VBG', u'DT', u'NN', u',', u'VBZ', u'RB', u'NN', u'TO', u'DT', u'NN', u'IN', u'NNP', u'IN', u'CD', u',', u'JJS', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'VBD', u'VBN', u'IN', u'NNP', u'CD', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[2794, 2801], [2802, 2807], [2807, 2808], [2809, 2820], [2821, 2824], [2825, 2832], [2832, 2833], [2834, 2836], [2837, 2842], [2843, 2847], [2848, 2850], [2851, 2854], [2855, 2861], [2862, 2864], [2865, 2878], [2879, 2881], [2882, 2886], [2886, 2887], [2888, 2892], [2893, 2895], [2896, 2899], [2900, 2904], [2905, 2910], [2911, 2917], [2918, 2921], [2922, 2929], [2930, 2932], [2933, 2941], [2942, 2943], [2944, 2946], [2947, 2950], [2951, 2956], [2957, 2963], [2964, 2970], [2970, 2971]]}) 
answer: set([u'provinc', u'raetia', u'part', u'ancient'])
candidate Sentence: (0.049090441316366196, {u'tokens': [u'At', u'the', u'time', u'of', u'the', u'dissolution', u'of', u'the', u'Austro-Hungarian', u'Empire', u',', u'it', u'was', u'argued', u'that', u'Liechtenstein', u'as', u'a', u'fief', u'of', u'the', u'Holy', u'Roman', u'Empire', u'-LRB-', u'supposedly', u'still', u'incarnated', u'in', u'Liechtensteiner', u'eyes', u'at', u'an', u'abstract', u'level', u'in', u'the', u'person', u'of', u'the', u'then-dethroned', u'Austro-Hungarian', u'Emperor', u',', u'despite', u'its', u'formal', u'dissolution', u'in', u'1806', u'-RRB-', u'was', u'no', u'longer', u'bound', u'to', u'Austria', u',', u'then', u'emerging', u'as', u'an', u'independent', u'state', u',', u'which', u'did', u'not', u'consider', u'itself', u'as', u'the', u'legal', u'successor', u'to', u'the', u'Empire', u'.'], u'lemmas': [u'at', u'the', u'time', u'of', u'the', u'dissolution', u'of', u'the', u'Austro-Hungarian', u'Empire', u',', u'it', u'be', u'argue', u'that', u'liechtenstein', u'as', u'a', u'fief', u'of', u'the', u'holy', u'roman', u'empire', u'-lrb-', u'supposedly', u'still', u'incarnate', u'in', u'Liechtensteiner', u'eye', u'at', u'a', u'abstract', u'level', u'in', u'the', u'person', u'of', u'the', u'then-dethroned', u'Austro-Hungarian', u'Emperor', u',', u'despite', u'its', u'formal', u'dissolution', u'in', u'1806', u'-rrb-', u'be', u'no', u'longer', u'bind', u'to', u'Austria', u',', u'then', u'emerge', u'as', u'a', u'independent', u'state', u',', u'which', u'do', u'not', u'consider', u'itself', u'as', u'the', u'legal', u'successor', u'to', u'the', u'Empire', u'.'], u'pos': [u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u',', u'PRP', u'VBD', u'VBN', u'IN', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'-LRB-', u'RB', u'RB', u'VBN', u'IN', u'NNP', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NNP', u'NNP', u',', u'IN', u'PRP$', u'JJ', u'NN', u'IN', u'CD', u'-RRB-', u'VBD', u'RB', u'RB', u'VBN', u'TO', u'NNP', u',', u'RB', u'VBG', u'IN', u'DT', u'JJ', u'NN', u',', u'WDT', u'VBD', u'RB', u'VB', u'PRP', u'IN', u'DT', u'JJ', u'NN', u'TO', u'DT', u'NNP', u'.'], u'char_offsets': [[5267, 5269], [5270, 5273], [5274, 5278], [5279, 5281], [5282, 5285], [5286, 5297], [5298, 5300], [5301, 5304], [5305, 5321], [5322, 5328], [5328, 5329], [5330, 5332], [5333, 5336], [5337, 5343], [5344, 5348], [5349, 5362], [5363, 5365], [5366, 5367], [5368, 5372], [5373, 5375], [5376, 5379], [5380, 5384], [5385, 5390], [5391, 5397], [5398, 5399], [5399, 5409], [5410, 5415], [5416, 5426], [5427, 5429], [5430, 5445], [5446, 5450], [5451, 5453], [5454, 5456], [5457, 5465], [5466, 5471], [5472, 5474], [5475, 5478], [5479, 5485], [5486, 5488], [5489, 5492], [5493, 5507], [5508, 5524], [5525, 5532], [5532, 5533], [5534, 5541], [5542, 5545], [5546, 5552], [5553, 5564], [5565, 5567], [5568, 5572], [5572, 5573], [5574, 5577], [5578, 5580], [5581, 5587], [5588, 5593], [5594, 5596], [5597, 5604], [5604, 5605], [5606, 5610], [5611, 5619], [5620, 5622], [5623, 5625], [5626, 5637], [5638, 5643], [5643, 5644], [5645, 5650], [5651, 5654], [5655, 5658], [5659, 5667], [5668, 5674], [5675, 5677], [5678, 5681], [5682, 5687], [5688, 5697], [5698, 5700], [5701, 5704], [5705, 5711], [5711, 5712]]}) 
answer: set([u'provinc', u'raetia', u'part', u'ancient'])
candidate Sentence: (0.048644881695508957, {u'tokens': [u'The', u'family', u'yearned', u'greatly', u'for', u'the', u'added', u'power', u'which', u'a', u'seat', u'in', u'the', u'Imperial', u'government', u'would', u'garner', u',', u'and', u'therefore', u',', u'searched', u'for', u'lands', u'to', u'acquire', u'which', u'would', u'be', u'unmittelbar', u'or', u'held', u'without', u'any', u'feudal', u'personage', u'other', u'than', u'the', u'Holy', u'Roman', u'Emperor', u'himself', u'having', u'rights', u'on', u'the', u'land', u'.'], u'lemmas': [u'the', u'family', u'yearn', u'greatly', u'for', u'the', u'add', u'power', u'which', u'a', u'seat', u'in', u'the', u'Imperial', u'government', u'would', u'garner', u',', u'and', u'therefore', u',', u'search', u'for', u'land', u'to', u'acquire', u'which', u'would', u'be', u'unmittelbar', u'or', u'hold', u'without', u'any', u'feudal', u'personage', u'other', u'than', u'the', u'holy', u'roman', u'emperor', u'himself', u'have', u'rights', u'on', u'the', u'land', u'.'], u'pos': [u'DT', u'NN', u'VBD', u'RB', u'IN', u'DT', u'VBN', u'NN', u'WDT', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NN', u'MD', u'VB', u',', u'CC', u'RB', u',', u'VBD', u'IN', u'NNS', u'TO', u'VB', u'WDT', u'MD', u'VB', u'JJ', u'CC', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'JJ', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'PRP', u'VBG', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[1625, 1628], [1629, 1635], [1636, 1643], [1644, 1651], [1652, 1655], [1656, 1659], [1660, 1665], [1666, 1671], [1672, 1677], [1678, 1679], [1680, 1684], [1685, 1687], [1688, 1691], [1692, 1700], [1701, 1711], [1712, 1717], [1718, 1724], [1724, 1725], [1726, 1729], [1730, 1739], [1739, 1740], [1741, 1749], [1750, 1753], [1754, 1759], [1760, 1762], [1763, 1770], [1771, 1776], [1777, 1782], [1783, 1785], [1786, 1797], [1798, 1800], [1801, 1805], [1806, 1813], [1814, 1817], [1818, 1824], [1825, 1834], [1835, 1840], [1841, 1845], [1846, 1849], [1850, 1854], [1855, 1860], [1861, 1868], [1869, 1876], [1877, 1883], [1884, 1890], [1891, 1893], [1894, 1897], [1898, 1902], [1902, 1903]]}) 
answer: set([u'provinc', u'raetia', u'part', u'ancient'])
candidate Sentence: (0.025947682559490204, {u'tokens': [u'The', u'Kunstmuseum', u'Liechtenstein', u'is', u'the', u'museum', u'of', u'modern', u'and', u'contemporary', u'art', u'in', u'Vaduz', u'and', u'the', u'national', u'gallery', u'of', u'the', u'Principality', u'of', u'Liechtenstein', u'.'], u'lemmas': [u'the', u'Kunstmuseum', u'Liechtenstein', u'be', u'the', u'museum', u'of', u'modern', u'and', u'contemporary', u'art', u'in', u'Vaduz', u'and', u'the', u'national', u'gallery', u'of', u'the', u'Principality', u'of', u'Liechtenstein', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'JJ', u'CC', u'JJ', u'NN', u'IN', u'NNP', u'CC', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[19172, 19175], [19176, 19187], [19188, 19201], [19202, 19204], [19205, 19208], [19209, 19215], [19216, 19218], [19219, 19225], [19226, 19229], [19230, 19242], [19243, 19246], [19247, 19249], [19250, 19255], [19256, 19259], [19260, 19263], [19264, 19272], [19273, 19280], [19281, 19283], [19284, 19287], [19288, 19300], [19301, 19303], [19304, 19317], [19317, 19318]]}) 
answer: set([u'provinc', u'raetia', u'roman', u'ancient', u'part'])
candidate Sentence: (0.021188821643590927, {u'tokens': [u'The', u'reigning', u'prince', u'of', u'the', u'Princely', u'House', u'of', u'Liechtenstein', u'is', u'the', u'head', u'of', u'state', u'and', u',', u'as', u'such', u',', u'represents', u'Liechtenstein', u'in', u'its', u'international', u'relations', u'-LRB-', u'although', u'Switzerland', u'has', u'taken', u'responsibility', u'for', u'much', u'of', u'Liechtenstein', u"'s", u'diplomatic', u'relations', u'-RRB-', u'.'], u'lemmas': [u'the', u'reign', u'prince', u'of', u'the', u'Princely', u'House', u'of', u'Liechtenstein', u'be', u'the', u'head', u'of', u'state', u'and', u',', u'as', u'such', u',', u'represent', u'Liechtenstein', u'in', u'its', u'international', u'relation', u'-lrb-', u'although', u'Switzerland', u'have', u'take', u'responsibility', u'for', u'much', u'of', u'Liechtenstein', u"'s", u'diplomatic', u'relation', u'-rrb-', u'.'], u'pos': [u'DT', u'VBG', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'NN', u'CC', u',', u'IN', u'JJ', u',', u'VBZ', u'NNP', u'IN', u'PRP$', u'JJ', u'NNS', u'-LRB-', u'IN', u'NNP', u'VBZ', u'VBN', u'NN', u'IN', u'JJ', u'IN', u'NNP', u'POS', u'JJ', u'NNS', u'-RRB-', u'.'], u'char_offsets': [[9047, 9050], [9051, 9059], [9060, 9066], [9067, 9069], [9070, 9073], [9074, 9082], [9083, 9088], [9089, 9091], [9092, 9105], [9106, 9108], [9109, 9112], [9113, 9117], [9118, 9120], [9121, 9126], [9127, 9130], [9130, 9131], [9132, 9134], [9135, 9139], [9139, 9140], [9141, 9151], [9152, 9165], [9166, 9168], [9169, 9172], [9173, 9186], [9187, 9196], [9197, 9198], [9198, 9206], [9207, 9218], [9219, 9222], [9223, 9228], [9229, 9243], [9244, 9247], [9248, 9252], [9253, 9255], [9256, 9269], [9269, 9271], [9272, 9282], [9283, 9292], [9292, 9293], [9293, 9294]]}) 
answer: set([u'provinc', u'raetia', u'roman', u'ancient', u'part'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'liechtenstein', u'.'])

Was Liechtenstein part of the ancient Roman province of Raetia?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Liechtenstein
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a1.txt

No
_____________________________ test_yesno[param244] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e8dd0>, (<src.tfidf.TF_IDF object at 0x11240df50>, set(['.', 'fillmore', 'millard'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156e8dd0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.34580737352371216, {u'tokens': [u'Millard', u'Fillmore', u'-LRB-', u'January', u'7', u',', u'1800', u'March', u'8', u',', u'1874', u'-RRB-', u'was', u'the', u'thirteenth', u'President', u'of', u'the', u'United', u'States', u',', u'serving', u'from', u'1850', u'until', u'1853', u',', u'and', u'the', u'last', u'member', u'of', u'the', u'Whig', u'Party', u'to', u'hold', u'that', u'office', u'.'], u'lemmas': [u'Millard', u'Fillmore', u'-lrb-', u'January', u'7', u',', u'1800', u'March', u'8', u',', u'1874', u'-rrb-', u'be', u'the', u'thirteenth', u'President', u'of', u'the', u'United', u'States', u',', u'serve', u'from', u'1850', u'until', u'1853', u',', u'and', u'the', u'last', u'member', u'of', u'the', u'Whig', u'Party', u'to', u'hold', u'that', u'office', u'.'], u'pos': [u'NNP', u'NNP', u'-LRB-', u'NNP', u'CD', u',', u'CD', u'NNP', u'CD', u',', u'CD', u'-RRB-', u'VBD', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u',', u'VBG', u'IN', u'CD', u'IN', u'CD', u',', u'CC', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'TO', u'VB', u'DT', u'NN', u'.'], u'char_offsets': [[0, 7], [8, 16], [17, 18], [18, 25], [26, 27], [27, 28], [29, 33], [36, 41], [42, 43], [43, 44], [45, 49], [49, 50], [51, 54], [55, 58], [59, 69], [70, 79], [80, 82], [83, 86], [87, 93], [94, 100], [100, 101], [102, 109], [110, 114], [115, 119], [120, 125], [126, 130], [130, 131], [132, 135], [136, 139], [140, 144], [145, 151], [152, 154], [155, 158], [159, 163], [164, 169], [170, 172], [173, 177], [178, 182], [183, 189], [189, 190]]}) 
answer: set([u'bear'])
candidate Sentence: (0.24029149115085602, {u'tokens': [u'On', u'January', u'7', u'each', u'year', u',', u'a', u'ceremony', u'is', u'held', u'at', u'his', u'grave', u'site', u'in', u'the', u'Forest', u'Lawn', u'Cemetery', u'in', u'Buffalo', u'.'], u'lemmas': [u'on', u'January', u'7', u'each', u'year', u',', u'a', u'ceremony', u'be', u'hold', u'at', u'he', u'grave', u'site', u'in', u'the', u'forest', u'lawn', u'cemetery', u'in', u'Buffalo', u'.'], u'pos': [u'IN', u'NNP', u'CD', u'DT', u'NN', u',', u'DT', u'NN', u'VBZ', u'VBN', u'IN', u'PRP$', u'JJ', u'NN', u'IN', u'DT', u'NN', u'NN', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[12855, 12857], [12858, 12865], [12866, 12867], [12868, 12872], [12873, 12877], [12877, 12878], [12879, 12880], [12881, 12889], [12890, 12892], [12893, 12897], [12898, 12900], [12901, 12904], [12905, 12910], [12911, 12915], [12916, 12918], [12919, 12922], [12923, 12929], [12930, 12934], [12935, 12943], [12944, 12946], [12947, 12954], [12954, 12955]]}) 
answer: set([u'bear', u'1800'])
candidate Sentence: (0.21004918217658997, {u'tokens': [u'*', u'Fillmore', u'was', u'the', u'first', u'U.S.', u'President', u'born', u'after', u'the', u'death', u'of', u'a', u'former', u'president', u',', u'as', u'he', u'was', u'born', u'three', u'weeks', u'after', u'George', u'Washington', u"'s", u'death', u'on', u'December', u'14', u',', u'1799', u'.'], u'lemmas': [u'*', u'Fillmore', u'be', u'the', u'first', u'U.S.', u'President', u'bear', u'after', u'the', u'death', u'of', u'a', u'former', u'president', u',', u'as', u'he', u'be', u'bear', u'three', u'week', u'after', u'George', u'Washington', u"'s", u'death', u'on', u'December', u'14', u',', u'1799', u'.'], u'pos': [u'SYM', u'NNP', u'VBD', u'DT', u'JJ', u'NNP', u'NNP', u'VBN', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u',', u'IN', u'PRP', u'VBD', u'VBN', u'CD', u'NNS', u'IN', u'NNP', u'NNP', u'POS', u'NN', u'IN', u'NNP', u'CD', u',', u'CD', u'.'], u'char_offsets': [[15470, 15471], [15471, 15479], [15480, 15483], [15484, 15487], [15488, 15493], [15494, 15498], [15499, 15508], [15509, 15513], [15514, 15519], [15520, 15523], [15524, 15529], [15530, 15532], [15533, 15534], [15535, 15541], [15542, 15551], [15551, 15552], [15553, 15555], [15556, 15558], [15559, 15562], [15563, 15567], [15568, 15573], [15574, 15579], [15580, 15585], [15586, 15592], [15593, 15603], [15603, 15605], [15606, 15611], [15612, 15614], [15615, 15623], [15624, 15626], [15626, 15627], [15628, 15632], [15632, 15633]]}) 
answer: set([u'januari', u'7', u'1800'])
candidate Sentence: (0.13904939591884613, {u'tokens': [u'Fillmore', u'was', u'born', u'in', u'a', u'log', u'cabin', u'in', u'Summerhill', u',', u'New', u'York', u',', u'to', u'Nathaniel', u'and', u'Phoebe', u'Millard', u'Fillmore', u',', u'as', u'the', u'second', u'of', u'nine', u'children', u'and', u'the', u'eldest', u'son', u'.'], u'lemmas': [u'Fillmore', u'be', u'bear', u'in', u'a', u'log', u'cabin', u'in', u'Summerhill', u',', u'New', u'York', u',', u'to', u'Nathaniel', u'and', u'Phoebe', u'Millard', u'Fillmore', u',', u'as', u'the', u'second', u'of', u'nine', u'child', u'and', u'the', u'eldest', u'son', u'.'], u'pos': [u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'NN', u'NN', u'IN', u'NNP', u',', u'NNP', u'NNP', u',', u'TO', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u',', u'IN', u'DT', u'NN', u'IN', u'CD', u'NNS', u'CC', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[669, 677], [678, 681], [682, 686], [687, 689], [690, 691], [692, 695], [696, 701], [702, 704], [705, 715], [715, 716], [717, 720], [721, 725], [725, 726], [727, 729], [730, 739], [740, 743], [744, 750], [751, 758], [759, 767], [767, 768], [769, 771], [772, 775], [776, 782], [783, 785], [786, 790], [791, 799], [800, 803], [804, 807], [808, 814], [815, 818], [818, 819]]}) 
answer: set([u'januari', u'7', u'1800'])
candidate Sentence: (0.11305919289588928, {u'tokens': [u'*', u'Fillmore', u'Glen', u'State', u'Park', u',', u'New', u'York', u'*', u'Fillmore', u'Avenue', u',', u'on', u'the', u'East', u'Side', u'of', u'Buffalo', u',', u'New', u'York', u'*', u'Millard', u'Fillmore', u'Gates', u'Circle', u'Hospital', u',', u'Buffalo', u'*', u'Millard', u'Fillmore', u'Suburban', u'Hospital', u',', u'Williamsville', u',', u'New', u'York', u'*', u'Fillmore', u'Street', u',', u'in', u'downtown', u'San', u'Francisco', u',', u'California', u'*', u'Fillmore', u'Street', u',', u'in', u'downtown', u'Amarillo', u',', u'Texas', u'*', u'Fillmore', u'Street', u',', u'in', u'downtown', u'Phoenix', u',', u'Arizona', u'*', u'In', u'an', u'article', u'in', u'Mad', u'Magazine', u'in', u'the', u'late', u'1950s', u'appears', u'the', u'phrase', u':', u'``', u'Who', u'in', u'heck', u'was', u'Millard', u'Fillmore', u'anyhow', u'?', u"''"], u'lemmas': [u'*', u'Fillmore', u'Glen', u'State', u'Park', u',', u'New', u'York', u'*', u'Fillmore', u'Avenue', u',', u'on', u'the', u'East', u'side', u'of', u'Buffalo', u',', u'New', u'York', u'*', u'Millard', u'Fillmore', u'Gates', u'Circle', u'Hospital', u',', u'Buffalo', u'*', u'Millard', u'Fillmore', u'Suburban', u'Hospital', u',', u'Williamsville', u',', u'New', u'York', u'*', u'Fillmore', u'Street', u',', u'in', u'downtown', u'San', u'Francisco', u',', u'California', u'*', u'Fillmore', u'Street', u',', u'in', u'downtown', u'Amarillo', u',', u'Texas', u'*', u'Fillmore', u'Street', u',', u'in', u'downtown', u'Phoenix', u',', u'Arizona', u'*', u'in', u'a', u'article', u'in', u'Mad', u'Magazine', u'in', u'the', u'late', u'1950s', u'appear', u'the', u'phrase', u':', u'``', u'who', u'in', u'heck', u'be', u'Millard', u'Fillmore', u'anyhow', u'?', u"''"], u'pos': [u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u',', u'IN', u'DT', u'NNP', u'NN', u'IN', u'NNP', u',', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'NNP', u',', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u',', u'IN', u'NN', u'NNP', u'NNP', u',', u'NNP', u'SYM', u'NNP', u'NNP', u',', u'IN', u'NN', u'NNP', u',', u'NNP', u'SYM', u'NNP', u'NNP', u',', u'IN', u'NN', u'NNP', u',', u'NNP', u'SYM', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'JJ', u'CD', u'VBZ', u'DT', u'NN', u':', u'``', u'WP', u'IN', u'NN', u'VBD', u'NNP', u'NNP', u'RB', u'.', u"''"], u'char_offsets': [[12956, 12957], [12957, 12965], [12966, 12970], [12971, 12976], [12977, 12981], [12981, 12982], [12983, 12986], [12987, 12991], [12992, 12993], [12993, 13001], [13002, 13008], [13008, 13009], [13010, 13012], [13013, 13016], [13017, 13021], [13022, 13026], [13027, 13029], [13030, 13037], [13037, 13038], [13039, 13042], [13043, 13047], [13048, 13049], [13049, 13056], [13057, 13065], [13066, 13071], [13072, 13078], [13079, 13087], [13087, 13088], [13089, 13096], [13097, 13098], [13098, 13105], [13106, 13114], [13115, 13123], [13124, 13132], [13132, 13133], [13134, 13147], [13147, 13148], [13149, 13152], [13153, 13157], [13158, 13159], [13159, 13167], [13168, 13174], [13174, 13175], [13176, 13178], [13179, 13187], [13188, 13191], [13192, 13201], [13201, 13202], [13203, 13213], [13214, 13215], [13215, 13223], [13224, 13230], [13230, 13231], [13232, 13234], [13235, 13243], [13244, 13252], [13252, 13253], [13254, 13259], [13260, 13261], [13261, 13269], [13270, 13276], [13276, 13277], [13278, 13280], [13281, 13289], [13290, 13297], [13297, 13298], [13299, 13306], [13307, 13308], [13308, 13310], [13311, 13313], [13314, 13321], [13322, 13324], [13325, 13328], [13329, 13337], [13338, 13340], [13341, 13344], [13345, 13349], [13350, 13355], [13356, 13363], [13364, 13367], [13368, 13374], [13374, 13375], [13376, 13377], [13377, 13380], [13381, 13383], [13384, 13388], [13389, 13392], [13393, 13400], [13401, 13409], [13410, 13416], [13416, 13417], [13417, 13418]]}) 
answer: set([u'januari', u'bear', u'7', u'1800'])
candidate Sentence: (0.055244304239749908, {u'tokens': [u'Engraving', u'of', u'Millard', u'FillmoreIn', u'1828', u',', u'Fillmore', u'was', u'elected', u'to', u'the', u'New', u'York', u'State', u'Assembly', u'on', u'the', u'Anti-Masonic', u'ticket', u',', u'serving', u'for', u'one', u'term', u',', u'from', u'1829', u'to', u'1831', u'.'], u'lemmas': [u'Engraving', u'of', u'Millard', u'FillmoreIn', u'1828', u',', u'Fillmore', u'be', u'elect', u'to', u'the', u'New', u'York', u'State', u'Assembly', u'on', u'the', u'anti-masonic', u'ticket', u',', u'serve', u'for', u'one', u'term', u',', u'from', u'1829', u'to', u'1831', u'.'], u'pos': [u'NNP', u'IN', u'NNP', u'NNP', u'CD', u',', u'NNP', u'VBD', u'VBN', u'TO', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'JJ', u'NN', u',', u'VBG', u'IN', u'CD', u'NN', u',', u'IN', u'CD', u'TO', u'CD', u'.'], u'char_offsets': [[2043, 2052], [2053, 2055], [2056, 2063], [2064, 2074], [2075, 2079], [2079, 2080], [2081, 2089], [2090, 2093], [2094, 2101], [2102, 2104], [2105, 2108], [2109, 2112], [2113, 2117], [2118, 2123], [2124, 2132], [2133, 2135], [2136, 2139], [2140, 2152], [2153, 2159], [2159, 2160], [2161, 2168], [2169, 2172], [2173, 2176], [2177, 2181], [2181, 2182], [2183, 2187], [2188, 2192], [2193, 2195], [2196, 2200], [2200, 2201]]}) 
answer: set([u'januari', u'bear', u'7', u'1800'])
candidate Sentence: (0.051802188158035278, {u'tokens': [u'*', u'In', u'2007', u',', u'George', u'Pendle', u'wrote', u'The', u'Remarkable', u'Millard', u'Fillmore', u',', u'a', u'fake', u'biography', u'based', u'on', u'real', u'events', u'that', u'happened', u'in', u'Fillmore', u"'s", u'life', u'.'], u'lemmas': [u'*', u'in', u'2007', u',', u'George', u'Pendle', u'write', u'the', u'remarkable', u'Millard', u'Fillmore', u',', u'a', u'fake', u'biography', u'base', u'on', u'real', u'event', u'that', u'happen', u'in', u'Fillmore', u"'s", u'life', u'.'], u'pos': [u'SYM', u'IN', u'CD', u',', u'NNP', u'NNP', u'VBD', u'DT', u'JJ', u'NNP', u'NNP', u',', u'DT', u'JJ', u'NN', u'VBN', u'IN', u'JJ', u'NNS', u'WDT', u'VBD', u'IN', u'NNP', u'POS', u'NN', u'.'], u'char_offsets': [[13674, 13675], [13675, 13677], [13678, 13682], [13682, 13683], [13684, 13690], [13691, 13697], [13698, 13703], [13704, 13707], [13708, 13718], [13719, 13726], [13727, 13735], [13735, 13736], [13737, 13738], [13739, 13743], [13744, 13753], [13754, 13759], [13760, 13762], [13763, 13767], [13768, 13774], [13775, 13779], [13780, 13788], [13789, 13791], [13792, 13800], [13800, 13802], [13803, 13807], [13807, 13808]]}) 
answer: set([u'januari', u'7', u'bear', u'1800'])
candidate Sentence: (0.048314366489648819, {u'tokens': [u'Though', u'a', u'Unitarian', u'in', u'later', u'life', u',', u'Fillmore', u'was', u'descended', u'from', u'Scottish', u'Presbyterians', u'on', u'his', u'father', u"'s", u'side', u'and', u'English', u'dissenters', u'on', u'his', u'mother', u"'s", u'.'], u'lemmas': [u'though', u'a', u'Unitarian', u'in', u'later', u'life', u',', u'Fillmore', u'be', u'descend', u'from', u'scottish', u'Presbyterians', u'on', u'he', u'father', u"'s", u'side', u'and', u'english', u'dissenter', u'on', u'he', u'mother', u"'s", u'.'], u'pos': [u'IN', u'DT', u'NNP', u'IN', u'JJ', u'NN', u',', u'NNP', u'VBD', u'VBN', u'IN', u'JJ', u'NNPS', u'IN', u'PRP$', u'NN', u'POS', u'NN', u'CC', u'JJ', u'NNS', u'IN', u'PRP$', u'NN', u'POS', u'.'], u'char_offsets': [[823, 829], [830, 831], [832, 841], [842, 844], [845, 850], [851, 855], [855, 856], [860, 868], [869, 872], [873, 882], [883, 887], [888, 896], [897, 910], [911, 913], [914, 917], [918, 924], [924, 926], [927, 931], [932, 935], [936, 943], [944, 954], [955, 957], [958, 961], [962, 968], [968, 970], [970, 971]]}) 
answer: set([u'januari', u'bear', u'7', u'1800'])
candidate Sentence: (0.045032672584056854, {u'tokens': [u'The', u'couple', u'had', u'two', u'children', u',', u'Millard', u'Powers', u'Fillmore', u'and', u'Mary', u'Abigail', u'Fillmore', u'.'], u'lemmas': [u'the', u'couple', u'have', u'two', u'child', u',', u'Millard', u'Powers', u'Fillmore', u'and', u'Mary', u'Abigail', u'Fillmore', u'.'], u'pos': [u'DT', u'NN', u'VBD', u'CD', u'NNS', u',', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[1299, 1302], [1303, 1309], [1310, 1313], [1314, 1317], [1318, 1326], [1326, 1327], [1328, 1335], [1336, 1342], [1343, 1351], [1352, 1355], [1356, 1360], [1361, 1368], [1369, 1377], [1377, 1378]]}) 
answer: set([u'januari', u'7', u'bear', u'1800'])
candidate Sentence: (0.043234087526798248, {u'tokens': [u'*', u'The', u'myth', u'that', u'Millard', u'Fillmore', u'installed', u'the', u'White', u'House', u"'s", u'first', u'bathtub', u'was', u'started', u'by', u'H.', u'L.', u'Mencken', u'in', u'a', u'joke', u'column', u'published', u'on', u'December', u'28', u',', u'1917', u'in', u'the', u'New', u'York', u'Evening', u'Mail', u'.'], u'lemmas': [u'*', u'the', u'myth', u'that', u'Millard', u'Fillmore', u'install', u'the', u'White', u'House', u"'s", u'first', u'bathtub', u'be', u'start', u'by', u'H.', u'L.', u'Mencken', u'in', u'a', u'joke', u'column', u'publish', u'on', u'December', u'28', u',', u'1917', u'in', u'the', u'New', u'York', u'Evening', u'Mail', u'.'], u'pos': [u'SYM', u'DT', u'NN', u'WDT', u'NNP', u'NNP', u'VBD', u'DT', u'NNP', u'NNP', u'POS', u'JJ', u'NN', u'VBD', u'VBN', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NN', u'NN', u'VBN', u'IN', u'NNP', u'CD', u',', u'CD', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[14566, 14567], [14567, 14570], [14571, 14575], [14576, 14580], [14581, 14588], [14589, 14597], [14598, 14607], [14608, 14611], [14612, 14617], [14618, 14623], [14623, 14625], [14626, 14631], [14632, 14639], [14640, 14643], [14644, 14651], [14652, 14654], [14655, 14657], [14658, 14660], [14661, 14668], [14669, 14671], [14672, 14673], [14674, 14678], [14679, 14685], [14686, 14695], [14696, 14698], [14699, 14707], [14708, 14710], [14710, 14711], [14712, 14716], [14717, 14719], [14720, 14723], [14724, 14727], [14728, 14732], [14733, 14740], [14741, 14745], [14745, 14746]]}) 
answer: set([u'januari', u'bear', u'7', u'1800'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'millard', u'fillmore', u'.'])

Was Millard Fillmore born on January 7, 1800?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Millard_Fillmore
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a3.txt

No
_____________________________ test_yesno[param245] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e8e18>, (<src.tfidf.TF_IDF object at 0x11240df50>, set(['.', 'fillmore', 'millard'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156e8e18>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.34580737352371216, {u'tokens': [u'Millard', u'Fillmore', u'-LRB-', u'January', u'7', u',', u'1800', u'March', u'8', u',', u'1874', u'-RRB-', u'was', u'the', u'thirteenth', u'President', u'of', u'the', u'United', u'States', u',', u'serving', u'from', u'1850', u'until', u'1853', u',', u'and', u'the', u'last', u'member', u'of', u'the', u'Whig', u'Party', u'to', u'hold', u'that', u'office', u'.'], u'lemmas': [u'Millard', u'Fillmore', u'-lrb-', u'January', u'7', u',', u'1800', u'March', u'8', u',', u'1874', u'-rrb-', u'be', u'the', u'thirteenth', u'President', u'of', u'the', u'United', u'States', u',', u'serve', u'from', u'1850', u'until', u'1853', u',', u'and', u'the', u'last', u'member', u'of', u'the', u'Whig', u'Party', u'to', u'hold', u'that', u'office', u'.'], u'pos': [u'NNP', u'NNP', u'-LRB-', u'NNP', u'CD', u',', u'CD', u'NNP', u'CD', u',', u'CD', u'-RRB-', u'VBD', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u',', u'VBG', u'IN', u'CD', u'IN', u'CD', u',', u'CC', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'TO', u'VB', u'DT', u'NN', u'.'], u'char_offsets': [[0, 7], [8, 16], [17, 18], [18, 25], [26, 27], [27, 28], [29, 33], [36, 41], [42, 43], [43, 44], [45, 49], [49, 50], [51, 54], [55, 58], [59, 69], [70, 79], [80, 82], [83, 86], [87, 93], [94, 100], [100, 101], [102, 109], [110, 114], [115, 119], [120, 125], [126, 130], [130, 131], [132, 135], [136, 139], [140, 144], [145, 151], [152, 154], [155, 158], [159, 163], [164, 169], [170, 172], [173, 177], [178, 182], [183, 189], [189, 190]]}) 
answer: set([u'bear'])
candidate Sentence: (0.24029149115085602, {u'tokens': [u'On', u'January', u'7', u'each', u'year', u',', u'a', u'ceremony', u'is', u'held', u'at', u'his', u'grave', u'site', u'in', u'the', u'Forest', u'Lawn', u'Cemetery', u'in', u'Buffalo', u'.'], u'lemmas': [u'on', u'January', u'7', u'each', u'year', u',', u'a', u'ceremony', u'be', u'hold', u'at', u'he', u'grave', u'site', u'in', u'the', u'forest', u'lawn', u'cemetery', u'in', u'Buffalo', u'.'], u'pos': [u'IN', u'NNP', u'CD', u'DT', u'NN', u',', u'DT', u'NN', u'VBZ', u'VBN', u'IN', u'PRP$', u'JJ', u'NN', u'IN', u'DT', u'NN', u'NN', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[12855, 12857], [12858, 12865], [12866, 12867], [12868, 12872], [12873, 12877], [12877, 12878], [12879, 12880], [12881, 12889], [12890, 12892], [12893, 12897], [12898, 12900], [12901, 12904], [12905, 12910], [12911, 12915], [12916, 12918], [12919, 12922], [12923, 12929], [12930, 12934], [12935, 12943], [12944, 12946], [12947, 12954], [12954, 12955]]}) 
answer: set([u'bear', u'1800'])
candidate Sentence: (0.21004918217658997, {u'tokens': [u'*', u'Fillmore', u'was', u'the', u'first', u'U.S.', u'President', u'born', u'after', u'the', u'death', u'of', u'a', u'former', u'president', u',', u'as', u'he', u'was', u'born', u'three', u'weeks', u'after', u'George', u'Washington', u"'s", u'death', u'on', u'December', u'14', u',', u'1799', u'.'], u'lemmas': [u'*', u'Fillmore', u'be', u'the', u'first', u'U.S.', u'President', u'bear', u'after', u'the', u'death', u'of', u'a', u'former', u'president', u',', u'as', u'he', u'be', u'bear', u'three', u'week', u'after', u'George', u'Washington', u"'s", u'death', u'on', u'December', u'14', u',', u'1799', u'.'], u'pos': [u'SYM', u'NNP', u'VBD', u'DT', u'JJ', u'NNP', u'NNP', u'VBN', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u',', u'IN', u'PRP', u'VBD', u'VBN', u'CD', u'NNS', u'IN', u'NNP', u'NNP', u'POS', u'NN', u'IN', u'NNP', u'CD', u',', u'CD', u'.'], u'char_offsets': [[15470, 15471], [15471, 15479], [15480, 15483], [15484, 15487], [15488, 15493], [15494, 15498], [15499, 15508], [15509, 15513], [15514, 15519], [15520, 15523], [15524, 15529], [15530, 15532], [15533, 15534], [15535, 15541], [15542, 15551], [15551, 15552], [15553, 15555], [15556, 15558], [15559, 15562], [15563, 15567], [15568, 15573], [15574, 15579], [15580, 15585], [15586, 15592], [15593, 15603], [15603, 15605], [15606, 15611], [15612, 15614], [15615, 15623], [15624, 15626], [15626, 15627], [15628, 15632], [15632, 15633]]}) 
answer: set([u'januari', u'7', u'1800'])
candidate Sentence: (0.13904939591884613, {u'tokens': [u'Fillmore', u'was', u'born', u'in', u'a', u'log', u'cabin', u'in', u'Summerhill', u',', u'New', u'York', u',', u'to', u'Nathaniel', u'and', u'Phoebe', u'Millard', u'Fillmore', u',', u'as', u'the', u'second', u'of', u'nine', u'children', u'and', u'the', u'eldest', u'son', u'.'], u'lemmas': [u'Fillmore', u'be', u'bear', u'in', u'a', u'log', u'cabin', u'in', u'Summerhill', u',', u'New', u'York', u',', u'to', u'Nathaniel', u'and', u'Phoebe', u'Millard', u'Fillmore', u',', u'as', u'the', u'second', u'of', u'nine', u'child', u'and', u'the', u'eldest', u'son', u'.'], u'pos': [u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'NN', u'NN', u'IN', u'NNP', u',', u'NNP', u'NNP', u',', u'TO', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u',', u'IN', u'DT', u'NN', u'IN', u'CD', u'NNS', u'CC', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[669, 677], [678, 681], [682, 686], [687, 689], [690, 691], [692, 695], [696, 701], [702, 704], [705, 715], [715, 716], [717, 720], [721, 725], [725, 726], [727, 729], [730, 739], [740, 743], [744, 750], [751, 758], [759, 767], [767, 768], [769, 771], [772, 775], [776, 782], [783, 785], [786, 790], [791, 799], [800, 803], [804, 807], [808, 814], [815, 818], [818, 819]]}) 
answer: set([u'januari', u'7', u'1800'])
candidate Sentence: (0.11305919289588928, {u'tokens': [u'*', u'Fillmore', u'Glen', u'State', u'Park', u',', u'New', u'York', u'*', u'Fillmore', u'Avenue', u',', u'on', u'the', u'East', u'Side', u'of', u'Buffalo', u',', u'New', u'York', u'*', u'Millard', u'Fillmore', u'Gates', u'Circle', u'Hospital', u',', u'Buffalo', u'*', u'Millard', u'Fillmore', u'Suburban', u'Hospital', u',', u'Williamsville', u',', u'New', u'York', u'*', u'Fillmore', u'Street', u',', u'in', u'downtown', u'San', u'Francisco', u',', u'California', u'*', u'Fillmore', u'Street', u',', u'in', u'downtown', u'Amarillo', u',', u'Texas', u'*', u'Fillmore', u'Street', u',', u'in', u'downtown', u'Phoenix', u',', u'Arizona', u'*', u'In', u'an', u'article', u'in', u'Mad', u'Magazine', u'in', u'the', u'late', u'1950s', u'appears', u'the', u'phrase', u':', u'``', u'Who', u'in', u'heck', u'was', u'Millard', u'Fillmore', u'anyhow', u'?', u"''"], u'lemmas': [u'*', u'Fillmore', u'Glen', u'State', u'Park', u',', u'New', u'York', u'*', u'Fillmore', u'Avenue', u',', u'on', u'the', u'East', u'side', u'of', u'Buffalo', u',', u'New', u'York', u'*', u'Millard', u'Fillmore', u'Gates', u'Circle', u'Hospital', u',', u'Buffalo', u'*', u'Millard', u'Fillmore', u'Suburban', u'Hospital', u',', u'Williamsville', u',', u'New', u'York', u'*', u'Fillmore', u'Street', u',', u'in', u'downtown', u'San', u'Francisco', u',', u'California', u'*', u'Fillmore', u'Street', u',', u'in', u'downtown', u'Amarillo', u',', u'Texas', u'*', u'Fillmore', u'Street', u',', u'in', u'downtown', u'Phoenix', u',', u'Arizona', u'*', u'in', u'a', u'article', u'in', u'Mad', u'Magazine', u'in', u'the', u'late', u'1950s', u'appear', u'the', u'phrase', u':', u'``', u'who', u'in', u'heck', u'be', u'Millard', u'Fillmore', u'anyhow', u'?', u"''"], u'pos': [u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u',', u'IN', u'DT', u'NNP', u'NN', u'IN', u'NNP', u',', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'NNP', u'SYM', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'NNP', u',', u'NNP', u'NNP', u'SYM', u'NNP', u'NNP', u',', u'IN', u'NN', u'NNP', u'NNP', u',', u'NNP', u'SYM', u'NNP', u'NNP', u',', u'IN', u'NN', u'NNP', u',', u'NNP', u'SYM', u'NNP', u'NNP', u',', u'IN', u'NN', u'NNP', u',', u'NNP', u'SYM', u'IN', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'JJ', u'CD', u'VBZ', u'DT', u'NN', u':', u'``', u'WP', u'IN', u'NN', u'VBD', u'NNP', u'NNP', u'RB', u'.', u"''"], u'char_offsets': [[12956, 12957], [12957, 12965], [12966, 12970], [12971, 12976], [12977, 12981], [12981, 12982], [12983, 12986], [12987, 12991], [12992, 12993], [12993, 13001], [13002, 13008], [13008, 13009], [13010, 13012], [13013, 13016], [13017, 13021], [13022, 13026], [13027, 13029], [13030, 13037], [13037, 13038], [13039, 13042], [13043, 13047], [13048, 13049], [13049, 13056], [13057, 13065], [13066, 13071], [13072, 13078], [13079, 13087], [13087, 13088], [13089, 13096], [13097, 13098], [13098, 13105], [13106, 13114], [13115, 13123], [13124, 13132], [13132, 13133], [13134, 13147], [13147, 13148], [13149, 13152], [13153, 13157], [13158, 13159], [13159, 13167], [13168, 13174], [13174, 13175], [13176, 13178], [13179, 13187], [13188, 13191], [13192, 13201], [13201, 13202], [13203, 13213], [13214, 13215], [13215, 13223], [13224, 13230], [13230, 13231], [13232, 13234], [13235, 13243], [13244, 13252], [13252, 13253], [13254, 13259], [13260, 13261], [13261, 13269], [13270, 13276], [13276, 13277], [13278, 13280], [13281, 13289], [13290, 13297], [13297, 13298], [13299, 13306], [13307, 13308], [13308, 13310], [13311, 13313], [13314, 13321], [13322, 13324], [13325, 13328], [13329, 13337], [13338, 13340], [13341, 13344], [13345, 13349], [13350, 13355], [13356, 13363], [13364, 13367], [13368, 13374], [13374, 13375], [13376, 13377], [13377, 13380], [13381, 13383], [13384, 13388], [13389, 13392], [13393, 13400], [13401, 13409], [13410, 13416], [13416, 13417], [13417, 13418]]}) 
answer: set([u'januari', u'bear', u'7', u'1800'])
candidate Sentence: (0.055244304239749908, {u'tokens': [u'Engraving', u'of', u'Millard', u'FillmoreIn', u'1828', u',', u'Fillmore', u'was', u'elected', u'to', u'the', u'New', u'York', u'State', u'Assembly', u'on', u'the', u'Anti-Masonic', u'ticket', u',', u'serving', u'for', u'one', u'term', u',', u'from', u'1829', u'to', u'1831', u'.'], u'lemmas': [u'Engraving', u'of', u'Millard', u'FillmoreIn', u'1828', u',', u'Fillmore', u'be', u'elect', u'to', u'the', u'New', u'York', u'State', u'Assembly', u'on', u'the', u'anti-masonic', u'ticket', u',', u'serve', u'for', u'one', u'term', u',', u'from', u'1829', u'to', u'1831', u'.'], u'pos': [u'NNP', u'IN', u'NNP', u'NNP', u'CD', u',', u'NNP', u'VBD', u'VBN', u'TO', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'JJ', u'NN', u',', u'VBG', u'IN', u'CD', u'NN', u',', u'IN', u'CD', u'TO', u'CD', u'.'], u'char_offsets': [[2043, 2052], [2053, 2055], [2056, 2063], [2064, 2074], [2075, 2079], [2079, 2080], [2081, 2089], [2090, 2093], [2094, 2101], [2102, 2104], [2105, 2108], [2109, 2112], [2113, 2117], [2118, 2123], [2124, 2132], [2133, 2135], [2136, 2139], [2140, 2152], [2153, 2159], [2159, 2160], [2161, 2168], [2169, 2172], [2173, 2176], [2177, 2181], [2181, 2182], [2183, 2187], [2188, 2192], [2193, 2195], [2196, 2200], [2200, 2201]]}) 
answer: set([u'januari', u'bear', u'7', u'1800'])
candidate Sentence: (0.051802188158035278, {u'tokens': [u'*', u'In', u'2007', u',', u'George', u'Pendle', u'wrote', u'The', u'Remarkable', u'Millard', u'Fillmore', u',', u'a', u'fake', u'biography', u'based', u'on', u'real', u'events', u'that', u'happened', u'in', u'Fillmore', u"'s", u'life', u'.'], u'lemmas': [u'*', u'in', u'2007', u',', u'George', u'Pendle', u'write', u'the', u'remarkable', u'Millard', u'Fillmore', u',', u'a', u'fake', u'biography', u'base', u'on', u'real', u'event', u'that', u'happen', u'in', u'Fillmore', u"'s", u'life', u'.'], u'pos': [u'SYM', u'IN', u'CD', u',', u'NNP', u'NNP', u'VBD', u'DT', u'JJ', u'NNP', u'NNP', u',', u'DT', u'JJ', u'NN', u'VBN', u'IN', u'JJ', u'NNS', u'WDT', u'VBD', u'IN', u'NNP', u'POS', u'NN', u'.'], u'char_offsets': [[13674, 13675], [13675, 13677], [13678, 13682], [13682, 13683], [13684, 13690], [13691, 13697], [13698, 13703], [13704, 13707], [13708, 13718], [13719, 13726], [13727, 13735], [13735, 13736], [13737, 13738], [13739, 13743], [13744, 13753], [13754, 13759], [13760, 13762], [13763, 13767], [13768, 13774], [13775, 13779], [13780, 13788], [13789, 13791], [13792, 13800], [13800, 13802], [13803, 13807], [13807, 13808]]}) 
answer: set([u'januari', u'7', u'bear', u'1800'])
candidate Sentence: (0.048314366489648819, {u'tokens': [u'Though', u'a', u'Unitarian', u'in', u'later', u'life', u',', u'Fillmore', u'was', u'descended', u'from', u'Scottish', u'Presbyterians', u'on', u'his', u'father', u"'s", u'side', u'and', u'English', u'dissenters', u'on', u'his', u'mother', u"'s", u'.'], u'lemmas': [u'though', u'a', u'Unitarian', u'in', u'later', u'life', u',', u'Fillmore', u'be', u'descend', u'from', u'scottish', u'Presbyterians', u'on', u'he', u'father', u"'s", u'side', u'and', u'english', u'dissenter', u'on', u'he', u'mother', u"'s", u'.'], u'pos': [u'IN', u'DT', u'NNP', u'IN', u'JJ', u'NN', u',', u'NNP', u'VBD', u'VBN', u'IN', u'JJ', u'NNPS', u'IN', u'PRP$', u'NN', u'POS', u'NN', u'CC', u'JJ', u'NNS', u'IN', u'PRP$', u'NN', u'POS', u'.'], u'char_offsets': [[823, 829], [830, 831], [832, 841], [842, 844], [845, 850], [851, 855], [855, 856], [860, 868], [869, 872], [873, 882], [883, 887], [888, 896], [897, 910], [911, 913], [914, 917], [918, 924], [924, 926], [927, 931], [932, 935], [936, 943], [944, 954], [955, 957], [958, 961], [962, 968], [968, 970], [970, 971]]}) 
answer: set([u'januari', u'bear', u'7', u'1800'])
candidate Sentence: (0.045032672584056854, {u'tokens': [u'The', u'couple', u'had', u'two', u'children', u',', u'Millard', u'Powers', u'Fillmore', u'and', u'Mary', u'Abigail', u'Fillmore', u'.'], u'lemmas': [u'the', u'couple', u'have', u'two', u'child', u',', u'Millard', u'Powers', u'Fillmore', u'and', u'Mary', u'Abigail', u'Fillmore', u'.'], u'pos': [u'DT', u'NN', u'VBD', u'CD', u'NNS', u',', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[1299, 1302], [1303, 1309], [1310, 1313], [1314, 1317], [1318, 1326], [1326, 1327], [1328, 1335], [1336, 1342], [1343, 1351], [1352, 1355], [1356, 1360], [1361, 1368], [1369, 1377], [1377, 1378]]}) 
answer: set([u'januari', u'7', u'bear', u'1800'])
candidate Sentence: (0.043234087526798248, {u'tokens': [u'*', u'The', u'myth', u'that', u'Millard', u'Fillmore', u'installed', u'the', u'White', u'House', u"'s", u'first', u'bathtub', u'was', u'started', u'by', u'H.', u'L.', u'Mencken', u'in', u'a', u'joke', u'column', u'published', u'on', u'December', u'28', u',', u'1917', u'in', u'the', u'New', u'York', u'Evening', u'Mail', u'.'], u'lemmas': [u'*', u'the', u'myth', u'that', u'Millard', u'Fillmore', u'install', u'the', u'White', u'House', u"'s", u'first', u'bathtub', u'be', u'start', u'by', u'H.', u'L.', u'Mencken', u'in', u'a', u'joke', u'column', u'publish', u'on', u'December', u'28', u',', u'1917', u'in', u'the', u'New', u'York', u'Evening', u'Mail', u'.'], u'pos': [u'SYM', u'DT', u'NN', u'WDT', u'NNP', u'NNP', u'VBD', u'DT', u'NNP', u'NNP', u'POS', u'JJ', u'NN', u'VBD', u'VBN', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NN', u'NN', u'VBN', u'IN', u'NNP', u'CD', u',', u'CD', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'.'], u'char_offsets': [[14566, 14567], [14567, 14570], [14571, 14575], [14576, 14580], [14581, 14588], [14589, 14597], [14598, 14607], [14608, 14611], [14612, 14617], [14618, 14623], [14623, 14625], [14626, 14631], [14632, 14639], [14640, 14643], [14644, 14651], [14652, 14654], [14655, 14657], [14658, 14660], [14661, 14668], [14669, 14671], [14672, 14673], [14674, 14678], [14679, 14685], [14686, 14695], [14696, 14698], [14699, 14707], [14708, 14710], [14710, 14711], [14712, 14716], [14717, 14719], [14720, 14723], [14724, 14727], [14728, 14732], [14733, 14740], [14741, 14745], [14745, 14746]]}) 
answer: set([u'januari', u'bear', u'7', u'1800'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'millard', u'fillmore', u'.'])

Was Millard Fillmore born on January 7, 1800?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Millard_Fillmore
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a3.txt

No
_____________________________ test_yesno[param248] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e8ef0>, (<src.tfidf.TF_IDF object at 0x110787f90>, set(['.', 'otter'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('no') == True
E            +  where 'no' = <src.question_processing.Question_parser instance at 0x1156e8ef0>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.59156650304794312, {u'tokens': [u'Most', u'have', u'sharp', u'claws', u'on', u'their', u'feet', u',', u'and', u'all', u'but', u'the', u'sea', u'otter', u'have', u'long', u'muscular', u'tails', u'.'], u'lemmas': [u'most', u'have', u'sharp', u'claw', u'on', u'they', u'foot', u',', u'and', u'all', u'but', u'the', u'sea', u'otter', u'have', u'long', u'muscular', u'tail', u'.'], u'pos': [u'JJS', u'VBP', u'JJ', u'NNS', u'IN', u'PRP$', u'NNS', u',', u'CC', u'DT', u'CC', u'DT', u'NN', u'NN', u'VBP', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[580, 584], [585, 589], [590, 595], [596, 601], [602, 604], [605, 610], [611, 615], [615, 616], [617, 620], [621, 624], [625, 628], [629, 632], [633, 636], [637, 642], [643, 647], [648, 652], [653, 661], [662, 667], [667, 668]]}) 
answer: set([])
candidate Sentence: (0.17201779782772064, {u'tokens': [u'Unlike', u'most', u'marine', u'mammals', u'such', u'as', u'-LRB-', u'seals', u'or', u'whales', u'-RRB-', u',', u'sea', u'otters', u'do', u'not', u'have', u'a', u'layer', u'of', u'insulating', u'blubber', u'.'], u'lemmas': [u'unlike', u'most', u'marine', u'mammal', u'such', u'as', u'-lrb-', u'seal', u'or', u'whale', u'-rrb-', u',', u'sea', u'otter', u'do', u'not', u'have', u'a', u'layer', u'of', u'insulate', u'blubber', u'.'], u'pos': [u'IN', u'JJS', u'JJ', u'NNS', u'JJ', u'IN', u'-LRB-', u'NNS', u'CC', u'NNS', u'-RRB-', u',', u'NN', u'NNS', u'VBP', u'RB', u'VB', u'DT', u'NN', u'IN', u'VBG', u'NN', u'.'], u'char_offsets': [[3702, 3708], [3709, 3713], [3714, 3720], [3721, 3728], [3729, 3733], [3734, 3736], [3737, 3738], [3738, 3743], [3744, 3746], [3747, 3753], [3753, 3754], [3754, 3755], [3756, 3759], [3760, 3766], [3767, 3769], [3770, 3773], [3774, 3778], [3779, 3780], [3781, 3786], [3787, 3789], [3790, 3800], [3801, 3808], [3808, 3809]]}) 
answer: set([u'tail', u'muscular', u'long'])
candidate Sentence: (0.16381525993347168, {u'tokens': [u'The', u'sea', u'otter', u'lives', u'actually', u'in', u'the', u'sea', u'.'], u'lemmas': [u'the', u'sea', u'otter', u'live', u'actually', u'in', u'the', u'sea', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBZ', u'RB', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[1793, 1796], [1797, 1800], [1801, 1806], [1807, 1812], [1813, 1821], [1822, 1824], [1825, 1828], [1829, 1832], [1832, 1833]]}) 
answer: set([u'tail', u'muscular', u'long'])
candidate Sentence: (0.12868636846542358, {u'tokens': [u'Otters', u'have', u'long', u',', u'slim', u'bodies', u'and', u'relatively', u'short', u'limbs', u',', u'with', u'webbed', u'paws', u'.'], u'lemmas': [u'otter', u'have', u'long', u',', u'slim', u'body', u'and', u'relatively', u'short', u'limb', u',', u'with', u'webbed', u'paw', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u',', u'JJ', u'NNS', u'CC', u'RB', u'JJ', u'NNS', u',', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[504, 510], [511, 515], [516, 520], [520, 521], [522, 526], [527, 533], [534, 537], [538, 548], [549, 554], [555, 560], [560, 561], [562, 566], [567, 573], [574, 578], [578, 579]]}) 
answer: set([u'tail', u'sea', u'muscular'])
candidate Sentence: (0.12104348838329315, {u'tokens': [u'They', u'have', u'a', u'very', u'soft', u'underfur', u'which', u'is', u'protected', u'by', u'their', u'outer', u'layer', u'of', u'long', u'guard', u'hair', u'.'], u'lemmas': [u'they', u'have', u'a', u'very', u'soft', u'underfur', u'which', u'be', u'protect', u'by', u'they', u'outer', u'layer', u'of', u'long', u'guard', u'hair', u'.'], u'pos': [u'PRP', u'VBP', u'DT', u'RB', u'JJ', u'NN', u'WDT', u'VBZ', u'VBN', u'IN', u'PRP$', u'JJ', u'NN', u'IN', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[669, 673], [674, 678], [679, 680], [681, 685], [686, 690], [691, 699], [700, 705], [706, 708], [709, 718], [719, 721], [722, 727], [728, 733], [734, 739], [740, 742], [743, 747], [748, 753], [754, 758], [758, 759]]}) 
answer: set([u'tail', u'muscular', u'sea'])
candidate Sentence: (0.11694718897342682, {u'tokens': [u'Otters', u'do', u'not', u'depend', u'on', u'their', u'specialized', u'fur', u'alone', u'for', u'survival', u'in', u'the', u'cold', u'waters', u'where', u'many', u'live', u':', u'they', u'also', u'have', u'very', u'high', u'metabolic', u'rates', u'.'], u'lemmas': [u'otter', u'do', u'not', u'depend', u'on', u'they', u'specialize', u'fur', u'alone', u'for', u'survival', u'in', u'the', u'cold', u'water', u'where', u'many', u'live', u':', u'they', u'also', u'have', u'very', u'high', u'metabolic', u'rate', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'VB', u'IN', u'PRP$', u'VBN', u'NN', u'RB', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'WRB', u'JJ', u'VBP', u':', u'PRP', u'RB', u'VBP', u'RB', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[828, 834], [835, 837], [838, 841], [842, 848], [849, 851], [852, 857], [858, 869], [870, 873], [874, 879], [880, 883], [884, 892], [893, 895], [896, 899], [900, 904], [905, 911], [912, 917], [918, 922], [923, 927], [927, 928], [929, 933], [934, 938], [939, 943], [944, 948], [949, 953], [954, 963], [964, 969], [969, 970]]}) 
answer: set([u'tail', u'sea', u'muscular', u'long'])
candidate Sentence: (0.055566482245922089, {u'tokens': [u'By', u'the', u'time', u'the', u'1911', u'Fur', u'Seal', u'Treaty', u'gave', u'them', u'protection', u',', u'so', u'few', u'sea', u'otters', u'remained', u'that', u'the', u'fur', u'trade', u'had', u'become', u'unprofitable', u'.'], u'lemmas': [u'by', u'the', u'time', u'the', u'1911', u'Fur', u'Seal', u'Treaty', u'give', u'they', u'protection', u',', u'so', u'few', u'sea', u'otter', u'remain', u'that', u'the', u'fur', u'trade', u'have', u'become', u'unprofitable', u'.'], u'pos': [u'IN', u'DT', u'NN', u'DT', u'CD', u'NNP', u'NNP', u'NNP', u'VBD', u'PRP', u'NN', u',', u'RB', u'JJ', u'NN', u'NNS', u'VBD', u'IN', u'DT', u'NN', u'NN', u'VBD', u'VBN', u'JJ', u'.'], u'char_offsets': [[3216, 3218], [3219, 3222], [3223, 3227], [3228, 3231], [3232, 3236], [3237, 3240], [3241, 3245], [3246, 3252], [3253, 3257], [3258, 3262], [3263, 3273], [3273, 3274], [3275, 3277], [3278, 3281], [3282, 3285], [3286, 3292], [3293, 3301], [3302, 3306], [3307, 3310], [3311, 3314], [3315, 3320], [3321, 3324], [3325, 3331], [3332, 3344], [3344, 3345]]}) 
answer: set([u'tail', u'muscular', u'long'])
candidate Sentence: (0.046691827476024628, {u'tokens': [u'Otters', u'are', u'very', u'active', u',', u'chasing', u'prey', u'in', u'the', u'water', u'or', u'searching', u'the', u'beds', u'of', u'rivers', u',', u'lakes', u'or', u'the', u'sea', u'.'], u'lemmas': [u'otter', u'be', u'very', u'active', u',', u'chase', u'prey', u'in', u'the', u'water', u'or', u'search', u'the', u'bed', u'of', u'river', u',', u'lake', u'or', u'the', u'sea', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'JJ', u',', u'VBG', u'NN', u'IN', u'DT', u'NN', u'CC', u'VBG', u'DT', u'NNS', u'IN', u'NNS', u',', u'NNS', u'CC', u'DT', u'NN', u'.'], u'char_offsets': [[1533, 1539], [1540, 1543], [1544, 1548], [1549, 1555], [1555, 1556], [1557, 1564], [1565, 1569], [1570, 1572], [1573, 1576], [1577, 1582], [1583, 1585], [1586, 1595], [1596, 1599], [1600, 1604], [1605, 1607], [1608, 1614], [1614, 1615], [1616, 1621], [1622, 1624], [1625, 1628], [1629, 1632], [1632, 1633]]}) 
answer: set([u'tail', u'muscular', u'long'])
candidate Sentence: (0.043332099914550781, {u'tokens': [u'A', u'sea', u'otter', u'in', u'Morro', u'Bay', u',', u'California', u'Sea', u'otters', u'-LRB-', u'Enhydra', u'lutris', u'-RRB-', u'live', u'along', u'the', u'Pacific', u'coast', u'of', u'North', u'America', u'.'], u'lemmas': [u'a', u'sea', u'otter', u'in', u'Morro', u'Bay', u',', u'California', u'Sea', u'otter', u'-lrb-', u'enhydra', u'lutri', u'-rrb-', u'live', u'along', u'the', u'Pacific', u'coast', u'of', u'North', u'America', u'.'], u'pos': [u'DT', u'NN', u'NN', u'IN', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u'VBP', u'IN', u'DT', u'NNP', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[2875, 2876], [2877, 2880], [2881, 2886], [2887, 2889], [2890, 2895], [2896, 2899], [2899, 2900], [2901, 2911], [2912, 2915], [2916, 2922], [2923, 2924], [2924, 2931], [2932, 2938], [2938, 2939], [2940, 2944], [2945, 2950], [2951, 2954], [2955, 2962], [2963, 2968], [2969, 2971], [2972, 2977], [2978, 2985], [2985, 2986]]}) 
answer: set([u'tail', u'muscular', u'long'])
candidate Sentence: (0.038206104189157486, {u'tokens': [u'It', u'is', u'native', u'to', u'the', u'Tigris-Euphrates', u'alluvial', u'salt', u'marsh', u'of', u'Iraq', u',', u'but', u'it', u'has', u'been', u'suggested', u'that', u'it', u'may', u'have', u'become', u'extinct', u'as', u'a', u'result', u'of', u'the', u'large-scale', u'drainage', u'that', u'has', u'taken', u'place', u'in', u'the', u'region', u'since', u'the', u'1960s', u'.'], u'lemmas': [u'it', u'be', u'native', u'to', u'the', u'Tigris-Euphrates', u'alluvial', u'salt', u'marsh', u'of', u'Iraq', u',', u'but', u'it', u'have', u'be', u'suggest', u'that', u'it', u'may', u'have', u'become', u'extinct', u'as', u'a', u'result', u'of', u'the', u'large-scale', u'drainage', u'that', u'have', u'take', u'place', u'in', u'the', u'region', u'since', u'the', u'1960', u'.'], u'pos': [u'PRP', u'VBZ', u'JJ', u'TO', u'DT', u'NNP', u'JJ', u'NN', u'NN', u'IN', u'NNP', u',', u'CC', u'PRP', u'VBZ', u'VBN', u'VBN', u'IN', u'PRP', u'MD', u'VB', u'VBN', u'JJ', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'WDT', u'VBZ', u'VBN', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[4255, 4257], [4258, 4260], [4261, 4267], [4268, 4270], [4271, 4274], [4275, 4291], [4292, 4300], [4301, 4305], [4306, 4311], [4312, 4314], [4315, 4319], [4319, 4320], [4321, 4324], [4325, 4327], [4328, 4331], [4332, 4336], [4337, 4346], [4347, 4351], [4352, 4354], [4355, 4358], [4359, 4363], [4364, 4370], [4371, 4378], [4379, 4381], [4382, 4383], [4384, 4390], [4391, 4393], [4394, 4397], [4398, 4409], [4410, 4418], [4419, 4423], [4424, 4427], [4428, 4433], [4434, 4439], [4440, 4442], [4443, 4446], [4447, 4453], [4454, 4459], [4460, 4463], [4464, 4469], [4470, 4471]]}) 
answer: set([u'tail', u'sea', u'muscular', u'long'])
['Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'otter'])

Do sea otters have long muscular tails?
Validity= False
Question Type = NA
Answer Type = NA
Answer = no
Difficulty = easy
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

Yes
_____________________________ test_yesno[param249] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e8f38>, (<src.tfidf.TF_IDF object at 0x110787f90>, set(['.', 'otter'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('No') == True
E            +  where 'No' = <src.question_processing.Question_parser instance at 0x1156e8f38>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.59156650304794312, {u'tokens': [u'Most', u'have', u'sharp', u'claws', u'on', u'their', u'feet', u',', u'and', u'all', u'but', u'the', u'sea', u'otter', u'have', u'long', u'muscular', u'tails', u'.'], u'lemmas': [u'most', u'have', u'sharp', u'claw', u'on', u'they', u'foot', u',', u'and', u'all', u'but', u'the', u'sea', u'otter', u'have', u'long', u'muscular', u'tail', u'.'], u'pos': [u'JJS', u'VBP', u'JJ', u'NNS', u'IN', u'PRP$', u'NNS', u',', u'CC', u'DT', u'CC', u'DT', u'NN', u'NN', u'VBP', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[580, 584], [585, 589], [590, 595], [596, 601], [602, 604], [605, 610], [611, 615], [615, 616], [617, 620], [621, 624], [625, 628], [629, 632], [633, 636], [637, 642], [643, 647], [648, 652], [653, 661], [662, 667], [667, 668]]}) 
answer: set([])
candidate Sentence: (0.17201779782772064, {u'tokens': [u'Unlike', u'most', u'marine', u'mammals', u'such', u'as', u'-LRB-', u'seals', u'or', u'whales', u'-RRB-', u',', u'sea', u'otters', u'do', u'not', u'have', u'a', u'layer', u'of', u'insulating', u'blubber', u'.'], u'lemmas': [u'unlike', u'most', u'marine', u'mammal', u'such', u'as', u'-lrb-', u'seal', u'or', u'whale', u'-rrb-', u',', u'sea', u'otter', u'do', u'not', u'have', u'a', u'layer', u'of', u'insulate', u'blubber', u'.'], u'pos': [u'IN', u'JJS', u'JJ', u'NNS', u'JJ', u'IN', u'-LRB-', u'NNS', u'CC', u'NNS', u'-RRB-', u',', u'NN', u'NNS', u'VBP', u'RB', u'VB', u'DT', u'NN', u'IN', u'VBG', u'NN', u'.'], u'char_offsets': [[3702, 3708], [3709, 3713], [3714, 3720], [3721, 3728], [3729, 3733], [3734, 3736], [3737, 3738], [3738, 3743], [3744, 3746], [3747, 3753], [3753, 3754], [3754, 3755], [3756, 3759], [3760, 3766], [3767, 3769], [3770, 3773], [3774, 3778], [3779, 3780], [3781, 3786], [3787, 3789], [3790, 3800], [3801, 3808], [3808, 3809]]}) 
answer: set([u'tail', u'muscular', u'long'])
candidate Sentence: (0.16381525993347168, {u'tokens': [u'The', u'sea', u'otter', u'lives', u'actually', u'in', u'the', u'sea', u'.'], u'lemmas': [u'the', u'sea', u'otter', u'live', u'actually', u'in', u'the', u'sea', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBZ', u'RB', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[1793, 1796], [1797, 1800], [1801, 1806], [1807, 1812], [1813, 1821], [1822, 1824], [1825, 1828], [1829, 1832], [1832, 1833]]}) 
answer: set([u'tail', u'muscular', u'long'])
candidate Sentence: (0.12868636846542358, {u'tokens': [u'Otters', u'have', u'long', u',', u'slim', u'bodies', u'and', u'relatively', u'short', u'limbs', u',', u'with', u'webbed', u'paws', u'.'], u'lemmas': [u'otter', u'have', u'long', u',', u'slim', u'body', u'and', u'relatively', u'short', u'limb', u',', u'with', u'webbed', u'paw', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u',', u'JJ', u'NNS', u'CC', u'RB', u'JJ', u'NNS', u',', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[504, 510], [511, 515], [516, 520], [520, 521], [522, 526], [527, 533], [534, 537], [538, 548], [549, 554], [555, 560], [560, 561], [562, 566], [567, 573], [574, 578], [578, 579]]}) 
answer: set([u'tail', u'sea', u'muscular'])
candidate Sentence: (0.12104348838329315, {u'tokens': [u'They', u'have', u'a', u'very', u'soft', u'underfur', u'which', u'is', u'protected', u'by', u'their', u'outer', u'layer', u'of', u'long', u'guard', u'hair', u'.'], u'lemmas': [u'they', u'have', u'a', u'very', u'soft', u'underfur', u'which', u'be', u'protect', u'by', u'they', u'outer', u'layer', u'of', u'long', u'guard', u'hair', u'.'], u'pos': [u'PRP', u'VBP', u'DT', u'RB', u'JJ', u'NN', u'WDT', u'VBZ', u'VBN', u'IN', u'PRP$', u'JJ', u'NN', u'IN', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[669, 673], [674, 678], [679, 680], [681, 685], [686, 690], [691, 699], [700, 705], [706, 708], [709, 718], [719, 721], [722, 727], [728, 733], [734, 739], [740, 742], [743, 747], [748, 753], [754, 758], [758, 759]]}) 
answer: set([u'tail', u'muscular', u'sea'])
candidate Sentence: (0.11694718897342682, {u'tokens': [u'Otters', u'do', u'not', u'depend', u'on', u'their', u'specialized', u'fur', u'alone', u'for', u'survival', u'in', u'the', u'cold', u'waters', u'where', u'many', u'live', u':', u'they', u'also', u'have', u'very', u'high', u'metabolic', u'rates', u'.'], u'lemmas': [u'otter', u'do', u'not', u'depend', u'on', u'they', u'specialize', u'fur', u'alone', u'for', u'survival', u'in', u'the', u'cold', u'water', u'where', u'many', u'live', u':', u'they', u'also', u'have', u'very', u'high', u'metabolic', u'rate', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'VB', u'IN', u'PRP$', u'VBN', u'NN', u'RB', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'WRB', u'JJ', u'VBP', u':', u'PRP', u'RB', u'VBP', u'RB', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[828, 834], [835, 837], [838, 841], [842, 848], [849, 851], [852, 857], [858, 869], [870, 873], [874, 879], [880, 883], [884, 892], [893, 895], [896, 899], [900, 904], [905, 911], [912, 917], [918, 922], [923, 927], [927, 928], [929, 933], [934, 938], [939, 943], [944, 948], [949, 953], [954, 963], [964, 969], [969, 970]]}) 
answer: set([u'tail', u'sea', u'muscular', u'long'])
candidate Sentence: (0.055566482245922089, {u'tokens': [u'By', u'the', u'time', u'the', u'1911', u'Fur', u'Seal', u'Treaty', u'gave', u'them', u'protection', u',', u'so', u'few', u'sea', u'otters', u'remained', u'that', u'the', u'fur', u'trade', u'had', u'become', u'unprofitable', u'.'], u'lemmas': [u'by', u'the', u'time', u'the', u'1911', u'Fur', u'Seal', u'Treaty', u'give', u'they', u'protection', u',', u'so', u'few', u'sea', u'otter', u'remain', u'that', u'the', u'fur', u'trade', u'have', u'become', u'unprofitable', u'.'], u'pos': [u'IN', u'DT', u'NN', u'DT', u'CD', u'NNP', u'NNP', u'NNP', u'VBD', u'PRP', u'NN', u',', u'RB', u'JJ', u'NN', u'NNS', u'VBD', u'IN', u'DT', u'NN', u'NN', u'VBD', u'VBN', u'JJ', u'.'], u'char_offsets': [[3216, 3218], [3219, 3222], [3223, 3227], [3228, 3231], [3232, 3236], [3237, 3240], [3241, 3245], [3246, 3252], [3253, 3257], [3258, 3262], [3263, 3273], [3273, 3274], [3275, 3277], [3278, 3281], [3282, 3285], [3286, 3292], [3293, 3301], [3302, 3306], [3307, 3310], [3311, 3314], [3315, 3320], [3321, 3324], [3325, 3331], [3332, 3344], [3344, 3345]]}) 
answer: set([u'tail', u'muscular', u'long'])
candidate Sentence: (0.046691827476024628, {u'tokens': [u'Otters', u'are', u'very', u'active', u',', u'chasing', u'prey', u'in', u'the', u'water', u'or', u'searching', u'the', u'beds', u'of', u'rivers', u',', u'lakes', u'or', u'the', u'sea', u'.'], u'lemmas': [u'otter', u'be', u'very', u'active', u',', u'chase', u'prey', u'in', u'the', u'water', u'or', u'search', u'the', u'bed', u'of', u'river', u',', u'lake', u'or', u'the', u'sea', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'JJ', u',', u'VBG', u'NN', u'IN', u'DT', u'NN', u'CC', u'VBG', u'DT', u'NNS', u'IN', u'NNS', u',', u'NNS', u'CC', u'DT', u'NN', u'.'], u'char_offsets': [[1533, 1539], [1540, 1543], [1544, 1548], [1549, 1555], [1555, 1556], [1557, 1564], [1565, 1569], [1570, 1572], [1573, 1576], [1577, 1582], [1583, 1585], [1586, 1595], [1596, 1599], [1600, 1604], [1605, 1607], [1608, 1614], [1614, 1615], [1616, 1621], [1622, 1624], [1625, 1628], [1629, 1632], [1632, 1633]]}) 
answer: set([u'tail', u'muscular', u'long'])
candidate Sentence: (0.043332099914550781, {u'tokens': [u'A', u'sea', u'otter', u'in', u'Morro', u'Bay', u',', u'California', u'Sea', u'otters', u'-LRB-', u'Enhydra', u'lutris', u'-RRB-', u'live', u'along', u'the', u'Pacific', u'coast', u'of', u'North', u'America', u'.'], u'lemmas': [u'a', u'sea', u'otter', u'in', u'Morro', u'Bay', u',', u'California', u'Sea', u'otter', u'-lrb-', u'enhydra', u'lutri', u'-rrb-', u'live', u'along', u'the', u'Pacific', u'coast', u'of', u'North', u'America', u'.'], u'pos': [u'DT', u'NN', u'NN', u'IN', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u'VBP', u'IN', u'DT', u'NNP', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[2875, 2876], [2877, 2880], [2881, 2886], [2887, 2889], [2890, 2895], [2896, 2899], [2899, 2900], [2901, 2911], [2912, 2915], [2916, 2922], [2923, 2924], [2924, 2931], [2932, 2938], [2938, 2939], [2940, 2944], [2945, 2950], [2951, 2954], [2955, 2962], [2963, 2968], [2969, 2971], [2972, 2977], [2978, 2985], [2985, 2986]]}) 
answer: set([u'tail', u'muscular', u'long'])
candidate Sentence: (0.038206104189157486, {u'tokens': [u'It', u'is', u'native', u'to', u'the', u'Tigris-Euphrates', u'alluvial', u'salt', u'marsh', u'of', u'Iraq', u',', u'but', u'it', u'has', u'been', u'suggested', u'that', u'it', u'may', u'have', u'become', u'extinct', u'as', u'a', u'result', u'of', u'the', u'large-scale', u'drainage', u'that', u'has', u'taken', u'place', u'in', u'the', u'region', u'since', u'the', u'1960s', u'.'], u'lemmas': [u'it', u'be', u'native', u'to', u'the', u'Tigris-Euphrates', u'alluvial', u'salt', u'marsh', u'of', u'Iraq', u',', u'but', u'it', u'have', u'be', u'suggest', u'that', u'it', u'may', u'have', u'become', u'extinct', u'as', u'a', u'result', u'of', u'the', u'large-scale', u'drainage', u'that', u'have', u'take', u'place', u'in', u'the', u'region', u'since', u'the', u'1960', u'.'], u'pos': [u'PRP', u'VBZ', u'JJ', u'TO', u'DT', u'NNP', u'JJ', u'NN', u'NN', u'IN', u'NNP', u',', u'CC', u'PRP', u'VBZ', u'VBN', u'VBN', u'IN', u'PRP', u'MD', u'VB', u'VBN', u'JJ', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'WDT', u'VBZ', u'VBN', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[4255, 4257], [4258, 4260], [4261, 4267], [4268, 4270], [4271, 4274], [4275, 4291], [4292, 4300], [4301, 4305], [4306, 4311], [4312, 4314], [4315, 4319], [4319, 4320], [4321, 4324], [4325, 4327], [4328, 4331], [4332, 4336], [4337, 4346], [4347, 4351], [4352, 4354], [4355, 4358], [4359, 4363], [4364, 4370], [4371, 4378], [4379, 4381], [4382, 4383], [4384, 4390], [4391, 4393], [4394, 4397], [4398, 4409], [4410, 4418], [4419, 4423], [4424, 4427], [4428, 4433], [4434, 4439], [4440, 4442], [4443, 4446], [4447, 4453], [4454, 4459], [4460, 4463], [4464, 4469], [4470, 4471]]}) 
answer: set([u'tail', u'sea', u'muscular', u'long'])
['Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'otter'])

Do sea otters have long muscular tails?
Validity= False
Question Type = NA
Answer Type = NA
Answer = No
Difficulty = easy
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

Yes
_____________________________ test_yesno[param250] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e8f80>, (<src.tfidf.TF_IDF object at 0x110787f90>, set(['.', 'otter'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156e8f80>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.26712679862976074, {u'tokens': [u'In', u'water', u'as', u'warm', u'as', u'10C', u'an', u'otter', u'needs', u'to', u'catch', u'100', u'g', u'of', u'fish', u'per', u'hour', u'to', u'survive', u'.'], u'lemmas': [u'in', u'water', u'as', u'warm', u'as', u'10c', u'a', u'otter', u'need', u'to', u'catch', u'100', u'g', u'of', u'fish', u'per', u'hour', u'to', u'survive', u'.'], u'pos': [u'IN', u'NN', u'IN', u'JJ', u'IN', u'CD', u'DT', u'NN', u'VBZ', u'TO', u'VB', u'CD', u'NN', u'IN', u'NN', u'IN', u'NN', u'TO', u'VB', u'.'], u'char_offsets': [[1097, 1099], [1100, 1105], [1106, 1108], [1109, 1113], [1114, 1116], [1117, 1120], [1121, 1123], [1124, 1129], [1130, 1135], [1136, 1138], [1139, 1144], [1145, 1148], [1149, 1150], [1151, 1153], [1154, 1158], [1159, 1162], [1163, 1167], [1168, 1170], [1171, 1178], [1178, 1179]]}) 
answer: set([u'cold'])
candidate Sentence: (0.2261139452457428, {u'tokens': [u'Otters', u'do', u'not', u'depend', u'on', u'their', u'specialized', u'fur', u'alone', u'for', u'survival', u'in', u'the', u'cold', u'waters', u'where', u'many', u'live', u':', u'they', u'also', u'have', u'very', u'high', u'metabolic', u'rates', u'.'], u'lemmas': [u'otter', u'do', u'not', u'depend', u'on', u'they', u'specialize', u'fur', u'alone', u'for', u'survival', u'in', u'the', u'cold', u'water', u'where', u'many', u'live', u':', u'they', u'also', u'have', u'very', u'high', u'metabolic', u'rate', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'VB', u'IN', u'PRP$', u'VBN', u'NN', u'RB', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'WRB', u'JJ', u'VBP', u':', u'PRP', u'RB', u'VBP', u'RB', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[828, 834], [835, 837], [838, 841], [842, 848], [849, 851], [852, 857], [858, 869], [870, 873], [874, 879], [880, 883], [884, 892], [893, 895], [896, 899], [900, 904], [905, 911], [912, 917], [918, 922], [923, 927], [927, 928], [929, 933], [934, 938], [939, 943], [944, 948], [949, 953], [954, 963], [964, 969], [969, 970]]}) 
answer: set([])
candidate Sentence: (0.061568949371576309, {u'tokens': [u'Otters', u'are', u'very', u'active', u',', u'chasing', u'prey', u'in', u'the', u'water', u'or', u'searching', u'the', u'beds', u'of', u'rivers', u',', u'lakes', u'or', u'the', u'sea', u'.'], u'lemmas': [u'otter', u'be', u'very', u'active', u',', u'chase', u'prey', u'in', u'the', u'water', u'or', u'search', u'the', u'bed', u'of', u'river', u',', u'lake', u'or', u'the', u'sea', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'JJ', u',', u'VBG', u'NN', u'IN', u'DT', u'NN', u'CC', u'VBG', u'DT', u'NNS', u'IN', u'NNS', u',', u'NNS', u'CC', u'DT', u'NN', u'.'], u'char_offsets': [[1533, 1539], [1540, 1543], [1544, 1548], [1549, 1555], [1555, 1556], [1557, 1564], [1565, 1569], [1570, 1572], [1573, 1576], [1577, 1582], [1583, 1585], [1586, 1595], [1596, 1599], [1600, 1604], [1605, 1607], [1608, 1614], [1614, 1615], [1616, 1621], [1622, 1624], [1625, 1628], [1629, 1632], [1632, 1633]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.060728393495082855, {u'tokens': [u'They', u'spend', u'most', u'of', u'their', u'time', u'in', u'the', u'water', u',', u'whereas', u'other', u'otters', u'spend', u'much', u'of', u'their', u'time', u'on', u'land', u'.'], u'lemmas': [u'they', u'spend', u'most', u'of', u'they', u'time', u'in', u'the', u'water', u',', u'whereas', u'other', u'otter', u'spend', u'much', u'of', u'they', u'time', u'on', u'land', u'.'], u'pos': [u'PRP', u'VBP', u'JJS', u'IN', u'PRP$', u'NN', u'IN', u'DT', u'NN', u',', u'IN', u'JJ', u'NNS', u'VBP', u'RB', u'IN', u'PRP$', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[3962, 3966], [3967, 3972], [3973, 3977], [3978, 3980], [3981, 3986], [3987, 3991], [3992, 3994], [3995, 3998], [3999, 4004], [4004, 4005], [4006, 4013], [4014, 4019], [4020, 4026], [4027, 4032], [4033, 4037], [4038, 4040], [4041, 4046], [4047, 4051], [4052, 4054], [4055, 4059], [4059, 4060]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.059948697686195374, {u'tokens': [u'This', u'traps', u'a', u'layer', u'of', u'air', u',', u'and', u'keeps', u'them', u'dry', u'and', u'warm', u'under', u'water', u'.'], u'lemmas': [u'this', u'trap', u'a', u'layer', u'of', u'air', u',', u'and', u'keep', u'they', u'dry', u'and', u'warm', u'under', u'water', u'.'], u'pos': [u'DT', u'NNS', u'DT', u'NN', u'IN', u'NN', u',', u'CC', u'VBZ', u'PRP', u'JJ', u'CC', u'JJ', u'IN', u'NN', u'.'], u'char_offsets': [[760, 764], [765, 770], [771, 772], [773, 778], [779, 781], [782, 785], [785, 786], [787, 790], [791, 796], [797, 801], [802, 805], [806, 809], [810, 814], [815, 820], [821, 826], [826, 827]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.045162633061408997, {u'tokens': [u'In', u'the', u'British', u'Isles', u'they', u'occurred', u'commonly', u'as', u'recently', u'as', u'the', u'1950s', u',', u'but', u'became', u'rare', u'in', u'many', u'areas', u'due', u'to', u'the', u'use', u'of', u'chlorinated', u'hydrocarbon', u'pesticides', u'and', u'as', u'a', u'result', u'of', u'habitat-loss', u'and', u'water', u'pollution', u'-LRB-', u'they', u'remained', u'relatively', u'common', u'in', u'parts', u'of', u'Scotland', u'and', u'Ireland', u'-RRB-', u'.'], u'lemmas': [u'in', u'the', u'british', u'Isles', u'they', u'occur', u'commonly', u'as', u'recently', u'as', u'the', u'1950s', u',', u'but', u'become', u'rare', u'in', u'many', u'area', u'due', u'to', u'the', u'use', u'of', u'chlorinate', u'hydrocarbon', u'pesticide', u'and', u'as', u'a', u'result', u'of', u'habitat-loss', u'and', u'water', u'pollution', u'-lrb-', u'they', u'remain', u'relatively', u'common', u'in', u'part', u'of', u'Scotland', u'and', u'Ireland', u'-rrb-', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'NNPS', u'PRP', u'VBD', u'RB', u'RB', u'RB', u'IN', u'DT', u'CD', u',', u'CC', u'VBD', u'JJ', u'IN', u'JJ', u'NNS', u'JJ', u'TO', u'DT', u'NN', u'IN', u'VBN', u'NN', u'NNS', u'CC', u'IN', u'DT', u'NN', u'IN', u'NN', u'CC', u'NN', u'NN', u'-LRB-', u'PRP', u'VBD', u'RB', u'JJ', u'IN', u'NNS', u'IN', u'NNP', u'CC', u'NNP', u'-RRB-', u'.'], u'char_offsets': [[4590, 4592], [4593, 4596], [4597, 4604], [4605, 4610], [4611, 4615], [4616, 4624], [4625, 4633], [4634, 4636], [4637, 4645], [4646, 4648], [4649, 4652], [4653, 4658], [4658, 4659], [4660, 4663], [4664, 4670], [4671, 4675], [4676, 4678], [4679, 4683], [4684, 4689], [4690, 4693], [4694, 4696], [4697, 4700], [4701, 4704], [4705, 4707], [4708, 4719], [4720, 4731], [4732, 4742], [4743, 4746], [4747, 4749], [4750, 4751], [4752, 4758], [4759, 4761], [4762, 4774], [4775, 4778], [4779, 4784], [4785, 4794], [4795, 4796], [4796, 4800], [4801, 4809], [4810, 4820], [4821, 4827], [4828, 4830], [4831, 4836], [4837, 4839], [4840, 4848], [4849, 4852], [4853, 4860], [4860, 4861], [4861, 4862]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.04313938319683075, {u'tokens': [u'Their', u'historic', u'range', u'included', u'shallow', u'waters', u'of', u'the', u'Bering', u'Strait', u'and', u'Kamchatka', u',', u'and', u'as', u'far', u'south', u'as', u'Japan', u'.'], u'lemmas': [u'they', u'historic', u'range', u'include', u'shallow', u'water', u'of', u'the', u'Bering', u'Strait', u'and', u'Kamchatka', u',', u'and', u'as', u'far', u'south', u'as', u'Japan', u'.'], u'pos': [u'PRP$', u'JJ', u'NN', u'VBD', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'CC', u'NNP', u',', u'CC', u'IN', u'RB', u'RB', u'IN', u'NNP', u'.'], u'char_offsets': [[2988, 2993], [2994, 3002], [3003, 3008], [3009, 3017], [3018, 3025], [3026, 3032], [3033, 3035], [3036, 3039], [3040, 3046], [3047, 3053], [3054, 3057], [3058, 3067], [3067, 3068], [3069, 3072], [3073, 3075], [3076, 3079], [3080, 3085], [3086, 3088], [3089, 3094], [3094, 3095]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.038867894560098648, {u'tokens': [u'Most', u'species', u'live', u'beside', u'water', u',', u'entering', u'it', u'mainly', u'to', u'hunt', u'or', u'travel', u',', u'otherwise', u'spending', u'much', u'of', u'their', u'time', u'on', u'land', u'to', u'avoid', u'their', u'fur', u'becoming', u'waterlogged', u'.'], u'lemmas': [u'most', u'species', u'live', u'beside', u'water', u',', u'enter', u'it', u'mainly', u'to', u'hunt', u'or', u'travel', u',', u'otherwise', u'spend', u'much', u'of', u'they', u'time', u'on', u'land', u'to', u'avoid', u'they', u'fur', u'become', u'waterlogged', u'.'], u'pos': [u'JJS', u'NNS', u'VBP', u'IN', u'NN', u',', u'VBG', u'PRP', u'RB', u'TO', u'NN', u'CC', u'NN', u',', u'RB', u'VBG', u'RB', u'IN', u'PRP$', u'NN', u'IN', u'NN', u'TO', u'VB', u'PRP$', u'NN', u'VBG', u'JJ', u'.'], u'char_offsets': [[1635, 1639], [1640, 1647], [1648, 1652], [1653, 1659], [1660, 1665], [1665, 1666], [1667, 1675], [1676, 1678], [1679, 1685], [1686, 1688], [1689, 1693], [1694, 1696], [1697, 1703], [1703, 1704], [1705, 1714], [1715, 1723], [1724, 1728], [1729, 1731], [1732, 1737], [1738, 1742], [1743, 1745], [1746, 1750], [1751, 1753], [1754, 1759], [1760, 1765], [1766, 1769], [1770, 1778], [1779, 1790], [1790, 1791]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.031678333878517151, {u'tokens': [u'This', u'and', u'cognate', u'words', u'in', u'other', u'Indo-European', u'languages', u'ultimately', u'stem', u'from', u'a', u'root', u'which', u'also', u'gave', u'rise', u'to', u'the', u'English', u'words', u'``', u'water', u"''", u',', u'``', u'wet', u"''", u'and', u'``', u'winter', u"''", u'.'], u'lemmas': [u'this', u'and', u'cognate', u'word', u'in', u'other', u'indo-european', u'language', u'ultimately', u'stem', u'from', u'a', u'root', u'which', u'also', u'give', u'rise', u'to', u'the', u'English', u'word', u'``', u'water', u"''", u',', u'``', u'wet', u"''", u'and', u'``', u'winter', u"''", u'.'], u'pos': [u'DT', u'CC', u'JJ', u'NNS', u'IN', u'JJ', u'JJ', u'NNS', u'RB', u'VBP', u'IN', u'DT', u'NN', u'WDT', u'RB', u'VBD', u'NN', u'TO', u'DT', u'NNP', u'NNS', u'``', u'NN', u"''", u',', u'``', u'JJ', u"''", u'CC', u'``', u'NN', u"''", u'.'], u'char_offsets': [[5699, 5703], [5704, 5707], [5708, 5715], [5716, 5721], [5722, 5724], [5725, 5730], [5731, 5744], [5745, 5754], [5755, 5765], [5766, 5770], [5771, 5775], [5776, 5777], [5778, 5782], [5783, 5788], [5789, 5793], [5794, 5798], [5799, 5803], [5804, 5806], [5807, 5810], [5811, 5818], [5819, 5824], [5825, 5826], [5826, 5831], [5831, 5832], [5832, 5833], [5834, 5835], [5835, 5838], [5838, 5839], [5840, 5843], [5844, 5845], [5845, 5851], [5851, 5852], [5852, 5853]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.021690621972084045, {u'tokens': [u'The', u'sea', u'otter', u'lives', u'actually', u'in', u'the', u'sea', u'.'], u'lemmas': [u'the', u'sea', u'otter', u'live', u'actually', u'in', u'the', u'sea', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBZ', u'RB', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[1793, 1796], [1797, 1800], [1801, 1806], [1807, 1812], [1813, 1821], [1822, 1824], [1825, 1828], [1829, 1832], [1832, 1833]]}) 
answer: set([u'water', u'cold', u'surviv'])
['No', 'No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'otter'])

Can otters survive in cold water?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

No
_____________________________ test_yesno[param251] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156e8fc8>, (<src.tfidf.TF_IDF object at 0x110787f90>, set(['.', 'otter'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156e8fc8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.26712679862976074, {u'tokens': [u'In', u'water', u'as', u'warm', u'as', u'10C', u'an', u'otter', u'needs', u'to', u'catch', u'100', u'g', u'of', u'fish', u'per', u'hour', u'to', u'survive', u'.'], u'lemmas': [u'in', u'water', u'as', u'warm', u'as', u'10c', u'a', u'otter', u'need', u'to', u'catch', u'100', u'g', u'of', u'fish', u'per', u'hour', u'to', u'survive', u'.'], u'pos': [u'IN', u'NN', u'IN', u'JJ', u'IN', u'CD', u'DT', u'NN', u'VBZ', u'TO', u'VB', u'CD', u'NN', u'IN', u'NN', u'IN', u'NN', u'TO', u'VB', u'.'], u'char_offsets': [[1097, 1099], [1100, 1105], [1106, 1108], [1109, 1113], [1114, 1116], [1117, 1120], [1121, 1123], [1124, 1129], [1130, 1135], [1136, 1138], [1139, 1144], [1145, 1148], [1149, 1150], [1151, 1153], [1154, 1158], [1159, 1162], [1163, 1167], [1168, 1170], [1171, 1178], [1178, 1179]]}) 
answer: set([u'cold'])
candidate Sentence: (0.2261139452457428, {u'tokens': [u'Otters', u'do', u'not', u'depend', u'on', u'their', u'specialized', u'fur', u'alone', u'for', u'survival', u'in', u'the', u'cold', u'waters', u'where', u'many', u'live', u':', u'they', u'also', u'have', u'very', u'high', u'metabolic', u'rates', u'.'], u'lemmas': [u'otter', u'do', u'not', u'depend', u'on', u'they', u'specialize', u'fur', u'alone', u'for', u'survival', u'in', u'the', u'cold', u'water', u'where', u'many', u'live', u':', u'they', u'also', u'have', u'very', u'high', u'metabolic', u'rate', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'VB', u'IN', u'PRP$', u'VBN', u'NN', u'RB', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'WRB', u'JJ', u'VBP', u':', u'PRP', u'RB', u'VBP', u'RB', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[828, 834], [835, 837], [838, 841], [842, 848], [849, 851], [852, 857], [858, 869], [870, 873], [874, 879], [880, 883], [884, 892], [893, 895], [896, 899], [900, 904], [905, 911], [912, 917], [918, 922], [923, 927], [927, 928], [929, 933], [934, 938], [939, 943], [944, 948], [949, 953], [954, 963], [964, 969], [969, 970]]}) 
answer: set([])
candidate Sentence: (0.061568949371576309, {u'tokens': [u'Otters', u'are', u'very', u'active', u',', u'chasing', u'prey', u'in', u'the', u'water', u'or', u'searching', u'the', u'beds', u'of', u'rivers', u',', u'lakes', u'or', u'the', u'sea', u'.'], u'lemmas': [u'otter', u'be', u'very', u'active', u',', u'chase', u'prey', u'in', u'the', u'water', u'or', u'search', u'the', u'bed', u'of', u'river', u',', u'lake', u'or', u'the', u'sea', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'JJ', u',', u'VBG', u'NN', u'IN', u'DT', u'NN', u'CC', u'VBG', u'DT', u'NNS', u'IN', u'NNS', u',', u'NNS', u'CC', u'DT', u'NN', u'.'], u'char_offsets': [[1533, 1539], [1540, 1543], [1544, 1548], [1549, 1555], [1555, 1556], [1557, 1564], [1565, 1569], [1570, 1572], [1573, 1576], [1577, 1582], [1583, 1585], [1586, 1595], [1596, 1599], [1600, 1604], [1605, 1607], [1608, 1614], [1614, 1615], [1616, 1621], [1622, 1624], [1625, 1628], [1629, 1632], [1632, 1633]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.060728393495082855, {u'tokens': [u'They', u'spend', u'most', u'of', u'their', u'time', u'in', u'the', u'water', u',', u'whereas', u'other', u'otters', u'spend', u'much', u'of', u'their', u'time', u'on', u'land', u'.'], u'lemmas': [u'they', u'spend', u'most', u'of', u'they', u'time', u'in', u'the', u'water', u',', u'whereas', u'other', u'otter', u'spend', u'much', u'of', u'they', u'time', u'on', u'land', u'.'], u'pos': [u'PRP', u'VBP', u'JJS', u'IN', u'PRP$', u'NN', u'IN', u'DT', u'NN', u',', u'IN', u'JJ', u'NNS', u'VBP', u'RB', u'IN', u'PRP$', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[3962, 3966], [3967, 3972], [3973, 3977], [3978, 3980], [3981, 3986], [3987, 3991], [3992, 3994], [3995, 3998], [3999, 4004], [4004, 4005], [4006, 4013], [4014, 4019], [4020, 4026], [4027, 4032], [4033, 4037], [4038, 4040], [4041, 4046], [4047, 4051], [4052, 4054], [4055, 4059], [4059, 4060]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.059948697686195374, {u'tokens': [u'This', u'traps', u'a', u'layer', u'of', u'air', u',', u'and', u'keeps', u'them', u'dry', u'and', u'warm', u'under', u'water', u'.'], u'lemmas': [u'this', u'trap', u'a', u'layer', u'of', u'air', u',', u'and', u'keep', u'they', u'dry', u'and', u'warm', u'under', u'water', u'.'], u'pos': [u'DT', u'NNS', u'DT', u'NN', u'IN', u'NN', u',', u'CC', u'VBZ', u'PRP', u'JJ', u'CC', u'JJ', u'IN', u'NN', u'.'], u'char_offsets': [[760, 764], [765, 770], [771, 772], [773, 778], [779, 781], [782, 785], [785, 786], [787, 790], [791, 796], [797, 801], [802, 805], [806, 809], [810, 814], [815, 820], [821, 826], [826, 827]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.045162633061408997, {u'tokens': [u'In', u'the', u'British', u'Isles', u'they', u'occurred', u'commonly', u'as', u'recently', u'as', u'the', u'1950s', u',', u'but', u'became', u'rare', u'in', u'many', u'areas', u'due', u'to', u'the', u'use', u'of', u'chlorinated', u'hydrocarbon', u'pesticides', u'and', u'as', u'a', u'result', u'of', u'habitat-loss', u'and', u'water', u'pollution', u'-LRB-', u'they', u'remained', u'relatively', u'common', u'in', u'parts', u'of', u'Scotland', u'and', u'Ireland', u'-RRB-', u'.'], u'lemmas': [u'in', u'the', u'british', u'Isles', u'they', u'occur', u'commonly', u'as', u'recently', u'as', u'the', u'1950s', u',', u'but', u'become', u'rare', u'in', u'many', u'area', u'due', u'to', u'the', u'use', u'of', u'chlorinate', u'hydrocarbon', u'pesticide', u'and', u'as', u'a', u'result', u'of', u'habitat-loss', u'and', u'water', u'pollution', u'-lrb-', u'they', u'remain', u'relatively', u'common', u'in', u'part', u'of', u'Scotland', u'and', u'Ireland', u'-rrb-', u'.'], u'pos': [u'IN', u'DT', u'JJ', u'NNPS', u'PRP', u'VBD', u'RB', u'RB', u'RB', u'IN', u'DT', u'CD', u',', u'CC', u'VBD', u'JJ', u'IN', u'JJ', u'NNS', u'JJ', u'TO', u'DT', u'NN', u'IN', u'VBN', u'NN', u'NNS', u'CC', u'IN', u'DT', u'NN', u'IN', u'NN', u'CC', u'NN', u'NN', u'-LRB-', u'PRP', u'VBD', u'RB', u'JJ', u'IN', u'NNS', u'IN', u'NNP', u'CC', u'NNP', u'-RRB-', u'.'], u'char_offsets': [[4590, 4592], [4593, 4596], [4597, 4604], [4605, 4610], [4611, 4615], [4616, 4624], [4625, 4633], [4634, 4636], [4637, 4645], [4646, 4648], [4649, 4652], [4653, 4658], [4658, 4659], [4660, 4663], [4664, 4670], [4671, 4675], [4676, 4678], [4679, 4683], [4684, 4689], [4690, 4693], [4694, 4696], [4697, 4700], [4701, 4704], [4705, 4707], [4708, 4719], [4720, 4731], [4732, 4742], [4743, 4746], [4747, 4749], [4750, 4751], [4752, 4758], [4759, 4761], [4762, 4774], [4775, 4778], [4779, 4784], [4785, 4794], [4795, 4796], [4796, 4800], [4801, 4809], [4810, 4820], [4821, 4827], [4828, 4830], [4831, 4836], [4837, 4839], [4840, 4848], [4849, 4852], [4853, 4860], [4860, 4861], [4861, 4862]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.04313938319683075, {u'tokens': [u'Their', u'historic', u'range', u'included', u'shallow', u'waters', u'of', u'the', u'Bering', u'Strait', u'and', u'Kamchatka', u',', u'and', u'as', u'far', u'south', u'as', u'Japan', u'.'], u'lemmas': [u'they', u'historic', u'range', u'include', u'shallow', u'water', u'of', u'the', u'Bering', u'Strait', u'and', u'Kamchatka', u',', u'and', u'as', u'far', u'south', u'as', u'Japan', u'.'], u'pos': [u'PRP$', u'JJ', u'NN', u'VBD', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'CC', u'NNP', u',', u'CC', u'IN', u'RB', u'RB', u'IN', u'NNP', u'.'], u'char_offsets': [[2988, 2993], [2994, 3002], [3003, 3008], [3009, 3017], [3018, 3025], [3026, 3032], [3033, 3035], [3036, 3039], [3040, 3046], [3047, 3053], [3054, 3057], [3058, 3067], [3067, 3068], [3069, 3072], [3073, 3075], [3076, 3079], [3080, 3085], [3086, 3088], [3089, 3094], [3094, 3095]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.038867894560098648, {u'tokens': [u'Most', u'species', u'live', u'beside', u'water', u',', u'entering', u'it', u'mainly', u'to', u'hunt', u'or', u'travel', u',', u'otherwise', u'spending', u'much', u'of', u'their', u'time', u'on', u'land', u'to', u'avoid', u'their', u'fur', u'becoming', u'waterlogged', u'.'], u'lemmas': [u'most', u'species', u'live', u'beside', u'water', u',', u'enter', u'it', u'mainly', u'to', u'hunt', u'or', u'travel', u',', u'otherwise', u'spend', u'much', u'of', u'they', u'time', u'on', u'land', u'to', u'avoid', u'they', u'fur', u'become', u'waterlogged', u'.'], u'pos': [u'JJS', u'NNS', u'VBP', u'IN', u'NN', u',', u'VBG', u'PRP', u'RB', u'TO', u'NN', u'CC', u'NN', u',', u'RB', u'VBG', u'RB', u'IN', u'PRP$', u'NN', u'IN', u'NN', u'TO', u'VB', u'PRP$', u'NN', u'VBG', u'JJ', u'.'], u'char_offsets': [[1635, 1639], [1640, 1647], [1648, 1652], [1653, 1659], [1660, 1665], [1665, 1666], [1667, 1675], [1676, 1678], [1679, 1685], [1686, 1688], [1689, 1693], [1694, 1696], [1697, 1703], [1703, 1704], [1705, 1714], [1715, 1723], [1724, 1728], [1729, 1731], [1732, 1737], [1738, 1742], [1743, 1745], [1746, 1750], [1751, 1753], [1754, 1759], [1760, 1765], [1766, 1769], [1770, 1778], [1779, 1790], [1790, 1791]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.031678333878517151, {u'tokens': [u'This', u'and', u'cognate', u'words', u'in', u'other', u'Indo-European', u'languages', u'ultimately', u'stem', u'from', u'a', u'root', u'which', u'also', u'gave', u'rise', u'to', u'the', u'English', u'words', u'``', u'water', u"''", u',', u'``', u'wet', u"''", u'and', u'``', u'winter', u"''", u'.'], u'lemmas': [u'this', u'and', u'cognate', u'word', u'in', u'other', u'indo-european', u'language', u'ultimately', u'stem', u'from', u'a', u'root', u'which', u'also', u'give', u'rise', u'to', u'the', u'English', u'word', u'``', u'water', u"''", u',', u'``', u'wet', u"''", u'and', u'``', u'winter', u"''", u'.'], u'pos': [u'DT', u'CC', u'JJ', u'NNS', u'IN', u'JJ', u'JJ', u'NNS', u'RB', u'VBP', u'IN', u'DT', u'NN', u'WDT', u'RB', u'VBD', u'NN', u'TO', u'DT', u'NNP', u'NNS', u'``', u'NN', u"''", u',', u'``', u'JJ', u"''", u'CC', u'``', u'NN', u"''", u'.'], u'char_offsets': [[5699, 5703], [5704, 5707], [5708, 5715], [5716, 5721], [5722, 5724], [5725, 5730], [5731, 5744], [5745, 5754], [5755, 5765], [5766, 5770], [5771, 5775], [5776, 5777], [5778, 5782], [5783, 5788], [5789, 5793], [5794, 5798], [5799, 5803], [5804, 5806], [5807, 5810], [5811, 5818], [5819, 5824], [5825, 5826], [5826, 5831], [5831, 5832], [5832, 5833], [5834, 5835], [5835, 5838], [5838, 5839], [5840, 5843], [5844, 5845], [5845, 5851], [5851, 5852], [5852, 5853]]}) 
answer: set([u'cold', u'surviv'])
candidate Sentence: (0.021690621972084045, {u'tokens': [u'The', u'sea', u'otter', u'lives', u'actually', u'in', u'the', u'sea', u'.'], u'lemmas': [u'the', u'sea', u'otter', u'live', u'actually', u'in', u'the', u'sea', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBZ', u'RB', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[1793, 1796], [1797, 1800], [1801, 1806], [1807, 1812], [1813, 1821], [1822, 1824], [1825, 1828], [1829, 1832], [1832, 1833]]}) 
answer: set([u'water', u'cold', u'surviv'])
['No', 'No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'otter'])

Can otters survive in cold water?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

No
_____________________________ test_yesno[param254] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156ed0e0>, (<src.tfidf.TF_IDF object at 0x110787f90>, set(['.', 'otter'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156ed0e0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.30864104628562927, {u'tokens': [u'Otters', u'are', u'amphibious', u'-LRB-', u'or', u'in', u'one', u'case', u'aquatic', u'-RRB-', u'carnivorous', u'mammals', u'.'], u'lemmas': [u'otter', u'be', u'amphibious', u'-lrb-', u'or', u'in', u'one', u'case', u'aquatic', u'-rrb-', u'carnivorous', u'mammal', u'.'], u'pos': [u'NNS', u'VBP', u'JJ', u'-LRB-', u'CC', u'IN', u'CD', u'NN', u'JJ', u'-RRB-', u'JJ', u'NNS', u'.'], u'char_offsets': [[0, 6], [7, 10], [11, 21], [22, 23], [23, 25], [26, 28], [29, 32], [33, 37], [38, 45], [45, 46], [47, 58], [59, 66], [66, 67]]}) 
answer: set([u'kind'])
candidate Sentence: (0.25765389204025269, {u'tokens': [u'River', u'otters', u'eat', u'a', u'variety', u'of', u'fish', u'and', u'shellfish', u',', u'as', u'well', u'as', u'small', u'land', u'mammals', u'and', u'birds', u'.'], u'lemmas': [u'river', u'otter', u'eat', u'a', u'variety', u'of', u'fish', u'and', u'shellfish', u',', u'as', u'well', u'as', u'small', u'land', u'mammal', u'and', u'bird', u'.'], u'pos': [u'NN', u'NNS', u'VBP', u'DT', u'NN', u'IN', u'NN', u'CC', u'NN', u',', u'RB', u'RB', u'IN', u'JJ', u'NN', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[2568, 2573], [2574, 2580], [2581, 2584], [2585, 2586], [2587, 2594], [2595, 2597], [2598, 2602], [2603, 2606], [2607, 2616], [2616, 2617], [2618, 2620], [2621, 2625], [2626, 2628], [2629, 2634], [2635, 2639], [2640, 2647], [2648, 2651], [2652, 2657], [2657, 2658]]}) 
answer: set([u'kind'])
candidate Sentence: (0.219439297914505, {u'tokens': [u'Some', u'are', u'expert', u'at', u'opening', u'shellfish', u',', u'and', u'others', u'will', u'take', u'any', u'available', u'small', u'mammals', u'or', u'birds', u'.'], u'lemmas': [u'some', u'be', u'expert', u'at', u'open', u'shellfish', u',', u'and', u'other', u'will', u'take', u'any', u'available', u'small', u'mammal', u'or', u'bird', u'.'], u'pos': [u'DT', u'VBP', u'JJ', u'IN', u'VBG', u'NN', u',', u'CC', u'NNS', u'MD', u'VB', u'DT', u'JJ', u'JJ', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[1365, 1369], [1370, 1373], [1374, 1380], [1381, 1383], [1384, 1391], [1392, 1401], [1401, 1402], [1403, 1406], [1407, 1413], [1414, 1418], [1419, 1423], [1424, 1427], [1428, 1437], [1438, 1443], [1444, 1451], [1452, 1454], [1455, 1460], [1460, 1461]]}) 
answer: set([u'kind'])
candidate Sentence: (0.2046361118555069, {u'tokens': [u'Unlike', u'most', u'marine', u'mammals', u'such', u'as', u'-LRB-', u'seals', u'or', u'whales', u'-RRB-', u',', u'sea', u'otters', u'do', u'not', u'have', u'a', u'layer', u'of', u'insulating', u'blubber', u'.'], u'lemmas': [u'unlike', u'most', u'marine', u'mammal', u'such', u'as', u'-lrb-', u'seal', u'or', u'whale', u'-rrb-', u',', u'sea', u'otter', u'do', u'not', u'have', u'a', u'layer', u'of', u'insulate', u'blubber', u'.'], u'pos': [u'IN', u'JJS', u'JJ', u'NNS', u'JJ', u'IN', u'-LRB-', u'NNS', u'CC', u'NNS', u'-RRB-', u',', u'NN', u'NNS', u'VBP', u'RB', u'VB', u'DT', u'NN', u'IN', u'VBG', u'NN', u'.'], u'char_offsets': [[3702, 3708], [3709, 3713], [3714, 3720], [3721, 3728], [3729, 3733], [3734, 3736], [3737, 3738], [3738, 3743], [3744, 3746], [3747, 3753], [3753, 3754], [3754, 3755], [3756, 3759], [3760, 3766], [3767, 3769], [3770, 3773], [3774, 3778], [3779, 3780], [3781, 3786], [3787, 3789], [3790, 3800], [3801, 3808], [3808, 3809]]}) 
answer: set([u'kind'])
candidate Sentence: (0.11041406542062759, {u'tokens': [u'Male', u'otters', u'are', u'dog-otters', u',', u'females', u'are', u'bitches', u'and', u'babies', u'are', u'cubs', u'or', u'pups', u'.'], u'lemmas': [u'male', u'otter', u'be', u'dog-otter', u',', u'female', u'be', u'bitch', u'and', u'baby', u'be', u'cub', u'or', u'pup', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'NNS', u',', u'NNS', u'VBP', u'NNS', u'CC', u'NNS', u'VBP', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[311, 315], [316, 322], [323, 326], [327, 337], [337, 338], [339, 346], [347, 350], [351, 358], [359, 362], [363, 369], [370, 373], [374, 378], [379, 381], [382, 386], [386, 387]]}) 
answer: set([u'mammal', u'kind'])
candidate Sentence: (0.10944090783596039, {u'tokens': [u'An', u'otter', u"'s", u'den', u'is', u'called', u'a', u'holt', u'.'], u'lemmas': [u'a', u'otter', u"'s", u'den', u'be', u'call', u'a', u'holt', u'.'], u'pos': [u'DT', u'NN', u'POS', u'NN', u'VBZ', u'VBN', u'DT', u'NN', u'.'], u'char_offsets': [[277, 279], [280, 285], [285, 287], [288, 291], [292, 294], [295, 301], [302, 303], [304, 308], [308, 309]]}) 
answer: set([u'mammal', u'kind'])
candidate Sentence: (0.10700656473636627, {u'tokens': [u'The', u'collective', u'noun', u'romp', u'is', u'sometimes', u'used', u'for', u'a', u'group', u'of', u'otters', u',', u'being', u'descriptive', u'of', u'their', u'often', u'playful', u'nature', u'.'], u'lemmas': [u'the', u'collective', u'noun', u'romp', u'be', u'sometimes', u'use', u'for', u'a', u'group', u'of', u'otter', u',', u'be', u'descriptive', u'of', u'they', u'often', u'playful', u'nature', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VB', u'VBZ', u'RB', u'VBN', u'IN', u'DT', u'NN', u'IN', u'NNS', u',', u'VBG', u'JJ', u'IN', u'PRP$', u'RB', u'JJ', u'NN', u'.'], u'char_offsets': [[389, 392], [393, 403], [404, 408], [409, 413], [414, 416], [417, 426], [427, 431], [432, 435], [436, 437], [438, 443], [444, 446], [447, 453], [453, 454], [455, 460], [461, 472], [473, 475], [476, 481], [482, 487], [488, 495], [496, 502], [502, 503]]}) 
answer: set([u'mammal', u'kind'])
candidate Sentence: (0.072126865386962891, {u'tokens': [u'This', u'sub-species', u'-LRB-', u'Lutrogale', u'perspicillata', u'maxwelli', u'-RRB-', u'of', u'the', u'smooth-coated', u'otter', u'was', u'the', u'subject', u'of', u'the', u'book', u'Ring', u'of', u'Bright', u'Water', u'by', u'the', u'British', u'naturalist', u'Gavin', u'Maxwell', u',', u'and', u'is', u'named', u'after', u'him', u'.'], u'lemmas': [u'this', u'sub-species', u'-lrb-', u'lutrogale', u'perspicilla', u'maxwellus', u'-rrb-', u'of', u'the', u'smooth-coated', u'otter', u'be', u'the', u'subject', u'of', u'the', u'book', u'ring', u'of', u'Bright', u'Water', u'by', u'the', u'british', u'naturalist', u'Gavin', u'Maxwell', u',', u'and', u'be', u'name', u'after', u'he', u'.'], u'pos': [u'DT', u'NNS', u'-LRB-', u'NN', u'NN', u'NNS', u'-RRB-', u'IN', u'DT', u'JJ', u'NN', u'VBD', u'DT', u'NN', u'IN', u'DT', u'NN', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'JJ', u'NN', u'NNP', u'NNP', u',', u'CC', u'VBZ', u'VBN', u'IN', u'PRP', u'.'], u'char_offsets': [[4061, 4065], [4066, 4077], [4078, 4079], [4079, 4088], [4089, 4102], [4103, 4111], [4111, 4112], [4113, 4115], [4116, 4119], [4120, 4133], [4134, 4139], [4140, 4143], [4144, 4147], [4148, 4155], [4156, 4158], [4159, 4162], [4163, 4167], [4168, 4172], [4173, 4175], [4176, 4182], [4183, 4188], [4189, 4191], [4192, 4195], [4196, 4203], [4204, 4214], [4215, 4220], [4221, 4228], [4228, 4229], [4230, 4233], [4234, 4236], [4237, 4242], [4243, 4248], [4249, 4252], [4252, 4253]]}) 
answer: set([u'mammal', u'kind'])
candidate Sentence: (0.063448138535022736, {u'tokens': [u'They', u'have', u'a', u'very', u'soft', u'underfur', u'which', u'is', u'protected', u'by', u'their', u'outer', u'layer', u'of', u'long', u'guard', u'hair', u'.'], u'lemmas': [u'they', u'have', u'a', u'very', u'soft', u'underfur', u'which', u'be', u'protect', u'by', u'they', u'outer', u'layer', u'of', u'long', u'guard', u'hair', u'.'], u'pos': [u'PRP', u'VBP', u'DT', u'RB', u'JJ', u'NN', u'WDT', u'VBZ', u'VBN', u'IN', u'PRP$', u'JJ', u'NN', u'IN', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[669, 673], [674, 678], [679, 680], [681, 685], [686, 690], [691, 699], [700, 705], [706, 708], [709, 718], [719, 721], [722, 727], [728, 733], [734, 739], [740, 742], [743, 747], [748, 753], [754, 758], [758, 759]]}) 
answer: set([u'mammal', u'kind'])
candidate Sentence: (0.061261150985956192, {u'tokens': [u'It', u'is', u'native', u'to', u'the', u'Tigris-Euphrates', u'alluvial', u'salt', u'marsh', u'of', u'Iraq', u',', u'but', u'it', u'has', u'been', u'suggested', u'that', u'it', u'may', u'have', u'become', u'extinct', u'as', u'a', u'result', u'of', u'the', u'large-scale', u'drainage', u'that', u'has', u'taken', u'place', u'in', u'the', u'region', u'since', u'the', u'1960s', u'.'], u'lemmas': [u'it', u'be', u'native', u'to', u'the', u'Tigris-Euphrates', u'alluvial', u'salt', u'marsh', u'of', u'Iraq', u',', u'but', u'it', u'have', u'be', u'suggest', u'that', u'it', u'may', u'have', u'become', u'extinct', u'as', u'a', u'result', u'of', u'the', u'large-scale', u'drainage', u'that', u'have', u'take', u'place', u'in', u'the', u'region', u'since', u'the', u'1960', u'.'], u'pos': [u'PRP', u'VBZ', u'JJ', u'TO', u'DT', u'NNP', u'JJ', u'NN', u'NN', u'IN', u'NNP', u',', u'CC', u'PRP', u'VBZ', u'VBN', u'VBN', u'IN', u'PRP', u'MD', u'VB', u'VBN', u'JJ', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'WDT', u'VBZ', u'VBN', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[4255, 4257], [4258, 4260], [4261, 4267], [4268, 4270], [4271, 4274], [4275, 4291], [4292, 4300], [4301, 4305], [4306, 4311], [4312, 4314], [4315, 4319], [4319, 4320], [4321, 4324], [4325, 4327], [4328, 4331], [4332, 4336], [4337, 4346], [4347, 4351], [4352, 4354], [4355, 4358], [4359, 4363], [4364, 4370], [4371, 4378], [4379, 4381], [4382, 4383], [4384, 4390], [4391, 4393], [4394, 4397], [4398, 4409], [4410, 4418], [4419, 4423], [4424, 4427], [4428, 4433], [4434, 4439], [4440, 4442], [4443, 4446], [4447, 4453], [4454, 4459], [4460, 4463], [4464, 4469], [4470, 4471]]}) 
answer: set([u'mammal', u'kind'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'otter'])

Is otter a kind of mammal?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

No
_____________________________ test_yesno[param255] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156ed128>, (<src.tfidf.TF_IDF object at 0x110787f90>, set(['.', 'otter'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x1156ed128>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.30864104628562927, {u'tokens': [u'Otters', u'are', u'amphibious', u'-LRB-', u'or', u'in', u'one', u'case', u'aquatic', u'-RRB-', u'carnivorous', u'mammals', u'.'], u'lemmas': [u'otter', u'be', u'amphibious', u'-lrb-', u'or', u'in', u'one', u'case', u'aquatic', u'-rrb-', u'carnivorous', u'mammal', u'.'], u'pos': [u'NNS', u'VBP', u'JJ', u'-LRB-', u'CC', u'IN', u'CD', u'NN', u'JJ', u'-RRB-', u'JJ', u'NNS', u'.'], u'char_offsets': [[0, 6], [7, 10], [11, 21], [22, 23], [23, 25], [26, 28], [29, 32], [33, 37], [38, 45], [45, 46], [47, 58], [59, 66], [66, 67]]}) 
answer: set([u'kind'])
candidate Sentence: (0.25765389204025269, {u'tokens': [u'River', u'otters', u'eat', u'a', u'variety', u'of', u'fish', u'and', u'shellfish', u',', u'as', u'well', u'as', u'small', u'land', u'mammals', u'and', u'birds', u'.'], u'lemmas': [u'river', u'otter', u'eat', u'a', u'variety', u'of', u'fish', u'and', u'shellfish', u',', u'as', u'well', u'as', u'small', u'land', u'mammal', u'and', u'bird', u'.'], u'pos': [u'NN', u'NNS', u'VBP', u'DT', u'NN', u'IN', u'NN', u'CC', u'NN', u',', u'RB', u'RB', u'IN', u'JJ', u'NN', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[2568, 2573], [2574, 2580], [2581, 2584], [2585, 2586], [2587, 2594], [2595, 2597], [2598, 2602], [2603, 2606], [2607, 2616], [2616, 2617], [2618, 2620], [2621, 2625], [2626, 2628], [2629, 2634], [2635, 2639], [2640, 2647], [2648, 2651], [2652, 2657], [2657, 2658]]}) 
answer: set([u'kind'])
candidate Sentence: (0.219439297914505, {u'tokens': [u'Some', u'are', u'expert', u'at', u'opening', u'shellfish', u',', u'and', u'others', u'will', u'take', u'any', u'available', u'small', u'mammals', u'or', u'birds', u'.'], u'lemmas': [u'some', u'be', u'expert', u'at', u'open', u'shellfish', u',', u'and', u'other', u'will', u'take', u'any', u'available', u'small', u'mammal', u'or', u'bird', u'.'], u'pos': [u'DT', u'VBP', u'JJ', u'IN', u'VBG', u'NN', u',', u'CC', u'NNS', u'MD', u'VB', u'DT', u'JJ', u'JJ', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[1365, 1369], [1370, 1373], [1374, 1380], [1381, 1383], [1384, 1391], [1392, 1401], [1401, 1402], [1403, 1406], [1407, 1413], [1414, 1418], [1419, 1423], [1424, 1427], [1428, 1437], [1438, 1443], [1444, 1451], [1452, 1454], [1455, 1460], [1460, 1461]]}) 
answer: set([u'kind'])
candidate Sentence: (0.2046361118555069, {u'tokens': [u'Unlike', u'most', u'marine', u'mammals', u'such', u'as', u'-LRB-', u'seals', u'or', u'whales', u'-RRB-', u',', u'sea', u'otters', u'do', u'not', u'have', u'a', u'layer', u'of', u'insulating', u'blubber', u'.'], u'lemmas': [u'unlike', u'most', u'marine', u'mammal', u'such', u'as', u'-lrb-', u'seal', u'or', u'whale', u'-rrb-', u',', u'sea', u'otter', u'do', u'not', u'have', u'a', u'layer', u'of', u'insulate', u'blubber', u'.'], u'pos': [u'IN', u'JJS', u'JJ', u'NNS', u'JJ', u'IN', u'-LRB-', u'NNS', u'CC', u'NNS', u'-RRB-', u',', u'NN', u'NNS', u'VBP', u'RB', u'VB', u'DT', u'NN', u'IN', u'VBG', u'NN', u'.'], u'char_offsets': [[3702, 3708], [3709, 3713], [3714, 3720], [3721, 3728], [3729, 3733], [3734, 3736], [3737, 3738], [3738, 3743], [3744, 3746], [3747, 3753], [3753, 3754], [3754, 3755], [3756, 3759], [3760, 3766], [3767, 3769], [3770, 3773], [3774, 3778], [3779, 3780], [3781, 3786], [3787, 3789], [3790, 3800], [3801, 3808], [3808, 3809]]}) 
answer: set([u'kind'])
candidate Sentence: (0.11041406542062759, {u'tokens': [u'Male', u'otters', u'are', u'dog-otters', u',', u'females', u'are', u'bitches', u'and', u'babies', u'are', u'cubs', u'or', u'pups', u'.'], u'lemmas': [u'male', u'otter', u'be', u'dog-otter', u',', u'female', u'be', u'bitch', u'and', u'baby', u'be', u'cub', u'or', u'pup', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'NNS', u',', u'NNS', u'VBP', u'NNS', u'CC', u'NNS', u'VBP', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[311, 315], [316, 322], [323, 326], [327, 337], [337, 338], [339, 346], [347, 350], [351, 358], [359, 362], [363, 369], [370, 373], [374, 378], [379, 381], [382, 386], [386, 387]]}) 
answer: set([u'mammal', u'kind'])
candidate Sentence: (0.10944090783596039, {u'tokens': [u'An', u'otter', u"'s", u'den', u'is', u'called', u'a', u'holt', u'.'], u'lemmas': [u'a', u'otter', u"'s", u'den', u'be', u'call', u'a', u'holt', u'.'], u'pos': [u'DT', u'NN', u'POS', u'NN', u'VBZ', u'VBN', u'DT', u'NN', u'.'], u'char_offsets': [[277, 279], [280, 285], [285, 287], [288, 291], [292, 294], [295, 301], [302, 303], [304, 308], [308, 309]]}) 
answer: set([u'mammal', u'kind'])
candidate Sentence: (0.10700656473636627, {u'tokens': [u'The', u'collective', u'noun', u'romp', u'is', u'sometimes', u'used', u'for', u'a', u'group', u'of', u'otters', u',', u'being', u'descriptive', u'of', u'their', u'often', u'playful', u'nature', u'.'], u'lemmas': [u'the', u'collective', u'noun', u'romp', u'be', u'sometimes', u'use', u'for', u'a', u'group', u'of', u'otter', u',', u'be', u'descriptive', u'of', u'they', u'often', u'playful', u'nature', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'VB', u'VBZ', u'RB', u'VBN', u'IN', u'DT', u'NN', u'IN', u'NNS', u',', u'VBG', u'JJ', u'IN', u'PRP$', u'RB', u'JJ', u'NN', u'.'], u'char_offsets': [[389, 392], [393, 403], [404, 408], [409, 413], [414, 416], [417, 426], [427, 431], [432, 435], [436, 437], [438, 443], [444, 446], [447, 453], [453, 454], [455, 460], [461, 472], [473, 475], [476, 481], [482, 487], [488, 495], [496, 502], [502, 503]]}) 
answer: set([u'mammal', u'kind'])
candidate Sentence: (0.072126865386962891, {u'tokens': [u'This', u'sub-species', u'-LRB-', u'Lutrogale', u'perspicillata', u'maxwelli', u'-RRB-', u'of', u'the', u'smooth-coated', u'otter', u'was', u'the', u'subject', u'of', u'the', u'book', u'Ring', u'of', u'Bright', u'Water', u'by', u'the', u'British', u'naturalist', u'Gavin', u'Maxwell', u',', u'and', u'is', u'named', u'after', u'him', u'.'], u'lemmas': [u'this', u'sub-species', u'-lrb-', u'lutrogale', u'perspicilla', u'maxwellus', u'-rrb-', u'of', u'the', u'smooth-coated', u'otter', u'be', u'the', u'subject', u'of', u'the', u'book', u'ring', u'of', u'Bright', u'Water', u'by', u'the', u'british', u'naturalist', u'Gavin', u'Maxwell', u',', u'and', u'be', u'name', u'after', u'he', u'.'], u'pos': [u'DT', u'NNS', u'-LRB-', u'NN', u'NN', u'NNS', u'-RRB-', u'IN', u'DT', u'JJ', u'NN', u'VBD', u'DT', u'NN', u'IN', u'DT', u'NN', u'NN', u'IN', u'NNP', u'NNP', u'IN', u'DT', u'JJ', u'NN', u'NNP', u'NNP', u',', u'CC', u'VBZ', u'VBN', u'IN', u'PRP', u'.'], u'char_offsets': [[4061, 4065], [4066, 4077], [4078, 4079], [4079, 4088], [4089, 4102], [4103, 4111], [4111, 4112], [4113, 4115], [4116, 4119], [4120, 4133], [4134, 4139], [4140, 4143], [4144, 4147], [4148, 4155], [4156, 4158], [4159, 4162], [4163, 4167], [4168, 4172], [4173, 4175], [4176, 4182], [4183, 4188], [4189, 4191], [4192, 4195], [4196, 4203], [4204, 4214], [4215, 4220], [4221, 4228], [4228, 4229], [4230, 4233], [4234, 4236], [4237, 4242], [4243, 4248], [4249, 4252], [4252, 4253]]}) 
answer: set([u'mammal', u'kind'])
candidate Sentence: (0.063448138535022736, {u'tokens': [u'They', u'have', u'a', u'very', u'soft', u'underfur', u'which', u'is', u'protected', u'by', u'their', u'outer', u'layer', u'of', u'long', u'guard', u'hair', u'.'], u'lemmas': [u'they', u'have', u'a', u'very', u'soft', u'underfur', u'which', u'be', u'protect', u'by', u'they', u'outer', u'layer', u'of', u'long', u'guard', u'hair', u'.'], u'pos': [u'PRP', u'VBP', u'DT', u'RB', u'JJ', u'NN', u'WDT', u'VBZ', u'VBN', u'IN', u'PRP$', u'JJ', u'NN', u'IN', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[669, 673], [674, 678], [679, 680], [681, 685], [686, 690], [691, 699], [700, 705], [706, 708], [709, 718], [719, 721], [722, 727], [728, 733], [734, 739], [740, 742], [743, 747], [748, 753], [754, 758], [758, 759]]}) 
answer: set([u'mammal', u'kind'])
candidate Sentence: (0.061261150985956192, {u'tokens': [u'It', u'is', u'native', u'to', u'the', u'Tigris-Euphrates', u'alluvial', u'salt', u'marsh', u'of', u'Iraq', u',', u'but', u'it', u'has', u'been', u'suggested', u'that', u'it', u'may', u'have', u'become', u'extinct', u'as', u'a', u'result', u'of', u'the', u'large-scale', u'drainage', u'that', u'has', u'taken', u'place', u'in', u'the', u'region', u'since', u'the', u'1960s', u'.'], u'lemmas': [u'it', u'be', u'native', u'to', u'the', u'Tigris-Euphrates', u'alluvial', u'salt', u'marsh', u'of', u'Iraq', u',', u'but', u'it', u'have', u'be', u'suggest', u'that', u'it', u'may', u'have', u'become', u'extinct', u'as', u'a', u'result', u'of', u'the', u'large-scale', u'drainage', u'that', u'have', u'take', u'place', u'in', u'the', u'region', u'since', u'the', u'1960', u'.'], u'pos': [u'PRP', u'VBZ', u'JJ', u'TO', u'DT', u'NNP', u'JJ', u'NN', u'NN', u'IN', u'NNP', u',', u'CC', u'PRP', u'VBZ', u'VBN', u'VBN', u'IN', u'PRP', u'MD', u'VB', u'VBN', u'JJ', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'WDT', u'VBZ', u'VBN', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[4255, 4257], [4258, 4260], [4261, 4267], [4268, 4270], [4271, 4274], [4275, 4291], [4292, 4300], [4301, 4305], [4306, 4311], [4312, 4314], [4315, 4319], [4319, 4320], [4321, 4324], [4325, 4327], [4328, 4331], [4332, 4336], [4337, 4346], [4347, 4351], [4352, 4354], [4355, 4358], [4359, 4363], [4364, 4370], [4371, 4378], [4379, 4381], [4382, 4383], [4384, 4390], [4391, 4393], [4394, 4397], [4398, 4409], [4410, 4418], [4419, 4423], [4424, 4427], [4428, 4433], [4434, 4439], [4440, 4442], [4443, 4446], [4447, 4453], [4454, 4459], [4460, 4463], [4464, 4469], [4470, 4471]]}) 
answer: set([u'mammal', u'kind'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'otter'])

Is otter a kind of mammal?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

No
_____________________________ test_yesno[param258] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156ed200>, (<src.tfidf.TF_IDF object at 0x110787f90>, set(['.', 'otter'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156ed200>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.30891498923301697, {u'tokens': [u'Otters', u'do', u'not', u'depend', u'on', u'their', u'specialized', u'fur', u'alone', u'for', u'survival', u'in', u'the', u'cold', u'waters', u'where', u'many', u'live', u':', u'they', u'also', u'have', u'very', u'high', u'metabolic', u'rates', u'.'], u'lemmas': [u'otter', u'do', u'not', u'depend', u'on', u'they', u'specialize', u'fur', u'alone', u'for', u'survival', u'in', u'the', u'cold', u'water', u'where', u'many', u'live', u':', u'they', u'also', u'have', u'very', u'high', u'metabolic', u'rate', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'VB', u'IN', u'PRP$', u'VBN', u'NN', u'RB', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'WRB', u'JJ', u'VBP', u':', u'PRP', u'RB', u'VBP', u'RB', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[828, 834], [835, 837], [838, 841], [842, 848], [849, 851], [852, 857], [858, 869], [870, 873], [874, 879], [880, 883], [884, 892], [893, 895], [896, 899], [900, 904], [905, 911], [912, 917], [918, 922], [923, 927], [927, 928], [929, 933], [934, 938], [939, 943], [944, 948], [949, 953], [954, 963], [964, 969], [969, 970]]}) 
answer: set([])
candidate Sentence: (0.23058275878429413, {u'tokens': [u'The', u'sea', u'otter', u'lives', u'actually', u'in', u'the', u'sea', u'.'], u'lemmas': [u'the', u'sea', u'otter', u'live', u'actually', u'in', u'the', u'sea', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBZ', u'RB', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[1793, 1796], [1797, 1800], [1801, 1806], [1807, 1812], [1813, 1821], [1822, 1824], [1825, 1828], [1829, 1832], [1832, 1833]]}) 
answer: set([u'water'])
candidate Sentence: (0.18773502111434937, {u'tokens': [u'Unlike', u'most', u'marine', u'mammals', u'such', u'as', u'-LRB-', u'seals', u'or', u'whales', u'-RRB-', u',', u'sea', u'otters', u'do', u'not', u'have', u'a', u'layer', u'of', u'insulating', u'blubber', u'.'], u'lemmas': [u'unlike', u'most', u'marine', u'mammal', u'such', u'as', u'-lrb-', u'seal', u'or', u'whale', u'-rrb-', u',', u'sea', u'otter', u'do', u'not', u'have', u'a', u'layer', u'of', u'insulate', u'blubber', u'.'], u'pos': [u'IN', u'JJS', u'JJ', u'NNS', u'JJ', u'IN', u'-LRB-', u'NNS', u'CC', u'NNS', u'-RRB-', u',', u'NN', u'NNS', u'VBP', u'RB', u'VB', u'DT', u'NN', u'IN', u'VBG', u'NN', u'.'], u'char_offsets': [[3702, 3708], [3709, 3713], [3714, 3720], [3721, 3728], [3729, 3733], [3734, 3736], [3737, 3738], [3738, 3743], [3744, 3746], [3747, 3753], [3753, 3754], [3754, 3755], [3756, 3759], [3760, 3766], [3767, 3769], [3770, 3773], [3774, 3778], [3779, 3780], [3781, 3786], [3787, 3789], [3790, 3800], [3801, 3808], [3808, 3809]]}) 
answer: set([u'water', u'live'])
candidate Sentence: (0.13924145698547363, {u'tokens': [u'Most', u'species', u'live', u'beside', u'water', u',', u'entering', u'it', u'mainly', u'to', u'hunt', u'or', u'travel', u',', u'otherwise', u'spending', u'much', u'of', u'their', u'time', u'on', u'land', u'to', u'avoid', u'their', u'fur', u'becoming', u'waterlogged', u'.'], u'lemmas': [u'most', u'species', u'live', u'beside', u'water', u',', u'enter', u'it', u'mainly', u'to', u'hunt', u'or', u'travel', u',', u'otherwise', u'spend', u'much', u'of', u'they', u'time', u'on', u'land', u'to', u'avoid', u'they', u'fur', u'become', u'waterlogged', u'.'], u'pos': [u'JJS', u'NNS', u'VBP', u'IN', u'NN', u',', u'VBG', u'PRP', u'RB', u'TO', u'NN', u'CC', u'NN', u',', u'RB', u'VBG', u'RB', u'IN', u'PRP$', u'NN', u'IN', u'NN', u'TO', u'VB', u'PRP$', u'NN', u'VBG', u'JJ', u'.'], u'char_offsets': [[1635, 1639], [1640, 1647], [1648, 1652], [1653, 1659], [1660, 1665], [1665, 1666], [1667, 1675], [1676, 1678], [1679, 1685], [1686, 1688], [1689, 1693], [1694, 1696], [1697, 1703], [1703, 1704], [1705, 1714], [1715, 1723], [1724, 1728], [1729, 1731], [1732, 1737], [1738, 1742], [1743, 1745], [1746, 1750], [1751, 1753], [1754, 1759], [1760, 1765], [1766, 1769], [1770, 1778], [1779, 1790], [1790, 1791]]}) 
answer: set([])
candidate Sentence: (0.11678935587406158, {u'tokens': [u'A', u'sea', u'otter', u'in', u'Morro', u'Bay', u',', u'California', u'Sea', u'otters', u'-LRB-', u'Enhydra', u'lutris', u'-RRB-', u'live', u'along', u'the', u'Pacific', u'coast', u'of', u'North', u'America', u'.'], u'lemmas': [u'a', u'sea', u'otter', u'in', u'Morro', u'Bay', u',', u'California', u'Sea', u'otter', u'-lrb-', u'enhydra', u'lutri', u'-rrb-', u'live', u'along', u'the', u'Pacific', u'coast', u'of', u'North', u'America', u'.'], u'pos': [u'DT', u'NN', u'NN', u'IN', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u'VBP', u'IN', u'DT', u'NNP', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[2875, 2876], [2877, 2880], [2881, 2886], [2887, 2889], [2890, 2895], [2896, 2899], [2899, 2900], [2901, 2911], [2912, 2915], [2916, 2922], [2923, 2924], [2924, 2931], [2932, 2938], [2938, 2939], [2940, 2944], [2945, 2950], [2951, 2954], [2955, 2962], [2963, 2968], [2969, 2971], [2972, 2977], [2978, 2985], [2985, 2986]]}) 
answer: set([u'water'])
candidate Sentence: (0.10293903946876526, {u'tokens': [u'Different', u'species', u'vary', u'in', u'their', u'social', u'structure', u',', u'with', u'some', u'being', u'largely', u'solitary', u',', u'while', u'others', u'live', u'in', u'groups', u'in', u'a', u'few', u'species', u'these', u'groups', u'may', u'be', u'fairly', u'large', u'.'], u'lemmas': [u'different', u'species', u'vary', u'in', u'they', u'social', u'structure', u',', u'with', u'some', u'be', u'largely', u'solitary', u',', u'while', u'other', u'live', u'in', u'group', u'in', u'a', u'few', u'species', u'these', u'group', u'may', u'be', u'fairly', u'large', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'IN', u'PRP$', u'JJ', u'NN', u',', u'IN', u'DT', u'VBG', u'RB', u'JJ', u',', u'IN', u'NNS', u'VBP', u'IN', u'NNS', u'IN', u'DT', u'JJ', u'NNS', u'DT', u'NNS', u'MD', u'VB', u'RB', u'JJ', u'.'], u'char_offsets': [[1946, 1955], [1956, 1963], [1964, 1968], [1969, 1971], [1972, 1977], [1978, 1984], [1985, 1994], [1994, 1995], [1996, 2000], [2001, 2005], [2006, 2011], [2012, 2019], [2020, 2028], [2028, 2029], [2030, 2035], [2036, 2042], [2043, 2047], [2048, 2050], [2051, 2057], [2060, 2062], [2063, 2064], [2065, 2068], [2069, 2076], [2077, 2082], [2083, 2089], [2090, 2093], [2094, 2096], [2097, 2103], [2104, 2109], [2109, 2110]]}) 
answer: set([u'water'])
candidate Sentence: (0.080780014395713806, {u'tokens': [u'Otters', u'are', u'very', u'active', u',', u'chasing', u'prey', u'in', u'the', u'water', u'or', u'searching', u'the', u'beds', u'of', u'rivers', u',', u'lakes', u'or', u'the', u'sea', u'.'], u'lemmas': [u'otter', u'be', u'very', u'active', u',', u'chase', u'prey', u'in', u'the', u'water', u'or', u'search', u'the', u'bed', u'of', u'river', u',', u'lake', u'or', u'the', u'sea', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'JJ', u',', u'VBG', u'NN', u'IN', u'DT', u'NN', u'CC', u'VBG', u'DT', u'NNS', u'IN', u'NNS', u',', u'NNS', u'CC', u'DT', u'NN', u'.'], u'char_offsets': [[1533, 1539], [1540, 1543], [1544, 1548], [1549, 1555], [1555, 1556], [1557, 1564], [1565, 1569], [1570, 1572], [1573, 1576], [1577, 1582], [1583, 1585], [1586, 1595], [1596, 1599], [1600, 1604], [1605, 1607], [1608, 1614], [1614, 1615], [1616, 1621], [1622, 1624], [1625, 1628], [1629, 1632], [1632, 1633]]}) 
answer: set([u'live'])
candidate Sentence: (0.079677179455757141, {u'tokens': [u'They', u'spend', u'most', u'of', u'their', u'time', u'in', u'the', u'water', u',', u'whereas', u'other', u'otters', u'spend', u'much', u'of', u'their', u'time', u'on', u'land', u'.'], u'lemmas': [u'they', u'spend', u'most', u'of', u'they', u'time', u'in', u'the', u'water', u',', u'whereas', u'other', u'otter', u'spend', u'much', u'of', u'they', u'time', u'on', u'land', u'.'], u'pos': [u'PRP', u'VBP', u'JJS', u'IN', u'PRP$', u'NN', u'IN', u'DT', u'NN', u',', u'IN', u'JJ', u'NNS', u'VBP', u'RB', u'IN', u'PRP$', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[3962, 3966], [3967, 3972], [3973, 3977], [3978, 3980], [3981, 3986], [3987, 3991], [3992, 3994], [3995, 3998], [3999, 4004], [4004, 4005], [4006, 4013], [4014, 4019], [4020, 4026], [4027, 4032], [4033, 4037], [4038, 4040], [4041, 4046], [4047, 4051], [4052, 4054], [4055, 4059], [4059, 4060]]}) 
answer: set([u'live'])
candidate Sentence: (0.078654207289218903, {u'tokens': [u'This', u'traps', u'a', u'layer', u'of', u'air', u',', u'and', u'keeps', u'them', u'dry', u'and', u'warm', u'under', u'water', u'.'], u'lemmas': [u'this', u'trap', u'a', u'layer', u'of', u'air', u',', u'and', u'keep', u'they', u'dry', u'and', u'warm', u'under', u'water', u'.'], u'pos': [u'DT', u'NNS', u'DT', u'NN', u'IN', u'NN', u',', u'CC', u'VBZ', u'PRP', u'JJ', u'CC', u'JJ', u'IN', u'NN', u'.'], u'char_offsets': [[760, 764], [765, 770], [771, 772], [773, 778], [779, 781], [782, 785], [785, 786], [787, 790], [791, 796], [797, 801], [802, 805], [806, 809], [810, 814], [815, 820], [821, 826], [826, 827]]}) 
answer: set([u'live'])
candidate Sentence: (0.072731725871562958, {u'tokens': [u'In', u'water', u'as', u'warm', u'as', u'10C', u'an', u'otter', u'needs', u'to', u'catch', u'100', u'g', u'of', u'fish', u'per', u'hour', u'to', u'survive', u'.'], u'lemmas': [u'in', u'water', u'as', u'warm', u'as', u'10c', u'a', u'otter', u'need', u'to', u'catch', u'100', u'g', u'of', u'fish', u'per', u'hour', u'to', u'survive', u'.'], u'pos': [u'IN', u'NN', u'IN', u'JJ', u'IN', u'CD', u'DT', u'NN', u'VBZ', u'TO', u'VB', u'CD', u'NN', u'IN', u'NN', u'IN', u'NN', u'TO', u'VB', u'.'], u'char_offsets': [[1097, 1099], [1100, 1105], [1106, 1108], [1109, 1113], [1114, 1116], [1117, 1120], [1121, 1123], [1124, 1129], [1130, 1135], [1136, 1138], [1139, 1144], [1145, 1148], [1149, 1150], [1151, 1153], [1154, 1158], [1159, 1162], [1163, 1167], [1168, 1170], [1171, 1178], [1178, 1179]]}) 
answer: set([u'live'])
['No Sure', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'otter'])

Do otters live in water?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

No
_____________________________ test_yesno[param259] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156ed248>, (<src.tfidf.TF_IDF object at 0x110787f90>, set(['.', 'otter'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x1156ed248>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.30891498923301697, {u'tokens': [u'Otters', u'do', u'not', u'depend', u'on', u'their', u'specialized', u'fur', u'alone', u'for', u'survival', u'in', u'the', u'cold', u'waters', u'where', u'many', u'live', u':', u'they', u'also', u'have', u'very', u'high', u'metabolic', u'rates', u'.'], u'lemmas': [u'otter', u'do', u'not', u'depend', u'on', u'they', u'specialize', u'fur', u'alone', u'for', u'survival', u'in', u'the', u'cold', u'water', u'where', u'many', u'live', u':', u'they', u'also', u'have', u'very', u'high', u'metabolic', u'rate', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'VB', u'IN', u'PRP$', u'VBN', u'NN', u'RB', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'WRB', u'JJ', u'VBP', u':', u'PRP', u'RB', u'VBP', u'RB', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[828, 834], [835, 837], [838, 841], [842, 848], [849, 851], [852, 857], [858, 869], [870, 873], [874, 879], [880, 883], [884, 892], [893, 895], [896, 899], [900, 904], [905, 911], [912, 917], [918, 922], [923, 927], [927, 928], [929, 933], [934, 938], [939, 943], [944, 948], [949, 953], [954, 963], [964, 969], [969, 970]]}) 
answer: set([])
candidate Sentence: (0.23058275878429413, {u'tokens': [u'The', u'sea', u'otter', u'lives', u'actually', u'in', u'the', u'sea', u'.'], u'lemmas': [u'the', u'sea', u'otter', u'live', u'actually', u'in', u'the', u'sea', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBZ', u'RB', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[1793, 1796], [1797, 1800], [1801, 1806], [1807, 1812], [1813, 1821], [1822, 1824], [1825, 1828], [1829, 1832], [1832, 1833]]}) 
answer: set([u'water'])
candidate Sentence: (0.18773502111434937, {u'tokens': [u'Unlike', u'most', u'marine', u'mammals', u'such', u'as', u'-LRB-', u'seals', u'or', u'whales', u'-RRB-', u',', u'sea', u'otters', u'do', u'not', u'have', u'a', u'layer', u'of', u'insulating', u'blubber', u'.'], u'lemmas': [u'unlike', u'most', u'marine', u'mammal', u'such', u'as', u'-lrb-', u'seal', u'or', u'whale', u'-rrb-', u',', u'sea', u'otter', u'do', u'not', u'have', u'a', u'layer', u'of', u'insulate', u'blubber', u'.'], u'pos': [u'IN', u'JJS', u'JJ', u'NNS', u'JJ', u'IN', u'-LRB-', u'NNS', u'CC', u'NNS', u'-RRB-', u',', u'NN', u'NNS', u'VBP', u'RB', u'VB', u'DT', u'NN', u'IN', u'VBG', u'NN', u'.'], u'char_offsets': [[3702, 3708], [3709, 3713], [3714, 3720], [3721, 3728], [3729, 3733], [3734, 3736], [3737, 3738], [3738, 3743], [3744, 3746], [3747, 3753], [3753, 3754], [3754, 3755], [3756, 3759], [3760, 3766], [3767, 3769], [3770, 3773], [3774, 3778], [3779, 3780], [3781, 3786], [3787, 3789], [3790, 3800], [3801, 3808], [3808, 3809]]}) 
answer: set([u'water', u'live'])
candidate Sentence: (0.13924145698547363, {u'tokens': [u'Most', u'species', u'live', u'beside', u'water', u',', u'entering', u'it', u'mainly', u'to', u'hunt', u'or', u'travel', u',', u'otherwise', u'spending', u'much', u'of', u'their', u'time', u'on', u'land', u'to', u'avoid', u'their', u'fur', u'becoming', u'waterlogged', u'.'], u'lemmas': [u'most', u'species', u'live', u'beside', u'water', u',', u'enter', u'it', u'mainly', u'to', u'hunt', u'or', u'travel', u',', u'otherwise', u'spend', u'much', u'of', u'they', u'time', u'on', u'land', u'to', u'avoid', u'they', u'fur', u'become', u'waterlogged', u'.'], u'pos': [u'JJS', u'NNS', u'VBP', u'IN', u'NN', u',', u'VBG', u'PRP', u'RB', u'TO', u'NN', u'CC', u'NN', u',', u'RB', u'VBG', u'RB', u'IN', u'PRP$', u'NN', u'IN', u'NN', u'TO', u'VB', u'PRP$', u'NN', u'VBG', u'JJ', u'.'], u'char_offsets': [[1635, 1639], [1640, 1647], [1648, 1652], [1653, 1659], [1660, 1665], [1665, 1666], [1667, 1675], [1676, 1678], [1679, 1685], [1686, 1688], [1689, 1693], [1694, 1696], [1697, 1703], [1703, 1704], [1705, 1714], [1715, 1723], [1724, 1728], [1729, 1731], [1732, 1737], [1738, 1742], [1743, 1745], [1746, 1750], [1751, 1753], [1754, 1759], [1760, 1765], [1766, 1769], [1770, 1778], [1779, 1790], [1790, 1791]]}) 
answer: set([])
candidate Sentence: (0.11678935587406158, {u'tokens': [u'A', u'sea', u'otter', u'in', u'Morro', u'Bay', u',', u'California', u'Sea', u'otters', u'-LRB-', u'Enhydra', u'lutris', u'-RRB-', u'live', u'along', u'the', u'Pacific', u'coast', u'of', u'North', u'America', u'.'], u'lemmas': [u'a', u'sea', u'otter', u'in', u'Morro', u'Bay', u',', u'California', u'Sea', u'otter', u'-lrb-', u'enhydra', u'lutri', u'-rrb-', u'live', u'along', u'the', u'Pacific', u'coast', u'of', u'North', u'America', u'.'], u'pos': [u'DT', u'NN', u'NN', u'IN', u'NNP', u'NNP', u',', u'NNP', u'NNP', u'NNS', u'-LRB-', u'NN', u'NN', u'-RRB-', u'VBP', u'IN', u'DT', u'NNP', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[2875, 2876], [2877, 2880], [2881, 2886], [2887, 2889], [2890, 2895], [2896, 2899], [2899, 2900], [2901, 2911], [2912, 2915], [2916, 2922], [2923, 2924], [2924, 2931], [2932, 2938], [2938, 2939], [2940, 2944], [2945, 2950], [2951, 2954], [2955, 2962], [2963, 2968], [2969, 2971], [2972, 2977], [2978, 2985], [2985, 2986]]}) 
answer: set([u'water'])
candidate Sentence: (0.10293903946876526, {u'tokens': [u'Different', u'species', u'vary', u'in', u'their', u'social', u'structure', u',', u'with', u'some', u'being', u'largely', u'solitary', u',', u'while', u'others', u'live', u'in', u'groups', u'in', u'a', u'few', u'species', u'these', u'groups', u'may', u'be', u'fairly', u'large', u'.'], u'lemmas': [u'different', u'species', u'vary', u'in', u'they', u'social', u'structure', u',', u'with', u'some', u'be', u'largely', u'solitary', u',', u'while', u'other', u'live', u'in', u'group', u'in', u'a', u'few', u'species', u'these', u'group', u'may', u'be', u'fairly', u'large', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'IN', u'PRP$', u'JJ', u'NN', u',', u'IN', u'DT', u'VBG', u'RB', u'JJ', u',', u'IN', u'NNS', u'VBP', u'IN', u'NNS', u'IN', u'DT', u'JJ', u'NNS', u'DT', u'NNS', u'MD', u'VB', u'RB', u'JJ', u'.'], u'char_offsets': [[1946, 1955], [1956, 1963], [1964, 1968], [1969, 1971], [1972, 1977], [1978, 1984], [1985, 1994], [1994, 1995], [1996, 2000], [2001, 2005], [2006, 2011], [2012, 2019], [2020, 2028], [2028, 2029], [2030, 2035], [2036, 2042], [2043, 2047], [2048, 2050], [2051, 2057], [2060, 2062], [2063, 2064], [2065, 2068], [2069, 2076], [2077, 2082], [2083, 2089], [2090, 2093], [2094, 2096], [2097, 2103], [2104, 2109], [2109, 2110]]}) 
answer: set([u'water'])
candidate Sentence: (0.080780014395713806, {u'tokens': [u'Otters', u'are', u'very', u'active', u',', u'chasing', u'prey', u'in', u'the', u'water', u'or', u'searching', u'the', u'beds', u'of', u'rivers', u',', u'lakes', u'or', u'the', u'sea', u'.'], u'lemmas': [u'otter', u'be', u'very', u'active', u',', u'chase', u'prey', u'in', u'the', u'water', u'or', u'search', u'the', u'bed', u'of', u'river', u',', u'lake', u'or', u'the', u'sea', u'.'], u'pos': [u'NNS', u'VBP', u'RB', u'JJ', u',', u'VBG', u'NN', u'IN', u'DT', u'NN', u'CC', u'VBG', u'DT', u'NNS', u'IN', u'NNS', u',', u'NNS', u'CC', u'DT', u'NN', u'.'], u'char_offsets': [[1533, 1539], [1540, 1543], [1544, 1548], [1549, 1555], [1555, 1556], [1557, 1564], [1565, 1569], [1570, 1572], [1573, 1576], [1577, 1582], [1583, 1585], [1586, 1595], [1596, 1599], [1600, 1604], [1605, 1607], [1608, 1614], [1614, 1615], [1616, 1621], [1622, 1624], [1625, 1628], [1629, 1632], [1632, 1633]]}) 
answer: set([u'live'])
candidate Sentence: (0.079677179455757141, {u'tokens': [u'They', u'spend', u'most', u'of', u'their', u'time', u'in', u'the', u'water', u',', u'whereas', u'other', u'otters', u'spend', u'much', u'of', u'their', u'time', u'on', u'land', u'.'], u'lemmas': [u'they', u'spend', u'most', u'of', u'they', u'time', u'in', u'the', u'water', u',', u'whereas', u'other', u'otter', u'spend', u'much', u'of', u'they', u'time', u'on', u'land', u'.'], u'pos': [u'PRP', u'VBP', u'JJS', u'IN', u'PRP$', u'NN', u'IN', u'DT', u'NN', u',', u'IN', u'JJ', u'NNS', u'VBP', u'RB', u'IN', u'PRP$', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[3962, 3966], [3967, 3972], [3973, 3977], [3978, 3980], [3981, 3986], [3987, 3991], [3992, 3994], [3995, 3998], [3999, 4004], [4004, 4005], [4006, 4013], [4014, 4019], [4020, 4026], [4027, 4032], [4033, 4037], [4038, 4040], [4041, 4046], [4047, 4051], [4052, 4054], [4055, 4059], [4059, 4060]]}) 
answer: set([u'live'])
candidate Sentence: (0.078654207289218903, {u'tokens': [u'This', u'traps', u'a', u'layer', u'of', u'air', u',', u'and', u'keeps', u'them', u'dry', u'and', u'warm', u'under', u'water', u'.'], u'lemmas': [u'this', u'trap', u'a', u'layer', u'of', u'air', u',', u'and', u'keep', u'they', u'dry', u'and', u'warm', u'under', u'water', u'.'], u'pos': [u'DT', u'NNS', u'DT', u'NN', u'IN', u'NN', u',', u'CC', u'VBZ', u'PRP', u'JJ', u'CC', u'JJ', u'IN', u'NN', u'.'], u'char_offsets': [[760, 764], [765, 770], [771, 772], [773, 778], [779, 781], [782, 785], [785, 786], [787, 790], [791, 796], [797, 801], [802, 805], [806, 809], [810, 814], [815, 820], [821, 826], [826, 827]]}) 
answer: set([u'live'])
candidate Sentence: (0.072731725871562958, {u'tokens': [u'In', u'water', u'as', u'warm', u'as', u'10C', u'an', u'otter', u'needs', u'to', u'catch', u'100', u'g', u'of', u'fish', u'per', u'hour', u'to', u'survive', u'.'], u'lemmas': [u'in', u'water', u'as', u'warm', u'as', u'10c', u'a', u'otter', u'need', u'to', u'catch', u'100', u'g', u'of', u'fish', u'per', u'hour', u'to', u'survive', u'.'], u'pos': [u'IN', u'NN', u'IN', u'JJ', u'IN', u'CD', u'DT', u'NN', u'VBZ', u'TO', u'VB', u'CD', u'NN', u'IN', u'NN', u'IN', u'NN', u'TO', u'VB', u'.'], u'char_offsets': [[1097, 1099], [1100, 1105], [1106, 1108], [1109, 1113], [1114, 1116], [1117, 1120], [1121, 1123], [1124, 1129], [1130, 1135], [1136, 1138], [1139, 1144], [1145, 1148], [1149, 1150], [1151, 1153], [1154, 1158], [1159, 1162], [1163, 1167], [1168, 1170], [1171, 1178], [1178, 1179]]}) 
answer: set([u'live'])
['No Sure', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'otter'])

Do otters live in water?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = otter
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a7.txt

No
_____________________________ test_yesno[param273] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156ed638>, (<src.tfidf.TF_IDF object at 0x110787390>, set(['.', 'penguin'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156ed638>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.38325932621955872, {u'tokens': [u'Penguins', u'have', u'an', u'average', u'sense', u'of', u'hearing', u'for', u'birds', u'-LRB-', u'Wever', u'et', u'al', u'1969', u'-RRB-', u';', u'this', u'is', u'used', u'by', u'parents', u'and', u'chicks', u'to', u'locate', u'one', u'another', u'in', u'crowded', u'colonies', u'-LRB-', u'Jouventin', u'et', u'al', u'1999', u'-RRB-', u'.'], u'lemmas': [u'penguin', u'have', u'a', u'average', u'sense', u'of', u'hearing', u'for', u'bird', u'-lrb-', u'Wever', u'et', u'al', u'1969', u'-rrb-', u';', u'this', u'be', u'use', u'by', u'parent', u'and', u'chick', u'to', u'locate', u'one', u'another', u'in', u'crowded', u'colony', u'-lrb-', u'Jouventin', u'et', u'al', u'1999', u'-rrb-', u'.'], u'pos': [u'NNS', u'VBP', u'DT', u'JJ', u'NN', u'IN', u'NN', u'IN', u'NNS', u'-LRB-', u'NNP', u'FW', u'FW', u'CD', u'-RRB-', u':', u'DT', u'VBZ', u'VBN', u'IN', u'NNS', u'CC', u'NNS', u'TO', u'VB', u'CD', u'DT', u'IN', u'JJ', u'NNS', u'-LRB-', u'NNP', u'FW', u'FW', u'CD', u'-RRB-', u'.'], u'char_offsets': [[4359, 4367], [4368, 4372], [4373, 4375], [4376, 4383], [4384, 4389], [4390, 4392], [4393, 4400], [4401, 4404], [4405, 4410], [4411, 4412], [4412, 4417], [4418, 4420], [4421, 4423], [4424, 4428], [4428, 4429], [4429, 4430], [4431, 4435], [4436, 4438], [4439, 4443], [4444, 4446], [4447, 4454], [4455, 4458], [4459, 4465], [4466, 4468], [4469, 4475], [4476, 4479], [4480, 4487], [4488, 4490], [4491, 4498], [4499, 4507], [4508, 4509], [4509, 4518], [4519, 4521], [4522, 4524], [4525, 4529], [4529, 4530], [4530, 4531]]}) 
answer: set([u'better'])
candidate Sentence: (0.12757234275341034, {u'tokens': [u'Typically', u',', u'penguins', u'do', u'not', u'approach', u'closer', u'than', u'about', u'3', u'meters', u'-LRB-', u'9', u'ft', u'-RRB-', u';', u'they', u'become', u'nervous', u'at', u'about', u'that', u'distance', u'.'], u'lemmas': [u'typically', u',', u'penguin', u'do', u'not', u'approach', u'closer', u'than', u'about', u'3', u'meter', u'-lrb-', u'9', u'ft', u'-rrb-', u';', u'they', u'become', u'nervous', u'at', u'about', u'that', u'distance', u'.'], u'pos': [u'RB', u',', u'NNS', u'VBP', u'RB', u'VB', u'JJR', u'IN', u'IN', u'CD', u'NNS', u'-LRB-', u'CD', u'NN', u'-RRB-', u':', u'PRP', u'VBP', u'JJ', u'IN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[2547, 2556], [2556, 2557], [2558, 2566], [2567, 2569], [2570, 2573], [2574, 2582], [2583, 2589], [2590, 2594], [2595, 2600], [2601, 2602], [2603, 2609], [2610, 2611], [2611, 2612], [2613, 2615], [2615, 2616], [2616, 2617], [2618, 2622], [2623, 2629], [2630, 2637], [2638, 2640], [2641, 2646], [2647, 2651], [2652, 2660], [2660, 2661]]}) 
answer: set([u'better', u'sens', u'hear', u'bird', u'averag'])
candidate Sentence: (0.11919113993644714, {u'tokens': [u'Due', u'to', u'plate', u'tectonics', u',', u'these', u'areas', u'were', u'at', u'that', u'time', u'less', u'than', u'apart', u'rather', u'than', u'the', u'of', u'today', u'.'], u'lemmas': [u'due', u'to', u'plate', u'tectonic', u',', u'these', u'area', u'be', u'at', u'that', u'time', u'less', u'than', u'apart', u'rather', u'than', u'the', u'of', u'today', u'.'], u'pos': [u'JJ', u'TO', u'NN', u'NNS', u',', u'DT', u'NNS', u'VBD', u'IN', u'DT', u'NN', u'RBR', u'IN', u'RB', u'RB', u'IN', u'DT', u'IN', u'NN', u'.'], u'char_offsets': [[11755, 11758], [11759, 11761], [11762, 11767], [11768, 11777], [11777, 11778], [11779, 11784], [11785, 11790], [11791, 11795], [11796, 11798], [11799, 11803], [11804, 11808], [11809, 11813], [11814, 11818], [11821, 11826], [11827, 11833], [11834, 11838], [11839, 11842], [11845, 11847], [11848, 11853], [11853, 11854]]}) 
answer: set([u'better', u'sens', u'hear', u'bird', u'averag'])
candidate Sentence: (0.10102004557847977, {u'tokens': [u'New', u'subfamily', u'2', u'?'], u'lemmas': [u'New', u'subfamily', u'2', u'?'], u'pos': [u'NNP', u'NN', u'CD', u'.'], u'char_offsets': [[7700, 7703], [7704, 7713], [7714, 7715], [7715, 7716]]}) 
answer: set([u'better', u'sens', u'hear', u'bird', u'averag'])
candidate Sentence: (0.091762803494930267, {u'tokens': [u'Some', u'penguins', u'mate', u'for', u'life', u',', u'others', u'for', u'just', u'one', u'season', u'.'], u'lemmas': [u'some', u'penguin', u'mate', u'for', u'life', u',', u'other', u'for', u'just', u'one', u'season', u'.'], u'pos': [u'DT', u'NNS', u'VBP', u'IN', u'NN', u',', u'NNS', u'IN', u'RB', u'CD', u'NN', u'.'], u'char_offsets': [[5683, 5687], [5688, 5696], [5697, 5701], [5702, 5705], [5706, 5710], [5710, 5711], [5712, 5718], [5719, 5722], [5723, 5727], [5728, 5731], [5732, 5738], [5738, 5739]]}) 
answer: set([u'better', u'sens', u'hear', u'bird', u'averag'])
candidate Sentence: (0.090165175497531891, {u'tokens': [u'This', u'is', u'for', u'camouflage', u'.'], u'lemmas': [u'this', u'be', u'for', u'camouflage', u'.'], u'pos': [u'DT', u'VBZ', u'IN', u'NN', u'.'], u'char_offsets': [[3371, 3375], [3376, 3378], [3379, 3382], [3383, 3393], [3393, 3394]]}) 
answer: set([u'better', u'sens', u'hear', u'bird', u'averag'])
candidate Sentence: (0.083354249596595764, {u'tokens': [u'With', u'habitat', u'on', u'the', u'Antarctic', u'coasts', u'declining', u',', u'by', u'the', u'Priabonian', u'more', u'hospitable', u'conditions', u'for', u'most', u'penguins', u'existed', u'in', u'the', u'subantarctic', u'regions', u'rather', u'than', u'in', u'Antarctica', u'itself', u'.'], u'lemmas': [u'with', u'habitat', u'on', u'the', u'antarctic', u'coast', u'decline', u',', u'by', u'the', u'Priabonian', u'more', u'hospitable', u'condition', u'for', u'most', u'penguin', u'exist', u'in', u'the', u'subantarctic', u'region', u'rather', u'than', u'in', u'Antarctica', u'itself', u'.'], u'pos': [u'IN', u'NN', u'IN', u'DT', u'JJ', u'NNS', u'VBG', u',', u'IN', u'DT', u'NNP', u'RBR', u'JJ', u'NNS', u'IN', u'JJS', u'NNS', u'VBD', u'IN', u'DT', u'JJ', u'NNS', u'RB', u'IN', u'IN', u'NNP', u'PRP', u'.'], u'char_offsets': [[19731, 19735], [19736, 19743], [19744, 19746], [19747, 19750], [19751, 19760], [19761, 19767], [19768, 19777], [19777, 19778], [19779, 19781], [19782, 19785], [19786, 19796], [19797, 19801], [19802, 19812], [19813, 19823], [19824, 19827], [19828, 19832], [19833, 19841], [19842, 19849], [19850, 19852], [19853, 19856], [19857, 19869], [19870, 19877], [19878, 19884], [19885, 19889], [19890, 19892], [19893, 19903], [19904, 19910], [19910, 19911]]}) 
answer: set([u'better', u'sens', u'hear', u'bird', u'averag'])
candidate Sentence: (0.081784144043922424, {u'tokens': [u'The', u'largest', u'living', u'species', u'is', u'the', u'Emperor', u'Penguin', u'-LRB-', u'Aptenodytes', u'forsteri', u'-RRB-', u':', u'adults', u'average', u'about', u'1.1', u'm', u'-LRB-', u'3', u'ft', u'7', u'in', u'-RRB-', u'tall', u'and', u'weigh', u'35', u'kg', u'-LRB-', u'75', u'lb', u'-RRB-', u'or', u'more', u'.'], u'lemmas': [u'the', u'largest', u'living', u'species', u'be', u'the', u'Emperor', u'Penguin', u'-lrb-', u'Aptenodytes', u'forsterus', u'-rrb-', u':', u'adult', u'average', u'about', u'1.1', u'm', u'-lrb-', u'3', u'ft', u'7', u'in', u'-rrb-', u'tall', u'and', u'weigh', u'35', u'kg', u'-lrb-', u'75', u'lb', u'-rrb-', u'or', u'more', u'.'], u'pos': [u'DT', u'JJS', u'NN', u'NNS', u'VBZ', u'DT', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNS', u'-RRB-', u':', u'NNS', u'VBP', u'IN', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'CD', u'IN', u'-RRB-', u'JJ', u'CC', u'VB', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u'CC', u'RBR', u'.'], u'char_offsets': [[1206, 1209], [1210, 1217], [1218, 1224], [1225, 1232], [1233, 1235], [1236, 1239], [1240, 1247], [1248, 1255], [1256, 1257], [1257, 1268], [1269, 1277], [1277, 1278], [1278, 1279], [1280, 1286], [1287, 1294], [1295, 1300], [1301, 1304], [1305, 1306], [1307, 1308], [1308, 1309], [1310, 1312], [1313, 1314], [1315, 1317], [1317, 1318], [1319, 1323], [1324, 1327], [1328, 1333], [1334, 1336], [1337, 1339], [1340, 1341], [1341, 1343], [1344, 1346], [1346, 1347], [1348, 1350], [1351, 1355], [1355, 1356]]}) 
answer: set([u'better', u'sens', u'hear', u'bird'])
candidate Sentence: (0.081744223833084106, {u'tokens': [u'Penguins', u'have', u'a', u'thick', u'layer', u'of', u'insulating', u'feathers', u'which', u'are', u'designed', u'to', u'keep', u'them', u'warm', u'in', u'water', u'-LRB-', u'heat', u'loss', u'in', u'water', u'is', u'much', u'greater', u'than', u'in', u'air', u'-RRB-', u'.'], u'lemmas': [u'penguin', u'have', u'a', u'thick', u'layer', u'of', u'insulate', u'feather', u'which', u'be', u'design', u'to', u'keep', u'they', u'warm', u'in', u'water', u'-lrb-', u'heat', u'loss', u'in', u'water', u'be', u'much', u'greater', u'than', u'in', u'air', u'-rrb-', u'.'], u'pos': [u'NNS', u'VBP', u'DT', u'JJ', u'NN', u'IN', u'VBG', u'NNS', u'WDT', u'VBP', u'VBN', u'TO', u'VB', u'PRP', u'JJ', u'IN', u'NN', u'-LRB-', u'NN', u'NN', u'IN', u'NN', u'VBZ', u'RB', u'JJR', u'IN', u'IN', u'NN', u'-RRB-', u'.'], u'char_offsets': [[4775, 4783], [4784, 4788], [4789, 4790], [4791, 4796], [4797, 4802], [4803, 4805], [4806, 4816], [4817, 4825], [4826, 4831], [4832, 4835], [4836, 4844], [4845, 4847], [4848, 4852], [4853, 4857], [4858, 4862], [4863, 4865], [4866, 4871], [4872, 4873], [4873, 4877], [4878, 4882], [4883, 4885], [4886, 4891], [4892, 4894], [4895, 4899], [4900, 4907], [4908, 4912], [4913, 4915], [4916, 4919], [4919, 4920], [4920, 4921]]}) 
answer: set([u'better', u'sens', u'hear', u'bird', u'averag'])
candidate Sentence: (0.080162368714809418, {u'tokens': [u'**', u'Mesetaornis', u'-LRB-', u'Late', u'Eocene', u'-', u'?'], u'lemmas': [u'**', u'mesetaornis', u'-lrb-', u'late', u'eocene', u'-', u'?'], u'pos': [u'SYM', u'FW', u'-LRB-', u'JJ', u'NN', u':', u'.'], u'char_offsets': [[7840, 7842], [7843, 7854], [7855, 7856], [7856, 7860], [7861, 7867], [7868, 7869], [7869, 7870]]}) 
answer: set([u'better', u'sens', u'hear', u'bird', u'averag'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'penguin'])

Do penguins have a better than average sense of hearing for birds?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = penguin
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a3.txt

No
_____________________________ test_yesno[param275] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156ed6c8>, (<src.tfidf.TF_IDF object at 0x110787390>, set(['.', 'penguin'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156ed6c8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.34776526689529419, {u'tokens': [u'What', u'seems', u'clear', u'is', u'that', u'penguins', u'belong', u'to', u'a', u'clade', u'of', u'Neoaves', u'-LRB-', u'living', u'birds', u'except', u'paleognaths', u'and', u'fowl', u'-RRB-', u'which', u'comprises', u'what', u'is', u'sometimes', u'called', u'``', u'higher', u'waterbirds', u"''", u'to', u'distinguish', u'them', u'from', u'the', u'more', u'ancient', u'waterfowl', u'.'], u'lemmas': [u'what', u'seem', u'clear', u'be', u'that', u'penguin', u'belong', u'to', u'a', u'clade', u'of', u'Neoaves', u'-lrb-', u'live', u'bird', u'except', u'paleognath', u'and', u'fowl', u'-rrb-', u'which', u'comprise', u'what', u'be', u'sometimes', u'call', u'``', u'higher', u'waterbird', u"''", u'to', u'distinguish', u'they', u'from', u'the', u'more', u'ancient', u'waterfowl', u'.'], u'pos': [u'WDT', u'VBZ', u'JJ', u'VBZ', u'IN', u'NNS', u'VBP', u'TO', u'DT', u'NN', u'IN', u'NNP', u'-LRB-', u'VBG', u'NNS', u'IN', u'NNS', u'CC', u'NN', u'-RRB-', u'WDT', u'VBZ', u'WP', u'VBZ', u'RB', u'VBN', u'``', u'JJR', u'NNS', u"''", u'TO', u'VB', u'PRP', u'IN', u'DT', u'RBR', u'JJ', u'NN', u'.'], u'char_offsets': [[21142, 21146], [21147, 21152], [21153, 21158], [21159, 21161], [21162, 21166], [21167, 21175], [21176, 21182], [21183, 21185], [21186, 21187], [21188, 21193], [21194, 21196], [21197, 21204], [21205, 21206], [21206, 21212], [21213, 21218], [21219, 21225], [21226, 21237], [21238, 21241], [21242, 21246], [21246, 21247], [21248, 21253], [21254, 21263], [21264, 21268], [21269, 21271], [21272, 21281], [21282, 21288], [21289, 21290], [21290, 21296], [21297, 21307], [21307, 21308], [21309, 21311], [21312, 21323], [21324, 21328], [21329, 21333], [21334, 21337], [21338, 21342], [21343, 21350], [21351, 21360], [21360, 21361]]}) 
answer: set([u'consid'])
candidate Sentence: (0.11012275516986847, {u'tokens': [u'New', u'subfamily', u'2', u'?'], u'lemmas': [u'New', u'subfamily', u'2', u'?'], u'pos': [u'NNP', u'NN', u'CD', u'.'], u'char_offsets': [[7700, 7703], [7704, 7713], [7714, 7715], [7715, 7716]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.10856864601373672, {u'tokens': [u'**', u"''", u'Spheniscus', u'gen.', u'et', u'sp', u'.'], u'lemmas': [u'**', u"''", u'Spheniscus', u'gen.', u'et', u'sp', u'.'], u'pos': [u'SYM', u"''", u'NNP', u'NNP', u'FW', u'FW', u'.'], u'char_offsets': [[8387, 8389], [8390, 8392], [8392, 8402], [8403, 8407], [8408, 8410], [8411, 8413], [8413, 8414]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.10320287197828293, {u'tokens': [u'Penguins', u'either', u'waddle', u'on', u'their', u'feet', u'or', u'slide', u'on', u'their', u'bellies', u'across', u'the', u'snow', u',', u'a', u'movement', u'called', u'``', u'tobogganing', u"''", u',', u'which', u'conserves', u'energy', u'while', u'moving', u'quickly', u'.'], u'lemmas': [u'penguin', u'either', u'waddle', u'on', u'they', u'foot', u'or', u'slide', u'on', u'they', u'belly', u'across', u'the', u'snow', u',', u'a', u'movement', u'call', u'``', u'toboggan', u"''", u',', u'which', u'conserve', u'energy', u'while', u'move', u'quickly', u'.'], u'pos': [u'NNS', u'CC', u'NN', u'IN', u'PRP$', u'NNS', u'CC', u'NN', u'IN', u'PRP$', u'NNS', u'IN', u'DT', u'NN', u',', u'DT', u'NN', u'VBN', u'``', u'VBG', u"''", u',', u'WDT', u'VBZ', u'NN', u'IN', u'VBG', u'RB', u'.'], u'char_offsets': [[4094, 4102], [4103, 4109], [4110, 4116], [4117, 4119], [4120, 4125], [4126, 4130], [4131, 4133], [4134, 4139], [4140, 4142], [4143, 4148], [4149, 4156], [4157, 4163], [4164, 4167], [4168, 4172], [4172, 4173], [4174, 4175], [4176, 4184], [4185, 4191], [4192, 4193], [4193, 4204], [4204, 4205], [4205, 4206], [4207, 4212], [4213, 4222], [4223, 4229], [4230, 4235], [4236, 4242], [4243, 4250], [4250, 4251]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.091535896062850952, {u'tokens': [u'PDF', u'fulltext', u'*', u'Sivak', u',', u'J.', u';', u'Howland', u',', u'H.', u'&', u'McGill-Harelstad', u',', u'P.', u'-LRB-', u'1987', u'-RRB-', u'``', u'Vision', u'of', u'the', u'Humboldt', u'Penguin', u'-LRB-', u'Spheniscus', u'humboldti', u'-RRB-', u'in', u'Air', u'and', u'Water', u"''", u'Proceedings', u'of', u'the', u'Royal', u'Society', u'of', u'London', u'.'], u'lemmas': [u'pdf', u'fulltext', u'*', u'Sivak', u',', u'J.', u';', u'Howland', u',', u'H.', u'&', u'McGill-Harelstad', u',', u'P.', u'-lrb-', u'1987', u'-rrb-', u'``', u'Vision', u'of', u'the', u'Humboldt', u'Penguin', u'-lrb-', u'Spheniscus', u'humboldtus', u'-rrb-', u'in', u'Air', u'and', u'Water', u"''", u'Proceedings', u'of', u'the', u'Royal', u'Society', u'of', u'London', u'.'], u'pos': [u'NN', u'NN', u'SYM', u'NNP', u',', u'NNP', u':', u'NNP', u',', u'NNP', u'CC', u'NNP', u',', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'``', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNS', u'-RRB-', u'IN', u'NNP', u'CC', u'NNP', u"''", u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[27773, 27776], [27777, 27785], [27786, 27787], [27788, 27793], [27793, 27794], [27795, 27797], [27797, 27798], [27799, 27806], [27806, 27807], [27808, 27810], [27811, 27812], [27814, 27830], [27830, 27831], [27832, 27834], [27835, 27836], [27836, 27840], [27840, 27841], [27842, 27843], [27843, 27849], [27850, 27852], [27853, 27856], [27857, 27865], [27866, 27873], [27874, 27875], [27875, 27885], [27886, 27895], [27895, 27896], [27897, 27899], [27900, 27903], [27904, 27907], [27908, 27913], [27914, 27915], [27916, 27927], [27928, 27930], [27931, 27934], [27935, 27940], [27941, 27948], [27949, 27951], [27952, 27958], [27958, 27959]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.087385639548301697, {u'tokens': [u'**', u'Mesetaornis', u'-LRB-', u'Late', u'Eocene', u'-', u'?'], u'lemmas': [u'**', u'mesetaornis', u'-lrb-', u'late', u'eocene', u'-', u'?'], u'pos': [u'SYM', u'FW', u'-LRB-', u'JJ', u'NN', u':', u'.'], u'char_offsets': [[7840, 7842], [7843, 7854], [7855, 7856], [7856, 7860], [7861, 7867], [7868, 7869], [7869, 7870]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.087385639548301697, {u'tokens': [u'**', u'Tonniornis', u'-LRB-', u'Late', u'Eocene', u'-', u'?'], u'lemmas': [u'**', u'tonniorni', u'-lrb-', u'late', u'eocene', u'-', u'?'], u'pos': [u'SYM', u'NN', u'-LRB-', u'JJ', u'NN', u':', u'.'], u'char_offsets': [[7962, 7964], [7965, 7975], [7976, 7977], [7977, 7981], [7982, 7988], [7989, 7990], [7990, 7991]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.087385639548301697, {u'tokens': [u'**', u'Marambiornis', u'-LRB-', u'Late', u'Eocene', u'-', u'?'], u'lemmas': [u'**', u'marambiorni', u'-lrb-', u'late', u'eocene', u'-', u'?'], u'pos': [u'SYM', u'NN', u'-LRB-', u'JJ', u'NN', u':', u'.'], u'char_offsets': [[7717, 7719], [7720, 7732], [7733, 7734], [7734, 7738], [7739, 7745], [7746, 7747], [7747, 7748]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.075957536697387695, {u'tokens': [u'Furthermore', u',', u'they', u'restrict', u'the', u'phylogenetic', u'taxon', u'Sphenisciformes', u'to', u'flightless', u'taxa', u',', u'and', u'establish', u'-LRB-', u'Clarke', u'et', u'al.', u'2003', u'-RRB-', u'the', u'phylogenetic', u'taxon', u'Pansphenisciformes', u'as', u'equivalent', u'to', u'the', u'Linnean', u'taxon', u'Sphenisciformes', u',', u'i.e.', u',', u'including', u'any', u'flying', u'basal', u'``', u'proto-penguins', u"''", u'to', u'be', u'discovered', u'eventually', u'.'], u'lemmas': [u'furthermore', u',', u'they', u'restrict', u'the', u'phylogenetic', u'taxon', u'sphenisciforme', u'to', u'flightless', u'taxa', u',', u'and', u'establish', u'-lrb-', u'Clarke', u'et', u'al.', u'2003', u'-rrb-', u'the', u'phylogenetic', u'taxon', u'pansphenisciforme', u'as', u'equivalent', u'to', u'the', u'linnean', u'taxon', u'sphenisciforme', u',', u'i.e.', u',', u'include', u'any', u'fly', u'basal', u'``', u'proto-penguin', u"''", u'to', u'be', u'discover', u'eventually', u'.'], u'pos': [u'RB', u',', u'PRP', u'VBP', u'DT', u'JJ', u'NN', u'NNS', u'TO', u'JJ', u'NN', u',', u'CC', u'VB', u'-LRB-', u'NNP', u'FW', u'FW', u'CD', u'-RRB-', u'DT', u'JJ', u'NN', u'NN', u'IN', u'JJ', u'TO', u'DT', u'JJ', u'NN', u'NNS', u',', u'FW', u',', u'VBG', u'DT', u'VBG', u'JJ', u'``', u'NNS', u"''", u'TO', u'VB', u'VBN', u'RB', u'.'], u'char_offsets': [[10424, 10435], [10435, 10436], [10437, 10441], [10442, 10450], [10451, 10454], [10455, 10467], [10468, 10473], [10474, 10489], [10490, 10492], [10493, 10503], [10504, 10508], [10508, 10509], [10510, 10513], [10514, 10523], [10524, 10525], [10525, 10531], [10532, 10534], [10535, 10538], [10539, 10543], [10543, 10544], [10545, 10548], [10549, 10561], [10562, 10567], [10568, 10586], [10587, 10589], [10590, 10600], [10601, 10603], [10604, 10607], [10608, 10615], [10616, 10621], [10622, 10637], [10637, 10638], [10639, 10643], [10643, 10644], [10645, 10654], [10655, 10658], [10659, 10665], [10666, 10671], [10672, 10673], [10673, 10687], [10687, 10688], [10689, 10691], [10692, 10694], [10695, 10705], [10706, 10716], [10716, 10717]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'penguin'])

Are penguins considered "higher waterbirds"?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = penguin
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a3.txt

No
_____________________________ test_yesno[param276] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156ed710>, (<src.tfidf.TF_IDF object at 0x110787390>, set(['.', 'penguin'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156ed710>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.34776526689529419, {u'tokens': [u'What', u'seems', u'clear', u'is', u'that', u'penguins', u'belong', u'to', u'a', u'clade', u'of', u'Neoaves', u'-LRB-', u'living', u'birds', u'except', u'paleognaths', u'and', u'fowl', u'-RRB-', u'which', u'comprises', u'what', u'is', u'sometimes', u'called', u'``', u'higher', u'waterbirds', u"''", u'to', u'distinguish', u'them', u'from', u'the', u'more', u'ancient', u'waterfowl', u'.'], u'lemmas': [u'what', u'seem', u'clear', u'be', u'that', u'penguin', u'belong', u'to', u'a', u'clade', u'of', u'Neoaves', u'-lrb-', u'live', u'bird', u'except', u'paleognath', u'and', u'fowl', u'-rrb-', u'which', u'comprise', u'what', u'be', u'sometimes', u'call', u'``', u'higher', u'waterbird', u"''", u'to', u'distinguish', u'they', u'from', u'the', u'more', u'ancient', u'waterfowl', u'.'], u'pos': [u'WDT', u'VBZ', u'JJ', u'VBZ', u'IN', u'NNS', u'VBP', u'TO', u'DT', u'NN', u'IN', u'NNP', u'-LRB-', u'VBG', u'NNS', u'IN', u'NNS', u'CC', u'NN', u'-RRB-', u'WDT', u'VBZ', u'WP', u'VBZ', u'RB', u'VBN', u'``', u'JJR', u'NNS', u"''", u'TO', u'VB', u'PRP', u'IN', u'DT', u'RBR', u'JJ', u'NN', u'.'], u'char_offsets': [[21142, 21146], [21147, 21152], [21153, 21158], [21159, 21161], [21162, 21166], [21167, 21175], [21176, 21182], [21183, 21185], [21186, 21187], [21188, 21193], [21194, 21196], [21197, 21204], [21205, 21206], [21206, 21212], [21213, 21218], [21219, 21225], [21226, 21237], [21238, 21241], [21242, 21246], [21246, 21247], [21248, 21253], [21254, 21263], [21264, 21268], [21269, 21271], [21272, 21281], [21282, 21288], [21289, 21290], [21290, 21296], [21297, 21307], [21307, 21308], [21309, 21311], [21312, 21323], [21324, 21328], [21329, 21333], [21334, 21337], [21338, 21342], [21343, 21350], [21351, 21360], [21360, 21361]]}) 
answer: set([u'consid'])
candidate Sentence: (0.11012275516986847, {u'tokens': [u'New', u'subfamily', u'2', u'?'], u'lemmas': [u'New', u'subfamily', u'2', u'?'], u'pos': [u'NNP', u'NN', u'CD', u'.'], u'char_offsets': [[7700, 7703], [7704, 7713], [7714, 7715], [7715, 7716]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.10856864601373672, {u'tokens': [u'**', u"''", u'Spheniscus', u'gen.', u'et', u'sp', u'.'], u'lemmas': [u'**', u"''", u'Spheniscus', u'gen.', u'et', u'sp', u'.'], u'pos': [u'SYM', u"''", u'NNP', u'NNP', u'FW', u'FW', u'.'], u'char_offsets': [[8387, 8389], [8390, 8392], [8392, 8402], [8403, 8407], [8408, 8410], [8411, 8413], [8413, 8414]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.10320287197828293, {u'tokens': [u'Penguins', u'either', u'waddle', u'on', u'their', u'feet', u'or', u'slide', u'on', u'their', u'bellies', u'across', u'the', u'snow', u',', u'a', u'movement', u'called', u'``', u'tobogganing', u"''", u',', u'which', u'conserves', u'energy', u'while', u'moving', u'quickly', u'.'], u'lemmas': [u'penguin', u'either', u'waddle', u'on', u'they', u'foot', u'or', u'slide', u'on', u'they', u'belly', u'across', u'the', u'snow', u',', u'a', u'movement', u'call', u'``', u'toboggan', u"''", u',', u'which', u'conserve', u'energy', u'while', u'move', u'quickly', u'.'], u'pos': [u'NNS', u'CC', u'NN', u'IN', u'PRP$', u'NNS', u'CC', u'NN', u'IN', u'PRP$', u'NNS', u'IN', u'DT', u'NN', u',', u'DT', u'NN', u'VBN', u'``', u'VBG', u"''", u',', u'WDT', u'VBZ', u'NN', u'IN', u'VBG', u'RB', u'.'], u'char_offsets': [[4094, 4102], [4103, 4109], [4110, 4116], [4117, 4119], [4120, 4125], [4126, 4130], [4131, 4133], [4134, 4139], [4140, 4142], [4143, 4148], [4149, 4156], [4157, 4163], [4164, 4167], [4168, 4172], [4172, 4173], [4174, 4175], [4176, 4184], [4185, 4191], [4192, 4193], [4193, 4204], [4204, 4205], [4205, 4206], [4207, 4212], [4213, 4222], [4223, 4229], [4230, 4235], [4236, 4242], [4243, 4250], [4250, 4251]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.091535896062850952, {u'tokens': [u'PDF', u'fulltext', u'*', u'Sivak', u',', u'J.', u';', u'Howland', u',', u'H.', u'&', u'McGill-Harelstad', u',', u'P.', u'-LRB-', u'1987', u'-RRB-', u'``', u'Vision', u'of', u'the', u'Humboldt', u'Penguin', u'-LRB-', u'Spheniscus', u'humboldti', u'-RRB-', u'in', u'Air', u'and', u'Water', u"''", u'Proceedings', u'of', u'the', u'Royal', u'Society', u'of', u'London', u'.'], u'lemmas': [u'pdf', u'fulltext', u'*', u'Sivak', u',', u'J.', u';', u'Howland', u',', u'H.', u'&', u'McGill-Harelstad', u',', u'P.', u'-lrb-', u'1987', u'-rrb-', u'``', u'Vision', u'of', u'the', u'Humboldt', u'Penguin', u'-lrb-', u'Spheniscus', u'humboldtus', u'-rrb-', u'in', u'Air', u'and', u'Water', u"''", u'Proceedings', u'of', u'the', u'Royal', u'Society', u'of', u'London', u'.'], u'pos': [u'NN', u'NN', u'SYM', u'NNP', u',', u'NNP', u':', u'NNP', u',', u'NNP', u'CC', u'NNP', u',', u'NNP', u'-LRB-', u'CD', u'-RRB-', u'``', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNS', u'-RRB-', u'IN', u'NNP', u'CC', u'NNP', u"''", u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'.'], u'char_offsets': [[27773, 27776], [27777, 27785], [27786, 27787], [27788, 27793], [27793, 27794], [27795, 27797], [27797, 27798], [27799, 27806], [27806, 27807], [27808, 27810], [27811, 27812], [27814, 27830], [27830, 27831], [27832, 27834], [27835, 27836], [27836, 27840], [27840, 27841], [27842, 27843], [27843, 27849], [27850, 27852], [27853, 27856], [27857, 27865], [27866, 27873], [27874, 27875], [27875, 27885], [27886, 27895], [27895, 27896], [27897, 27899], [27900, 27903], [27904, 27907], [27908, 27913], [27914, 27915], [27916, 27927], [27928, 27930], [27931, 27934], [27935, 27940], [27941, 27948], [27949, 27951], [27952, 27958], [27958, 27959]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.087385639548301697, {u'tokens': [u'**', u'Mesetaornis', u'-LRB-', u'Late', u'Eocene', u'-', u'?'], u'lemmas': [u'**', u'mesetaornis', u'-lrb-', u'late', u'eocene', u'-', u'?'], u'pos': [u'SYM', u'FW', u'-LRB-', u'JJ', u'NN', u':', u'.'], u'char_offsets': [[7840, 7842], [7843, 7854], [7855, 7856], [7856, 7860], [7861, 7867], [7868, 7869], [7869, 7870]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.087385639548301697, {u'tokens': [u'**', u'Tonniornis', u'-LRB-', u'Late', u'Eocene', u'-', u'?'], u'lemmas': [u'**', u'tonniorni', u'-lrb-', u'late', u'eocene', u'-', u'?'], u'pos': [u'SYM', u'NN', u'-LRB-', u'JJ', u'NN', u':', u'.'], u'char_offsets': [[7962, 7964], [7965, 7975], [7976, 7977], [7977, 7981], [7982, 7988], [7989, 7990], [7990, 7991]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.087385639548301697, {u'tokens': [u'**', u'Marambiornis', u'-LRB-', u'Late', u'Eocene', u'-', u'?'], u'lemmas': [u'**', u'marambiorni', u'-lrb-', u'late', u'eocene', u'-', u'?'], u'pos': [u'SYM', u'NN', u'-LRB-', u'JJ', u'NN', u':', u'.'], u'char_offsets': [[7717, 7719], [7720, 7732], [7733, 7734], [7734, 7738], [7739, 7745], [7746, 7747], [7747, 7748]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
candidate Sentence: (0.075957536697387695, {u'tokens': [u'Furthermore', u',', u'they', u'restrict', u'the', u'phylogenetic', u'taxon', u'Sphenisciformes', u'to', u'flightless', u'taxa', u',', u'and', u'establish', u'-LRB-', u'Clarke', u'et', u'al.', u'2003', u'-RRB-', u'the', u'phylogenetic', u'taxon', u'Pansphenisciformes', u'as', u'equivalent', u'to', u'the', u'Linnean', u'taxon', u'Sphenisciformes', u',', u'i.e.', u',', u'including', u'any', u'flying', u'basal', u'``', u'proto-penguins', u"''", u'to', u'be', u'discovered', u'eventually', u'.'], u'lemmas': [u'furthermore', u',', u'they', u'restrict', u'the', u'phylogenetic', u'taxon', u'sphenisciforme', u'to', u'flightless', u'taxa', u',', u'and', u'establish', u'-lrb-', u'Clarke', u'et', u'al.', u'2003', u'-rrb-', u'the', u'phylogenetic', u'taxon', u'pansphenisciforme', u'as', u'equivalent', u'to', u'the', u'linnean', u'taxon', u'sphenisciforme', u',', u'i.e.', u',', u'include', u'any', u'fly', u'basal', u'``', u'proto-penguin', u"''", u'to', u'be', u'discover', u'eventually', u'.'], u'pos': [u'RB', u',', u'PRP', u'VBP', u'DT', u'JJ', u'NN', u'NNS', u'TO', u'JJ', u'NN', u',', u'CC', u'VB', u'-LRB-', u'NNP', u'FW', u'FW', u'CD', u'-RRB-', u'DT', u'JJ', u'NN', u'NN', u'IN', u'JJ', u'TO', u'DT', u'JJ', u'NN', u'NNS', u',', u'FW', u',', u'VBG', u'DT', u'VBG', u'JJ', u'``', u'NNS', u"''", u'TO', u'VB', u'VBN', u'RB', u'.'], u'char_offsets': [[10424, 10435], [10435, 10436], [10437, 10441], [10442, 10450], [10451, 10454], [10455, 10467], [10468, 10473], [10474, 10489], [10490, 10492], [10493, 10503], [10504, 10508], [10508, 10509], [10510, 10513], [10514, 10523], [10524, 10525], [10525, 10531], [10532, 10534], [10535, 10538], [10539, 10543], [10543, 10544], [10545, 10548], [10549, 10561], [10562, 10567], [10568, 10586], [10587, 10589], [10590, 10600], [10601, 10603], [10604, 10607], [10608, 10615], [10616, 10621], [10622, 10637], [10637, 10638], [10639, 10643], [10643, 10644], [10645, 10654], [10655, 10658], [10659, 10665], [10666, 10671], [10672, 10673], [10673, 10687], [10687, 10688], [10689, 10691], [10692, 10694], [10695, 10705], [10706, 10716], [10716, 10717]]}) 
answer: set([u'waterbird', u'consid', u'higher'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'penguin'])

Are penguins considered "higher waterbirds"?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = penguin
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a3.txt

No
_____________________________ test_yesno[param277] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156ed758>, (<src.tfidf.TF_IDF object at 0x1144af850>, set(['.', 'bear', 'polar'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156ed758>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.37193900346755981, {u'tokens': [u'Because', u'many', u'marine', u'mammal', u'populations', u'had', u'plummeted', u'due', u'to', u'over-hunting', u',', u'the', u'United', u'States', u'passed', u'the', u'federal', u'Marine', u'Mammal', u'Protection', u'Act', u'in', u'1972', u',', u'which', u'prohibited', u'the', u'harassment', u',', u'injuring', u'or', u'killing', u'of', u'all', u'marine', u'mammal', u'species', u',', u'including', u'polar', u'bears', u'.'], u'lemmas': [u'because', u'many', u'marine', u'mammal', u'population', u'have', u'plummet', u'due', u'to', u'over-hunting', u',', u'the', u'United', u'States', u'pass', u'the', u'federal', u'Marine', u'mammal', u'Protection', u'Act', u'in', u'1972', u',', u'which', u'prohibit', u'the', u'harassment', u',', u'injure', u'or', u'kill', u'of', u'all', u'marine', u'mammal', u'species', u',', u'include', u'polar', u'bear', u'.'], u'pos': [u'IN', u'JJ', u'JJ', u'NN', u'NNS', u'VBD', u'VBN', u'JJ', u'TO', u'NN', u',', u'DT', u'NNP', u'NNPS', u'VBD', u'DT', u'JJ', u'NNP', u'JJ', u'NNP', u'NNP', u'IN', u'CD', u',', u'WDT', u'VBD', u'DT', u'NN', u',', u'VBG', u'CC', u'VBG', u'IN', u'DT', u'JJ', u'NN', u'NNS', u',', u'VBG', u'JJ', u'NNS', u'.'], u'char_offsets': [[23729, 23736], [23737, 23741], [23742, 23748], [23749, 23755], [23756, 23767], [23768, 23771], [23772, 23781], [23782, 23785], [23786, 23788], [23789, 23801], [23801, 23802], [23803, 23806], [23807, 23813], [23814, 23820], [23821, 23827], [23828, 23831], [23832, 23839], [23840, 23846], [23847, 23853], [23854, 23864], [23865, 23868], [23869, 23871], [23872, 23876], [23876, 23877], [23878, 23883], [23884, 23894], [23895, 23898], [23899, 23909], [23909, 23910], [23911, 23919], [23920, 23922], [23923, 23930], [23931, 23933], [23934, 23937], [23938, 23944], [23945, 23951], [23952, 23959], [23959, 23960], [23961, 23970], [23971, 23976], [23977, 23982], [23982, 23983]]}) 
answer: set([])
candidate Sentence: (0.24140840768814087, {u'tokens': [u'Though', u'it', u'spends', u'time', u'on', u'land', u'and', u'ice', u',', u'the', u'polar', u'bear', u'is', u'regarded', u'as', u'a', u'marine', u'mammal', u'due', u'to', u'its', u'intimate', u'relationship', u'with', u'the', u'sea', u'.'], u'lemmas': [u'though', u'it', u'spend', u'time', u'on', u'land', u'and', u'ice', u',', u'the', u'polar', u'bear', u'be', u'regard', u'as', u'a', u'marine', u'mammal', u'due', u'to', u'its', u'intimate', u'relationship', u'with', u'the', u'sea', u'.'], u'pos': [u'IN', u'PRP', u'VBZ', u'NN', u'IN', u'NN', u'CC', u'NN', u',', u'DT', u'JJ', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'JJ', u'TO', u'PRP$', u'JJ', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[8357, 8363], [8364, 8366], [8367, 8373], [8374, 8378], [8379, 8381], [8382, 8386], [8387, 8390], [8391, 8394], [8394, 8395], [8396, 8399], [8400, 8405], [8406, 8410], [8411, 8413], [8414, 8422], [8423, 8425], [8426, 8427], [8428, 8434], [8435, 8441], [8442, 8445], [8446, 8448], [8449, 8452], [8453, 8461], [8462, 8474], [8475, 8479], [8480, 8483], [8484, 8487], [8487, 8488]]}) 
answer: set([])
candidate Sentence: (0.23990228772163391, {u'tokens': [u'A', u'semi-aquatic', u'marine', u'mammal', u',', u'the', u'polar', u'bear', u'has', u'adapted', u'for', u'life', u'on', u'a', u'combination', u'of', u'land', u',', u'sea', u',', u'and', u'ice', u',', u'and', u'is', u'the', u'apex', u'predator', u'within', u'its', u'range', u'.'], u'lemmas': [u'a', u'semi-aquatic', u'marine', u'mammal', u',', u'the', u'polar', u'bear', u'have', u'adapt', u'for', u'life', u'on', u'a', u'combination', u'of', u'land', u',', u'sea', u',', u'and', u'ice', u',', u'and', u'be', u'the', u'apex', u'predator', u'within', u'its', u'range', u'.'], u'pos': [u'DT', u'JJ', u'JJ', u'NN', u',', u'DT', u'JJ', u'NN', u'VBZ', u'VBN', u'IN', u'NN', u'IN', u'DT', u'NN', u'IN', u'NN', u',', u'NN', u',', u'CC', u'NN', u',', u'CC', u'VBZ', u'DT', u'NN', u'NN', u'IN', u'PRP$', u'NN', u'.'], u'char_offsets': [[627, 628], [629, 641], [642, 648], [649, 655], [655, 656], [657, 660], [661, 666], [667, 671], [672, 675], [676, 683], [684, 687], [688, 692], [693, 695], [696, 697], [698, 709], [710, 712], [713, 717], [717, 718], [719, 722], [722, 723], [724, 727], [728, 731], [731, 732], [737, 740], [741, 743], [744, 747], [748, 752], [753, 761], [762, 768], [769, 772], [773, 778], [778, 779]]}) 
answer: set([])
candidate Sentence: (0.22262576222419739, {u'tokens': [u'however', u',', u'unlike', u'other', u'Arctic', u'mammals', u',', u'polar', u'bears', u'do', u'not', u'shed', u'their', u'coat', u'for', u'a', u'darker', u'shade', u'to', u'camouflage', u'themselves', u'in', u'the', u'summer', u'habitat', u'.'], u'lemmas': [u'however', u',', u'unlike', u'other', u'Arctic', u'mammal', u',', u'polar', u'bear', u'do', u'not', u'shed', u'they', u'coat', u'for', u'a', u'darker', u'shade', u'to', u'camouflage', u'themselves', u'in', u'the', u'summer', u'habitat', u'.'], u'pos': [u'RB', u',', u'IN', u'JJ', u'NNP', u'NNS', u',', u'JJ', u'NNS', u'VBP', u'RB', u'VB', u'PRP$', u'NN', u'IN', u'DT', u'JJR', u'NN', u'TO', u'NN', u'PRP', u'IN', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[3138, 3145], [3145, 3146], [3147, 3153], [3154, 3159], [3160, 3166], [3167, 3174], [3174, 3175], [3176, 3181], [3182, 3187], [3188, 3190], [3191, 3194], [3195, 3199], [3200, 3205], [3206, 3210], [3211, 3214], [3215, 3216], [3217, 3223], [3224, 3229], [3230, 3232], [3233, 3243], [3244, 3254], [3255, 3257], [3258, 3261], [3262, 3268], [3269, 3276], [3276, 3277]]}) 
answer: set([])
candidate Sentence: (0.19835196435451508, {u'tokens': [u'The', u'U.S.', u'began', u'regulating', u'in', u'1971', u'and', u'adopted', u'the', u'Marine', u'Mammal', u'Protection', u'Act', u'in', u'1972', u'.'], u'lemmas': [u'the', u'U.S.', u'begin', u'regulate', u'in', u'1971', u'and', u'adopt', u'the', u'Marine', u'mammal', u'Protection', u'Act', u'in', u'1972', u'.'], u'pos': [u'DT', u'NNP', u'VBD', u'VBG', u'IN', u'CD', u'CC', u'VBD', u'DT', u'NNP', u'JJ', u'NNP', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[20519, 20522], [20523, 20527], [20528, 20533], [20534, 20544], [20545, 20547], [20548, 20552], [20553, 20556], [20557, 20564], [20565, 20568], [20569, 20575], [20576, 20582], [20583, 20593], [20594, 20597], [20598, 20600], [20601, 20605], [20605, 20606]]}) 
answer: set([])
candidate Sentence: (0.18497800827026367, {u'tokens': [u'Only', u'female', u'polar', u'bears', u'enter', u'a', u'dormant', u'state', u'referred', u'to', u'as', u'``', u'denning', u"''", u'during', u'pregnancy', u',', u'though', u'their', u'body', u'temperature', u'does', u'not', u'decrease', u'during', u'this', u'period', u'as', u'it', u'would', u'for', u'a', u'typical', u'mammal', u'in', u'hibernation', u'.'], u'lemmas': [u'only', u'female', u'polar', u'bear', u'enter', u'a', u'dormant', u'state', u'refer', u'to', u'as', u'``', u'denning', u"''", u'during', u'pregnancy', u',', u'though', u'they', u'body', u'temperature', u'do', u'not', u'decrease', u'during', u'this', u'period', u'as', u'it', u'would', u'for', u'a', u'typical', u'mammal', u'in', u'hibernation', u'.'], u'pos': [u'RB', u'JJ', u'JJ', u'NNS', u'VBP', u'DT', u'JJ', u'NN', u'VBD', u'TO', u'IN', u'``', u'NN', u"''", u'IN', u'NN', u',', u'IN', u'PRP$', u'NN', u'NN', u'VBZ', u'RB', u'VB', u'IN', u'DT', u'NN', u'IN', u'PRP', u'MD', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[7296, 7300], [7301, 7307], [7308, 7313], [7314, 7319], [7320, 7325], [7326, 7327], [7328, 7335], [7336, 7341], [7342, 7350], [7351, 7353], [7354, 7356], [7357, 7358], [7358, 7365], [7365, 7366], [7367, 7373], [7374, 7383], [7383, 7384], [7385, 7391], [7392, 7397], [7398, 7402], [7403, 7414], [7415, 7419], [7420, 7423], [7424, 7432], [7433, 7439], [7440, 7444], [7445, 7451], [7452, 7454], [7455, 7457], [7458, 7463], [7464, 7467], [7468, 7469], [7470, 7477], [7478, 7484], [7485, 7487], [7488, 7499], [7499, 7500]]}) 
answer: set([])
candidate Sentence: (0.17603431642055511, {u'tokens': [u'The', u'Humane', u'Society', u'of', u'the', u'United', u'States', u'``', u'What', u'You', u'Can', u'Do', u'to', u'Protect', u'Polar', u'Bears', u"''", u'In', u'1994', u',', u'the', u'United', u'States', u'modified', u'the', u'Marine', u'Mammal', u'Protection', u'Act', u',', u'allowing', u'the', u'importation', u'of', u'sport-hunted', u'polar', u'bear', u'trophies', u'into', u'the', u'country', u'and', u'clearing', u'the', u'way', u'for', u'an', u'increase', u'in', u'polar', u'bear', u'hunting', u'.'], u'lemmas': [u'the', u'Humane', u'Society', u'of', u'the', u'United', u'States', u'``', u'what', u'you', u'can', u'do', u'to', u'protect', u'Polar', u'Bears', u"''", u'in', u'1994', u',', u'the', u'United', u'States', u'modify', u'the', u'Marine', u'mammal', u'Protection', u'Act', u',', u'allow', u'the', u'importation', u'of', u'sport-hunted', u'polar', u'bear', u'trophy', u'into', u'the', u'country', u'and', u'clear', u'the', u'way', u'for', u'a', u'increase', u'in', u'polar', u'bear', u'hunting', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'``', u'WP', u'PRP', u'MD', u'VB', u'TO', u'VB', u'NNP', u'NNPS', u"''", u'IN', u'CD', u',', u'DT', u'NNP', u'NNPS', u'VBD', u'DT', u'NNP', u'JJ', u'NNP', u'NNP', u',', u'VBG', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'NN', u'NNS', u'IN', u'DT', u'NN', u'CC', u'VBG', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[24072, 24075], [24076, 24082], [24083, 24090], [24091, 24093], [24094, 24097], [24098, 24104], [24105, 24111], [24112, 24113], [24113, 24117], [24118, 24121], [24122, 24125], [24126, 24128], [24129, 24131], [24132, 24139], [24140, 24145], [24146, 24151], [24151, 24152], [24153, 24155], [24156, 24160], [24160, 24161], [24162, 24165], [24166, 24172], [24173, 24179], [24180, 24188], [24189, 24192], [24193, 24199], [24200, 24206], [24207, 24217], [24218, 24221], [24221, 24222], [24223, 24231], [24232, 24235], [24236, 24247], [24248, 24250], [24251, 24263], [24264, 24269], [24270, 24274], [24275, 24283], [24284, 24288], [24289, 24292], [24293, 24300], [24301, 24304], [24305, 24313], [24314, 24317], [24318, 24321], [24322, 24325], [24326, 24328], [24329, 24337], [24338, 24340], [24341, 24346], [24347, 24351], [24352, 24359], [24359, 24360]]}) 
answer: set([])
candidate Sentence: (0.17238551378250122, {u'tokens': [u'Its', u'biology', u'is', u'specialized', u'to', u'digest', u'fat', u'from', u'marine', u'mammals', u'and', u'can', u'not', u'derive', u'much', u'nutrition', u'from', u'terrestrial', u'food', u'.'], u'lemmas': [u'its', u'biology', u'be', u'specialize', u'to', u'digest', u'fat', u'from', u'marine', u'mammal', u'and', u'can', u'not', u'derive', u'much', u'nutrition', u'from', u'terrestrial', u'food', u'.'], u'pos': [u'PRP$', u'NN', u'VBZ', u'VBN', u'TO', u'VB', u'JJ', u'IN', u'JJ', u'NNS', u'CC', u'MD', u'RB', u'VB', u'JJ', u'NN', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[11766, 11769], [11770, 11777], [11778, 11780], [11781, 11792], [11793, 11795], [11796, 11802], [11803, 11806], [11807, 11811], [11812, 11818], [11819, 11826], [11827, 11830], [11831, 11834], [11834, 11837], [11838, 11844], [11845, 11849], [11850, 11859], [11860, 11864], [11865, 11876], [11877, 11881], [11881, 11882]]}) 
answer: set([])
candidate Sentence: (0.15703433752059937, {u'tokens': [u'Stirling', u'makes', u'no', u'mention', u'of', u'length', u',', u'these', u'are', u'from', u'SeaWorld', u'The', u'great', u'difference', u'in', u'body', u'size', u'makes', u'the', u'polar', u'bear', u'among', u'the', u'most', u'sexually', u'dimorphic', u'of', u'mammals', u',', u'surpassed', u'only', u'by', u'the', u'eared', u'seals', u'.'], u'lemmas': [u'Stirling', u'make', u'no', u'mention', u'of', u'length', u',', u'these', u'be', u'from', u'SeaWorld', u'the', u'great', u'difference', u'in', u'body', u'size', u'make', u'the', u'polar', u'bear', u'among', u'the', u'most', u'sexually', u'dimorphic', u'of', u'mammal', u',', u'surpass', u'only', u'by', u'the', u'eared', u'seal', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'NN', u',', u'DT', u'VBP', u'IN', u'NNP', u'DT', u'JJ', u'NN', u'IN', u'NN', u'NN', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'DT', u'RBS', u'RB', u'JJ', u'IN', u'NNS', u',', u'VBN', u'RB', u'IN', u'DT', u'JJ', u'NNS', u'.'], u'char_offsets': [[2145, 2153], [2154, 2159], [2160, 2162], [2163, 2170], [2171, 2173], [2174, 2180], [2180, 2181], [2182, 2187], [2188, 2191], [2192, 2196], [2198, 2206], [2208, 2211], [2212, 2217], [2218, 2228], [2229, 2231], [2232, 2236], [2237, 2241], [2242, 2247], [2248, 2251], [2252, 2257], [2258, 2262], [2263, 2268], [2269, 2272], [2273, 2277], [2278, 2286], [2287, 2296], [2297, 2299], [2300, 2307], [2307, 2308], [2309, 2318], [2319, 2323], [2324, 2326], [2327, 2330], [2331, 2336], [2337, 2342], [2342, 2343]]}) 
answer: set([])
candidate Sentence: (0.11073532700538635, {u'tokens': [u'The', u'polar', u'bear', u'-LRB-', u'Ursus', u'maritimus', u'-RRB-', u'is', u'a', u'bear', u'native', u'to', u'the', u'Arctic', u'.'], u'lemmas': [u'the', u'polar', u'bear', u'-lrb-', u'Ursus', u'maritimus', u'-rrb-', u'be', u'a', u'bear', u'native', u'to', u'the', u'Arctic', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'-LRB-', u'NNP', u'NN', u'-RRB-', u'VBZ', u'DT', u'NN', u'JJ', u'TO', u'DT', u'NNP', u'.'], u'char_offsets': [[0, 3], [4, 9], [10, 14], [15, 16], [16, 21], [22, 31], [31, 32], [33, 35], [36, 37], [38, 42], [43, 49], [50, 52], [53, 56], [57, 63], [63, 64]]}) 
answer: set([u'mammal'])
['Yes', 'Yes', 'Yes', 'No Sure', 'Yes', 'No Sure', 'Yes', 'No Sure', 'No Sure', 'No']
set([u'polar', u'bear', u'.'])

Is polar bear a mammal?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = polar_bear
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a4.txt

No
_____________________________ test_yesno[param278] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156ed7a0>, (<src.tfidf.TF_IDF object at 0x1144af850>, set(['.', 'bear', 'polar'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156ed7a0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.37193900346755981, {u'tokens': [u'Because', u'many', u'marine', u'mammal', u'populations', u'had', u'plummeted', u'due', u'to', u'over-hunting', u',', u'the', u'United', u'States', u'passed', u'the', u'federal', u'Marine', u'Mammal', u'Protection', u'Act', u'in', u'1972', u',', u'which', u'prohibited', u'the', u'harassment', u',', u'injuring', u'or', u'killing', u'of', u'all', u'marine', u'mammal', u'species', u',', u'including', u'polar', u'bears', u'.'], u'lemmas': [u'because', u'many', u'marine', u'mammal', u'population', u'have', u'plummet', u'due', u'to', u'over-hunting', u',', u'the', u'United', u'States', u'pass', u'the', u'federal', u'Marine', u'mammal', u'Protection', u'Act', u'in', u'1972', u',', u'which', u'prohibit', u'the', u'harassment', u',', u'injure', u'or', u'kill', u'of', u'all', u'marine', u'mammal', u'species', u',', u'include', u'polar', u'bear', u'.'], u'pos': [u'IN', u'JJ', u'JJ', u'NN', u'NNS', u'VBD', u'VBN', u'JJ', u'TO', u'NN', u',', u'DT', u'NNP', u'NNPS', u'VBD', u'DT', u'JJ', u'NNP', u'JJ', u'NNP', u'NNP', u'IN', u'CD', u',', u'WDT', u'VBD', u'DT', u'NN', u',', u'VBG', u'CC', u'VBG', u'IN', u'DT', u'JJ', u'NN', u'NNS', u',', u'VBG', u'JJ', u'NNS', u'.'], u'char_offsets': [[23729, 23736], [23737, 23741], [23742, 23748], [23749, 23755], [23756, 23767], [23768, 23771], [23772, 23781], [23782, 23785], [23786, 23788], [23789, 23801], [23801, 23802], [23803, 23806], [23807, 23813], [23814, 23820], [23821, 23827], [23828, 23831], [23832, 23839], [23840, 23846], [23847, 23853], [23854, 23864], [23865, 23868], [23869, 23871], [23872, 23876], [23876, 23877], [23878, 23883], [23884, 23894], [23895, 23898], [23899, 23909], [23909, 23910], [23911, 23919], [23920, 23922], [23923, 23930], [23931, 23933], [23934, 23937], [23938, 23944], [23945, 23951], [23952, 23959], [23959, 23960], [23961, 23970], [23971, 23976], [23977, 23982], [23982, 23983]]}) 
answer: set([])
candidate Sentence: (0.24140840768814087, {u'tokens': [u'Though', u'it', u'spends', u'time', u'on', u'land', u'and', u'ice', u',', u'the', u'polar', u'bear', u'is', u'regarded', u'as', u'a', u'marine', u'mammal', u'due', u'to', u'its', u'intimate', u'relationship', u'with', u'the', u'sea', u'.'], u'lemmas': [u'though', u'it', u'spend', u'time', u'on', u'land', u'and', u'ice', u',', u'the', u'polar', u'bear', u'be', u'regard', u'as', u'a', u'marine', u'mammal', u'due', u'to', u'its', u'intimate', u'relationship', u'with', u'the', u'sea', u'.'], u'pos': [u'IN', u'PRP', u'VBZ', u'NN', u'IN', u'NN', u'CC', u'NN', u',', u'DT', u'JJ', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'JJ', u'TO', u'PRP$', u'JJ', u'NN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[8357, 8363], [8364, 8366], [8367, 8373], [8374, 8378], [8379, 8381], [8382, 8386], [8387, 8390], [8391, 8394], [8394, 8395], [8396, 8399], [8400, 8405], [8406, 8410], [8411, 8413], [8414, 8422], [8423, 8425], [8426, 8427], [8428, 8434], [8435, 8441], [8442, 8445], [8446, 8448], [8449, 8452], [8453, 8461], [8462, 8474], [8475, 8479], [8480, 8483], [8484, 8487], [8487, 8488]]}) 
answer: set([])
candidate Sentence: (0.23990228772163391, {u'tokens': [u'A', u'semi-aquatic', u'marine', u'mammal', u',', u'the', u'polar', u'bear', u'has', u'adapted', u'for', u'life', u'on', u'a', u'combination', u'of', u'land', u',', u'sea', u',', u'and', u'ice', u',', u'and', u'is', u'the', u'apex', u'predator', u'within', u'its', u'range', u'.'], u'lemmas': [u'a', u'semi-aquatic', u'marine', u'mammal', u',', u'the', u'polar', u'bear', u'have', u'adapt', u'for', u'life', u'on', u'a', u'combination', u'of', u'land', u',', u'sea', u',', u'and', u'ice', u',', u'and', u'be', u'the', u'apex', u'predator', u'within', u'its', u'range', u'.'], u'pos': [u'DT', u'JJ', u'JJ', u'NN', u',', u'DT', u'JJ', u'NN', u'VBZ', u'VBN', u'IN', u'NN', u'IN', u'DT', u'NN', u'IN', u'NN', u',', u'NN', u',', u'CC', u'NN', u',', u'CC', u'VBZ', u'DT', u'NN', u'NN', u'IN', u'PRP$', u'NN', u'.'], u'char_offsets': [[627, 628], [629, 641], [642, 648], [649, 655], [655, 656], [657, 660], [661, 666], [667, 671], [672, 675], [676, 683], [684, 687], [688, 692], [693, 695], [696, 697], [698, 709], [710, 712], [713, 717], [717, 718], [719, 722], [722, 723], [724, 727], [728, 731], [731, 732], [737, 740], [741, 743], [744, 747], [748, 752], [753, 761], [762, 768], [769, 772], [773, 778], [778, 779]]}) 
answer: set([])
candidate Sentence: (0.22262576222419739, {u'tokens': [u'however', u',', u'unlike', u'other', u'Arctic', u'mammals', u',', u'polar', u'bears', u'do', u'not', u'shed', u'their', u'coat', u'for', u'a', u'darker', u'shade', u'to', u'camouflage', u'themselves', u'in', u'the', u'summer', u'habitat', u'.'], u'lemmas': [u'however', u',', u'unlike', u'other', u'Arctic', u'mammal', u',', u'polar', u'bear', u'do', u'not', u'shed', u'they', u'coat', u'for', u'a', u'darker', u'shade', u'to', u'camouflage', u'themselves', u'in', u'the', u'summer', u'habitat', u'.'], u'pos': [u'RB', u',', u'IN', u'JJ', u'NNP', u'NNS', u',', u'JJ', u'NNS', u'VBP', u'RB', u'VB', u'PRP$', u'NN', u'IN', u'DT', u'JJR', u'NN', u'TO', u'NN', u'PRP', u'IN', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[3138, 3145], [3145, 3146], [3147, 3153], [3154, 3159], [3160, 3166], [3167, 3174], [3174, 3175], [3176, 3181], [3182, 3187], [3188, 3190], [3191, 3194], [3195, 3199], [3200, 3205], [3206, 3210], [3211, 3214], [3215, 3216], [3217, 3223], [3224, 3229], [3230, 3232], [3233, 3243], [3244, 3254], [3255, 3257], [3258, 3261], [3262, 3268], [3269, 3276], [3276, 3277]]}) 
answer: set([])
candidate Sentence: (0.19835196435451508, {u'tokens': [u'The', u'U.S.', u'began', u'regulating', u'in', u'1971', u'and', u'adopted', u'the', u'Marine', u'Mammal', u'Protection', u'Act', u'in', u'1972', u'.'], u'lemmas': [u'the', u'U.S.', u'begin', u'regulate', u'in', u'1971', u'and', u'adopt', u'the', u'Marine', u'mammal', u'Protection', u'Act', u'in', u'1972', u'.'], u'pos': [u'DT', u'NNP', u'VBD', u'VBG', u'IN', u'CD', u'CC', u'VBD', u'DT', u'NNP', u'JJ', u'NNP', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[20519, 20522], [20523, 20527], [20528, 20533], [20534, 20544], [20545, 20547], [20548, 20552], [20553, 20556], [20557, 20564], [20565, 20568], [20569, 20575], [20576, 20582], [20583, 20593], [20594, 20597], [20598, 20600], [20601, 20605], [20605, 20606]]}) 
answer: set([])
candidate Sentence: (0.18497800827026367, {u'tokens': [u'Only', u'female', u'polar', u'bears', u'enter', u'a', u'dormant', u'state', u'referred', u'to', u'as', u'``', u'denning', u"''", u'during', u'pregnancy', u',', u'though', u'their', u'body', u'temperature', u'does', u'not', u'decrease', u'during', u'this', u'period', u'as', u'it', u'would', u'for', u'a', u'typical', u'mammal', u'in', u'hibernation', u'.'], u'lemmas': [u'only', u'female', u'polar', u'bear', u'enter', u'a', u'dormant', u'state', u'refer', u'to', u'as', u'``', u'denning', u"''", u'during', u'pregnancy', u',', u'though', u'they', u'body', u'temperature', u'do', u'not', u'decrease', u'during', u'this', u'period', u'as', u'it', u'would', u'for', u'a', u'typical', u'mammal', u'in', u'hibernation', u'.'], u'pos': [u'RB', u'JJ', u'JJ', u'NNS', u'VBP', u'DT', u'JJ', u'NN', u'VBD', u'TO', u'IN', u'``', u'NN', u"''", u'IN', u'NN', u',', u'IN', u'PRP$', u'NN', u'NN', u'VBZ', u'RB', u'VB', u'IN', u'DT', u'NN', u'IN', u'PRP', u'MD', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[7296, 7300], [7301, 7307], [7308, 7313], [7314, 7319], [7320, 7325], [7326, 7327], [7328, 7335], [7336, 7341], [7342, 7350], [7351, 7353], [7354, 7356], [7357, 7358], [7358, 7365], [7365, 7366], [7367, 7373], [7374, 7383], [7383, 7384], [7385, 7391], [7392, 7397], [7398, 7402], [7403, 7414], [7415, 7419], [7420, 7423], [7424, 7432], [7433, 7439], [7440, 7444], [7445, 7451], [7452, 7454], [7455, 7457], [7458, 7463], [7464, 7467], [7468, 7469], [7470, 7477], [7478, 7484], [7485, 7487], [7488, 7499], [7499, 7500]]}) 
answer: set([])
candidate Sentence: (0.17603431642055511, {u'tokens': [u'The', u'Humane', u'Society', u'of', u'the', u'United', u'States', u'``', u'What', u'You', u'Can', u'Do', u'to', u'Protect', u'Polar', u'Bears', u"''", u'In', u'1994', u',', u'the', u'United', u'States', u'modified', u'the', u'Marine', u'Mammal', u'Protection', u'Act', u',', u'allowing', u'the', u'importation', u'of', u'sport-hunted', u'polar', u'bear', u'trophies', u'into', u'the', u'country', u'and', u'clearing', u'the', u'way', u'for', u'an', u'increase', u'in', u'polar', u'bear', u'hunting', u'.'], u'lemmas': [u'the', u'Humane', u'Society', u'of', u'the', u'United', u'States', u'``', u'what', u'you', u'can', u'do', u'to', u'protect', u'Polar', u'Bears', u"''", u'in', u'1994', u',', u'the', u'United', u'States', u'modify', u'the', u'Marine', u'mammal', u'Protection', u'Act', u',', u'allow', u'the', u'importation', u'of', u'sport-hunted', u'polar', u'bear', u'trophy', u'into', u'the', u'country', u'and', u'clear', u'the', u'way', u'for', u'a', u'increase', u'in', u'polar', u'bear', u'hunting', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'``', u'WP', u'PRP', u'MD', u'VB', u'TO', u'VB', u'NNP', u'NNPS', u"''", u'IN', u'CD', u',', u'DT', u'NNP', u'NNPS', u'VBD', u'DT', u'NNP', u'JJ', u'NNP', u'NNP', u',', u'VBG', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'NN', u'NNS', u'IN', u'DT', u'NN', u'CC', u'VBG', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[24072, 24075], [24076, 24082], [24083, 24090], [24091, 24093], [24094, 24097], [24098, 24104], [24105, 24111], [24112, 24113], [24113, 24117], [24118, 24121], [24122, 24125], [24126, 24128], [24129, 24131], [24132, 24139], [24140, 24145], [24146, 24151], [24151, 24152], [24153, 24155], [24156, 24160], [24160, 24161], [24162, 24165], [24166, 24172], [24173, 24179], [24180, 24188], [24189, 24192], [24193, 24199], [24200, 24206], [24207, 24217], [24218, 24221], [24221, 24222], [24223, 24231], [24232, 24235], [24236, 24247], [24248, 24250], [24251, 24263], [24264, 24269], [24270, 24274], [24275, 24283], [24284, 24288], [24289, 24292], [24293, 24300], [24301, 24304], [24305, 24313], [24314, 24317], [24318, 24321], [24322, 24325], [24326, 24328], [24329, 24337], [24338, 24340], [24341, 24346], [24347, 24351], [24352, 24359], [24359, 24360]]}) 
answer: set([])
candidate Sentence: (0.17238551378250122, {u'tokens': [u'Its', u'biology', u'is', u'specialized', u'to', u'digest', u'fat', u'from', u'marine', u'mammals', u'and', u'can', u'not', u'derive', u'much', u'nutrition', u'from', u'terrestrial', u'food', u'.'], u'lemmas': [u'its', u'biology', u'be', u'specialize', u'to', u'digest', u'fat', u'from', u'marine', u'mammal', u'and', u'can', u'not', u'derive', u'much', u'nutrition', u'from', u'terrestrial', u'food', u'.'], u'pos': [u'PRP$', u'NN', u'VBZ', u'VBN', u'TO', u'VB', u'JJ', u'IN', u'JJ', u'NNS', u'CC', u'MD', u'RB', u'VB', u'JJ', u'NN', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[11766, 11769], [11770, 11777], [11778, 11780], [11781, 11792], [11793, 11795], [11796, 11802], [11803, 11806], [11807, 11811], [11812, 11818], [11819, 11826], [11827, 11830], [11831, 11834], [11834, 11837], [11838, 11844], [11845, 11849], [11850, 11859], [11860, 11864], [11865, 11876], [11877, 11881], [11881, 11882]]}) 
answer: set([])
candidate Sentence: (0.15703433752059937, {u'tokens': [u'Stirling', u'makes', u'no', u'mention', u'of', u'length', u',', u'these', u'are', u'from', u'SeaWorld', u'The', u'great', u'difference', u'in', u'body', u'size', u'makes', u'the', u'polar', u'bear', u'among', u'the', u'most', u'sexually', u'dimorphic', u'of', u'mammals', u',', u'surpassed', u'only', u'by', u'the', u'eared', u'seals', u'.'], u'lemmas': [u'Stirling', u'make', u'no', u'mention', u'of', u'length', u',', u'these', u'be', u'from', u'SeaWorld', u'the', u'great', u'difference', u'in', u'body', u'size', u'make', u'the', u'polar', u'bear', u'among', u'the', u'most', u'sexually', u'dimorphic', u'of', u'mammal', u',', u'surpass', u'only', u'by', u'the', u'eared', u'seal', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'NN', u',', u'DT', u'VBP', u'IN', u'NNP', u'DT', u'JJ', u'NN', u'IN', u'NN', u'NN', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'DT', u'RBS', u'RB', u'JJ', u'IN', u'NNS', u',', u'VBN', u'RB', u'IN', u'DT', u'JJ', u'NNS', u'.'], u'char_offsets': [[2145, 2153], [2154, 2159], [2160, 2162], [2163, 2170], [2171, 2173], [2174, 2180], [2180, 2181], [2182, 2187], [2188, 2191], [2192, 2196], [2198, 2206], [2208, 2211], [2212, 2217], [2218, 2228], [2229, 2231], [2232, 2236], [2237, 2241], [2242, 2247], [2248, 2251], [2252, 2257], [2258, 2262], [2263, 2268], [2269, 2272], [2273, 2277], [2278, 2286], [2287, 2296], [2297, 2299], [2300, 2307], [2307, 2308], [2309, 2318], [2319, 2323], [2324, 2326], [2327, 2330], [2331, 2336], [2337, 2342], [2342, 2343]]}) 
answer: set([])
candidate Sentence: (0.11073532700538635, {u'tokens': [u'The', u'polar', u'bear', u'-LRB-', u'Ursus', u'maritimus', u'-RRB-', u'is', u'a', u'bear', u'native', u'to', u'the', u'Arctic', u'.'], u'lemmas': [u'the', u'polar', u'bear', u'-lrb-', u'Ursus', u'maritimus', u'-rrb-', u'be', u'a', u'bear', u'native', u'to', u'the', u'Arctic', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'-LRB-', u'NNP', u'NN', u'-RRB-', u'VBZ', u'DT', u'NN', u'JJ', u'TO', u'DT', u'NNP', u'.'], u'char_offsets': [[0, 3], [4, 9], [10, 14], [15, 16], [16, 21], [22, 31], [31, 32], [33, 35], [36, 37], [38, 42], [43, 49], [50, 52], [53, 56], [57, 63], [63, 64]]}) 
answer: set([u'mammal'])
['Yes', 'Yes', 'Yes', 'No Sure', 'Yes', 'No Sure', 'Yes', 'No Sure', 'No Sure', 'No']
set([u'polar', u'bear', u'.'])

Is polar bear a mammal?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = polar_bear
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a4.txt

No
_____________________________ test_yesno[param281] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156ed878>, (<src.tfidf.TF_IDF object at 0x1144af850>, set(['.', 'bear', 'polar'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156ed878>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.23298348486423492, {u'tokens': [u'Polar', u'bears', u'still', u'have', u'vestigial', u'hibernation', u'induction', u'trigger', u'in', u'their', u'blood', u',', u'but', u'they', u'do', u'not', u'hibernate', u'in', u'the', u'winter', u'as', u'the', u'brown', u'bear', u'does', u'.'], u'lemmas': [u'Polar', u'bear', u'still', u'have', u'vestigial', u'hibernation', u'induction', u'trigger', u'in', u'they', u'blood', u',', u'but', u'they', u'do', u'not', u'hibernate', u'in', u'the', u'winter', u'as', u'the', u'brown', u'bear', u'do', u'.'], u'pos': [u'NNP', u'VBZ', u'RB', u'VB', u'JJ', u'NN', u'NN', u'NN', u'IN', u'PRP$', u'NN', u',', u'CC', u'PRP', u'VBP', u'RB', u'VB', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'VBZ', u'.'], u'char_offsets': [[7153, 7158], [7159, 7164], [7165, 7170], [7171, 7175], [7176, 7185], [7186, 7197], [7198, 7207], [7208, 7215], [7216, 7218], [7219, 7224], [7225, 7230], [7230, 7231], [7232, 7235], [7236, 7240], [7241, 7243], [7244, 7247], [7248, 7257], [7258, 7260], [7261, 7264], [7265, 7271], [7272, 7274], [7275, 7278], [7279, 7284], [7285, 7289], [7290, 7294], [7294, 7295]]}) 
answer: set([u'arctic', u'live'])
candidate Sentence: (0.22285754978656769, {u'tokens': [u'About', u'60', u'%', u'of', u'the', u'world', u"'s", u'polar', u'bears', u'live', u'in', u'Canada', u',', u'where', u'conservation', u'laws', u'are', u'a', u'provincial', u'jurisdiction', u'.'], u'lemmas': [u'about', u'60', u'%', u'of', u'the', u'world', u"'s", u'polar', u'bear', u'live', u'in', u'Canada', u',', u'where', u'conservation', u'law', u'be', u'a', u'provincial', u'jurisdiction', u'.'], u'pos': [u'RB', u'CD', u'NN', u'IN', u'DT', u'NN', u'POS', u'JJ', u'NNS', u'VBP', u'IN', u'NNP', u',', u'WRB', u'NN', u'NNS', u'VBP', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[21818, 21823], [21824, 21826], [21826, 21827], [21828, 21830], [21831, 21834], [21835, 21840], [21840, 21842], [21843, 21848], [21849, 21854], [21855, 21859], [21860, 21862], [21863, 21869], [21869, 21870], [21872, 21877], [21878, 21890], [21891, 21895], [21896, 21899], [21900, 21901], [21902, 21912], [21913, 21925], [21925, 21926]]}) 
answer: set([u'arctic'])
candidate Sentence: (0.22230418026447296, {u'tokens': [u'however', u',', u'unlike', u'other', u'Arctic', u'mammals', u',', u'polar', u'bears', u'do', u'not', u'shed', u'their', u'coat', u'for', u'a', u'darker', u'shade', u'to', u'camouflage', u'themselves', u'in', u'the', u'summer', u'habitat', u'.'], u'lemmas': [u'however', u',', u'unlike', u'other', u'Arctic', u'mammal', u',', u'polar', u'bear', u'do', u'not', u'shed', u'they', u'coat', u'for', u'a', u'darker', u'shade', u'to', u'camouflage', u'themselves', u'in', u'the', u'summer', u'habitat', u'.'], u'pos': [u'RB', u',', u'IN', u'JJ', u'NNP', u'NNS', u',', u'JJ', u'NNS', u'VBP', u'RB', u'VB', u'PRP$', u'NN', u'IN', u'DT', u'JJR', u'NN', u'TO', u'NN', u'PRP', u'IN', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[3138, 3145], [3145, 3146], [3147, 3153], [3154, 3159], [3160, 3166], [3167, 3174], [3174, 3175], [3176, 3181], [3182, 3187], [3188, 3190], [3191, 3194], [3195, 3199], [3200, 3205], [3206, 3210], [3211, 3214], [3215, 3216], [3217, 3223], [3224, 3229], [3230, 3232], [3233, 3243], [3244, 3254], [3255, 3257], [3258, 3261], [3262, 3268], [3269, 3276], [3276, 3277]]}) 
answer: set([u'live'])
candidate Sentence: (0.19955053925514221, {u'tokens': [u'The', u'FWS', u'did', u'not', u'respond', u'to', u'the', u'petition', u',', u'despite', u'being', u'required', u'to', u'do', u'so', u'within', u'90', u'days', u'under', u'United', u'States', u'law', u'.'], u'lemmas': [u'the', u'fw', u'do', u'not', u'respond', u'to', u'the', u'petition', u',', u'despite', u'be', u'require', u'to', u'do', u'so', u'within', u'90', u'day', u'under', u'United', u'States', u'law', u'.'], u'pos': [u'DT', u'NN', u'VBD', u'RB', u'VB', u'TO', u'DT', u'NN', u',', u'IN', u'VBG', u'VBN', u'TO', u'VB', u'RB', u'IN', u'CD', u'NNS', u'IN', u'NNP', u'NNPS', u'NN', u'.'], u'char_offsets': [[25192, 25195], [25196, 25199], [25200, 25203], [25204, 25207], [25208, 25215], [25216, 25218], [25219, 25222], [25223, 25231], [25231, 25232], [25233, 25240], [25241, 25246], [25247, 25255], [25256, 25258], [25259, 25261], [25262, 25264], [25265, 25271], [25272, 25274], [25275, 25279], [25280, 25285], [25286, 25292], [25293, 25299], [25300, 25303], [25303, 25304]]}) 
answer: set([u'arctic', u'live'])
candidate Sentence: (0.18374226987361908, {u'tokens': [u'The', u'polar', u'bear', u'-LRB-', u'Ursus', u'maritimus', u'-RRB-', u'is', u'a', u'bear', u'native', u'to', u'the', u'Arctic', u'.'], u'lemmas': [u'the', u'polar', u'bear', u'-lrb-', u'Ursus', u'maritimus', u'-rrb-', u'be', u'a', u'bear', u'native', u'to', u'the', u'Arctic', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'-LRB-', u'NNP', u'NN', u'-RRB-', u'VBZ', u'DT', u'NN', u'JJ', u'TO', u'DT', u'NNP', u'.'], u'char_offsets': [[0, 3], [4, 9], [10, 14], [15, 16], [16, 21], [22, 31], [31, 32], [33, 35], [36, 37], [38, 42], [43, 49], [50, 52], [53, 56], [57, 63], [63, 64]]}) 
answer: set([u'live'])
candidate Sentence: (0.17950789630413055, {u'tokens': [u'They', u'live', u'off', u'of', u'their', u'fat', u'reserves', u'through', u'the', u'late', u'summer', u'and', u'early', u'fall', u'when', u'the', u'sea-ice', u'is', u'at', u'a', u'minimum', u'.'], u'lemmas': [u'they', u'live', u'off', u'of', u'they', u'fat', u'reserve', u'through', u'the', u'late', u'summer', u'and', u'early', u'fall', u'when', u'the', u'sea-ice', u'be', u'at', u'a', u'minimum', u'.'], u'pos': [u'PRP', u'VBP', u'IN', u'IN', u'PRP$', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'CC', u'JJ', u'NN', u'WRB', u'DT', u'NN', u'VBZ', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[12193, 12197], [12198, 12202], [12203, 12206], [12207, 12209], [12210, 12215], [12216, 12219], [12220, 12228], [12229, 12236], [12237, 12240], [12241, 12245], [12246, 12252], [12253, 12256], [12257, 12262], [12263, 12267], [12268, 12272], [12273, 12276], [12277, 12284], [12285, 12287], [12288, 12290], [12291, 12292], [12293, 12300], [12300, 12301]]}) 
answer: set([u'arctic'])
candidate Sentence: (0.17472845315933228, {u'tokens': [u'The', u'first', u'has', u'consistently', u'displayed', u'the', u'bears', u'as', u'thriving', u'near', u'penguins', u',', u'though', u'the', u'animals', u'naturally', u'live', u'in', u'opposite', u'hemispheres', u'.'], u'lemmas': [u'the', u'first', u'have', u'consistently', u'display', u'the', u'bear', u'as', u'thrive', u'near', u'penguin', u',', u'though', u'the', u'animal', u'naturally', u'live', u'in', u'opposite', u'hemisphere', u'.'], u'pos': [u'DT', u'JJ', u'VBZ', u'RB', u'VBN', u'DT', u'NNS', u'IN', u'VBG', u'IN', u'NNS', u',', u'IN', u'DT', u'NNS', u'RB', u'VBP', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[27304, 27307], [27308, 27313], [27314, 27317], [27318, 27330], [27331, 27340], [27341, 27344], [27345, 27350], [27351, 27353], [27354, 27362], [27363, 27367], [27368, 27376], [27376, 27377], [27378, 27384], [27385, 27388], [27389, 27396], [27397, 27406], [27407, 27411], [27412, 27414], [27415, 27423], [27424, 27435], [27435, 27436]]}) 
answer: set([u'arctic'])
candidate Sentence: (0.1435924768447876, {u'tokens': [u',', u'Most', u'animals', u'can', u'easily', u'outrun', u'a', u'polar', u'bear', u'on', u'the', u'open', u'land', u'or', u'in', u'the', u'open', u'water', u',', u'and', u'polar', u'bears', u'overheat', u'quickly', u':', u'thus', u'the', u'polar', u'bear', u'subsists', u'almost', u'entirely', u'on', u'live', u'seals', u'and', u'walrus', u'calves', u'taken', u'at', u'the', u'edge', u'of', u'sea-ice', u'in', u'the', u'winter', u'and', u'spring', u',', u'or', u'on', u'the', u'carcasses', u'of', u'dead', u'adult', u'walruses', u'or', u'whales', u'.'], u'lemmas': [u',', u'most', u'animal', u'can', u'easily', u'outrun', u'a', u'polar', u'bear', u'on', u'the', u'open', u'land', u'or', u'in', u'the', u'open', u'water', u',', u'and', u'polar', u'bear', u'overheat', u'quickly', u':', u'thus', u'the', u'polar', u'bear', u'subsist', u'almost', u'entirely', u'on', u'live', u'seal', u'and', u'walrus', u'calf', u'take', u'at', u'the', u'edge', u'of', u'sea-ice', u'in', u'the', u'winter', u'and', u'spring', u',', u'or', u'on', u'the', u'carcass', u'of', u'dead', u'adult', u'walrus', u'or', u'whale', u'.'], u'pos': [u',', u'JJS', u'NNS', u'MD', u'RB', u'VB', u'DT', u'JJ', u'NN', u'IN', u'DT', u'JJ', u'NN', u'CC', u'IN', u'DT', u'JJ', u'NN', u',', u'CC', u'JJ', u'NNS', u'VBP', u'RB', u':', u'RB', u'DT', u'JJ', u'NN', u'NNS', u'RB', u'RB', u'IN', u'JJ', u'NNS', u'CC', u'NN', u'NNS', u'VBN', u'IN', u'DT', u'NN', u'IN', u'NN', u'IN', u'DT', u'NN', u'CC', u'NN', u',', u'CC', u'IN', u'DT', u'NNS', u'IN', u'JJ', u'JJ', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[11885, 11886], [11890, 11894], [11895, 11902], [11903, 11906], [11907, 11913], [11914, 11920], [11921, 11922], [11923, 11928], [11929, 11933], [11934, 11936], [11937, 11940], [11941, 11945], [11946, 11950], [11951, 11953], [11954, 11956], [11957, 11960], [11961, 11965], [11966, 11971], [11971, 11972], [11973, 11976], [11977, 11982], [11983, 11988], [11989, 11997], [11998, 12005], [12005, 12006], [12007, 12011], [12012, 12015], [12016, 12021], [12022, 12026], [12027, 12035], [12036, 12042], [12043, 12051], [12052, 12054], [12055, 12059], [12060, 12065], [12066, 12069], [12070, 12076], [12077, 12083], [12084, 12089], [12090, 12092], [12093, 12096], [12097, 12101], [12102, 12104], [12105, 12112], [12113, 12115], [12116, 12119], [12120, 12126], [12127, 12130], [12131, 12137], [12137, 12138], [12139, 12141], [12142, 12144], [12145, 12148], [12149, 12158], [12159, 12161], [12162, 12166], [12167, 12172], [12173, 12181], [12182, 12184], [12185, 12191], [12191, 12192]]}) 
answer: set([u'arctic'])
candidate Sentence: (0.14167973399162292, {u'tokens': [u'The', u'destruction', u'of', u'its', u'habitat', u'on', u'the', u'Arctic', u'ice', u'threatens', u'the', u'bear', u"'s", u'survival', u'as', u'a', u'species', u'.'], u'lemmas': [u'the', u'destruction', u'of', u'its', u'habitat', u'on', u'the', u'Arctic', u'ice', u'threaten', u'the', u'bear', u"'s", u'survival', u'as', u'a', u'species', u'.'], u'pos': [u'DT', u'NN', u'IN', u'PRP$', u'NN', u'IN', u'DT', u'NNP', u'NN', u'VBZ', u'DT', u'NN', u'POS', u'NN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[9095, 9098], [9099, 9110], [9111, 9113], [9114, 9117], [9118, 9125], [9126, 9128], [9129, 9132], [9133, 9139], [9140, 9143], [9144, 9153], [9154, 9157], [9158, 9162], [9162, 9164], [9165, 9173], [9174, 9176], [9177, 9178], [9179, 9186], [9186, 9187]]}) 
answer: set([u'live'])
candidate Sentence: (0.13264837861061096, {u'tokens': [u'The', u'Humane', u'Society', u'of', u'the', u'United', u'States', u'``', u'What', u'You', u'Can', u'Do', u'to', u'Protect', u'Polar', u'Bears', u"''", u'In', u'1994', u',', u'the', u'United', u'States', u'modified', u'the', u'Marine', u'Mammal', u'Protection', u'Act', u',', u'allowing', u'the', u'importation', u'of', u'sport-hunted', u'polar', u'bear', u'trophies', u'into', u'the', u'country', u'and', u'clearing', u'the', u'way', u'for', u'an', u'increase', u'in', u'polar', u'bear', u'hunting', u'.'], u'lemmas': [u'the', u'Humane', u'Society', u'of', u'the', u'United', u'States', u'``', u'what', u'you', u'can', u'do', u'to', u'protect', u'Polar', u'Bears', u"''", u'in', u'1994', u',', u'the', u'United', u'States', u'modify', u'the', u'Marine', u'mammal', u'Protection', u'Act', u',', u'allow', u'the', u'importation', u'of', u'sport-hunted', u'polar', u'bear', u'trophy', u'into', u'the', u'country', u'and', u'clear', u'the', u'way', u'for', u'a', u'increase', u'in', u'polar', u'bear', u'hunting', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'``', u'WP', u'PRP', u'MD', u'VB', u'TO', u'VB', u'NNP', u'NNPS', u"''", u'IN', u'CD', u',', u'DT', u'NNP', u'NNPS', u'VBD', u'DT', u'NNP', u'JJ', u'NNP', u'NNP', u',', u'VBG', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'NN', u'NNS', u'IN', u'DT', u'NN', u'CC', u'VBG', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[24072, 24075], [24076, 24082], [24083, 24090], [24091, 24093], [24094, 24097], [24098, 24104], [24105, 24111], [24112, 24113], [24113, 24117], [24118, 24121], [24122, 24125], [24126, 24128], [24129, 24131], [24132, 24139], [24140, 24145], [24146, 24151], [24151, 24152], [24153, 24155], [24156, 24160], [24160, 24161], [24162, 24165], [24166, 24172], [24173, 24179], [24180, 24188], [24189, 24192], [24193, 24199], [24200, 24206], [24207, 24217], [24218, 24221], [24221, 24222], [24223, 24231], [24232, 24235], [24236, 24247], [24248, 24250], [24251, 24263], [24264, 24269], [24270, 24274], [24275, 24283], [24284, 24288], [24289, 24292], [24293, 24300], [24301, 24304], [24305, 24313], [24314, 24317], [24318, 24321], [24322, 24325], [24326, 24328], [24329, 24337], [24338, 24340], [24341, 24346], [24347, 24351], [24352, 24359], [24359, 24360]]}) 
answer: set([u'arctic', u'live'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'polar', u'bear', u'.'])

Does a polar bear live in the Arctic?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = polar_bear
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a4.txt

No
_____________________________ test_yesno[param282] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156ed8c0>, (<src.tfidf.TF_IDF object at 0x1144af850>, set(['.', 'bear', 'polar'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156ed8c0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.23298348486423492, {u'tokens': [u'Polar', u'bears', u'still', u'have', u'vestigial', u'hibernation', u'induction', u'trigger', u'in', u'their', u'blood', u',', u'but', u'they', u'do', u'not', u'hibernate', u'in', u'the', u'winter', u'as', u'the', u'brown', u'bear', u'does', u'.'], u'lemmas': [u'Polar', u'bear', u'still', u'have', u'vestigial', u'hibernation', u'induction', u'trigger', u'in', u'they', u'blood', u',', u'but', u'they', u'do', u'not', u'hibernate', u'in', u'the', u'winter', u'as', u'the', u'brown', u'bear', u'do', u'.'], u'pos': [u'NNP', u'VBZ', u'RB', u'VB', u'JJ', u'NN', u'NN', u'NN', u'IN', u'PRP$', u'NN', u',', u'CC', u'PRP', u'VBP', u'RB', u'VB', u'IN', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'VBZ', u'.'], u'char_offsets': [[7153, 7158], [7159, 7164], [7165, 7170], [7171, 7175], [7176, 7185], [7186, 7197], [7198, 7207], [7208, 7215], [7216, 7218], [7219, 7224], [7225, 7230], [7230, 7231], [7232, 7235], [7236, 7240], [7241, 7243], [7244, 7247], [7248, 7257], [7258, 7260], [7261, 7264], [7265, 7271], [7272, 7274], [7275, 7278], [7279, 7284], [7285, 7289], [7290, 7294], [7294, 7295]]}) 
answer: set([u'arctic', u'live'])
candidate Sentence: (0.22285754978656769, {u'tokens': [u'About', u'60', u'%', u'of', u'the', u'world', u"'s", u'polar', u'bears', u'live', u'in', u'Canada', u',', u'where', u'conservation', u'laws', u'are', u'a', u'provincial', u'jurisdiction', u'.'], u'lemmas': [u'about', u'60', u'%', u'of', u'the', u'world', u"'s", u'polar', u'bear', u'live', u'in', u'Canada', u',', u'where', u'conservation', u'law', u'be', u'a', u'provincial', u'jurisdiction', u'.'], u'pos': [u'RB', u'CD', u'NN', u'IN', u'DT', u'NN', u'POS', u'JJ', u'NNS', u'VBP', u'IN', u'NNP', u',', u'WRB', u'NN', u'NNS', u'VBP', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[21818, 21823], [21824, 21826], [21826, 21827], [21828, 21830], [21831, 21834], [21835, 21840], [21840, 21842], [21843, 21848], [21849, 21854], [21855, 21859], [21860, 21862], [21863, 21869], [21869, 21870], [21872, 21877], [21878, 21890], [21891, 21895], [21896, 21899], [21900, 21901], [21902, 21912], [21913, 21925], [21925, 21926]]}) 
answer: set([u'arctic'])
candidate Sentence: (0.22230418026447296, {u'tokens': [u'however', u',', u'unlike', u'other', u'Arctic', u'mammals', u',', u'polar', u'bears', u'do', u'not', u'shed', u'their', u'coat', u'for', u'a', u'darker', u'shade', u'to', u'camouflage', u'themselves', u'in', u'the', u'summer', u'habitat', u'.'], u'lemmas': [u'however', u',', u'unlike', u'other', u'Arctic', u'mammal', u',', u'polar', u'bear', u'do', u'not', u'shed', u'they', u'coat', u'for', u'a', u'darker', u'shade', u'to', u'camouflage', u'themselves', u'in', u'the', u'summer', u'habitat', u'.'], u'pos': [u'RB', u',', u'IN', u'JJ', u'NNP', u'NNS', u',', u'JJ', u'NNS', u'VBP', u'RB', u'VB', u'PRP$', u'NN', u'IN', u'DT', u'JJR', u'NN', u'TO', u'NN', u'PRP', u'IN', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[3138, 3145], [3145, 3146], [3147, 3153], [3154, 3159], [3160, 3166], [3167, 3174], [3174, 3175], [3176, 3181], [3182, 3187], [3188, 3190], [3191, 3194], [3195, 3199], [3200, 3205], [3206, 3210], [3211, 3214], [3215, 3216], [3217, 3223], [3224, 3229], [3230, 3232], [3233, 3243], [3244, 3254], [3255, 3257], [3258, 3261], [3262, 3268], [3269, 3276], [3276, 3277]]}) 
answer: set([u'live'])
candidate Sentence: (0.19955053925514221, {u'tokens': [u'The', u'FWS', u'did', u'not', u'respond', u'to', u'the', u'petition', u',', u'despite', u'being', u'required', u'to', u'do', u'so', u'within', u'90', u'days', u'under', u'United', u'States', u'law', u'.'], u'lemmas': [u'the', u'fw', u'do', u'not', u'respond', u'to', u'the', u'petition', u',', u'despite', u'be', u'require', u'to', u'do', u'so', u'within', u'90', u'day', u'under', u'United', u'States', u'law', u'.'], u'pos': [u'DT', u'NN', u'VBD', u'RB', u'VB', u'TO', u'DT', u'NN', u',', u'IN', u'VBG', u'VBN', u'TO', u'VB', u'RB', u'IN', u'CD', u'NNS', u'IN', u'NNP', u'NNPS', u'NN', u'.'], u'char_offsets': [[25192, 25195], [25196, 25199], [25200, 25203], [25204, 25207], [25208, 25215], [25216, 25218], [25219, 25222], [25223, 25231], [25231, 25232], [25233, 25240], [25241, 25246], [25247, 25255], [25256, 25258], [25259, 25261], [25262, 25264], [25265, 25271], [25272, 25274], [25275, 25279], [25280, 25285], [25286, 25292], [25293, 25299], [25300, 25303], [25303, 25304]]}) 
answer: set([u'arctic', u'live'])
candidate Sentence: (0.18374226987361908, {u'tokens': [u'The', u'polar', u'bear', u'-LRB-', u'Ursus', u'maritimus', u'-RRB-', u'is', u'a', u'bear', u'native', u'to', u'the', u'Arctic', u'.'], u'lemmas': [u'the', u'polar', u'bear', u'-lrb-', u'Ursus', u'maritimus', u'-rrb-', u'be', u'a', u'bear', u'native', u'to', u'the', u'Arctic', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'-LRB-', u'NNP', u'NN', u'-RRB-', u'VBZ', u'DT', u'NN', u'JJ', u'TO', u'DT', u'NNP', u'.'], u'char_offsets': [[0, 3], [4, 9], [10, 14], [15, 16], [16, 21], [22, 31], [31, 32], [33, 35], [36, 37], [38, 42], [43, 49], [50, 52], [53, 56], [57, 63], [63, 64]]}) 
answer: set([u'live'])
candidate Sentence: (0.17950789630413055, {u'tokens': [u'They', u'live', u'off', u'of', u'their', u'fat', u'reserves', u'through', u'the', u'late', u'summer', u'and', u'early', u'fall', u'when', u'the', u'sea-ice', u'is', u'at', u'a', u'minimum', u'.'], u'lemmas': [u'they', u'live', u'off', u'of', u'they', u'fat', u'reserve', u'through', u'the', u'late', u'summer', u'and', u'early', u'fall', u'when', u'the', u'sea-ice', u'be', u'at', u'a', u'minimum', u'.'], u'pos': [u'PRP', u'VBP', u'IN', u'IN', u'PRP$', u'JJ', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'CC', u'JJ', u'NN', u'WRB', u'DT', u'NN', u'VBZ', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[12193, 12197], [12198, 12202], [12203, 12206], [12207, 12209], [12210, 12215], [12216, 12219], [12220, 12228], [12229, 12236], [12237, 12240], [12241, 12245], [12246, 12252], [12253, 12256], [12257, 12262], [12263, 12267], [12268, 12272], [12273, 12276], [12277, 12284], [12285, 12287], [12288, 12290], [12291, 12292], [12293, 12300], [12300, 12301]]}) 
answer: set([u'arctic'])
candidate Sentence: (0.17472845315933228, {u'tokens': [u'The', u'first', u'has', u'consistently', u'displayed', u'the', u'bears', u'as', u'thriving', u'near', u'penguins', u',', u'though', u'the', u'animals', u'naturally', u'live', u'in', u'opposite', u'hemispheres', u'.'], u'lemmas': [u'the', u'first', u'have', u'consistently', u'display', u'the', u'bear', u'as', u'thrive', u'near', u'penguin', u',', u'though', u'the', u'animal', u'naturally', u'live', u'in', u'opposite', u'hemisphere', u'.'], u'pos': [u'DT', u'JJ', u'VBZ', u'RB', u'VBN', u'DT', u'NNS', u'IN', u'VBG', u'IN', u'NNS', u',', u'IN', u'DT', u'NNS', u'RB', u'VBP', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[27304, 27307], [27308, 27313], [27314, 27317], [27318, 27330], [27331, 27340], [27341, 27344], [27345, 27350], [27351, 27353], [27354, 27362], [27363, 27367], [27368, 27376], [27376, 27377], [27378, 27384], [27385, 27388], [27389, 27396], [27397, 27406], [27407, 27411], [27412, 27414], [27415, 27423], [27424, 27435], [27435, 27436]]}) 
answer: set([u'arctic'])
candidate Sentence: (0.1435924768447876, {u'tokens': [u',', u'Most', u'animals', u'can', u'easily', u'outrun', u'a', u'polar', u'bear', u'on', u'the', u'open', u'land', u'or', u'in', u'the', u'open', u'water', u',', u'and', u'polar', u'bears', u'overheat', u'quickly', u':', u'thus', u'the', u'polar', u'bear', u'subsists', u'almost', u'entirely', u'on', u'live', u'seals', u'and', u'walrus', u'calves', u'taken', u'at', u'the', u'edge', u'of', u'sea-ice', u'in', u'the', u'winter', u'and', u'spring', u',', u'or', u'on', u'the', u'carcasses', u'of', u'dead', u'adult', u'walruses', u'or', u'whales', u'.'], u'lemmas': [u',', u'most', u'animal', u'can', u'easily', u'outrun', u'a', u'polar', u'bear', u'on', u'the', u'open', u'land', u'or', u'in', u'the', u'open', u'water', u',', u'and', u'polar', u'bear', u'overheat', u'quickly', u':', u'thus', u'the', u'polar', u'bear', u'subsist', u'almost', u'entirely', u'on', u'live', u'seal', u'and', u'walrus', u'calf', u'take', u'at', u'the', u'edge', u'of', u'sea-ice', u'in', u'the', u'winter', u'and', u'spring', u',', u'or', u'on', u'the', u'carcass', u'of', u'dead', u'adult', u'walrus', u'or', u'whale', u'.'], u'pos': [u',', u'JJS', u'NNS', u'MD', u'RB', u'VB', u'DT', u'JJ', u'NN', u'IN', u'DT', u'JJ', u'NN', u'CC', u'IN', u'DT', u'JJ', u'NN', u',', u'CC', u'JJ', u'NNS', u'VBP', u'RB', u':', u'RB', u'DT', u'JJ', u'NN', u'NNS', u'RB', u'RB', u'IN', u'JJ', u'NNS', u'CC', u'NN', u'NNS', u'VBN', u'IN', u'DT', u'NN', u'IN', u'NN', u'IN', u'DT', u'NN', u'CC', u'NN', u',', u'CC', u'IN', u'DT', u'NNS', u'IN', u'JJ', u'JJ', u'NNS', u'CC', u'NNS', u'.'], u'char_offsets': [[11885, 11886], [11890, 11894], [11895, 11902], [11903, 11906], [11907, 11913], [11914, 11920], [11921, 11922], [11923, 11928], [11929, 11933], [11934, 11936], [11937, 11940], [11941, 11945], [11946, 11950], [11951, 11953], [11954, 11956], [11957, 11960], [11961, 11965], [11966, 11971], [11971, 11972], [11973, 11976], [11977, 11982], [11983, 11988], [11989, 11997], [11998, 12005], [12005, 12006], [12007, 12011], [12012, 12015], [12016, 12021], [12022, 12026], [12027, 12035], [12036, 12042], [12043, 12051], [12052, 12054], [12055, 12059], [12060, 12065], [12066, 12069], [12070, 12076], [12077, 12083], [12084, 12089], [12090, 12092], [12093, 12096], [12097, 12101], [12102, 12104], [12105, 12112], [12113, 12115], [12116, 12119], [12120, 12126], [12127, 12130], [12131, 12137], [12137, 12138], [12139, 12141], [12142, 12144], [12145, 12148], [12149, 12158], [12159, 12161], [12162, 12166], [12167, 12172], [12173, 12181], [12182, 12184], [12185, 12191], [12191, 12192]]}) 
answer: set([u'arctic'])
candidate Sentence: (0.14167973399162292, {u'tokens': [u'The', u'destruction', u'of', u'its', u'habitat', u'on', u'the', u'Arctic', u'ice', u'threatens', u'the', u'bear', u"'s", u'survival', u'as', u'a', u'species', u'.'], u'lemmas': [u'the', u'destruction', u'of', u'its', u'habitat', u'on', u'the', u'Arctic', u'ice', u'threaten', u'the', u'bear', u"'s", u'survival', u'as', u'a', u'species', u'.'], u'pos': [u'DT', u'NN', u'IN', u'PRP$', u'NN', u'IN', u'DT', u'NNP', u'NN', u'VBZ', u'DT', u'NN', u'POS', u'NN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[9095, 9098], [9099, 9110], [9111, 9113], [9114, 9117], [9118, 9125], [9126, 9128], [9129, 9132], [9133, 9139], [9140, 9143], [9144, 9153], [9154, 9157], [9158, 9162], [9162, 9164], [9165, 9173], [9174, 9176], [9177, 9178], [9179, 9186], [9186, 9187]]}) 
answer: set([u'live'])
candidate Sentence: (0.13264837861061096, {u'tokens': [u'The', u'Humane', u'Society', u'of', u'the', u'United', u'States', u'``', u'What', u'You', u'Can', u'Do', u'to', u'Protect', u'Polar', u'Bears', u"''", u'In', u'1994', u',', u'the', u'United', u'States', u'modified', u'the', u'Marine', u'Mammal', u'Protection', u'Act', u',', u'allowing', u'the', u'importation', u'of', u'sport-hunted', u'polar', u'bear', u'trophies', u'into', u'the', u'country', u'and', u'clearing', u'the', u'way', u'for', u'an', u'increase', u'in', u'polar', u'bear', u'hunting', u'.'], u'lemmas': [u'the', u'Humane', u'Society', u'of', u'the', u'United', u'States', u'``', u'what', u'you', u'can', u'do', u'to', u'protect', u'Polar', u'Bears', u"''", u'in', u'1994', u',', u'the', u'United', u'States', u'modify', u'the', u'Marine', u'mammal', u'Protection', u'Act', u',', u'allow', u'the', u'importation', u'of', u'sport-hunted', u'polar', u'bear', u'trophy', u'into', u'the', u'country', u'and', u'clear', u'the', u'way', u'for', u'a', u'increase', u'in', u'polar', u'bear', u'hunting', u'.'], u'pos': [u'DT', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'``', u'WP', u'PRP', u'MD', u'VB', u'TO', u'VB', u'NNP', u'NNPS', u"''", u'IN', u'CD', u',', u'DT', u'NNP', u'NNPS', u'VBD', u'DT', u'NNP', u'JJ', u'NNP', u'NNP', u',', u'VBG', u'DT', u'NN', u'IN', u'JJ', u'JJ', u'NN', u'NNS', u'IN', u'DT', u'NN', u'CC', u'VBG', u'DT', u'NN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[24072, 24075], [24076, 24082], [24083, 24090], [24091, 24093], [24094, 24097], [24098, 24104], [24105, 24111], [24112, 24113], [24113, 24117], [24118, 24121], [24122, 24125], [24126, 24128], [24129, 24131], [24132, 24139], [24140, 24145], [24146, 24151], [24151, 24152], [24153, 24155], [24156, 24160], [24160, 24161], [24162, 24165], [24166, 24172], [24173, 24179], [24180, 24188], [24189, 24192], [24193, 24199], [24200, 24206], [24207, 24217], [24218, 24221], [24221, 24222], [24223, 24231], [24232, 24235], [24236, 24247], [24248, 24250], [24251, 24263], [24264, 24269], [24270, 24274], [24275, 24283], [24284, 24288], [24289, 24292], [24293, 24300], [24301, 24304], [24305, 24313], [24314, 24317], [24318, 24321], [24322, 24325], [24326, 24328], [24329, 24337], [24338, 24340], [24341, 24346], [24347, 24351], [24352, 24359], [24359, 24360]]}) 
answer: set([u'arctic', u'live'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'polar', u'bear', u'.'])

Does a polar bear live in the Arctic?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = polar_bear
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a4.txt

No
_____________________________ test_yesno[param291] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156edb48>, (<src.tfidf.TF_IDF object at 0x1107879d0>, set(['.', 'qatar'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x1156edb48>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.71029120683670044, {u'tokens': [u'Women', u'can', u'legally', u'drive', u'in', u'Qatar', u',', u'whereas', u'they', u'may', u'not', u'in', u'Saudi', u'Arabia', u'.'], u'lemmas': [u'woman', u'can', u'legally', u'drive', u'in', u'Qatar', u',', u'whereas', u'they', u'may', u'not', u'in', u'Saudi', u'Arabia', u'.'], u'pos': [u'NNS', u'MD', u'RB', u'VB', u'IN', u'NNP', u',', u'IN', u'PRP', u'MD', u'RB', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[12821, 12826], [12827, 12830], [12831, 12838], [12839, 12844], [12845, 12847], [12848, 12853], [12853, 12854], [12855, 12862], [12863, 12867], [12868, 12871], [12872, 12875], [12876, 12878], [12879, 12884], [12885, 12891], [12891, 12892]]}) 
answer: set([])
candidate Sentence: (0.23690588772296906, {u'tokens': [u'Also', u',', u'women', u'can', u'dress', u'mostly', u'as', u'they', u'please', u'in', u'public', u'-LRB-', u'although', u'in', u'practice', u'local', u'Qatari', u'women', u'generally', u'don', u'the', u'black', u'abaya', u'-RRB-', u'.'], u'lemmas': [u'also', u',', u'woman', u'can', u'dress', u'mostly', u'as', u'they', u'please', u'in', u'public', u'-lrb-', u'although', u'in', u'practice', u'local', u'qatari', u'woman', u'generally', u'don', u'the', u'black', u'abaya', u'-rrb-', u'.'], u'pos': [u'RB', u',', u'NNS', u'MD', u'VB', u'RB', u'IN', u'PRP', u'VB', u'IN', u'JJ', u'-LRB-', u'IN', u'IN', u'NN', u'JJ', u'JJ', u'NNS', u'RB', u'VBP', u'DT', u'JJ', u'NN', u'-RRB-', u'.'], u'char_offsets': [[13271, 13275], [13275, 13276], [13277, 13282], [13283, 13286], [13287, 13292], [13293, 13299], [13300, 13302], [13303, 13307], [13308, 13314], [13315, 13317], [13318, 13324], [13325, 13326], [13326, 13334], [13335, 13337], [13338, 13346], [13347, 13352], [13353, 13359], [13360, 13365], [13366, 13375], [13376, 13379], [13380, 13383], [13384, 13389], [13390, 13395], [13395, 13396], [13396, 13397]]}) 
answer: set([u'drive', u'legal'])
candidate Sentence: (0.14202842116355896, {u'tokens': [u'Under', u'his', u'rule', u',', u'Qatar', u'became', u'the', u'first', u'Arab', u'country', u'in', u'the', u'Persian', u'Gulf', u'where', u'women', u'gained', u'the', u'right', u'to', u'vote', u'The', u'role', u'of', u'Saudi', u'women', u'as', u'well', u'as', u'holding', u'senior', u'positions', u'in', u'government', u'.'], u'lemmas': [u'under', u'he', u'rule', u',', u'Qatar', u'become', u'the', u'first', u'Arab', u'country', u'in', u'the', u'Persian', u'Gulf', u'where', u'woman', u'gain', u'the', u'right', u'to', u'vote', u'the', u'role', u'of', u'saudi', u'woman', u'as', u'well', u'as', u'hold', u'senior', u'position', u'in', u'government', u'.'], u'pos': [u'IN', u'PRP$', u'NN', u',', u'NNP', u'VBD', u'DT', u'JJ', u'NNP', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'WRB', u'NNS', u'VBD', u'DT', u'NN', u'TO', u'VB', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'RB', u'RB', u'IN', u'VBG', u'JJ', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[13083, 13088], [13089, 13092], [13093, 13097], [13097, 13098], [13099, 13104], [13105, 13111], [13112, 13115], [13116, 13121], [13122, 13126], [13127, 13134], [13135, 13137], [13138, 13141], [13142, 13149], [13150, 13154], [13155, 13160], [13161, 13166], [13167, 13173], [13174, 13177], [13178, 13183], [13184, 13186], [13187, 13191], [13194, 13197], [13198, 13202], [13203, 13205], [13206, 13211], [13212, 13217], [13219, 13221], [13222, 13226], [13227, 13229], [13230, 13237], [13238, 13244], [13245, 13254], [13255, 13257], [13258, 13268], [13268, 13269]]}) 
answer: set([u'drive', u'legal'])
candidate Sentence: (0.11663579195737839, {u'tokens': [u'She', u'chairs', u'the', u'Qatar', u'Foundation', u',', u'sits', u'on', u'the', u'board', u'of', u'Qatar', u"'s", u'Supreme', u'Education', u'Council', u',', u'and', u'is', u'a', u'major', u'driving', u'force', u'behind', u'the', u'importation', u'of', u'western', u'expertise', u'into', u'the', u'education', u'system', u',', u'particularly', u'at', u'the', u'college', u'level', u'.'], u'lemmas': [u'she', u'chair', u'the', u'Qatar', u'Foundation', u',', u'sit', u'on', u'the', u'board', u'of', u'Qatar', u"'s", u'Supreme', u'Education', u'Council', u',', u'and', u'be', u'a', u'major', u'drive', u'force', u'behind', u'the', u'importation', u'of', u'western', u'expertise', u'into', u'the', u'education', u'system', u',', u'particularly', u'at', u'the', u'college', u'level', u'.'], u'pos': [u'PRP', u'VBZ', u'DT', u'NNP', u'NNP', u',', u'VBZ', u'IN', u'DT', u'NN', u'IN', u'NNP', u'POS', u'NNP', u'NNP', u'NNP', u',', u'CC', u'VBZ', u'DT', u'JJ', u'VBG', u'NN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'NN', u'IN', u'DT', u'NN', u'NN', u',', u'RB', u'IN', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[15491, 15494], [15495, 15501], [15502, 15505], [15506, 15511], [15512, 15522], [15522, 15523], [15524, 15528], [15529, 15531], [15532, 15535], [15536, 15541], [15542, 15544], [15545, 15550], [15550, 15552], [15553, 15560], [15561, 15570], [15571, 15578], [15578, 15579], [15580, 15583], [15584, 15586], [15587, 15588], [15589, 15594], [15595, 15602], [15603, 15608], [15609, 15615], [15616, 15619], [15620, 15631], [15632, 15634], [15635, 15642], [15643, 15652], [15653, 15657], [15658, 15661], [15662, 15671], [15672, 15678], [15678, 15679], [15680, 15692], [15693, 15695], [15696, 15699], [15700, 15707], [15708, 15713], [15713, 15714]]}) 
answer: set([u'woman', u'legal'])
candidate Sentence: (0.071154452860355377, {u'tokens': [u'According', u'to', u'the', u'US', u'State', u'Department', u"'s", u'Trafficking', u'in', u'Persons', u'Report', u',', u'men', u'and', u'women', u'who', u'are', u'lured', u'into', u'Qatar', u'by', u'promises', u'of', u'high', u'wages', u'are', u'often', u'forced', u'into', u'underpaid', u'labor', u'.'], u'lemmas': [u'accord', u'to', u'the', u'US', u'State', u'Department', u"'s", u'trafficking', u'in', u'Persons', u'Report', u',', u'man', u'and', u'woman', u'who', u'be', u'lure', u'into', u'Qatar', u'by', u'promise', u'of', u'high', u'wages', u'be', u'often', u'force', u'into', u'underpaid', u'labor', u'.'], u'pos': [u'VBG', u'TO', u'DT', u'NNP', u'NNP', u'NNP', u'POS', u'NN', u'IN', u'NNPS', u'NNP', u',', u'NNS', u'CC', u'NNS', u'WP', u'VBP', u'VBN', u'IN', u'NNP', u'IN', u'NNS', u'IN', u'JJ', u'NNS', u'VBP', u'RB', u'VBN', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[16742, 16751], [16752, 16754], [16755, 16758], [16759, 16761], [16762, 16767], [16768, 16778], [16778, 16780], [16781, 16792], [16793, 16795], [16796, 16803], [16804, 16810], [16810, 16811], [16812, 16815], [16816, 16819], [16820, 16825], [16826, 16829], [16830, 16833], [16834, 16839], [16840, 16844], [16845, 16850], [16851, 16853], [16854, 16862], [16863, 16865], [16866, 16870], [16871, 16876], [16877, 16880], [16881, 16886], [16887, 16893], [16894, 16898], [16899, 16908], [16909, 16914], [16914, 16915]]}) 
answer: set([u'drive', u'legal'])
candidate Sentence: (0.070059187710285187, {u'tokens': [u'People', u'can', u'call', u'to', u'Qatar', u'using', u'their', u'submarine', u'cable', u',', u'satellite', u'or', u'using', u'VoIP', u'-LRB-', u'Voice', u'over', u'Internet', u'Protocol', u'-RRB-', u';', u'however', u',', u'Qtel', u'has', u'interfered', u'with', u'VoIP', u'systems', u'in', u'the', u'past', u',', u'and', u'Skype', u"'s", u'website', u'has', u'been', u'blocked', u'before', u'.'], u'lemmas': [u'people', u'can', u'call', u'to', u'Qatar', u'use', u'they', u'submarine', u'cable', u',', u'satellite', u'or', u'use', u'voip', u'-lrb-', u'Voice', u'over', u'Internet', u'Protocol', u'-rrb-', u';', u'however', u',', u'Qtel', u'have', u'interfere', u'with', u'voip', u'system', u'in', u'the', u'past', u',', u'and', u'skype', u"'s", u'website', u'have', u'be', u'block', u'before', u'.'], u'pos': [u'NNS', u'MD', u'VB', u'TO', u'NNP', u'VBG', u'PRP$', u'NN', u'NN', u',', u'NN', u'CC', u'VBG', u'NN', u'-LRB-', u'NNP', u'IN', u'NNP', u'NNP', u'-RRB-', u':', u'RB', u',', u'NNP', u'VBZ', u'VBN', u'IN', u'NN', u'NNS', u'IN', u'DT', u'NN', u',', u'CC', u'VB', u'POS', u'NN', u'VBZ', u'VBN', u'VBN', u'IN', u'.'], u'char_offsets': [[15984, 15990], [15991, 15994], [15995, 15999], [16000, 16002], [16003, 16008], [16009, 16014], [16015, 16020], [16021, 16030], [16031, 16036], [16036, 16037], [16038, 16047], [16048, 16050], [16051, 16056], [16057, 16061], [16062, 16063], [16063, 16068], [16069, 16073], [16074, 16082], [16083, 16091], [16091, 16092], [16092, 16093], [16094, 16101], [16101, 16102], [16103, 16107], [16108, 16111], [16112, 16122], [16123, 16127], [16128, 16132], [16133, 16140], [16141, 16143], [16144, 16147], [16148, 16152], [16152, 16153], [16154, 16157], [16158, 16163], [16163, 16165], [16166, 16173], [16174, 16177], [16178, 16182], [16183, 16190], [16191, 16197], [16197, 16198]]}) 
answer: set([u'woman', u'drive', u'legal'])
candidate Sentence: (0.063762746751308441, {u'tokens': [u'The', u'q', u'and', u'the', u't', u'have', u'no', u'direct', u'counterparts', u',', u'but', u'are', u'closest', u'to', u'the', u'unaspirated', u'allophones', u'of', u'English', u'k', u'and', u't.', u'However', u',', u'since', u'these', u'allophones', u'can', u'not', u'occur', u'in', u'these', u'positions', u'in', u'English', u',', u'in', u'this', u'context', u'they', u'will', u'sound', u'more', u'like', u'English', u'g', u'and', u'd', u'.'], u'lemmas': [u'the', u'q', u'and', u'the', u't', u'have', u'no', u'direct', u'counterpart', u',', u'but', u'be', u'closest', u'to', u'the', u'unaspirated', u'allophone', u'of', u'English', u'k', u'and', u't.', u'however', u',', u'since', u'these', u'allophone', u'can', u'not', u'occur', u'in', u'these', u'position', u'in', u'English', u',', u'in', u'this', u'context', u'they', u'will', u'sound', u'more', u'like', u'English', u'g', u'and', u'd', u'.'], u'pos': [u'DT', u'NN', u'CC', u'DT', u'NN', u'VBP', u'DT', u'JJ', u'NNS', u',', u'CC', u'VBP', u'JJS', u'TO', u'DT', u'JJ', u'NNS', u'IN', u'NNP', u'NN', u'CC', u'NN', u'RB', u',', u'IN', u'DT', u'NNS', u'MD', u'RB', u'VB', u'IN', u'DT', u'NNS', u'IN', u'NNP', u',', u'IN', u'DT', u'NN', u'PRP', u'MD', u'VB', u'JJR', u'IN', u'NNP', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[204, 207], [208, 209], [210, 213], [214, 217], [218, 219], [220, 224], [225, 227], [228, 234], [235, 247], [247, 248], [249, 252], [253, 256], [257, 264], [265, 267], [268, 271], [272, 283], [284, 294], [295, 297], [298, 305], [306, 307], [308, 311], [312, 314], [315, 322], [322, 323], [324, 329], [330, 335], [336, 346], [347, 350], [350, 353], [354, 359], [360, 362], [363, 368], [369, 378], [379, 381], [382, 389], [389, 390], [391, 393], [394, 398], [399, 406], [407, 411], [412, 416], [417, 422], [423, 427], [428, 432], [433, 440], [441, 442], [443, 446], [447, 448], [448, 449]]}) 
answer: set([u'woman', u'drive', u'legal'])
candidate Sentence: (0.061253093183040619, {u'tokens': [u'Under', u'Emir', u'Hamad', u',', u'Qatar', u'has', u'experienced', u'a', u'notable', u'amount', u'of', u'sociopolitical', u'liberalization', u',', u'including', u'the', u'enfranchisement', u'of', u'women', u',', u'a', u'new', u'constitution', u',', u'and', u'the', u'launch', u'of', u'Al', u'Jazeera', u',', u'a', u'leading', u'English', u'and', u'Arabic', u'news', u'source', u',', u'which', u'operates', u'a', u'website', u'and', u'satellite', u'television', u'news', u'channel', u'.'], u'lemmas': [u'under', u'Emir', u'Hamad', u',', u'Qatar', u'have', u'experience', u'a', u'notable', u'amount', u'of', u'sociopolitical', u'liberalization', u',', u'include', u'the', u'enfranchisement', u'of', u'woman', u',', u'a', u'new', u'constitution', u',', u'and', u'the', u'launch', u'of', u'Al', u'Jazeera', u',', u'a', u'lead', u'english', u'and', u'arabic', u'news', u'source', u',', u'which', u'operate', u'a', u'website', u'and', u'satellite', u'television', u'news', u'channel', u'.'], u'pos': [u'IN', u'NNP', u'NNP', u',', u'NNP', u'VBZ', u'VBN', u'DT', u'JJ', u'NN', u'IN', u'JJ', u'NN', u',', u'VBG', u'DT', u'NN', u'IN', u'NNS', u',', u'DT', u'JJ', u'NN', u',', u'CC', u'DT', u'NN', u'IN', u'NNP', u'NNP', u',', u'DT', u'VBG', u'JJ', u'CC', u'JJ', u'NN', u'NN', u',', u'WDT', u'VBZ', u'DT', u'NN', u'CC', u'NN', u'NN', u'NN', u'NN', u'.'], u'char_offsets': [[4765, 4770], [4771, 4775], [4776, 4781], [4781, 4782], [4783, 4788], [4789, 4792], [4793, 4804], [4805, 4806], [4807, 4814], [4815, 4821], [4822, 4824], [4825, 4839], [4840, 4854], [4854, 4855], [4856, 4865], [4866, 4869], [4870, 4885], [4886, 4888], [4889, 4894], [4894, 4895], [4896, 4897], [4898, 4901], [4902, 4914], [4914, 4915], [4916, 4919], [4920, 4923], [4924, 4930], [4931, 4933], [4934, 4936], [4937, 4944], [4944, 4945], [4946, 4947], [4948, 4955], [4956, 4963], [4964, 4967], [4968, 4974], [4975, 4979], [4980, 4986], [4986, 4987], [4988, 4993], [4994, 5002], [5003, 5004], [5005, 5012], [5013, 5016], [5017, 5026], [5027, 5037], [5038, 5042], [5043, 5050], [5050, 5051]]}) 
answer: set([u'drive', u'legal'])
candidate Sentence: (0.015858612954616547, {u'tokens': [u'Qatar', u'University', u'was', u'founded', u'in', u'1973', u'.'], u'lemmas': [u'Qatar', u'University', u'be', u'found', u'in', u'1973', u'.'], u'pos': [u'NNP', u'NNP', u'VBD', u'VBN', u'IN', u'CD', u'.'], u'char_offsets': [[14240, 14245], [14246, 14256], [14257, 14260], [14261, 14268], [14269, 14271], [14272, 14276], [14276, 14277]]}) 
answer: set([u'woman', u'drive', u'legal'])
candidate Sentence: (0.013289024122059345, {u'tokens': [u'In', u'2004', u',', u'Qatar', u'established', u'the', u'Qatar', u'Science', u'&', u'Technology', u'Park', u'at', u'Education', u'City', u'to', u'link', u'those', u'universities', u'with', u'industry', u'.'], u'lemmas': [u'in', u'2004', u',', u'Qatar', u'establish', u'the', u'Qatar', u'Science', u'&', u'Technology', u'Park', u'at', u'Education', u'City', u'to', u'link', u'those', u'university', u'with', u'industry', u'.'], u'pos': [u'IN', u'CD', u',', u'NNP', u'VBD', u'DT', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'TO', u'VB', u'DT', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[14746, 14748], [14749, 14753], [14753, 14754], [14755, 14760], [14761, 14772], [14773, 14776], [14777, 14782], [14783, 14790], [14791, 14792], [14793, 14803], [14804, 14808], [14809, 14811], [14812, 14821], [14822, 14826], [14827, 14829], [14830, 14834], [14835, 14840], [14841, 14853], [14854, 14858], [14859, 14867], [14867, 14868]]}) 
answer: set([u'woman', u'drive', u'legal'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'qatar', u'.'])

Can women legally drive in Qatar?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Qatar
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a3.txt

No
_____________________________ test_yesno[param292] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156edb90>, (<src.tfidf.TF_IDF object at 0x1107879d0>, set(['.', 'qatar'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156edb90>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.71029120683670044, {u'tokens': [u'Women', u'can', u'legally', u'drive', u'in', u'Qatar', u',', u'whereas', u'they', u'may', u'not', u'in', u'Saudi', u'Arabia', u'.'], u'lemmas': [u'woman', u'can', u'legally', u'drive', u'in', u'Qatar', u',', u'whereas', u'they', u'may', u'not', u'in', u'Saudi', u'Arabia', u'.'], u'pos': [u'NNS', u'MD', u'RB', u'VB', u'IN', u'NNP', u',', u'IN', u'PRP', u'MD', u'RB', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[12821, 12826], [12827, 12830], [12831, 12838], [12839, 12844], [12845, 12847], [12848, 12853], [12853, 12854], [12855, 12862], [12863, 12867], [12868, 12871], [12872, 12875], [12876, 12878], [12879, 12884], [12885, 12891], [12891, 12892]]}) 
answer: set([])
candidate Sentence: (0.23690588772296906, {u'tokens': [u'Also', u',', u'women', u'can', u'dress', u'mostly', u'as', u'they', u'please', u'in', u'public', u'-LRB-', u'although', u'in', u'practice', u'local', u'Qatari', u'women', u'generally', u'don', u'the', u'black', u'abaya', u'-RRB-', u'.'], u'lemmas': [u'also', u',', u'woman', u'can', u'dress', u'mostly', u'as', u'they', u'please', u'in', u'public', u'-lrb-', u'although', u'in', u'practice', u'local', u'qatari', u'woman', u'generally', u'don', u'the', u'black', u'abaya', u'-rrb-', u'.'], u'pos': [u'RB', u',', u'NNS', u'MD', u'VB', u'RB', u'IN', u'PRP', u'VB', u'IN', u'JJ', u'-LRB-', u'IN', u'IN', u'NN', u'JJ', u'JJ', u'NNS', u'RB', u'VBP', u'DT', u'JJ', u'NN', u'-RRB-', u'.'], u'char_offsets': [[13271, 13275], [13275, 13276], [13277, 13282], [13283, 13286], [13287, 13292], [13293, 13299], [13300, 13302], [13303, 13307], [13308, 13314], [13315, 13317], [13318, 13324], [13325, 13326], [13326, 13334], [13335, 13337], [13338, 13346], [13347, 13352], [13353, 13359], [13360, 13365], [13366, 13375], [13376, 13379], [13380, 13383], [13384, 13389], [13390, 13395], [13395, 13396], [13396, 13397]]}) 
answer: set([u'drive', u'legal'])
candidate Sentence: (0.14202842116355896, {u'tokens': [u'Under', u'his', u'rule', u',', u'Qatar', u'became', u'the', u'first', u'Arab', u'country', u'in', u'the', u'Persian', u'Gulf', u'where', u'women', u'gained', u'the', u'right', u'to', u'vote', u'The', u'role', u'of', u'Saudi', u'women', u'as', u'well', u'as', u'holding', u'senior', u'positions', u'in', u'government', u'.'], u'lemmas': [u'under', u'he', u'rule', u',', u'Qatar', u'become', u'the', u'first', u'Arab', u'country', u'in', u'the', u'Persian', u'Gulf', u'where', u'woman', u'gain', u'the', u'right', u'to', u'vote', u'the', u'role', u'of', u'saudi', u'woman', u'as', u'well', u'as', u'hold', u'senior', u'position', u'in', u'government', u'.'], u'pos': [u'IN', u'PRP$', u'NN', u',', u'NNP', u'VBD', u'DT', u'JJ', u'NNP', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'WRB', u'NNS', u'VBD', u'DT', u'NN', u'TO', u'VB', u'DT', u'NN', u'IN', u'JJ', u'NNS', u'RB', u'RB', u'IN', u'VBG', u'JJ', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[13083, 13088], [13089, 13092], [13093, 13097], [13097, 13098], [13099, 13104], [13105, 13111], [13112, 13115], [13116, 13121], [13122, 13126], [13127, 13134], [13135, 13137], [13138, 13141], [13142, 13149], [13150, 13154], [13155, 13160], [13161, 13166], [13167, 13173], [13174, 13177], [13178, 13183], [13184, 13186], [13187, 13191], [13194, 13197], [13198, 13202], [13203, 13205], [13206, 13211], [13212, 13217], [13219, 13221], [13222, 13226], [13227, 13229], [13230, 13237], [13238, 13244], [13245, 13254], [13255, 13257], [13258, 13268], [13268, 13269]]}) 
answer: set([u'drive', u'legal'])
candidate Sentence: (0.11663579195737839, {u'tokens': [u'She', u'chairs', u'the', u'Qatar', u'Foundation', u',', u'sits', u'on', u'the', u'board', u'of', u'Qatar', u"'s", u'Supreme', u'Education', u'Council', u',', u'and', u'is', u'a', u'major', u'driving', u'force', u'behind', u'the', u'importation', u'of', u'western', u'expertise', u'into', u'the', u'education', u'system', u',', u'particularly', u'at', u'the', u'college', u'level', u'.'], u'lemmas': [u'she', u'chair', u'the', u'Qatar', u'Foundation', u',', u'sit', u'on', u'the', u'board', u'of', u'Qatar', u"'s", u'Supreme', u'Education', u'Council', u',', u'and', u'be', u'a', u'major', u'drive', u'force', u'behind', u'the', u'importation', u'of', u'western', u'expertise', u'into', u'the', u'education', u'system', u',', u'particularly', u'at', u'the', u'college', u'level', u'.'], u'pos': [u'PRP', u'VBZ', u'DT', u'NNP', u'NNP', u',', u'VBZ', u'IN', u'DT', u'NN', u'IN', u'NNP', u'POS', u'NNP', u'NNP', u'NNP', u',', u'CC', u'VBZ', u'DT', u'JJ', u'VBG', u'NN', u'IN', u'DT', u'NN', u'IN', u'JJ', u'NN', u'IN', u'DT', u'NN', u'NN', u',', u'RB', u'IN', u'DT', u'NN', u'NN', u'.'], u'char_offsets': [[15491, 15494], [15495, 15501], [15502, 15505], [15506, 15511], [15512, 15522], [15522, 15523], [15524, 15528], [15529, 15531], [15532, 15535], [15536, 15541], [15542, 15544], [15545, 15550], [15550, 15552], [15553, 15560], [15561, 15570], [15571, 15578], [15578, 15579], [15580, 15583], [15584, 15586], [15587, 15588], [15589, 15594], [15595, 15602], [15603, 15608], [15609, 15615], [15616, 15619], [15620, 15631], [15632, 15634], [15635, 15642], [15643, 15652], [15653, 15657], [15658, 15661], [15662, 15671], [15672, 15678], [15678, 15679], [15680, 15692], [15693, 15695], [15696, 15699], [15700, 15707], [15708, 15713], [15713, 15714]]}) 
answer: set([u'woman', u'legal'])
candidate Sentence: (0.071154452860355377, {u'tokens': [u'According', u'to', u'the', u'US', u'State', u'Department', u"'s", u'Trafficking', u'in', u'Persons', u'Report', u',', u'men', u'and', u'women', u'who', u'are', u'lured', u'into', u'Qatar', u'by', u'promises', u'of', u'high', u'wages', u'are', u'often', u'forced', u'into', u'underpaid', u'labor', u'.'], u'lemmas': [u'accord', u'to', u'the', u'US', u'State', u'Department', u"'s", u'trafficking', u'in', u'Persons', u'Report', u',', u'man', u'and', u'woman', u'who', u'be', u'lure', u'into', u'Qatar', u'by', u'promise', u'of', u'high', u'wages', u'be', u'often', u'force', u'into', u'underpaid', u'labor', u'.'], u'pos': [u'VBG', u'TO', u'DT', u'NNP', u'NNP', u'NNP', u'POS', u'NN', u'IN', u'NNPS', u'NNP', u',', u'NNS', u'CC', u'NNS', u'WP', u'VBP', u'VBN', u'IN', u'NNP', u'IN', u'NNS', u'IN', u'JJ', u'NNS', u'VBP', u'RB', u'VBN', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[16742, 16751], [16752, 16754], [16755, 16758], [16759, 16761], [16762, 16767], [16768, 16778], [16778, 16780], [16781, 16792], [16793, 16795], [16796, 16803], [16804, 16810], [16810, 16811], [16812, 16815], [16816, 16819], [16820, 16825], [16826, 16829], [16830, 16833], [16834, 16839], [16840, 16844], [16845, 16850], [16851, 16853], [16854, 16862], [16863, 16865], [16866, 16870], [16871, 16876], [16877, 16880], [16881, 16886], [16887, 16893], [16894, 16898], [16899, 16908], [16909, 16914], [16914, 16915]]}) 
answer: set([u'drive', u'legal'])
candidate Sentence: (0.070059187710285187, {u'tokens': [u'People', u'can', u'call', u'to', u'Qatar', u'using', u'their', u'submarine', u'cable', u',', u'satellite', u'or', u'using', u'VoIP', u'-LRB-', u'Voice', u'over', u'Internet', u'Protocol', u'-RRB-', u';', u'however', u',', u'Qtel', u'has', u'interfered', u'with', u'VoIP', u'systems', u'in', u'the', u'past', u',', u'and', u'Skype', u"'s", u'website', u'has', u'been', u'blocked', u'before', u'.'], u'lemmas': [u'people', u'can', u'call', u'to', u'Qatar', u'use', u'they', u'submarine', u'cable', u',', u'satellite', u'or', u'use', u'voip', u'-lrb-', u'Voice', u'over', u'Internet', u'Protocol', u'-rrb-', u';', u'however', u',', u'Qtel', u'have', u'interfere', u'with', u'voip', u'system', u'in', u'the', u'past', u',', u'and', u'skype', u"'s", u'website', u'have', u'be', u'block', u'before', u'.'], u'pos': [u'NNS', u'MD', u'VB', u'TO', u'NNP', u'VBG', u'PRP$', u'NN', u'NN', u',', u'NN', u'CC', u'VBG', u'NN', u'-LRB-', u'NNP', u'IN', u'NNP', u'NNP', u'-RRB-', u':', u'RB', u',', u'NNP', u'VBZ', u'VBN', u'IN', u'NN', u'NNS', u'IN', u'DT', u'NN', u',', u'CC', u'VB', u'POS', u'NN', u'VBZ', u'VBN', u'VBN', u'IN', u'.'], u'char_offsets': [[15984, 15990], [15991, 15994], [15995, 15999], [16000, 16002], [16003, 16008], [16009, 16014], [16015, 16020], [16021, 16030], [16031, 16036], [16036, 16037], [16038, 16047], [16048, 16050], [16051, 16056], [16057, 16061], [16062, 16063], [16063, 16068], [16069, 16073], [16074, 16082], [16083, 16091], [16091, 16092], [16092, 16093], [16094, 16101], [16101, 16102], [16103, 16107], [16108, 16111], [16112, 16122], [16123, 16127], [16128, 16132], [16133, 16140], [16141, 16143], [16144, 16147], [16148, 16152], [16152, 16153], [16154, 16157], [16158, 16163], [16163, 16165], [16166, 16173], [16174, 16177], [16178, 16182], [16183, 16190], [16191, 16197], [16197, 16198]]}) 
answer: set([u'woman', u'drive', u'legal'])
candidate Sentence: (0.063762746751308441, {u'tokens': [u'The', u'q', u'and', u'the', u't', u'have', u'no', u'direct', u'counterparts', u',', u'but', u'are', u'closest', u'to', u'the', u'unaspirated', u'allophones', u'of', u'English', u'k', u'and', u't.', u'However', u',', u'since', u'these', u'allophones', u'can', u'not', u'occur', u'in', u'these', u'positions', u'in', u'English', u',', u'in', u'this', u'context', u'they', u'will', u'sound', u'more', u'like', u'English', u'g', u'and', u'd', u'.'], u'lemmas': [u'the', u'q', u'and', u'the', u't', u'have', u'no', u'direct', u'counterpart', u',', u'but', u'be', u'closest', u'to', u'the', u'unaspirated', u'allophone', u'of', u'English', u'k', u'and', u't.', u'however', u',', u'since', u'these', u'allophone', u'can', u'not', u'occur', u'in', u'these', u'position', u'in', u'English', u',', u'in', u'this', u'context', u'they', u'will', u'sound', u'more', u'like', u'English', u'g', u'and', u'd', u'.'], u'pos': [u'DT', u'NN', u'CC', u'DT', u'NN', u'VBP', u'DT', u'JJ', u'NNS', u',', u'CC', u'VBP', u'JJS', u'TO', u'DT', u'JJ', u'NNS', u'IN', u'NNP', u'NN', u'CC', u'NN', u'RB', u',', u'IN', u'DT', u'NNS', u'MD', u'RB', u'VB', u'IN', u'DT', u'NNS', u'IN', u'NNP', u',', u'IN', u'DT', u'NN', u'PRP', u'MD', u'VB', u'JJR', u'IN', u'NNP', u'NN', u'CC', u'NN', u'.'], u'char_offsets': [[204, 207], [208, 209], [210, 213], [214, 217], [218, 219], [220, 224], [225, 227], [228, 234], [235, 247], [247, 248], [249, 252], [253, 256], [257, 264], [265, 267], [268, 271], [272, 283], [284, 294], [295, 297], [298, 305], [306, 307], [308, 311], [312, 314], [315, 322], [322, 323], [324, 329], [330, 335], [336, 346], [347, 350], [350, 353], [354, 359], [360, 362], [363, 368], [369, 378], [379, 381], [382, 389], [389, 390], [391, 393], [394, 398], [399, 406], [407, 411], [412, 416], [417, 422], [423, 427], [428, 432], [433, 440], [441, 442], [443, 446], [447, 448], [448, 449]]}) 
answer: set([u'woman', u'drive', u'legal'])
candidate Sentence: (0.061253093183040619, {u'tokens': [u'Under', u'Emir', u'Hamad', u',', u'Qatar', u'has', u'experienced', u'a', u'notable', u'amount', u'of', u'sociopolitical', u'liberalization', u',', u'including', u'the', u'enfranchisement', u'of', u'women', u',', u'a', u'new', u'constitution', u',', u'and', u'the', u'launch', u'of', u'Al', u'Jazeera', u',', u'a', u'leading', u'English', u'and', u'Arabic', u'news', u'source', u',', u'which', u'operates', u'a', u'website', u'and', u'satellite', u'television', u'news', u'channel', u'.'], u'lemmas': [u'under', u'Emir', u'Hamad', u',', u'Qatar', u'have', u'experience', u'a', u'notable', u'amount', u'of', u'sociopolitical', u'liberalization', u',', u'include', u'the', u'enfranchisement', u'of', u'woman', u',', u'a', u'new', u'constitution', u',', u'and', u'the', u'launch', u'of', u'Al', u'Jazeera', u',', u'a', u'lead', u'english', u'and', u'arabic', u'news', u'source', u',', u'which', u'operate', u'a', u'website', u'and', u'satellite', u'television', u'news', u'channel', u'.'], u'pos': [u'IN', u'NNP', u'NNP', u',', u'NNP', u'VBZ', u'VBN', u'DT', u'JJ', u'NN', u'IN', u'JJ', u'NN', u',', u'VBG', u'DT', u'NN', u'IN', u'NNS', u',', u'DT', u'JJ', u'NN', u',', u'CC', u'DT', u'NN', u'IN', u'NNP', u'NNP', u',', u'DT', u'VBG', u'JJ', u'CC', u'JJ', u'NN', u'NN', u',', u'WDT', u'VBZ', u'DT', u'NN', u'CC', u'NN', u'NN', u'NN', u'NN', u'.'], u'char_offsets': [[4765, 4770], [4771, 4775], [4776, 4781], [4781, 4782], [4783, 4788], [4789, 4792], [4793, 4804], [4805, 4806], [4807, 4814], [4815, 4821], [4822, 4824], [4825, 4839], [4840, 4854], [4854, 4855], [4856, 4865], [4866, 4869], [4870, 4885], [4886, 4888], [4889, 4894], [4894, 4895], [4896, 4897], [4898, 4901], [4902, 4914], [4914, 4915], [4916, 4919], [4920, 4923], [4924, 4930], [4931, 4933], [4934, 4936], [4937, 4944], [4944, 4945], [4946, 4947], [4948, 4955], [4956, 4963], [4964, 4967], [4968, 4974], [4975, 4979], [4980, 4986], [4986, 4987], [4988, 4993], [4994, 5002], [5003, 5004], [5005, 5012], [5013, 5016], [5017, 5026], [5027, 5037], [5038, 5042], [5043, 5050], [5050, 5051]]}) 
answer: set([u'drive', u'legal'])
candidate Sentence: (0.015858612954616547, {u'tokens': [u'Qatar', u'University', u'was', u'founded', u'in', u'1973', u'.'], u'lemmas': [u'Qatar', u'University', u'be', u'found', u'in', u'1973', u'.'], u'pos': [u'NNP', u'NNP', u'VBD', u'VBN', u'IN', u'CD', u'.'], u'char_offsets': [[14240, 14245], [14246, 14256], [14257, 14260], [14261, 14268], [14269, 14271], [14272, 14276], [14276, 14277]]}) 
answer: set([u'woman', u'drive', u'legal'])
candidate Sentence: (0.013289024122059345, {u'tokens': [u'In', u'2004', u',', u'Qatar', u'established', u'the', u'Qatar', u'Science', u'&', u'Technology', u'Park', u'at', u'Education', u'City', u'to', u'link', u'those', u'universities', u'with', u'industry', u'.'], u'lemmas': [u'in', u'2004', u',', u'Qatar', u'establish', u'the', u'Qatar', u'Science', u'&', u'Technology', u'Park', u'at', u'Education', u'City', u'to', u'link', u'those', u'university', u'with', u'industry', u'.'], u'pos': [u'IN', u'CD', u',', u'NNP', u'VBD', u'DT', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'TO', u'VB', u'DT', u'NNS', u'IN', u'NN', u'.'], u'char_offsets': [[14746, 14748], [14749, 14753], [14753, 14754], [14755, 14760], [14761, 14772], [14773, 14776], [14777, 14782], [14783, 14790], [14791, 14792], [14793, 14803], [14804, 14808], [14809, 14811], [14812, 14821], [14822, 14826], [14827, 14829], [14830, 14834], [14835, 14840], [14841, 14853], [14854, 14858], [14859, 14867], [14867, 14868]]}) 
answer: set([u'woman', u'drive', u'legal'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'qatar', u'.'])

Can women legally drive in Qatar?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Qatar
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a3.txt

No
_____________________________ test_yesno[param295] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156edc68>, (<src.tfidf.TF_IDF object at 0x11240d710>, set(['.', 'romania'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x1156edc68>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.45531609654426575, {u'tokens': [u'Romania', u'is', u'a', u'secular', u'state', u',', u'thus', u'having', u'no', u'national', u'religion', u'.'], u'lemmas': [u'Romania', u'be', u'a', u'secular', u'state', u',', u'thus', u'have', u'no', u'national', u'religion', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'JJ', u'NN', u',', u'RB', u'VBG', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[32133, 32140], [32141, 32143], [32144, 32145], [32146, 32153], [32154, 32159], [32159, 32160], [32161, 32165], [32166, 32172], [32173, 32175], [32176, 32184], [32185, 32193], [32193, 32194]]}) 
answer: set([])
candidate Sentence: (0.15037554502487183, {u'tokens': [u'Romania', u'is', u'a', u'semi-presidential', u'unitary', u'state', u'.'], u'lemmas': [u'Romania', u'be', u'a', u'semi-presidential', u'unitary', u'state', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[368, 375], [376, 378], [379, 380], [381, 398], [399, 406], [407, 412], [412, 413]]}) 
answer: set([u'secular'])
candidate Sentence: (0.10385919362306595, {u'tokens': [u'``', u'nunc', u'se', u'Romanos', u'vocant', u"''", u'A.', u'Verres', u',', u'Acta', u'et', u'Epistolae', u',', u'I', u',', u'p.', u'243', u"''", u'...', u'si', u'dimandano', u'in', u'lingua', u'loro', u'Romei', u'...', u'se', u'alcuno', u'dimanda', u'se', u'sano', u'parlare', u'in', u'la', u'lingua', u'valacca', u',', u'dicono', u'a', u'questo', u'in', u'questo', u'modo', u':', u'Sti', u'Rominest', u'?'], u'lemmas': [u'``', u'nunc', u'se', u'romanos', u'vocant', u"''", u'a.', u'Verres', u',', u'Acta', u'et', u'epistolae', u',', u'I', u',', u'p.', u'243', u"''", u'...', u'si', u'dimandano', u'in', u'lingua', u'loro', u'romei', u'...', u'se', u'alcuno', u'dimanda', u'se', u'sano', u'parlare', u'in', u'la', u'lingua', u'valacca', u',', u'dicono', u'a', u'questo', u'in', u'questo', u'modo', u':', u'Sti', u'Rominest', u'?'], u'pos': [u'``', u'FW', u'FW', u'FW', u'FW', u"''", u'NN', u'NNP', u',', u'NNP', u'FW', u'FW', u',', u'PRP', u',', u'NN', u'CD', u"''", u':', u'FW', u'FW', u'IN', u'NN', u'FW', u'FW', u':', u'FW', u'FW', u'FW', u'FW', u'FW', u'NN', u'IN', u'DT', u'NN', u'NN', u',', u'NN', u'DT', u'NN', u'IN', u'NN', u'NN', u':', u'NNP', u'NNP', u'.'], u'char_offsets': [[1805, 1806], [1806, 1810], [1811, 1813], [1814, 1821], [1822, 1828], [1828, 1829], [1830, 1832], [1833, 1839], [1839, 1840], [1841, 1845], [1846, 1848], [1849, 1858], [1858, 1859], [1860, 1861], [1861, 1862], [1863, 1865], [1866, 1869], [1874, 1875], [1875, 1878], [1878, 1880], [1881, 1890], [1891, 1893], [1894, 1900], [1901, 1905], [1906, 1911], [1911, 1914], [1914, 1916], [1917, 1923], [1924, 1931], [1932, 1934], [1935, 1939], [1940, 1947], [1948, 1950], [1951, 1953], [1954, 1960], [1961, 1968], [1968, 1969], [1970, 1976], [1977, 1978], [1979, 1985], [1986, 1988], [1989, 1995], [1996, 2000], [2000, 2001], [2002, 2005], [2006, 2014], [2015, 2016]]}) 
answer: set([u'secular', u'state'])
candidate Sentence: (0.076752640306949615, {u'tokens': [u'During', u'the', u'Russo-Turkish', u'War', u',', u'Romania', u'fought', u'on', u'the', u'Russian', u'side', u';', u'in', u'the', u'1878', u'Treaty', u'of', u'Berlin', u',', u'Romania', u'was', u'recognized', u'as', u'an', u'independent', u'state', u'by', u'the', u'Great', u'Powers', u'.'], u'lemmas': [u'during', u'the', u'Russo-Turkish', u'War', u',', u'Romania', u'fight', u'on', u'the', u'russian', u'side', u';', u'in', u'the', u'1878', u'Treaty', u'of', u'Berlin', u',', u'Romania', u'be', u'recognize', u'as', u'a', u'independent', u'state', u'by', u'the', u'Great', u'Powers', u'.'], u'pos': [u'IN', u'DT', u'NNP', u'NNP', u',', u'NNP', u'VBD', u'IN', u'DT', u'JJ', u'NN', u':', u'IN', u'DT', u'CD', u'NNP', u'IN', u'NNP', u',', u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[13070, 13076], [13077, 13080], [13081, 13094], [13095, 13098], [13098, 13099], [13100, 13107], [13108, 13114], [13115, 13117], [13118, 13121], [13122, 13129], [13130, 13134], [13134, 13135], [13141, 13143], [13144, 13147], [13148, 13152], [13153, 13159], [13160, 13162], [13163, 13169], [13169, 13170], [13174, 13181], [13182, 13185], [13186, 13196], [13197, 13199], [13200, 13202], [13203, 13214], [13215, 13220], [13221, 13223], [13224, 13227], [13228, 13233], [13234, 13240], [13240, 13241]]}) 
answer: set([u'secular'])
candidate Sentence: (0.075623959302902222, {u'tokens': [u'He', u'greatly', u'extended', u'the', u'authority', u'police', u'state', u'and', u'imposed', u'a', u'cult', u'of', u'personality', u'.'], u'lemmas': [u'he', u'greatly', u'extend', u'the', u'authority', u'police', u'state', u'and', u'impose', u'a', u'cult', u'of', u'personality', u'.'], u'pos': [u'PRP', u'RB', u'VBD', u'DT', u'NN', u'NN', u'NN', u'CC', u'VBD', u'DT', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[20073, 20075], [20076, 20083], [20084, 20092], [20093, 20096], [20097, 20106], [20107, 20113], [20114, 20119], [20121, 20124], [20125, 20132], [20133, 20134], [20135, 20139], [20140, 20142], [20143, 20154], [20155, 20156]]}) 
answer: set([u'secular'])
candidate Sentence: (0.070890113711357117, {u'tokens': [u'The', u'PDSR', u'party', u'governed', u'Romania', u'from', u'1990', u'until', u'1996', u'through', u'several', u'coalitions', u'and', u'governments', u'with', u'Ion', u'Iliescu', u'as', u'head', u'of', u'state', u'.'], u'lemmas': [u'the', u'PDSR', u'party', u'govern', u'Romania', u'from', u'1990', u'until', u'1996', u'through', u'several', u'coalition', u'and', u'government', u'with', u'Ion', u'Iliescu', u'as', u'head', u'of', u'state', u'.'], u'pos': [u'DT', u'NNP', u'NN', u'VBD', u'NNP', u'IN', u'CD', u'IN', u'CD', u'IN', u'JJ', u'NNS', u'CC', u'NNS', u'IN', u'NNP', u'NNP', u'IN', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[23205, 23208], [23209, 23213], [23214, 23219], [23220, 23228], [23229, 23236], [23237, 23241], [23242, 23246], [23247, 23252], [23253, 23257], [23258, 23265], [23266, 23273], [23274, 23284], [23285, 23288], [23289, 23300], [23301, 23305], [23306, 23309], [23310, 23317], [23318, 23320], [23321, 23325], [23326, 23328], [23329, 23334], [23334, 23335]]}) 
answer: set([u'secular'])
candidate Sentence: (0.068350061774253845, {u'tokens': [u'Trade', u'is', u'mostly', u'centred', u'on', u'the', u'member', u'states', u'of', u'the', u'European', u'Union', u',', u'with', u'Germany', u'and', u'Italy', u'being', u'the', u'country', u"'s", u'single', u'largest', u'trading', u'partners', u'.'], u'lemmas': [u'Trade', u'be', u'mostly', u'centre', u'on', u'the', u'member', u'state', u'of', u'the', u'European', u'Union', u',', u'with', u'Germany', u'and', u'Italy', u'be', u'the', u'country', u"'s", u'single', u'largest', u'trade', u'partner', u'.'], u'pos': [u'NNP', u'VBZ', u'RB', u'VBN', u'IN', u'DT', u'NN', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u',', u'IN', u'NNP', u'CC', u'NNP', u'VBG', u'DT', u'NN', u'POS', u'JJ', u'JJS', u'VBG', u'NNS', u'.'], u'char_offsets': [[38726, 38731], [38732, 38734], [38735, 38741], [38742, 38749], [38750, 38752], [38753, 38756], [38757, 38763], [38764, 38770], [38771, 38773], [38774, 38777], [38778, 38786], [38787, 38792], [38792, 38793], [38794, 38798], [38799, 38806], [38807, 38810], [38811, 38816], [38817, 38822], [38823, 38826], [38827, 38834], [38834, 38836], [38837, 38843], [38844, 38851], [38852, 38859], [38860, 38868], [38868, 38869]]}) 
answer: set([u'secular'])
candidate Sentence: (0.063902631402015686, {u'tokens': [u'Romania', u'has', u'been', u'a', u'member', u'of', u'the', u'European', u'Union', u'since', u'January', u'1', u'2007', u',', u'and', u'has', u'the', u'ninth', u'largest', u'territory', u'in', u'the', u'EU', u'and', u'with', u'22', u'million', u'people', u'it', u'has', u'the', u'7th', u'largest', u'population', u'among', u'the', u'EU', u'member', u'states', u'.'], u'lemmas': [u'Romania', u'have', u'be', u'a', u'member', u'of', u'the', u'European', u'Union', u'since', u'January', u'1', u'2007', u',', u'and', u'have', u'the', u'ninth', u'largest', u'territory', u'in', u'the', u'EU', u'and', u'with', u'22', u'million', u'people', u'it', u'have', u'the', u'7th', u'largest', u'population', u'among', u'the', u'EU', u'member', u'state', u'.'], u'pos': [u'NNP', u'VBZ', u'VBN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'CD', u'CD', u',', u'CC', u'VBZ', u'DT', u'JJ', u'JJS', u'NN', u'IN', u'DT', u'NNP', u'CC', u'IN', u'CD', u'CD', u'NNS', u'PRP', u'VBZ', u'DT', u'RB', u'JJS', u'NN', u'IN', u'DT', u'NNP', u'NN', u'NNS', u'.'], u'char_offsets': [[943, 950], [951, 954], [955, 959], [960, 961], [962, 968], [969, 971], [972, 975], [976, 984], [985, 990], [991, 996], [997, 1004], [1005, 1006], [1007, 1011], [1011, 1012], [1013, 1016], [1017, 1020], [1021, 1024], [1025, 1030], [1031, 1038], [1039, 1048], [1049, 1051], [1052, 1055], [1056, 1058], [1059, 1062], [1063, 1067], [1068, 1070], [1071, 1078], [1079, 1085], [1091, 1093], [1094, 1097], [1098, 1101], [1102, 1105], [1106, 1113], [1114, 1124], [1125, 1130], [1131, 1134], [1135, 1137], [1138, 1144], [1145, 1151], [1151, 1152]]}) 
answer: set([u'secular'])
candidate Sentence: (0.058534827083349228, {u'tokens': [u'After', u'his', u'death', u',', u'as', u'vassal', u'tributary', u'states', u',', u'Moldova', u'and', u'Wallachia', u'had', u'complete', u'internal', u'autonomy', u'and', u'an', u'external', u'independence', u',', u'which', u'was', u'finally', u'lost', u'in', u'the', u'18th', u'century', u'.'], u'lemmas': [u'after', u'he', u'death', u',', u'as', u'vassal', u'tributary', u'state', u',', u'Moldova', u'and', u'Wallachia', u'have', u'complete', u'internal', u'autonomy', u'and', u'a', u'external', u'independence', u',', u'which', u'be', u'finally', u'lose', u'in', u'the', u'18th', u'century', u'.'], u'pos': [u'IN', u'PRP$', u'NN', u',', u'IN', u'JJ', u'JJ', u'NNS', u',', u'NNP', u'CC', u'NNP', u'VBD', u'JJ', u'JJ', u'NN', u'CC', u'DT', u'JJ', u'NN', u',', u'WDT', u'VBD', u'RB', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[11354, 11359], [11360, 11363], [11364, 11369], [11369, 11370], [11371, 11373], [11374, 11380], [11381, 11390], [11391, 11397], [11397, 11398], [11399, 11406], [11407, 11410], [11411, 11420], [11421, 11424], [11425, 11433], [11434, 11442], [11443, 11451], [11452, 11455], [11456, 11458], [11459, 11467], [11468, 11480], [11480, 11481], [11482, 11487], [11488, 11491], [11492, 11499], [11500, 11504], [11505, 11507], [11508, 11511], [11512, 11516], [11517, 11524], [11524, 11525]]}) 
answer: set([u'secular'])
candidate Sentence: (0.05849187821149826, {u'tokens': [u'After', u'the', u'failed', u'1848', u'Revolution', u',', u'the', u'Great', u'Powers', u'did', u'not', u'support', u'the', u'Romanians', u"'", u'expressed', u'desire', u'to', u'officially', u'unite', u'in', u'a', u'single', u'state', u',', u'forcing', u'Romania', u'to', u'proceed', u'alone', u'against', u'the', u'Turks', u'.'], u'lemmas': [u'after', u'the', u'fail', u'1848', u'revolution', u',', u'the', u'Great', u'Powers', u'do', u'not', u'support', u'the', u'Romanians', u"'", u'express', u'desire', u'to', u'officially', u'unite', u'in', u'a', u'single', u'state', u',', u'force', u'Romania', u'to', u'proceed', u'alone', u'against', u'the', u'Turks', u'.'], u'pos': [u'IN', u'DT', u'VBN', u'CD', u'NN', u',', u'DT', u'NNP', u'NNP', u'VBD', u'RB', u'VB', u'DT', u'NNPS', u'POS', u'VBN', u'NN', u'TO', u'RB', u'VB', u'IN', u'DT', u'JJ', u'NN', u',', u'VBG', u'NNP', u'TO', u'VB', u'RB', u'IN', u'DT', u'NNPS', u'.'], u'char_offsets': [[12034, 12039], [12040, 12043], [12044, 12050], [12051, 12055], [12056, 12066], [12066, 12067], [12068, 12071], [12072, 12077], [12078, 12084], [12085, 12088], [12089, 12092], [12093, 12100], [12101, 12104], [12105, 12114], [12114, 12115], [12116, 12125], [12126, 12132], [12133, 12135], [12136, 12146], [12147, 12152], [12153, 12155], [12156, 12157], [12158, 12164], [12165, 12170], [12170, 12171], [12172, 12179], [12180, 12187], [12188, 12190], [12191, 12198], [12199, 12204], [12205, 12212], [12213, 12216], [12217, 12222], [12222, 12223]]}) 
answer: set([u'secular'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'romania', u'.'])

Is Romania a secular state?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Romania
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a7.txt

No
_____________________________ test_yesno[param296] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156edcb0>, (<src.tfidf.TF_IDF object at 0x11240d710>, set(['.', 'romania'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156edcb0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.45531609654426575, {u'tokens': [u'Romania', u'is', u'a', u'secular', u'state', u',', u'thus', u'having', u'no', u'national', u'religion', u'.'], u'lemmas': [u'Romania', u'be', u'a', u'secular', u'state', u',', u'thus', u'have', u'no', u'national', u'religion', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'JJ', u'NN', u',', u'RB', u'VBG', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[32133, 32140], [32141, 32143], [32144, 32145], [32146, 32153], [32154, 32159], [32159, 32160], [32161, 32165], [32166, 32172], [32173, 32175], [32176, 32184], [32185, 32193], [32193, 32194]]}) 
answer: set([])
candidate Sentence: (0.15037554502487183, {u'tokens': [u'Romania', u'is', u'a', u'semi-presidential', u'unitary', u'state', u'.'], u'lemmas': [u'Romania', u'be', u'a', u'semi-presidential', u'unitary', u'state', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'JJ', u'JJ', u'NN', u'.'], u'char_offsets': [[368, 375], [376, 378], [379, 380], [381, 398], [399, 406], [407, 412], [412, 413]]}) 
answer: set([u'secular'])
candidate Sentence: (0.10385919362306595, {u'tokens': [u'``', u'nunc', u'se', u'Romanos', u'vocant', u"''", u'A.', u'Verres', u',', u'Acta', u'et', u'Epistolae', u',', u'I', u',', u'p.', u'243', u"''", u'...', u'si', u'dimandano', u'in', u'lingua', u'loro', u'Romei', u'...', u'se', u'alcuno', u'dimanda', u'se', u'sano', u'parlare', u'in', u'la', u'lingua', u'valacca', u',', u'dicono', u'a', u'questo', u'in', u'questo', u'modo', u':', u'Sti', u'Rominest', u'?'], u'lemmas': [u'``', u'nunc', u'se', u'romanos', u'vocant', u"''", u'a.', u'Verres', u',', u'Acta', u'et', u'epistolae', u',', u'I', u',', u'p.', u'243', u"''", u'...', u'si', u'dimandano', u'in', u'lingua', u'loro', u'romei', u'...', u'se', u'alcuno', u'dimanda', u'se', u'sano', u'parlare', u'in', u'la', u'lingua', u'valacca', u',', u'dicono', u'a', u'questo', u'in', u'questo', u'modo', u':', u'Sti', u'Rominest', u'?'], u'pos': [u'``', u'FW', u'FW', u'FW', u'FW', u"''", u'NN', u'NNP', u',', u'NNP', u'FW', u'FW', u',', u'PRP', u',', u'NN', u'CD', u"''", u':', u'FW', u'FW', u'IN', u'NN', u'FW', u'FW', u':', u'FW', u'FW', u'FW', u'FW', u'FW', u'NN', u'IN', u'DT', u'NN', u'NN', u',', u'NN', u'DT', u'NN', u'IN', u'NN', u'NN', u':', u'NNP', u'NNP', u'.'], u'char_offsets': [[1805, 1806], [1806, 1810], [1811, 1813], [1814, 1821], [1822, 1828], [1828, 1829], [1830, 1832], [1833, 1839], [1839, 1840], [1841, 1845], [1846, 1848], [1849, 1858], [1858, 1859], [1860, 1861], [1861, 1862], [1863, 1865], [1866, 1869], [1874, 1875], [1875, 1878], [1878, 1880], [1881, 1890], [1891, 1893], [1894, 1900], [1901, 1905], [1906, 1911], [1911, 1914], [1914, 1916], [1917, 1923], [1924, 1931], [1932, 1934], [1935, 1939], [1940, 1947], [1948, 1950], [1951, 1953], [1954, 1960], [1961, 1968], [1968, 1969], [1970, 1976], [1977, 1978], [1979, 1985], [1986, 1988], [1989, 1995], [1996, 2000], [2000, 2001], [2002, 2005], [2006, 2014], [2015, 2016]]}) 
answer: set([u'secular', u'state'])
candidate Sentence: (0.076752640306949615, {u'tokens': [u'During', u'the', u'Russo-Turkish', u'War', u',', u'Romania', u'fought', u'on', u'the', u'Russian', u'side', u';', u'in', u'the', u'1878', u'Treaty', u'of', u'Berlin', u',', u'Romania', u'was', u'recognized', u'as', u'an', u'independent', u'state', u'by', u'the', u'Great', u'Powers', u'.'], u'lemmas': [u'during', u'the', u'Russo-Turkish', u'War', u',', u'Romania', u'fight', u'on', u'the', u'russian', u'side', u';', u'in', u'the', u'1878', u'Treaty', u'of', u'Berlin', u',', u'Romania', u'be', u'recognize', u'as', u'a', u'independent', u'state', u'by', u'the', u'Great', u'Powers', u'.'], u'pos': [u'IN', u'DT', u'NNP', u'NNP', u',', u'NNP', u'VBD', u'IN', u'DT', u'JJ', u'NN', u':', u'IN', u'DT', u'CD', u'NNP', u'IN', u'NNP', u',', u'NNP', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[13070, 13076], [13077, 13080], [13081, 13094], [13095, 13098], [13098, 13099], [13100, 13107], [13108, 13114], [13115, 13117], [13118, 13121], [13122, 13129], [13130, 13134], [13134, 13135], [13141, 13143], [13144, 13147], [13148, 13152], [13153, 13159], [13160, 13162], [13163, 13169], [13169, 13170], [13174, 13181], [13182, 13185], [13186, 13196], [13197, 13199], [13200, 13202], [13203, 13214], [13215, 13220], [13221, 13223], [13224, 13227], [13228, 13233], [13234, 13240], [13240, 13241]]}) 
answer: set([u'secular'])
candidate Sentence: (0.075623959302902222, {u'tokens': [u'He', u'greatly', u'extended', u'the', u'authority', u'police', u'state', u'and', u'imposed', u'a', u'cult', u'of', u'personality', u'.'], u'lemmas': [u'he', u'greatly', u'extend', u'the', u'authority', u'police', u'state', u'and', u'impose', u'a', u'cult', u'of', u'personality', u'.'], u'pos': [u'PRP', u'RB', u'VBD', u'DT', u'NN', u'NN', u'NN', u'CC', u'VBD', u'DT', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[20073, 20075], [20076, 20083], [20084, 20092], [20093, 20096], [20097, 20106], [20107, 20113], [20114, 20119], [20121, 20124], [20125, 20132], [20133, 20134], [20135, 20139], [20140, 20142], [20143, 20154], [20155, 20156]]}) 
answer: set([u'secular'])
candidate Sentence: (0.070890113711357117, {u'tokens': [u'The', u'PDSR', u'party', u'governed', u'Romania', u'from', u'1990', u'until', u'1996', u'through', u'several', u'coalitions', u'and', u'governments', u'with', u'Ion', u'Iliescu', u'as', u'head', u'of', u'state', u'.'], u'lemmas': [u'the', u'PDSR', u'party', u'govern', u'Romania', u'from', u'1990', u'until', u'1996', u'through', u'several', u'coalition', u'and', u'government', u'with', u'Ion', u'Iliescu', u'as', u'head', u'of', u'state', u'.'], u'pos': [u'DT', u'NNP', u'NN', u'VBD', u'NNP', u'IN', u'CD', u'IN', u'CD', u'IN', u'JJ', u'NNS', u'CC', u'NNS', u'IN', u'NNP', u'NNP', u'IN', u'NN', u'IN', u'NN', u'.'], u'char_offsets': [[23205, 23208], [23209, 23213], [23214, 23219], [23220, 23228], [23229, 23236], [23237, 23241], [23242, 23246], [23247, 23252], [23253, 23257], [23258, 23265], [23266, 23273], [23274, 23284], [23285, 23288], [23289, 23300], [23301, 23305], [23306, 23309], [23310, 23317], [23318, 23320], [23321, 23325], [23326, 23328], [23329, 23334], [23334, 23335]]}) 
answer: set([u'secular'])
candidate Sentence: (0.068350061774253845, {u'tokens': [u'Trade', u'is', u'mostly', u'centred', u'on', u'the', u'member', u'states', u'of', u'the', u'European', u'Union', u',', u'with', u'Germany', u'and', u'Italy', u'being', u'the', u'country', u"'s", u'single', u'largest', u'trading', u'partners', u'.'], u'lemmas': [u'Trade', u'be', u'mostly', u'centre', u'on', u'the', u'member', u'state', u'of', u'the', u'European', u'Union', u',', u'with', u'Germany', u'and', u'Italy', u'be', u'the', u'country', u"'s", u'single', u'largest', u'trade', u'partner', u'.'], u'pos': [u'NNP', u'VBZ', u'RB', u'VBN', u'IN', u'DT', u'NN', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u',', u'IN', u'NNP', u'CC', u'NNP', u'VBG', u'DT', u'NN', u'POS', u'JJ', u'JJS', u'VBG', u'NNS', u'.'], u'char_offsets': [[38726, 38731], [38732, 38734], [38735, 38741], [38742, 38749], [38750, 38752], [38753, 38756], [38757, 38763], [38764, 38770], [38771, 38773], [38774, 38777], [38778, 38786], [38787, 38792], [38792, 38793], [38794, 38798], [38799, 38806], [38807, 38810], [38811, 38816], [38817, 38822], [38823, 38826], [38827, 38834], [38834, 38836], [38837, 38843], [38844, 38851], [38852, 38859], [38860, 38868], [38868, 38869]]}) 
answer: set([u'secular'])
candidate Sentence: (0.063902631402015686, {u'tokens': [u'Romania', u'has', u'been', u'a', u'member', u'of', u'the', u'European', u'Union', u'since', u'January', u'1', u'2007', u',', u'and', u'has', u'the', u'ninth', u'largest', u'territory', u'in', u'the', u'EU', u'and', u'with', u'22', u'million', u'people', u'it', u'has', u'the', u'7th', u'largest', u'population', u'among', u'the', u'EU', u'member', u'states', u'.'], u'lemmas': [u'Romania', u'have', u'be', u'a', u'member', u'of', u'the', u'European', u'Union', u'since', u'January', u'1', u'2007', u',', u'and', u'have', u'the', u'ninth', u'largest', u'territory', u'in', u'the', u'EU', u'and', u'with', u'22', u'million', u'people', u'it', u'have', u'the', u'7th', u'largest', u'population', u'among', u'the', u'EU', u'member', u'state', u'.'], u'pos': [u'NNP', u'VBZ', u'VBN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'CD', u'CD', u',', u'CC', u'VBZ', u'DT', u'JJ', u'JJS', u'NN', u'IN', u'DT', u'NNP', u'CC', u'IN', u'CD', u'CD', u'NNS', u'PRP', u'VBZ', u'DT', u'RB', u'JJS', u'NN', u'IN', u'DT', u'NNP', u'NN', u'NNS', u'.'], u'char_offsets': [[943, 950], [951, 954], [955, 959], [960, 961], [962, 968], [969, 971], [972, 975], [976, 984], [985, 990], [991, 996], [997, 1004], [1005, 1006], [1007, 1011], [1011, 1012], [1013, 1016], [1017, 1020], [1021, 1024], [1025, 1030], [1031, 1038], [1039, 1048], [1049, 1051], [1052, 1055], [1056, 1058], [1059, 1062], [1063, 1067], [1068, 1070], [1071, 1078], [1079, 1085], [1091, 1093], [1094, 1097], [1098, 1101], [1102, 1105], [1106, 1113], [1114, 1124], [1125, 1130], [1131, 1134], [1135, 1137], [1138, 1144], [1145, 1151], [1151, 1152]]}) 
answer: set([u'secular'])
candidate Sentence: (0.058534827083349228, {u'tokens': [u'After', u'his', u'death', u',', u'as', u'vassal', u'tributary', u'states', u',', u'Moldova', u'and', u'Wallachia', u'had', u'complete', u'internal', u'autonomy', u'and', u'an', u'external', u'independence', u',', u'which', u'was', u'finally', u'lost', u'in', u'the', u'18th', u'century', u'.'], u'lemmas': [u'after', u'he', u'death', u',', u'as', u'vassal', u'tributary', u'state', u',', u'Moldova', u'and', u'Wallachia', u'have', u'complete', u'internal', u'autonomy', u'and', u'a', u'external', u'independence', u',', u'which', u'be', u'finally', u'lose', u'in', u'the', u'18th', u'century', u'.'], u'pos': [u'IN', u'PRP$', u'NN', u',', u'IN', u'JJ', u'JJ', u'NNS', u',', u'NNP', u'CC', u'NNP', u'VBD', u'JJ', u'JJ', u'NN', u'CC', u'DT', u'JJ', u'NN', u',', u'WDT', u'VBD', u'RB', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[11354, 11359], [11360, 11363], [11364, 11369], [11369, 11370], [11371, 11373], [11374, 11380], [11381, 11390], [11391, 11397], [11397, 11398], [11399, 11406], [11407, 11410], [11411, 11420], [11421, 11424], [11425, 11433], [11434, 11442], [11443, 11451], [11452, 11455], [11456, 11458], [11459, 11467], [11468, 11480], [11480, 11481], [11482, 11487], [11488, 11491], [11492, 11499], [11500, 11504], [11505, 11507], [11508, 11511], [11512, 11516], [11517, 11524], [11524, 11525]]}) 
answer: set([u'secular'])
candidate Sentence: (0.05849187821149826, {u'tokens': [u'After', u'the', u'failed', u'1848', u'Revolution', u',', u'the', u'Great', u'Powers', u'did', u'not', u'support', u'the', u'Romanians', u"'", u'expressed', u'desire', u'to', u'officially', u'unite', u'in', u'a', u'single', u'state', u',', u'forcing', u'Romania', u'to', u'proceed', u'alone', u'against', u'the', u'Turks', u'.'], u'lemmas': [u'after', u'the', u'fail', u'1848', u'revolution', u',', u'the', u'Great', u'Powers', u'do', u'not', u'support', u'the', u'Romanians', u"'", u'express', u'desire', u'to', u'officially', u'unite', u'in', u'a', u'single', u'state', u',', u'force', u'Romania', u'to', u'proceed', u'alone', u'against', u'the', u'Turks', u'.'], u'pos': [u'IN', u'DT', u'VBN', u'CD', u'NN', u',', u'DT', u'NNP', u'NNP', u'VBD', u'RB', u'VB', u'DT', u'NNPS', u'POS', u'VBN', u'NN', u'TO', u'RB', u'VB', u'IN', u'DT', u'JJ', u'NN', u',', u'VBG', u'NNP', u'TO', u'VB', u'RB', u'IN', u'DT', u'NNPS', u'.'], u'char_offsets': [[12034, 12039], [12040, 12043], [12044, 12050], [12051, 12055], [12056, 12066], [12066, 12067], [12068, 12071], [12072, 12077], [12078, 12084], [12085, 12088], [12089, 12092], [12093, 12100], [12101, 12104], [12105, 12114], [12114, 12115], [12116, 12125], [12126, 12132], [12133, 12135], [12136, 12146], [12147, 12152], [12153, 12155], [12156, 12157], [12158, 12164], [12165, 12170], [12170, 12171], [12172, 12179], [12180, 12187], [12188, 12190], [12191, 12198], [12199, 12204], [12205, 12212], [12213, 12216], [12217, 12222], [12222, 12223]]}) 
answer: set([u'secular'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'romania', u'.'])

Is Romania a secular state?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Romania
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a7.txt

No
_____________________________ test_yesno[param312] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f2170>, (<src.tfidf.TF_IDF object at 0x1144af810>, set(['.', 'singapore'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x1156f2170>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.30414688587188721, {u'tokens': [u'Singapore', u'-LRB-', u';', u';', u',', u'-RRB-', u',', u'officially', u'the', u'Republic', u'of', u'Singapore', u'-LRB-', u';', u';', u',', u'-RRB-', u',', u'is', u'an', u'island', u'nation', u'located', u'at', u'the', u'southern', u'tip', u'of', u'the', u'Malay', u'Peninsula', u'.'], u'lemmas': [u'Singapore', u'-lrb-', u';', u';', u',', u'-rrb-', u',', u'officially', u'the', u'republic', u'of', u'Singapore', u'-lrb-', u';', u';', u',', u'-rrb-', u',', u'be', u'a', u'island', u'nation', u'located', u'at', u'the', u'southern', u'tip', u'of', u'the', u'Malay', u'Peninsula', u'.'], u'pos': [u'NNP', u'-LRB-', u':', u':', u',', u'-RRB-', u',', u'RB', u'DT', u'NN', u'IN', u'NNP', u'-LRB-', u':', u':', u',', u'-RRB-', u',', u'VBZ', u'DT', u'NN', u'NN', u'JJ', u'IN', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[0, 9], [10, 11], [12, 13], [15, 16], [18, 19], [21, 22], [22, 23], [24, 34], [35, 38], [39, 47], [48, 50], [51, 60], [61, 62], [63, 64], [66, 67], [69, 70], [72, 73], [73, 74], [75, 77], [78, 80], [81, 87], [88, 94], [95, 102], [103, 105], [106, 109], [110, 118], [119, 122], [123, 125], [126, 129], [130, 135], [136, 145], [145, 146]]}) 
answer: set([u'korean', u'penisulum'])
candidate Sentence: (0.1116332933306694, {u'tokens': [u'Singapore', u'is', u'linked', u'to', u'Johor', u',', u'Malaysia', u'via', u'the', u'Johor-Singapore', u'Causeway', u'and', u'the', u'Tuas', u'Second', u'Link', u',', u'as', u'well', u'as', u'a', u'railway', u'operated', u'by', u'Keretapi', u'Tanah', u'Melayu', u'of', u'Malaysia', u',', u'with', u'its', u'southern', u'terminus', u'at', u'Tanjong', u'Pagar', u'railway', u'station', u'.'], u'lemmas': [u'Singapore', u'be', u'link', u'to', u'Johor', u',', u'Malaysia', u'via', u'the', u'Johor-Singapore', u'Causeway', u'and', u'the', u'Tuas', u'Second', u'Link', u',', u'as', u'well', u'as', u'a', u'railway', u'operate', u'by', u'Keretapi', u'Tanah', u'Melayu', u'of', u'Malaysia', u',', u'with', u'its', u'southern', u'terminus', u'at', u'Tanjong', u'Pagar', u'railway', u'station', u'.'], u'pos': [u'NNP', u'VBZ', u'VBN', u'TO', u'NNP', u',', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'CC', u'DT', u'NNP', u'NNP', u'NNP', u',', u'RB', u'RB', u'IN', u'DT', u'NN', u'VBN', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u',', u'IN', u'PRP$', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'NN', u'NN', u'.'], u'char_offsets': [[45216, 45225], [45226, 45228], [45229, 45235], [45236, 45238], [45239, 45244], [45244, 45245], [45246, 45254], [45255, 45258], [45259, 45262], [45263, 45278], [45279, 45287], [45288, 45291], [45292, 45295], [45296, 45300], [45301, 45307], [45308, 45312], [45312, 45313], [45314, 45316], [45317, 45321], [45322, 45324], [45325, 45326], [45327, 45334], [45335, 45343], [45344, 45346], [45347, 45355], [45356, 45361], [45362, 45368], [45369, 45371], [45372, 45380], [45380, 45381], [45382, 45386], [45387, 45390], [45391, 45399], [45400, 45408], [45409, 45411], [45412, 45419], [45420, 45425], [45426, 45433], [45434, 45441], [45441, 45442]]}) 
answer: set([u'locat', u'korean', u'tip', u'penisulum'])
candidate Sentence: (0.1086103543639183, {u'tokens': [u'Scuba', u'diving', u'is', u'another', u'recreation', u',', u'particularly', u'around', u'the', u'southern', u'island', u'of', u'Pulau', u'Hantu', u'which', u'is', u'known', u'for', u'its', u'rich', u'coral', u'reefs', u'.'], u'lemmas': [u'scuba', u'diving', u'be', u'another', u'recreation', u',', u'particularly', u'around', u'the', u'southern', u'island', u'of', u'Pulau', u'Hantu', u'which', u'be', u'know', u'for', u'its', u'rich', u'coral', u'reef', u'.'], u'pos': [u'NN', u'NN', u'VBZ', u'DT', u'NN', u',', u'RB', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'WDT', u'VBZ', u'VBN', u'IN', u'PRP$', u'JJ', u'NN', u'NNS', u'.'], u'char_offsets': [[37368, 37373], [37374, 37380], [37381, 37383], [37384, 37391], [37392, 37402], [37402, 37403], [37404, 37416], [37417, 37423], [37424, 37427], [37428, 37436], [37437, 37443], [37444, 37446], [37447, 37452], [37453, 37458], [37459, 37464], [37465, 37467], [37468, 37473], [37474, 37477], [37478, 37481], [37482, 37486], [37487, 37492], [37493, 37498], [37498, 37499]]}) 
answer: set([u'tip', u'korean', u'locat', u'penisulum'])
candidate Sentence: (0.086359210312366486, {u'tokens': [u'Singapore', u'has', u'several', u'long-standing', u'disputes', u'with', u'Malaysia', u'over', u'a', u'number', u'of', u'issues', u':', u'*', u'water', u'deliveries', u'to', u'Singapore', u'*', u'air', u'routes', u'between', u'Singapore', u'Changi', u'Airport', u'and', u'Kuala', u'Lumpur', u'International', u'Airport', u'*', u'the', u'Singapore-occupied', u'islet', u'known', u'as', u'Pedra', u'Branca', u'in', u'Singapore', u'and', u'as', u'Pulau', u'Batu', u'Puteh', u'-LRB-', u'White', u'Rock', u'Island', u'-RRB-', u'in', u'Malaysia', u',', u'located', u'off', u'the', u'east', u'coast', u'of', u'Singapore', u'with', u'a', u'land', u'area', u'of', u'-LRB-', u'the', u'island', u'also', u'comprises', u'Middle', u'Rocks', u'which', u'are', u'two', u'clusters', u'of', u'rocks', u'situated', u'south', u'of', u'Pedra', u'Branca', u',', u'and', u'South', u'Ledge', u',', u'a', u'rock', u'formation', u'which', u'can', u'be', u'seen', u'only', u'at', u'low', u'tide', u'-RRB-', u'*', u'relocating', u'the', u'Singapore', u'station', u'of', u'Malaysia', u"'s", u'Keretapi', u'Tanah', u'Melayu', u'from', u'Tanjong', u'Pagar', u'to', u'Bukit', u'Timah', u'-LRB-', u'see', u'Malaysia-Singapore', u'Points', u'of', u'Agreement', u'of', u'1990', u'-RRB-', u'and', u'moving', u'Malaysia', u"'s", u'immigration', u'checkpoint', u'from', u'the', u'railway', u'station', u'to', u'the', u'Causeway', u'*', u'withdrawal', u'of', u'Central', u'Provident', u'Funds', u'by', u'west', u'Malaysians', u'.'], u'lemmas': [u'Singapore', u'have', u'several', u'long-standing', u'dispute', u'with', u'Malaysia', u'over', u'a', u'number', u'of', u'issue', u':', u'*', u'water', u'delivery', u'to', u'Singapore', u'*', u'air', u'route', u'between', u'Singapore', u'Changi', u'Airport', u'and', u'Kuala', u'Lumpur', u'International', u'Airport', u'*', u'the', u'singapore-occupied', u'islet', u'know', u'as', u'Pedra', u'Branca', u'in', u'Singapore', u'and', u'as', u'Pulau', u'Batu', u'Puteh', u'-lrb-', u'White', u'Rock', u'Island', u'-rrb-', u'in', u'Malaysia', u',', u'locate', u'off', u'the', u'east', u'coast', u'of', u'Singapore', u'with', u'a', u'land', u'area', u'of', u'-lrb-', u'the', u'island', u'also', u'comprise', u'Middle', u'Rocks', u'which', u'be', u'two', u'cluster', u'of', u'rock', u'situate', u'south', u'of', u'Pedra', u'Branca', u',', u'and', u'South', u'Ledge', u',', u'a', u'rock', u'formation', u'which', u'can', u'be', u'see', u'only', u'at', u'low', u'tide', u'-rrb-', u'*', u'relocate', u'the', u'Singapore', u'station', u'of', u'Malaysia', u"'s", u'Keretapi', u'Tanah', u'Melayu', u'from', u'Tanjong', u'Pagar', u'to', u'Bukit', u'Timah', u'-lrb-', u'see', u'malaysia-singapore', u'point', u'of', u'agreement', u'of', u'1990', u'-rrb-', u'and', u'move', u'Malaysia', u"'s", u'immigration', u'checkpoint', u'from', u'the', u'railway', u'station', u'to', u'the', u'Causeway', u'*', u'withdrawal', u'of', u'Central', u'Provident', u'Funds', u'by', u'west', u'Malaysians', u'.'], u'pos': [u'NNP', u'VBZ', u'JJ', u'JJ', u'NNS', u'IN', u'NNP', u'IN', u'DT', u'NN', u'IN', u'NNS', u':', u'SYM', u'NN', u'NNS', u'TO', u'NNP', u'SYM', u'NN', u'NNS', u'IN', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'NNP', u'SYM', u'DT', u'JJ', u'NN', u'VBN', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u'CC', u'IN', u'NNP', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNP', u'NNP', u'-RRB-', u'IN', u'NNP', u',', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'IN', u'DT', u'NN', u'NN', u'IN', u'-LRB-', u'DT', u'NN', u'RB', u'VBZ', u'NNP', u'NNP', u'WDT', u'VBP', u'CD', u'NNS', u'IN', u'NNS', u'VBN', u'RB', u'IN', u'NNP', u'NNP', u',', u'CC', u'NNP', u'NNP', u',', u'DT', u'NN', u'NN', u'WDT', u'MD', u'VB', u'VBN', u'RB', u'IN', u'JJ', u'NN', u'-RRB-', u'SYM', u'VBG', u'DT', u'NNP', u'NN', u'IN', u'NNP', u'POS', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'TO', u'NNP', u'NNP', u'-LRB-', u'VBP', u'JJ', u'NNS', u'IN', u'NN', u'IN', u'CD', u'-RRB-', u'CC', u'VBG', u'NNP', u'POS', u'NN', u'NN', u'IN', u'DT', u'NN', u'NN', u'TO', u'DT', u'NNP', u'SYM', u'NN', u'IN', u'NNP', u'NNP', u'NNPS', u'IN', u'JJ', u'NNPS', u'.'], u'char_offsets': [[12151, 12160], [12161, 12164], [12165, 12172], [12173, 12186], [12187, 12195], [12196, 12200], [12201, 12209], [12210, 12214], [12215, 12216], [12217, 12223], [12224, 12226], [12227, 12233], [12233, 12234], [12235, 12236], [12237, 12242], [12243, 12253], [12254, 12256], [12257, 12266], [12267, 12268], [12269, 12272], [12273, 12279], [12280, 12287], [12288, 12297], [12298, 12304], [12305, 12312], [12313, 12316], [12317, 12322], [12323, 12329], [12330, 12343], [12344, 12351], [12352, 12353], [12354, 12357], [12358, 12376], [12377, 12382], [12383, 12388], [12389, 12391], [12392, 12397], [12398, 12404], [12405, 12407], [12408, 12417], [12418, 12421], [12422, 12424], [12425, 12430], [12431, 12435], [12436, 12441], [12442, 12443], [12443, 12448], [12449, 12453], [12454, 12460], [12460, 12461], [12462, 12464], [12465, 12473], [12473, 12474], [12475, 12482], [12485, 12488], [12489, 12492], [12493, 12497], [12498, 12503], [12504, 12506], [12507, 12516], [12517, 12521], [12522, 12523], [12524, 12528], [12529, 12533], [12534, 12536], [12539, 12540], [12540, 12543], [12544, 12550], [12551, 12555], [12556, 12565], [12566, 12572], [12573, 12578], [12579, 12584], [12585, 12588], [12589, 12592], [12593, 12601], [12602, 12604], [12605, 12610], [12611, 12619], [12622, 12627], [12628, 12630], [12631, 12636], [12637, 12643], [12643, 12644], [12645, 12648], [12649, 12654], [12655, 12660], [12660, 12661], [12662, 12663], [12664, 12668], [12669, 12678], [12679, 12684], [12685, 12688], [12689, 12691], [12692, 12696], [12697, 12701], [12702, 12704], [12705, 12708], [12709, 12713], [12713, 12714], [12716, 12717], [12718, 12728], [12729, 12732], [12733, 12742], [12743, 12750], [12751, 12753], [12754, 12762], [12762, 12764], [12765, 12773], [12774, 12779], [12780, 12786], [12787, 12791], [12792, 12799], [12800, 12805], [12806, 12808], [12809, 12814], [12815, 12820], [12821, 12822], [12822, 12825], [12826, 12844], [12845, 12851], [12852, 12854], [12855, 12864], [12865, 12867], [12868, 12872], [12872, 12873], [12874, 12877], [12878, 12884], [12885, 12893], [12893, 12895], [12896, 12907], [12908, 12918], [12919, 12923], [12924, 12927], [12928, 12935], [12936, 12943], [12944, 12946], [12947, 12950], [12951, 12959], [12960, 12961], [12962, 12972], [12973, 12975], [12976, 12983], [12984, 12993], [12994, 12999], [13000, 13002], [13003, 13007], [13008, 13018], [13018, 13019]]}) 
answer: set([u'tip', u'korean', u'southern', u'penisulum'])
candidate Sentence: (0.08614329993724823, {u'tokens': [u'The', u'Japanese', u'renamed', u'Singapore', u',', u'from', u'Japanese', u',', u'or', u'``', u'southern', u'island', u'obtained', u'in', u'the', u'age', u'of', u'Shwa', u"''", u',', u'and', u'occupied', u'it', u'until', u'the', u'British', u'repossessed', u'the', u'island', u'on', u'September', u'12', u'1945', u',', u'a', u'month', u'after', u'the', u'Japanese', u'surrender', u'.'], u'lemmas': [u'the', u'japanese', u'rename', u'Singapore', u',', u'from', u'japanese', u',', u'or', u'``', u'southern', u'island', u'obtain', u'in', u'the', u'age', u'of', u'Shwa', u"''", u',', u'and', u'occupy', u'it', u'until', u'the', u'british', u'repossessed', u'the', u'island', u'on', u'September', u'12', u'1945', u',', u'a', u'month', u'after', u'the', u'japanese', u'surrender', u'.'], u'pos': [u'DT', u'JJ', u'VBN', u'NNP', u',', u'IN', u'JJ', u',', u'CC', u'``', u'JJ', u'NN', u'VBN', u'IN', u'DT', u'NN', u'IN', u'NNP', u"''", u',', u'CC', u'VBD', u'PRP', u'IN', u'DT', u'JJ', u'JJ', u'DT', u'NN', u'IN', u'NNP', u'CD', u'CD', u',', u'DT', u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[5825, 5828], [5829, 5837], [5838, 5845], [5846, 5855], [5857, 5858], [5859, 5863], [5864, 5872], [5874, 5875], [5876, 5878], [5879, 5880], [5880, 5888], [5889, 5895], [5896, 5904], [5905, 5907], [5908, 5911], [5912, 5915], [5916, 5918], [5919, 5923], [5923, 5924], [5924, 5925], [5926, 5929], [5930, 5938], [5939, 5941], [5942, 5947], [5948, 5951], [5952, 5959], [5960, 5971], [5972, 5975], [5976, 5982], [5983, 5985], [5986, 5995], [5996, 5998], [5999, 6003], [6003, 6004], [6005, 6006], [6007, 6012], [6013, 6018], [6019, 6022], [6023, 6031], [6032, 6041], [6041, 6042]]}) 
answer: set([u'tip', u'korean', u'locat', u'penisulum'])
candidate Sentence: (0.076383523643016815, {u'tokens': [u'Statue', u'of', u'Thomas', u'Stamford', u'Raffles', u'by', u'Thomas', u'Woolner', u',', u'erected', u'at', u'the', u'location', u'where', u'he', u'first', u'landed', u'at', u'Singapore', u'.'], u'lemmas': [u'Statue', u'of', u'Thomas', u'Stamford', u'Raffles', u'by', u'Thomas', u'Woolner', u',', u'erect', u'at', u'the', u'location', u'where', u'he', u'first', u'land', u'at', u'Singapore', u'.'], u'pos': [u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u',', u'VBD', u'IN', u'DT', u'NN', u'WRB', u'PRP', u'RB', u'VBD', u'IN', u'NNP', u'.'], u'char_offsets': [[5315, 5321], [5322, 5324], [5325, 5331], [5332, 5340], [5341, 5348], [5349, 5351], [5352, 5358], [5359, 5366], [5366, 5367], [5368, 5375], [5376, 5378], [5379, 5382], [5383, 5391], [5392, 5397], [5398, 5400], [5401, 5406], [5407, 5413], [5414, 5416], [5417, 5426], [5426, 5427]]}) 
answer: set([u'tip', u'korean', u'southern', u'penisulum'])
candidate Sentence: (0.070709466934204102, {u'tokens': [u'The', u'highest', u'natural', u'point', u'of', u'Singapore', u'is', u'Bukit', u'Timah', u'Hill', u'at', u'.'], u'lemmas': [u'the', u'highest', u'natural', u'point', u'of', u'Singapore', u'be', u'Bukit', u'Timah', u'Hill', u'at', u'.'], u'pos': [u'DT', u'JJS', u'JJ', u'NN', u'IN', u'NNP', u'VBZ', u'NNP', u'NNP', u'NNP', u'IN', u'.'], u'char_offsets': [[13363, 13366], [13367, 13374], [13375, 13382], [13383, 13388], [13389, 13391], [13392, 13401], [13402, 13404], [13405, 13410], [13411, 13416], [13417, 13421], [13422, 13424], [13426, 13427]]}) 
answer: set([u'locat', u'korean', u'tip', u'penisulum', u'southern'])
candidate Sentence: (0.06472102552652359, {u'tokens': [u'The', u'Downtown', u'Core', u'of', u'Singapore', u'at', u'dusk', u'The', u'first', u'records', u'of', u'settlement', u'in', u'Singapore', u'are', u'from', u'the', u'second', u'century', u'AD', u'.'], u'lemmas': [u'the', u'downtown', u'core', u'of', u'Singapore', u'at', u'dusk', u'the', u'first', u'record', u'of', u'settlement', u'in', u'Singapore', u'be', u'from', u'the', u'second', u'century', u'ad', u'.'], u'pos': [u'DT', u'NN', u'NN', u'IN', u'NNP', u'IN', u'NN', u'DT', u'JJ', u'NNS', u'IN', u'NN', u'IN', u'NNP', u'VBP', u'IN', u'DT', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[2634, 2637], [2638, 2646], [2647, 2651], [2652, 2654], [2655, 2664], [2665, 2667], [2668, 2672], [2673, 2676], [2677, 2682], [2683, 2690], [2691, 2693], [2694, 2704], [2705, 2707], [2708, 2717], [2718, 2721], [2722, 2726], [2727, 2730], [2731, 2737], [2738, 2745], [2746, 2748], [2748, 2749]]}) 
answer: set([u'locat', u'korean', u'tip', u'penisulum', u'southern'])
candidate Sentence: (0.058258712291717529, {u'tokens': [u'A', u'circulation', u'version', u'of', u'the', u'$', u'20', u'note', u'can', u'be', u'exchanged', u'at', u'banks', u'in', u'Singapore', u'.'], u'lemmas': [u'a', u'circulation', u'version', u'of', u'the', u'$', u'20', u'note', u'can', u'be', u'exchange', u'at', u'bank', u'in', u'Singapore', u'.'], u'pos': [u'DT', u'NN', u'NN', u'IN', u'DT', u'$', u'CD', u'NN', u'MD', u'VB', u'VBN', u'IN', u'NNS', u'IN', u'NNP', u'.'], u'char_offsets': [[22020, 22021], [22022, 22033], [22034, 22041], [22042, 22044], [22045, 22048], [22049, 22050], [22050, 22052], [22053, 22057], [22058, 22061], [22062, 22064], [22065, 22074], [22075, 22077], [22078, 22083], [22084, 22086], [22087, 22096], [22096, 22097]]}) 
answer: set([u'locat', u'korean', u'tip', u'penisulum', u'southern'])
candidate Sentence: (0.057744786143302917, {u'tokens': [u'The', u'main', u'settlement', u'up', u'to', u'that', u'point', u'was', u'a', u'Malay', u'fishing', u'village', u'at', u'the', u'mouth', u'of', u'the', u'Singapore', u'River', u'.'], u'lemmas': [u'the', u'main', u'settlement', u'up', u'to', u'that', u'point', u'be', u'a', u'malay', u'fishing', u'village', u'at', u'the', u'mouth', u'of', u'the', u'Singapore', u'River', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'TO', u'DT', u'NN', u'VBD', u'DT', u'JJ', u'NN', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[483, 486], [487, 491], [492, 502], [503, 505], [506, 508], [509, 513], [514, 519], [520, 523], [524, 525], [526, 531], [532, 539], [540, 547], [548, 550], [551, 554], [555, 560], [561, 563], [564, 567], [568, 577], [578, 583], [583, 584]]}) 
answer: set([u'locat', u'korean', u'tip', u'penisulum', u'southern'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'singapore'])

Is Singapore located at the southern tip of the Korean Penisula?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Singapore
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a2.txt

No
_____________________________ test_yesno[param315] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f2248>, (<src.tfidf.TF_IDF object at 0x1144af810>, set(['.', 'singapore'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156f2248>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.2868829071521759, {u'tokens': [u'Recent', u'studies', u'of', u'Singapore', u'indicate', u'that', u'lions', u'have', u'never', u'lived', u'there', u'-LRB-', u'not', u'even', u'Asiatic', u'lions', u'-RRB-', u',', u'and', u'the', u'beast', u'seen', u'by', u'Sang', u'Nila', u'Utama', u'was', u'likely', u'a', u'tiger', u',', u'most', u'likely', u'the', u'Malayan', u'Tiger', u'.'], u'lemmas': [u'recent', u'study', u'of', u'Singapore', u'indicate', u'that', u'lion', u'have', u'never', u'live', u'there', u'-lrb-', u'not', u'even', u'asiatic', u'lion', u'-rrb-', u',', u'and', u'the', u'beast', u'see', u'by', u'Sang', u'Nila', u'Utama', u'be', u'likely', u'a', u'tiger', u',', u'most', u'likely', u'the', u'Malayan', u'Tiger', u'.'], u'pos': [u'JJ', u'NNS', u'IN', u'NNP', u'VBP', u'IN', u'NNS', u'VBP', u'RB', u'VBN', u'EX', u'-LRB-', u'RB', u'RB', u'JJ', u'NNS', u'-RRB-', u',', u'CC', u'DT', u'NN', u'VBN', u'IN', u'NNP', u'NNP', u'NNP', u'VBD', u'RB', u'DT', u'NN', u',', u'RBS', u'RB', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[2448, 2454], [2455, 2462], [2463, 2465], [2466, 2475], [2476, 2484], [2485, 2489], [2490, 2495], [2496, 2500], [2501, 2506], [2507, 2512], [2513, 2518], [2519, 2520], [2520, 2523], [2524, 2528], [2529, 2536], [2537, 2542], [2542, 2543], [2543, 2544], [2545, 2548], [2549, 2552], [2553, 2558], [2559, 2563], [2564, 2566], [2567, 2571], [2572, 2576], [2577, 2582], [2583, 2586], [2587, 2593], [2594, 2595], [2596, 2601], [2601, 2602], [2603, 2607], [2608, 2614], [2615, 2618], [2619, 2626], [2627, 2632], [2632, 2633]]}) 
answer: set([u'visit'])
candidate Sentence: (0.28253507614135742, {u'tokens': [u'About', u'9.7', u'million', u'tourists', u'visited', u'Singapore', u'in', u'2006', u'.'], u'lemmas': [u'about', u'9.7', u'million', u'tourist', u'visit', u'Singapore', u'in', u'2006', u'.'], u'pos': [u'IN', u'CD', u'CD', u'NNS', u'VBD', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[19163, 19168], [19169, 19172], [19173, 19180], [19181, 19189], [19190, 19197], [19198, 19207], [19208, 19210], [19211, 19215], [19215, 19216]]}) 
answer: set([u'sang', u'nila', u'utama'])
candidate Sentence: (0.26646170020103455, {u'tokens': [u'According', u'to', u'the', u'Malay', u'Annals', u',', u'this', u'name', u'was', u'given', u'by', u'a', u'14th', u'century', u'Sumatran', u'prince', u'named', u'Sang', u'Nila', u'Utama', u',', u'who', u',', u'landing', u'on', u'the', u'island', u'after', u'a', u'thunderstorm', u',', u'spotted', u'an', u'auspicious', u'beast', u'on', u'the', u'shore', u'that', u'his', u'chief', u'minister', u'identified', u'as', u'a', u'lion', u'.'], u'lemmas': [u'accord', u'to', u'the', u'Malay', u'Annals', u',', u'this', u'name', u'be', u'give', u'by', u'a', u'14th', u'century', u'Sumatran', u'prince', u'name', u'Sang', u'Nila', u'Utama', u',', u'who', u',', u'landing', u'on', u'the', u'island', u'after', u'a', u'thunderstorm', u',', u'spot', u'a', u'auspicious', u'beast', u'on', u'the', u'shore', u'that', u'he', u'chief', u'minister', u'identify', u'as', u'a', u'lion', u'.'], u'pos': [u'VBG', u'TO', u'DT', u'NNP', u'NNP', u',', u'DT', u'NN', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'NNP', u'NN', u'VBN', u'NNP', u'NNP', u'NNP', u',', u'WP', u',', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u',', u'VBD', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'NN', u'VBN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[2200, 2209], [2210, 2212], [2213, 2216], [2217, 2222], [2223, 2229], [2229, 2230], [2231, 2235], [2236, 2240], [2241, 2244], [2245, 2250], [2251, 2253], [2254, 2255], [2256, 2260], [2261, 2268], [2269, 2277], [2278, 2284], [2285, 2290], [2291, 2295], [2296, 2300], [2301, 2306], [2306, 2307], [2308, 2311], [2311, 2312], [2313, 2320], [2321, 2323], [2324, 2327], [2328, 2334], [2335, 2340], [2341, 2342], [2343, 2355], [2355, 2356], [2357, 2364], [2365, 2367], [2368, 2378], [2379, 2384], [2385, 2387], [2388, 2391], [2392, 2397], [2398, 2402], [2403, 2406], [2407, 2412], [2413, 2421], [2422, 2432], [2433, 2435], [2436, 2437], [2438, 2442], [2442, 2443]]}) 
answer: set([u'visit'])
candidate Sentence: (0.03895038366317749, {u'tokens': [u'Singapore', u'has', u'a', u'high', u'literacy', u'rate', u'.'], u'lemmas': [u'Singapore', u'have', u'a', u'high', u'literacy', u'rate', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[27826, 27835], [27836, 27839], [27840, 27841], [27842, 27846], [27847, 27855], [27856, 27860], [27863, 27864]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
candidate Sentence: (0.036610428243875504, {u'tokens': [u'Amnesty', u'International', u'has', u'criticised', u'Singapore', u'for', u'having', u'``', u'possibly', u'the', u'highest', u'execution', u'rate', u'in', u'the', u'world', u"''", u'per', u'capita', u'.'], u'lemmas': [u'Amnesty', u'International', u'have', u'criticise', u'Singapore', u'for', u'have', u'``', u'possibly', u'the', u'highest', u'execution', u'rate', u'in', u'the', u'world', u"''", u'per', u'capita', u'.'], u'pos': [u'NNP', u'NNP', u'VBZ', u'VBN', u'NNP', u'IN', u'VBG', u'``', u'RB', u'DT', u'JJS', u'NN', u'NN', u'IN', u'DT', u'NN', u"''", u'IN', u'NN', u'.'], u'char_offsets': [[11110, 11117], [11118, 11131], [11132, 11135], [11136, 11146], [11147, 11156], [11157, 11160], [11161, 11167], [11168, 11169], [11169, 11177], [11178, 11181], [11182, 11189], [11190, 11199], [11200, 11204], [11205, 11207], [11208, 11211], [11212, 11217], [11217, 11218], [11219, 11222], [11223, 11229], [11229, 11230]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
candidate Sentence: (0.036384448409080505, {u'tokens': [u'Singapore', u'has', u'a', u'network', u'of', u'reservoirs', u'and', u'water', u'catchment', u'areas', u'.'], u'lemmas': [u'Singapore', u'have', u'a', u'network', u'of', u'reservoir', u'and', u'water', u'catchment', u'area', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'NNS', u'CC', u'NN', u'NN', u'NNS', u'.'], u'char_offsets': [[42875, 42884], [42885, 42888], [42889, 42890], [42891, 42898], [42899, 42901], [42902, 42912], [42913, 42916], [42917, 42922], [42923, 42932], [42933, 42938], [42938, 42939]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
candidate Sentence: (0.032358977943658829, {u'tokens': [u'Singapore', u'has', u'also', u'become', u'a', u'centre', u'for', u'postmodern', u'architecture', u'.'], u'lemmas': [u'Singapore', u'have', u'also', u'become', u'a', u'centre', u'for', u'postmodern', u'architecture', u'.'], u'pos': [u'NNP', u'VBZ', u'RB', u'VB', u'DT', u'NN', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[41566, 41575], [41576, 41579], [41580, 41584], [41585, 41591], [41592, 41593], [41594, 41600], [41601, 41604], [41605, 41615], [41616, 41628], [41628, 41629]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
candidate Sentence: (0.030658252537250519, {u'tokens': [u'Singapore', u'has', u'a', u'successful', u'and', u'transparent', u'market', u'economy', u'.'], u'lemmas': [u'Singapore', u'have', u'a', u'successful', u'and', u'transparent', u'market', u'economy', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'JJ', u'CC', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[9975, 9984], [9985, 9988], [9989, 9990], [9991, 10001], [10002, 10005], [10006, 10017], [10018, 10024], [10025, 10032], [10032, 10033]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
candidate Sentence: (0.029271388426423073, {u'tokens': [u'The', u'airport', u'has', u'two', u'passenger', u'terminals', u'.'], u'lemmas': [u'the', u'airport', u'have', u'two', u'passenger', u'terminal', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'CD', u'NN', u'NNS', u'.'], u'char_offsets': [[44854, 44857], [44858, 44865], [44866, 44869], [44870, 44873], [44874, 44883], [44884, 44893], [44893, 44894]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
candidate Sentence: (0.029262807220220566, {u'tokens': [u'Students', u'having', u'assembly', u'in', u'the', u'hall', u'of', u'a', u'Singapore', u'secondary', u'school', u'.'], u'lemmas': [u'student', u'have', u'assembly', u'in', u'the', u'hall', u'of', u'a', u'Singapore', u'secondary', u'school', u'.'], u'pos': [u'NNS', u'VBG', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'JJ', u'NN', u'.'], u'char_offsets': [[27756, 27764], [27765, 27771], [27772, 27780], [27781, 27783], [27784, 27787], [27788, 27792], [27793, 27795], [27796, 27797], [27798, 27807], [27808, 27817], [27818, 27824], [27824, 27825]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'singapore'])

Has Sang Nila Utama visited Singapore?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = Singapore
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a2.txt

No
_____________________________ test_yesno[param316] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f2290>, (<src.tfidf.TF_IDF object at 0x1144af810>, set(['.', 'singapore'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes.')
E            +    where 'Yes.' = <src.question_processing.Question_parser instance at 0x1156f2290>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.2868829071521759, {u'tokens': [u'Recent', u'studies', u'of', u'Singapore', u'indicate', u'that', u'lions', u'have', u'never', u'lived', u'there', u'-LRB-', u'not', u'even', u'Asiatic', u'lions', u'-RRB-', u',', u'and', u'the', u'beast', u'seen', u'by', u'Sang', u'Nila', u'Utama', u'was', u'likely', u'a', u'tiger', u',', u'most', u'likely', u'the', u'Malayan', u'Tiger', u'.'], u'lemmas': [u'recent', u'study', u'of', u'Singapore', u'indicate', u'that', u'lion', u'have', u'never', u'live', u'there', u'-lrb-', u'not', u'even', u'asiatic', u'lion', u'-rrb-', u',', u'and', u'the', u'beast', u'see', u'by', u'Sang', u'Nila', u'Utama', u'be', u'likely', u'a', u'tiger', u',', u'most', u'likely', u'the', u'Malayan', u'Tiger', u'.'], u'pos': [u'JJ', u'NNS', u'IN', u'NNP', u'VBP', u'IN', u'NNS', u'VBP', u'RB', u'VBN', u'EX', u'-LRB-', u'RB', u'RB', u'JJ', u'NNS', u'-RRB-', u',', u'CC', u'DT', u'NN', u'VBN', u'IN', u'NNP', u'NNP', u'NNP', u'VBD', u'RB', u'DT', u'NN', u',', u'RBS', u'RB', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[2448, 2454], [2455, 2462], [2463, 2465], [2466, 2475], [2476, 2484], [2485, 2489], [2490, 2495], [2496, 2500], [2501, 2506], [2507, 2512], [2513, 2518], [2519, 2520], [2520, 2523], [2524, 2528], [2529, 2536], [2537, 2542], [2542, 2543], [2543, 2544], [2545, 2548], [2549, 2552], [2553, 2558], [2559, 2563], [2564, 2566], [2567, 2571], [2572, 2576], [2577, 2582], [2583, 2586], [2587, 2593], [2594, 2595], [2596, 2601], [2601, 2602], [2603, 2607], [2608, 2614], [2615, 2618], [2619, 2626], [2627, 2632], [2632, 2633]]}) 
answer: set([u'visit'])
candidate Sentence: (0.28253507614135742, {u'tokens': [u'About', u'9.7', u'million', u'tourists', u'visited', u'Singapore', u'in', u'2006', u'.'], u'lemmas': [u'about', u'9.7', u'million', u'tourist', u'visit', u'Singapore', u'in', u'2006', u'.'], u'pos': [u'IN', u'CD', u'CD', u'NNS', u'VBD', u'NNP', u'IN', u'CD', u'.'], u'char_offsets': [[19163, 19168], [19169, 19172], [19173, 19180], [19181, 19189], [19190, 19197], [19198, 19207], [19208, 19210], [19211, 19215], [19215, 19216]]}) 
answer: set([u'sang', u'nila', u'utama'])
candidate Sentence: (0.26646170020103455, {u'tokens': [u'According', u'to', u'the', u'Malay', u'Annals', u',', u'this', u'name', u'was', u'given', u'by', u'a', u'14th', u'century', u'Sumatran', u'prince', u'named', u'Sang', u'Nila', u'Utama', u',', u'who', u',', u'landing', u'on', u'the', u'island', u'after', u'a', u'thunderstorm', u',', u'spotted', u'an', u'auspicious', u'beast', u'on', u'the', u'shore', u'that', u'his', u'chief', u'minister', u'identified', u'as', u'a', u'lion', u'.'], u'lemmas': [u'accord', u'to', u'the', u'Malay', u'Annals', u',', u'this', u'name', u'be', u'give', u'by', u'a', u'14th', u'century', u'Sumatran', u'prince', u'name', u'Sang', u'Nila', u'Utama', u',', u'who', u',', u'landing', u'on', u'the', u'island', u'after', u'a', u'thunderstorm', u',', u'spot', u'a', u'auspicious', u'beast', u'on', u'the', u'shore', u'that', u'he', u'chief', u'minister', u'identify', u'as', u'a', u'lion', u'.'], u'pos': [u'VBG', u'TO', u'DT', u'NNP', u'NNP', u',', u'DT', u'NN', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'NNP', u'NN', u'VBN', u'NNP', u'NNP', u'NNP', u',', u'WP', u',', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NN', u',', u'VBD', u'DT', u'JJ', u'NN', u'IN', u'DT', u'NN', u'IN', u'PRP$', u'NN', u'NN', u'VBN', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[2200, 2209], [2210, 2212], [2213, 2216], [2217, 2222], [2223, 2229], [2229, 2230], [2231, 2235], [2236, 2240], [2241, 2244], [2245, 2250], [2251, 2253], [2254, 2255], [2256, 2260], [2261, 2268], [2269, 2277], [2278, 2284], [2285, 2290], [2291, 2295], [2296, 2300], [2301, 2306], [2306, 2307], [2308, 2311], [2311, 2312], [2313, 2320], [2321, 2323], [2324, 2327], [2328, 2334], [2335, 2340], [2341, 2342], [2343, 2355], [2355, 2356], [2357, 2364], [2365, 2367], [2368, 2378], [2379, 2384], [2385, 2387], [2388, 2391], [2392, 2397], [2398, 2402], [2403, 2406], [2407, 2412], [2413, 2421], [2422, 2432], [2433, 2435], [2436, 2437], [2438, 2442], [2442, 2443]]}) 
answer: set([u'visit'])
candidate Sentence: (0.03895038366317749, {u'tokens': [u'Singapore', u'has', u'a', u'high', u'literacy', u'rate', u'.'], u'lemmas': [u'Singapore', u'have', u'a', u'high', u'literacy', u'rate', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[27826, 27835], [27836, 27839], [27840, 27841], [27842, 27846], [27847, 27855], [27856, 27860], [27863, 27864]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
candidate Sentence: (0.036610428243875504, {u'tokens': [u'Amnesty', u'International', u'has', u'criticised', u'Singapore', u'for', u'having', u'``', u'possibly', u'the', u'highest', u'execution', u'rate', u'in', u'the', u'world', u"''", u'per', u'capita', u'.'], u'lemmas': [u'Amnesty', u'International', u'have', u'criticise', u'Singapore', u'for', u'have', u'``', u'possibly', u'the', u'highest', u'execution', u'rate', u'in', u'the', u'world', u"''", u'per', u'capita', u'.'], u'pos': [u'NNP', u'NNP', u'VBZ', u'VBN', u'NNP', u'IN', u'VBG', u'``', u'RB', u'DT', u'JJS', u'NN', u'NN', u'IN', u'DT', u'NN', u"''", u'IN', u'NN', u'.'], u'char_offsets': [[11110, 11117], [11118, 11131], [11132, 11135], [11136, 11146], [11147, 11156], [11157, 11160], [11161, 11167], [11168, 11169], [11169, 11177], [11178, 11181], [11182, 11189], [11190, 11199], [11200, 11204], [11205, 11207], [11208, 11211], [11212, 11217], [11217, 11218], [11219, 11222], [11223, 11229], [11229, 11230]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
candidate Sentence: (0.036384448409080505, {u'tokens': [u'Singapore', u'has', u'a', u'network', u'of', u'reservoirs', u'and', u'water', u'catchment', u'areas', u'.'], u'lemmas': [u'Singapore', u'have', u'a', u'network', u'of', u'reservoir', u'and', u'water', u'catchment', u'area', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'NN', u'IN', u'NNS', u'CC', u'NN', u'NN', u'NNS', u'.'], u'char_offsets': [[42875, 42884], [42885, 42888], [42889, 42890], [42891, 42898], [42899, 42901], [42902, 42912], [42913, 42916], [42917, 42922], [42923, 42932], [42933, 42938], [42938, 42939]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
candidate Sentence: (0.032358977943658829, {u'tokens': [u'Singapore', u'has', u'also', u'become', u'a', u'centre', u'for', u'postmodern', u'architecture', u'.'], u'lemmas': [u'Singapore', u'have', u'also', u'become', u'a', u'centre', u'for', u'postmodern', u'architecture', u'.'], u'pos': [u'NNP', u'VBZ', u'RB', u'VB', u'DT', u'NN', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[41566, 41575], [41576, 41579], [41580, 41584], [41585, 41591], [41592, 41593], [41594, 41600], [41601, 41604], [41605, 41615], [41616, 41628], [41628, 41629]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
candidate Sentence: (0.030658252537250519, {u'tokens': [u'Singapore', u'has', u'a', u'successful', u'and', u'transparent', u'market', u'economy', u'.'], u'lemmas': [u'Singapore', u'have', u'a', u'successful', u'and', u'transparent', u'market', u'economy', u'.'], u'pos': [u'NNP', u'VBZ', u'DT', u'JJ', u'CC', u'JJ', u'NN', u'NN', u'.'], u'char_offsets': [[9975, 9984], [9985, 9988], [9989, 9990], [9991, 10001], [10002, 10005], [10006, 10017], [10018, 10024], [10025, 10032], [10032, 10033]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
candidate Sentence: (0.029271388426423073, {u'tokens': [u'The', u'airport', u'has', u'two', u'passenger', u'terminals', u'.'], u'lemmas': [u'the', u'airport', u'have', u'two', u'passenger', u'terminal', u'.'], u'pos': [u'DT', u'NN', u'VBZ', u'CD', u'NN', u'NNS', u'.'], u'char_offsets': [[44854, 44857], [44858, 44865], [44866, 44869], [44870, 44873], [44874, 44883], [44884, 44893], [44893, 44894]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
candidate Sentence: (0.029262807220220566, {u'tokens': [u'Students', u'having', u'assembly', u'in', u'the', u'hall', u'of', u'a', u'Singapore', u'secondary', u'school', u'.'], u'lemmas': [u'student', u'have', u'assembly', u'in', u'the', u'hall', u'of', u'a', u'Singapore', u'secondary', u'school', u'.'], u'pos': [u'NNS', u'VBG', u'NN', u'IN', u'DT', u'NN', u'IN', u'DT', u'NNP', u'JJ', u'NN', u'.'], u'char_offsets': [[27756, 27764], [27765, 27771], [27772, 27780], [27781, 27783], [27784, 27787], [27788, 27792], [27793, 27795], [27796, 27797], [27798, 27807], [27808, 27817], [27818, 27824], [27824, 27825]]}) 
answer: set([u'sang', u'nila', u'utama', u'visit'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'singapore'])

Has Sang Nila Utama visited Singapore?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes.
Difficulty = easy
Article_Title = Singapore
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a2.txt

No
_____________________________ test_yesno[param320] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f23b0>, (<src.tfidf.TF_IDF object at 0x11005cd10>, set(['.', 'roosevelt', 'theodore'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156f23b0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.22486487030982971, {u'tokens': [u'Roosevelt', u'beat', u'Taft', u'in', u'the', u'popular', u'vote', u'and', u'pulled', u'so', u'many', u'Progressives', u'out', u'of', u'the', u'Republican', u'Party', u'that', u'Democrat', u'Woodrow', u'Wilson', u'won', u'in', u'1912', u',', u'and', u'the', u'conservative', u'faction', u'took', u'control', u'of', u'the', u'Republican', u'Party', u'for', u'the', u'next', u'two', u'decades', u'.'], u'lemmas': [u'Roosevelt', u'beat', u'Taft', u'in', u'the', u'popular', u'vote', u'and', u'pull', u'so', u'many', u'Progressives', u'out', u'of', u'the', u'Republican', u'Party', u'that', u'Democrat', u'Woodrow', u'Wilson', u'win', u'in', u'1912', u',', u'and', u'the', u'conservative', u'faction', u'take', u'control', u'of', u'the', u'Republican', u'Party', u'for', u'the', u'next', u'two', u'decade', u'.'], u'pos': [u'NNP', u'VBD', u'NNP', u'IN', u'DT', u'JJ', u'NN', u'CC', u'VBD', u'RB', u'JJ', u'NNPS', u'IN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'VBD', u'IN', u'CD', u',', u'CC', u'DT', u'JJ', u'NN', u'VBD', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'JJ', u'CD', u'NNS', u'.'], u'char_offsets': [[2422, 2431], [2432, 2436], [2437, 2441], [2442, 2444], [2445, 2448], [2449, 2456], [2457, 2461], [2462, 2465], [2466, 2472], [2473, 2475], [2476, 2480], [2481, 2493], [2494, 2497], [2498, 2500], [2501, 2504], [2505, 2515], [2516, 2521], [2522, 2526], [2527, 2535], [2536, 2543], [2544, 2550], [2551, 2554], [2555, 2557], [2558, 2562], [2562, 2563], [2564, 2567], [2568, 2571], [2572, 2584], [2585, 2592], [2593, 2597], [2598, 2605], [2606, 2608], [2609, 2612], [2613, 2623], [2624, 2629], [2630, 2633], [2634, 2637], [2638, 2642], [2643, 2646], [2647, 2654], [2654, 2655]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.21656501293182373, {u'tokens': [u'TR', u'and', u'Will', u':', u'A', u'Friendship', u'that', u'Split', u'the', u'Republican', u'Party', u'.'], u'lemmas': [u'tr', u'and', u'will', u':', u'a', u'friendship', u'that', u'split', u'the', u'Republican', u'Party', u'.'], u'pos': [u'NN', u'CC', u'MD', u':', u'DT', u'NN', u'WDT', u'VBP', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[65580, 65582], [65583, 65586], [65587, 65591], [65591, 65592], [65593, 65594], [65595, 65605], [65606, 65610], [65611, 65616], [65617, 65620], [65621, 65631], [65632, 65637], [65637, 65638]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.20100529491901398, {u'tokens': [u'The', u'left', u'wing', u'of', u'the', u'Republican', u'Party', u'began', u'agitating', u'against', u'Taft', u'.'], u'lemmas': [u'the', u'left', u'wing', u'of', u'the', u'Republican', u'Party', u'begin', u'agitate', u'against', u'Taft', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'VBD', u'VBG', u'IN', u'NNP', u'.'], u'char_offsets': [[51761, 51764], [51765, 51769], [51770, 51774], [51775, 51777], [51778, 51781], [51782, 51792], [51793, 51798], [51799, 51804], [51805, 51814], [51815, 51822], [51823, 51827], [51827, 51828]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.19322814047336578, {u'tokens': [u'Do', u'you', u'know', u'that', u'the', u'one', u'word', u'as', u'to', u'which', u'I', u'thought', u'the', u'new', u'spelling', u'was', u'wrong', u'thru', u'was', u'more', u'responsible', u'than', u'anything', u'else', u'for', u'our', u'discomfiture', u'?', u"''"], u'lemmas': [u'do', u'you', u'know', u'that', u'the', u'one', u'word', u'as', u'to', u'which', u'I', u'think', u'the', u'new', u'spelling', u'be', u'wrong', u'thru', u'be', u'more', u'responsible', u'than', u'anything', u'else', u'for', u'we', u'discomfiture', u'?', u"''"], u'pos': [u'VBP', u'PRP', u'VB', u'IN', u'DT', u'CD', u'NN', u'IN', u'TO', u'WDT', u'PRP', u'VBD', u'DT', u'JJ', u'NN', u'VBD', u'JJ', u'IN', u'VBD', u'RBR', u'JJ', u'IN', u'NN', u'RB', u'IN', u'PRP$', u'NN', u'.', u"''"], u'char_offsets': [[43940, 43942], [43943, 43946], [43947, 43951], [43952, 43956], [43957, 43960], [43961, 43964], [43965, 43969], [43970, 43972], [43973, 43975], [43976, 43981], [43982, 43983], [43984, 43991], [43992, 43995], [43996, 43999], [44000, 44008], [44009, 44012], [44013, 44018], [44021, 44025], [44028, 44031], [44032, 44036], [44037, 44048], [44049, 44053], [44054, 44062], [44063, 44067], [44068, 44071], [44072, 44075], [44076, 44088], [44088, 44089], [44089, 44090]]}) 
answer: set([u'member', u'parti', u'thedor', u'republican'])
candidate Sentence: (0.18518750369548798, {u'tokens': [u'Roosevelt', u'was', u'a', u'Progressive', u'reformer', u'who', u'sought', u'to', u'move', u'the', u'dominant', u'Republican', u'Party', u'into', u'the', u'Progressive', u'camp', u'.'], u'lemmas': [u'Roosevelt', u'be', u'a', u'progressive', u'reformer', u'who', u'seek', u'to', u'move', u'the', u'dominant', u'Republican', u'Party', u'into', u'the', u'Progressive', u'camp', u'.'], u'pos': [u'NNP', u'VBD', u'DT', u'JJ', u'NN', u'WP', u'VBD', u'TO', u'VB', u'DT', u'JJ', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NN', u'.'], u'char_offsets': [[1521, 1530], [1531, 1534], [1535, 1536], [1537, 1548], [1549, 1557], [1558, 1561], [1562, 1568], [1569, 1571], [1572, 1576], [1577, 1580], [1581, 1589], [1590, 1600], [1601, 1606], [1607, 1611], [1612, 1615], [1616, 1627], [1628, 1632], [1632, 1633]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.16099308431148529, {u'tokens': [u'The', u'family', u'was', u'strongly', u'Democratic', u'in', u'its', u'political', u'affiliation', u'until', u'the', u'mid-1850s', u',', u'then', u'joined', u'the', u'new', u'Republican', u'Party', u'.'], u'lemmas': [u'the', u'family', u'be', u'strongly', u'democratic', u'in', u'its', u'political', u'affiliation', u'until', u'the', u'mid-1850s', u',', u'then', u'join', u'the', u'new', u'Republican', u'Party', u'.'], u'pos': [u'DT', u'NN', u'VBD', u'RB', u'JJ', u'IN', u'PRP$', u'JJ', u'NN', u'IN', u'DT', u'CD', u',', u'RB', u'VBD', u'DT', u'JJ', u'NNP', u'NNP', u'.'], u'char_offsets': [[4497, 4500], [4501, 4507], [4508, 4511], [4512, 4520], [4521, 4531], [4532, 4534], [4535, 4538], [4539, 4548], [4549, 4560], [4561, 4566], [4567, 4570], [4571, 4580], [4580, 4581], [4582, 4586], [4587, 4593], [4594, 4597], [4598, 4601], [4602, 4612], [4613, 4618], [4618, 4619]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.15200026333332062, {u'tokens': [u'Roosevelt', u'did', u'so', u',', u'but', u'after', u'winning', u'election', u'in', u'1904', u',', u'he', u'moved', u'to', u'the', u'political', u'left', u',', u'stretching', u'his', u'ties', u'to', u'the', u'Republican', u'Party', u"'s", u'conservative', u'leaders', u'.'], u'lemmas': [u'Roosevelt', u'do', u'so', u',', u'but', u'after', u'win', u'election', u'in', u'1904', u',', u'he', u'move', u'to', u'the', u'political', u'left', u',', u'stretch', u'he', u'tie', u'to', u'the', u'Republican', u'Party', u"'s", u'conservative', u'leader', u'.'], u'pos': [u'NNP', u'VBD', u'RB', u',', u'CC', u'IN', u'VBG', u'NN', u'IN', u'CD', u',', u'PRP', u'VBD', u'TO', u'DT', u'JJ', u'NN', u',', u'VBG', u'PRP$', u'NNS', u'TO', u'DT', u'NNP', u'NNP', u'POS', u'JJ', u'NNS', u'.'], u'char_offsets': [[26539, 26548], [26549, 26552], [26553, 26555], [26555, 26556], [26557, 26560], [26561, 26566], [26567, 26574], [26575, 26583], [26584, 26586], [26587, 26591], [26591, 26592], [26593, 26595], [26596, 26601], [26602, 26604], [26605, 26608], [26609, 26618], [26619, 26623], [26623, 26624], [26625, 26635], [26636, 26639], [26640, 26644], [26645, 26647], [26648, 26651], [26652, 26662], [26663, 26668], [26668, 26670], [26671, 26683], [26684, 26691], [26691, 26692]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.14887909591197968, {u'tokens': [u'The', u'battle', u'between', u'Taft', u'and', u'Roosevelt', u'bitterly', u'split', u'the', u'Republican', u'Party', u';', u'Taft', u"'s", u'people', u'dominated', u'the', u'party', u'until', u'1936', u'.'], u'lemmas': [u'the', u'battle', u'between', u'Taft', u'and', u'Roosevelt', u'bitterly', u'split', u'the', u'Republican', u'Party', u';', u'Taft', u"'s", u'people', u'dominate', u'the', u'party', u'until', u'1936', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NNP', u'CC', u'NNP', u'RB', u'VBD', u'DT', u'NNP', u'NNP', u':', u'NNP', u'POS', u'NNS', u'VBD', u'DT', u'NN', u'IN', u'CD', u'.'], u'char_offsets': [[52959, 52962], [52963, 52969], [52970, 52977], [52978, 52982], [52983, 52986], [52987, 52996], [52997, 53005], [53006, 53011], [53012, 53015], [53016, 53026], [53027, 53032], [53032, 53033], [53034, 53038], [53038, 53040], [53041, 53047], [53048, 53057], [53058, 53061], [53062, 53067], [53068, 53073], [53074, 53078], [53078, 53079]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.14026680588722229, {u'tokens': [u'Progressive', u'Party', u'-LRB-', u'United', u'States', u',', u'1924', u'-RRB-', u'Progressive', u'Party', u'1912', u'-LRB-', u'United', u'States', u'-RRB-', u'American', u'Museum', u'of', u'Natural', u'History', u'American', u'Museum', u'of', u'Natural', u'History', u'Allies', u'of', u'World', u'War', u'I', u'Episcopal', u'Church', u'in', u'the', u'United', u'States', u'of', u'America', u'separation', u'of', u'church', u'and', u'state', u'National', u'Archives', u'and', u'Records', u'Administration', u'Theodore', u'Roosevelt', u'Birthplace', u'National', u'Historic', u'Site', u'The', u'Wind', u'and', u'the', u'Lion', u'List', u'of', u'U.S.', u'political', u'appointments', u'that', u'crossed', u'party', u'lines', u'Cylinder', u'Preservation', u'and', u'Digitization', u'Project', u'University', u'of', u'California', u',', u'Santa', u'Barbara', u'List', u'of', u'Governors', u'of', u'New', u'York', u'Vice', u'President', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'List', u'of', u'United', u'States', u'Republican', u'Party', u'presidential', u'tickets', u'List', u'of', u'United', u'States', u'Republican', u'Party', u'presidential', u'tickets', u'Progressive', u'Party', u'-LRB-', u'United', u'States', u',', u'1912', u'-RRB-', u'Oldest', u'living', u'United', u'States', u'president', u'President', u'of', u'the', u'United', u'States'], u'lemmas': [u'Progressive', u'Party', u'-lrb-', u'United', u'States', u',', u'1924', u'-rrb-', u'Progressive', u'Party', u'1912', u'-lrb-', u'United', u'States', u'-rrb-', u'american', u'museum', u'of', u'natural', u'history', u'american', u'museum', u'of', u'natural', u'history', u'ally', u'of', u'World', u'War', u'I', u'Episcopal', u'Church', u'in', u'the', u'United', u'States', u'of', u'America', u'separation', u'of', u'church', u'and', u'state', u'National', u'Archives', u'and', u'Records', u'Administration', u'Theodore', u'Roosevelt', u'Birthplace', u'National', u'Historic', u'site', u'the', u'wind', u'and', u'the', u'Lion', u'list', u'of', u'U.S.', u'political', u'appointment', u'that', u'cross', u'party', u'line', u'Cylinder', u'Preservation', u'and', u'Digitization', u'Project', u'University', u'of', u'California', u',', u'Santa', u'Barbara', u'list', u'of', u'governor', u'of', u'New', u'York', u'Vice', u'President', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'list', u'of', u'United', u'States', u'Republican', u'Party', u'presidential', u'ticket', u'list', u'of', u'United', u'States', u'Republican', u'Party', u'presidential', u'ticket', u'Progressive', u'Party', u'-lrb-', u'United', u'States', u',', u'1912', u'-rrb-', u'oldest', u'living', u'United', u'States', u'president', u'President', u'of', u'the', u'United', u'States'], u'pos': [u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNPS', u',', u'CD', u'-RRB-', u'NNP', u'NNP', u'CD', u'-LRB-', u'NNP', u'NNPS', u'-RRB-', u'JJ', u'NN', u'IN', u'JJ', u'NN', u'JJ', u'NN', u'IN', u'JJ', u'NN', u'NNS', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'IN', u'NNP', u'NN', u'IN', u'NN', u'CC', u'NN', u'NNP', u'NNPS', u'CC', u'NNPS', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NN', u'DT', u'NN', u'CC', u'DT', u'NNP', u'NN', u'IN', u'NNP', u'JJ', u'NNS', u'WDT', u'VBD', u'NN', u'NNS', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u',', u'NNP', u'NNP', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NN', u'IN', u'NNP', u'NNPS', u'NNP', u'NNP', u'JJ', u'NNS', u'NN', u'IN', u'NNP', u'NNPS', u'NNP', u'NNP', u'JJ', u'NNS', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNPS', u',', u'CD', u'-RRB-', u'JJS', u'NN', u'NNP', u'NNPS', u'NN', u'NNP', u'IN', u'DT', u'NNP', u'NNPS'], u'char_offsets': [[84271, 84282], [84283, 84288], [84289, 84290], [84290, 84296], [84297, 84303], [84303, 84304], [84305, 84309], [84309, 84310], [84311, 84322], [84323, 84328], [84329, 84333], [84334, 84335], [84335, 84341], [84342, 84348], [84348, 84349], [84350, 84358], [84359, 84365], [84366, 84368], [84369, 84376], [84377, 84384], [84385, 84393], [84394, 84400], [84401, 84403], [84404, 84411], [84412, 84419], [84420, 84426], [84427, 84429], [84430, 84435], [84436, 84439], [84440, 84441], [84442, 84451], [84452, 84458], [84459, 84461], [84462, 84465], [84466, 84472], [84473, 84479], [84480, 84482], [84483, 84490], [84491, 84501], [84502, 84504], [84505, 84511], [84512, 84515], [84516, 84521], [84522, 84530], [84531, 84539], [84540, 84543], [84544, 84551], [84552, 84566], [84567, 84575], [84576, 84585], [84586, 84596], [84597, 84605], [84606, 84614], [84615, 84619], [84620, 84623], [84624, 84628], [84629, 84632], [84633, 84636], [84637, 84641], [84642, 84646], [84647, 84649], [84650, 84654], [84655, 84664], [84665, 84677], [84678, 84682], [84683, 84690], [84691, 84696], [84697, 84702], [84703, 84711], [84712, 84724], [84725, 84728], [84729, 84741], [84742, 84749], [84750, 84760], [84761, 84763], [84764, 84774], [84774, 84775], [84776, 84781], [84782, 84789], [84790, 84794], [84795, 84797], [84798, 84807], [84808, 84810], [84811, 84814], [84815, 84819], [84820, 84824], [84825, 84834], [84835, 84837], [84838, 84841], [84842, 84848], [84849, 84855], [84856, 84865], [84866, 84868], [84869, 84872], [84873, 84879], [84880, 84886], [84887, 84891], [84892, 84894], [84895, 84901], [84902, 84908], [84909, 84919], [84920, 84925], [84926, 84938], [84939, 84946], [84947, 84951], [84952, 84954], [84955, 84961], [84962, 84968], [84969, 84979], [84980, 84985], [84986, 84998], [84999, 85006], [85007, 85018], [85019, 85024], [85025, 85026], [85026, 85032], [85033, 85039], [85039, 85040], [85041, 85045], [85045, 85046], [85047, 85053], [85054, 85060], [85061, 85067], [85068, 85074], [85075, 85084], [85085, 85094], [85095, 85097], [85098, 85101], [85102, 85108], [85109, 85115]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.13240990042686462, {u'tokens': [u'/', u'ref', u'>', u'Roosevelt', u'took', u'Cabinet', u'members', u'and', u'friends', u'on', u'long', u',', u'fast-paced', u'hikes', u',', u'boxed', u'in', u'the', u'state', u'rooms', u'of', u'the', u'White', u'House', u',', u'romped', u'with', u'his', u'children', u',', u'and', u'read', u'voraciously', u'.'], u'lemmas': [u'/', u'ref', u'>', u'Roosevelt', u'take', u'Cabinet', u'member', u'and', u'friend', u'on', u'long', u',', u'fast-paced', u'hike', u',', u'box', u'in', u'the', u'state', u'room', u'of', u'the', u'White', u'House', u',', u'romp', u'with', u'he', u'child', u',', u'and', u'read', u'voraciously', u'.'], u'pos': [u':', u'NN', u'JJR', u'NNP', u'VBD', u'NNP', u'NNS', u'CC', u'NNS', u'IN', u'JJ', u',', u'JJ', u'NNS', u',', u'VBN', u'IN', u'DT', u'NN', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u',', u'VBD', u'IN', u'PRP$', u'NNS', u',', u'CC', u'VB', u'RB', u'.'], u'char_offsets': [[42211, 42212], [42212, 42215], [42215, 42216], [42217, 42226], [42227, 42231], [42232, 42239], [42240, 42247], [42248, 42251], [42252, 42259], [42260, 42262], [42263, 42267], [42267, 42268], [42269, 42279], [42280, 42285], [42285, 42286], [42287, 42292], [42293, 42295], [42296, 42299], [42300, 42305], [42306, 42311], [42312, 42314], [42315, 42318], [42319, 42324], [42325, 42330], [42330, 42331], [42332, 42338], [42339, 42343], [42344, 42347], [42348, 42356], [42356, 42357], [42358, 42361], [42362, 42366], [42367, 42378], [42378, 42379]]}) 
answer: set([u'parti', u'thedor', u'republican'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'theodore', u'roosevelt', u'.'])

Was Thedore Roosevelt  a member of the Republican Party?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Theodore_Roosevelt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a7.txt

No
_____________________________ test_yesno[param321] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f23f8>, (<src.tfidf.TF_IDF object at 0x11005cd10>, set(['.', 'roosevelt', 'theodore'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156f23f8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.22486487030982971, {u'tokens': [u'Roosevelt', u'beat', u'Taft', u'in', u'the', u'popular', u'vote', u'and', u'pulled', u'so', u'many', u'Progressives', u'out', u'of', u'the', u'Republican', u'Party', u'that', u'Democrat', u'Woodrow', u'Wilson', u'won', u'in', u'1912', u',', u'and', u'the', u'conservative', u'faction', u'took', u'control', u'of', u'the', u'Republican', u'Party', u'for', u'the', u'next', u'two', u'decades', u'.'], u'lemmas': [u'Roosevelt', u'beat', u'Taft', u'in', u'the', u'popular', u'vote', u'and', u'pull', u'so', u'many', u'Progressives', u'out', u'of', u'the', u'Republican', u'Party', u'that', u'Democrat', u'Woodrow', u'Wilson', u'win', u'in', u'1912', u',', u'and', u'the', u'conservative', u'faction', u'take', u'control', u'of', u'the', u'Republican', u'Party', u'for', u'the', u'next', u'two', u'decade', u'.'], u'pos': [u'NNP', u'VBD', u'NNP', u'IN', u'DT', u'JJ', u'NN', u'CC', u'VBD', u'RB', u'JJ', u'NNPS', u'IN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'NNP', u'NNP', u'NNP', u'VBD', u'IN', u'CD', u',', u'CC', u'DT', u'JJ', u'NN', u'VBD', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'IN', u'DT', u'JJ', u'CD', u'NNS', u'.'], u'char_offsets': [[2422, 2431], [2432, 2436], [2437, 2441], [2442, 2444], [2445, 2448], [2449, 2456], [2457, 2461], [2462, 2465], [2466, 2472], [2473, 2475], [2476, 2480], [2481, 2493], [2494, 2497], [2498, 2500], [2501, 2504], [2505, 2515], [2516, 2521], [2522, 2526], [2527, 2535], [2536, 2543], [2544, 2550], [2551, 2554], [2555, 2557], [2558, 2562], [2562, 2563], [2564, 2567], [2568, 2571], [2572, 2584], [2585, 2592], [2593, 2597], [2598, 2605], [2606, 2608], [2609, 2612], [2613, 2623], [2624, 2629], [2630, 2633], [2634, 2637], [2638, 2642], [2643, 2646], [2647, 2654], [2654, 2655]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.21656501293182373, {u'tokens': [u'TR', u'and', u'Will', u':', u'A', u'Friendship', u'that', u'Split', u'the', u'Republican', u'Party', u'.'], u'lemmas': [u'tr', u'and', u'will', u':', u'a', u'friendship', u'that', u'split', u'the', u'Republican', u'Party', u'.'], u'pos': [u'NN', u'CC', u'MD', u':', u'DT', u'NN', u'WDT', u'VBP', u'DT', u'NNP', u'NNP', u'.'], u'char_offsets': [[65580, 65582], [65583, 65586], [65587, 65591], [65591, 65592], [65593, 65594], [65595, 65605], [65606, 65610], [65611, 65616], [65617, 65620], [65621, 65631], [65632, 65637], [65637, 65638]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.20100529491901398, {u'tokens': [u'The', u'left', u'wing', u'of', u'the', u'Republican', u'Party', u'began', u'agitating', u'against', u'Taft', u'.'], u'lemmas': [u'the', u'left', u'wing', u'of', u'the', u'Republican', u'Party', u'begin', u'agitate', u'against', u'Taft', u'.'], u'pos': [u'DT', u'JJ', u'NN', u'IN', u'DT', u'NNP', u'NNP', u'VBD', u'VBG', u'IN', u'NNP', u'.'], u'char_offsets': [[51761, 51764], [51765, 51769], [51770, 51774], [51775, 51777], [51778, 51781], [51782, 51792], [51793, 51798], [51799, 51804], [51805, 51814], [51815, 51822], [51823, 51827], [51827, 51828]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.19322814047336578, {u'tokens': [u'Do', u'you', u'know', u'that', u'the', u'one', u'word', u'as', u'to', u'which', u'I', u'thought', u'the', u'new', u'spelling', u'was', u'wrong', u'thru', u'was', u'more', u'responsible', u'than', u'anything', u'else', u'for', u'our', u'discomfiture', u'?', u"''"], u'lemmas': [u'do', u'you', u'know', u'that', u'the', u'one', u'word', u'as', u'to', u'which', u'I', u'think', u'the', u'new', u'spelling', u'be', u'wrong', u'thru', u'be', u'more', u'responsible', u'than', u'anything', u'else', u'for', u'we', u'discomfiture', u'?', u"''"], u'pos': [u'VBP', u'PRP', u'VB', u'IN', u'DT', u'CD', u'NN', u'IN', u'TO', u'WDT', u'PRP', u'VBD', u'DT', u'JJ', u'NN', u'VBD', u'JJ', u'IN', u'VBD', u'RBR', u'JJ', u'IN', u'NN', u'RB', u'IN', u'PRP$', u'NN', u'.', u"''"], u'char_offsets': [[43940, 43942], [43943, 43946], [43947, 43951], [43952, 43956], [43957, 43960], [43961, 43964], [43965, 43969], [43970, 43972], [43973, 43975], [43976, 43981], [43982, 43983], [43984, 43991], [43992, 43995], [43996, 43999], [44000, 44008], [44009, 44012], [44013, 44018], [44021, 44025], [44028, 44031], [44032, 44036], [44037, 44048], [44049, 44053], [44054, 44062], [44063, 44067], [44068, 44071], [44072, 44075], [44076, 44088], [44088, 44089], [44089, 44090]]}) 
answer: set([u'member', u'parti', u'thedor', u'republican'])
candidate Sentence: (0.18518750369548798, {u'tokens': [u'Roosevelt', u'was', u'a', u'Progressive', u'reformer', u'who', u'sought', u'to', u'move', u'the', u'dominant', u'Republican', u'Party', u'into', u'the', u'Progressive', u'camp', u'.'], u'lemmas': [u'Roosevelt', u'be', u'a', u'progressive', u'reformer', u'who', u'seek', u'to', u'move', u'the', u'dominant', u'Republican', u'Party', u'into', u'the', u'Progressive', u'camp', u'.'], u'pos': [u'NNP', u'VBD', u'DT', u'JJ', u'NN', u'WP', u'VBD', u'TO', u'VB', u'DT', u'JJ', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NN', u'.'], u'char_offsets': [[1521, 1530], [1531, 1534], [1535, 1536], [1537, 1548], [1549, 1557], [1558, 1561], [1562, 1568], [1569, 1571], [1572, 1576], [1577, 1580], [1581, 1589], [1590, 1600], [1601, 1606], [1607, 1611], [1612, 1615], [1616, 1627], [1628, 1632], [1632, 1633]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.16099308431148529, {u'tokens': [u'The', u'family', u'was', u'strongly', u'Democratic', u'in', u'its', u'political', u'affiliation', u'until', u'the', u'mid-1850s', u',', u'then', u'joined', u'the', u'new', u'Republican', u'Party', u'.'], u'lemmas': [u'the', u'family', u'be', u'strongly', u'democratic', u'in', u'its', u'political', u'affiliation', u'until', u'the', u'mid-1850s', u',', u'then', u'join', u'the', u'new', u'Republican', u'Party', u'.'], u'pos': [u'DT', u'NN', u'VBD', u'RB', u'JJ', u'IN', u'PRP$', u'JJ', u'NN', u'IN', u'DT', u'CD', u',', u'RB', u'VBD', u'DT', u'JJ', u'NNP', u'NNP', u'.'], u'char_offsets': [[4497, 4500], [4501, 4507], [4508, 4511], [4512, 4520], [4521, 4531], [4532, 4534], [4535, 4538], [4539, 4548], [4549, 4560], [4561, 4566], [4567, 4570], [4571, 4580], [4580, 4581], [4582, 4586], [4587, 4593], [4594, 4597], [4598, 4601], [4602, 4612], [4613, 4618], [4618, 4619]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.15200026333332062, {u'tokens': [u'Roosevelt', u'did', u'so', u',', u'but', u'after', u'winning', u'election', u'in', u'1904', u',', u'he', u'moved', u'to', u'the', u'political', u'left', u',', u'stretching', u'his', u'ties', u'to', u'the', u'Republican', u'Party', u"'s", u'conservative', u'leaders', u'.'], u'lemmas': [u'Roosevelt', u'do', u'so', u',', u'but', u'after', u'win', u'election', u'in', u'1904', u',', u'he', u'move', u'to', u'the', u'political', u'left', u',', u'stretch', u'he', u'tie', u'to', u'the', u'Republican', u'Party', u"'s", u'conservative', u'leader', u'.'], u'pos': [u'NNP', u'VBD', u'RB', u',', u'CC', u'IN', u'VBG', u'NN', u'IN', u'CD', u',', u'PRP', u'VBD', u'TO', u'DT', u'JJ', u'NN', u',', u'VBG', u'PRP$', u'NNS', u'TO', u'DT', u'NNP', u'NNP', u'POS', u'JJ', u'NNS', u'.'], u'char_offsets': [[26539, 26548], [26549, 26552], [26553, 26555], [26555, 26556], [26557, 26560], [26561, 26566], [26567, 26574], [26575, 26583], [26584, 26586], [26587, 26591], [26591, 26592], [26593, 26595], [26596, 26601], [26602, 26604], [26605, 26608], [26609, 26618], [26619, 26623], [26623, 26624], [26625, 26635], [26636, 26639], [26640, 26644], [26645, 26647], [26648, 26651], [26652, 26662], [26663, 26668], [26668, 26670], [26671, 26683], [26684, 26691], [26691, 26692]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.14887909591197968, {u'tokens': [u'The', u'battle', u'between', u'Taft', u'and', u'Roosevelt', u'bitterly', u'split', u'the', u'Republican', u'Party', u';', u'Taft', u"'s", u'people', u'dominated', u'the', u'party', u'until', u'1936', u'.'], u'lemmas': [u'the', u'battle', u'between', u'Taft', u'and', u'Roosevelt', u'bitterly', u'split', u'the', u'Republican', u'Party', u';', u'Taft', u"'s", u'people', u'dominate', u'the', u'party', u'until', u'1936', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NNP', u'CC', u'NNP', u'RB', u'VBD', u'DT', u'NNP', u'NNP', u':', u'NNP', u'POS', u'NNS', u'VBD', u'DT', u'NN', u'IN', u'CD', u'.'], u'char_offsets': [[52959, 52962], [52963, 52969], [52970, 52977], [52978, 52982], [52983, 52986], [52987, 52996], [52997, 53005], [53006, 53011], [53012, 53015], [53016, 53026], [53027, 53032], [53032, 53033], [53034, 53038], [53038, 53040], [53041, 53047], [53048, 53057], [53058, 53061], [53062, 53067], [53068, 53073], [53074, 53078], [53078, 53079]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.14026680588722229, {u'tokens': [u'Progressive', u'Party', u'-LRB-', u'United', u'States', u',', u'1924', u'-RRB-', u'Progressive', u'Party', u'1912', u'-LRB-', u'United', u'States', u'-RRB-', u'American', u'Museum', u'of', u'Natural', u'History', u'American', u'Museum', u'of', u'Natural', u'History', u'Allies', u'of', u'World', u'War', u'I', u'Episcopal', u'Church', u'in', u'the', u'United', u'States', u'of', u'America', u'separation', u'of', u'church', u'and', u'state', u'National', u'Archives', u'and', u'Records', u'Administration', u'Theodore', u'Roosevelt', u'Birthplace', u'National', u'Historic', u'Site', u'The', u'Wind', u'and', u'the', u'Lion', u'List', u'of', u'U.S.', u'political', u'appointments', u'that', u'crossed', u'party', u'lines', u'Cylinder', u'Preservation', u'and', u'Digitization', u'Project', u'University', u'of', u'California', u',', u'Santa', u'Barbara', u'List', u'of', u'Governors', u'of', u'New', u'York', u'Vice', u'President', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'List', u'of', u'United', u'States', u'Republican', u'Party', u'presidential', u'tickets', u'List', u'of', u'United', u'States', u'Republican', u'Party', u'presidential', u'tickets', u'Progressive', u'Party', u'-LRB-', u'United', u'States', u',', u'1912', u'-RRB-', u'Oldest', u'living', u'United', u'States', u'president', u'President', u'of', u'the', u'United', u'States'], u'lemmas': [u'Progressive', u'Party', u'-lrb-', u'United', u'States', u',', u'1924', u'-rrb-', u'Progressive', u'Party', u'1912', u'-lrb-', u'United', u'States', u'-rrb-', u'american', u'museum', u'of', u'natural', u'history', u'american', u'museum', u'of', u'natural', u'history', u'ally', u'of', u'World', u'War', u'I', u'Episcopal', u'Church', u'in', u'the', u'United', u'States', u'of', u'America', u'separation', u'of', u'church', u'and', u'state', u'National', u'Archives', u'and', u'Records', u'Administration', u'Theodore', u'Roosevelt', u'Birthplace', u'National', u'Historic', u'site', u'the', u'wind', u'and', u'the', u'Lion', u'list', u'of', u'U.S.', u'political', u'appointment', u'that', u'cross', u'party', u'line', u'Cylinder', u'Preservation', u'and', u'Digitization', u'Project', u'University', u'of', u'California', u',', u'Santa', u'Barbara', u'list', u'of', u'governor', u'of', u'New', u'York', u'Vice', u'President', u'of', u'the', u'United', u'States', u'President', u'of', u'the', u'United', u'States', u'list', u'of', u'United', u'States', u'Republican', u'Party', u'presidential', u'ticket', u'list', u'of', u'United', u'States', u'Republican', u'Party', u'presidential', u'ticket', u'Progressive', u'Party', u'-lrb-', u'United', u'States', u',', u'1912', u'-rrb-', u'oldest', u'living', u'United', u'States', u'president', u'President', u'of', u'the', u'United', u'States'], u'pos': [u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNPS', u',', u'CD', u'-RRB-', u'NNP', u'NNP', u'CD', u'-LRB-', u'NNP', u'NNPS', u'-RRB-', u'JJ', u'NN', u'IN', u'JJ', u'NN', u'JJ', u'NN', u'IN', u'JJ', u'NN', u'NNS', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'IN', u'NNP', u'NN', u'IN', u'NN', u'CC', u'NN', u'NNP', u'NNPS', u'CC', u'NNPS', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'NN', u'DT', u'NN', u'CC', u'DT', u'NNP', u'NN', u'IN', u'NNP', u'JJ', u'NNS', u'WDT', u'VBD', u'NN', u'NNS', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'IN', u'NNP', u',', u'NNP', u'NNP', u'NN', u'IN', u'NNS', u'IN', u'NNP', u'NNP', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NNP', u'IN', u'DT', u'NNP', u'NNPS', u'NN', u'IN', u'NNP', u'NNPS', u'NNP', u'NNP', u'JJ', u'NNS', u'NN', u'IN', u'NNP', u'NNPS', u'NNP', u'NNP', u'JJ', u'NNS', u'NNP', u'NNP', u'-LRB-', u'NNP', u'NNPS', u',', u'CD', u'-RRB-', u'JJS', u'NN', u'NNP', u'NNPS', u'NN', u'NNP', u'IN', u'DT', u'NNP', u'NNPS'], u'char_offsets': [[84271, 84282], [84283, 84288], [84289, 84290], [84290, 84296], [84297, 84303], [84303, 84304], [84305, 84309], [84309, 84310], [84311, 84322], [84323, 84328], [84329, 84333], [84334, 84335], [84335, 84341], [84342, 84348], [84348, 84349], [84350, 84358], [84359, 84365], [84366, 84368], [84369, 84376], [84377, 84384], [84385, 84393], [84394, 84400], [84401, 84403], [84404, 84411], [84412, 84419], [84420, 84426], [84427, 84429], [84430, 84435], [84436, 84439], [84440, 84441], [84442, 84451], [84452, 84458], [84459, 84461], [84462, 84465], [84466, 84472], [84473, 84479], [84480, 84482], [84483, 84490], [84491, 84501], [84502, 84504], [84505, 84511], [84512, 84515], [84516, 84521], [84522, 84530], [84531, 84539], [84540, 84543], [84544, 84551], [84552, 84566], [84567, 84575], [84576, 84585], [84586, 84596], [84597, 84605], [84606, 84614], [84615, 84619], [84620, 84623], [84624, 84628], [84629, 84632], [84633, 84636], [84637, 84641], [84642, 84646], [84647, 84649], [84650, 84654], [84655, 84664], [84665, 84677], [84678, 84682], [84683, 84690], [84691, 84696], [84697, 84702], [84703, 84711], [84712, 84724], [84725, 84728], [84729, 84741], [84742, 84749], [84750, 84760], [84761, 84763], [84764, 84774], [84774, 84775], [84776, 84781], [84782, 84789], [84790, 84794], [84795, 84797], [84798, 84807], [84808, 84810], [84811, 84814], [84815, 84819], [84820, 84824], [84825, 84834], [84835, 84837], [84838, 84841], [84842, 84848], [84849, 84855], [84856, 84865], [84866, 84868], [84869, 84872], [84873, 84879], [84880, 84886], [84887, 84891], [84892, 84894], [84895, 84901], [84902, 84908], [84909, 84919], [84920, 84925], [84926, 84938], [84939, 84946], [84947, 84951], [84952, 84954], [84955, 84961], [84962, 84968], [84969, 84979], [84980, 84985], [84986, 84998], [84999, 85006], [85007, 85018], [85019, 85024], [85025, 85026], [85026, 85032], [85033, 85039], [85039, 85040], [85041, 85045], [85045, 85046], [85047, 85053], [85054, 85060], [85061, 85067], [85068, 85074], [85075, 85084], [85085, 85094], [85095, 85097], [85098, 85101], [85102, 85108], [85109, 85115]]}) 
answer: set([u'member', u'thedor'])
candidate Sentence: (0.13240990042686462, {u'tokens': [u'/', u'ref', u'>', u'Roosevelt', u'took', u'Cabinet', u'members', u'and', u'friends', u'on', u'long', u',', u'fast-paced', u'hikes', u',', u'boxed', u'in', u'the', u'state', u'rooms', u'of', u'the', u'White', u'House', u',', u'romped', u'with', u'his', u'children', u',', u'and', u'read', u'voraciously', u'.'], u'lemmas': [u'/', u'ref', u'>', u'Roosevelt', u'take', u'Cabinet', u'member', u'and', u'friend', u'on', u'long', u',', u'fast-paced', u'hike', u',', u'box', u'in', u'the', u'state', u'room', u'of', u'the', u'White', u'House', u',', u'romp', u'with', u'he', u'child', u',', u'and', u'read', u'voraciously', u'.'], u'pos': [u':', u'NN', u'JJR', u'NNP', u'VBD', u'NNP', u'NNS', u'CC', u'NNS', u'IN', u'JJ', u',', u'JJ', u'NNS', u',', u'VBN', u'IN', u'DT', u'NN', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u',', u'VBD', u'IN', u'PRP$', u'NNS', u',', u'CC', u'VB', u'RB', u'.'], u'char_offsets': [[42211, 42212], [42212, 42215], [42215, 42216], [42217, 42226], [42227, 42231], [42232, 42239], [42240, 42247], [42248, 42251], [42252, 42259], [42260, 42262], [42263, 42267], [42267, 42268], [42269, 42279], [42280, 42285], [42285, 42286], [42287, 42292], [42293, 42295], [42296, 42299], [42300, 42305], [42306, 42311], [42312, 42314], [42315, 42318], [42319, 42324], [42325, 42330], [42330, 42331], [42332, 42338], [42339, 42343], [42344, 42347], [42348, 42356], [42356, 42357], [42358, 42361], [42362, 42366], [42367, 42378], [42378, 42379]]}) 
answer: set([u'parti', u'thedor', u'republican'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'theodore', u'roosevelt', u'.'])

Was Thedore Roosevelt  a member of the Republican Party?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Theodore_Roosevelt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a7.txt

No
_____________________________ test_yesno[param324] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f24d0>, (<src.tfidf.TF_IDF object at 0x11005cd10>, set(['.', 'roosevelt', 'theodore'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156f24d0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.24325934052467346, {u'tokens': [u'Do', u'you', u'know', u'that', u'the', u'one', u'word', u'as', u'to', u'which', u'I', u'thought', u'the', u'new', u'spelling', u'was', u'wrong', u'thru', u'was', u'more', u'responsible', u'than', u'anything', u'else', u'for', u'our', u'discomfiture', u'?', u"''"], u'lemmas': [u'do', u'you', u'know', u'that', u'the', u'one', u'word', u'as', u'to', u'which', u'I', u'think', u'the', u'new', u'spelling', u'be', u'wrong', u'thru', u'be', u'more', u'responsible', u'than', u'anything', u'else', u'for', u'we', u'discomfiture', u'?', u"''"], u'pos': [u'VBP', u'PRP', u'VB', u'IN', u'DT', u'CD', u'NN', u'IN', u'TO', u'WDT', u'PRP', u'VBD', u'DT', u'JJ', u'NN', u'VBD', u'JJ', u'IN', u'VBD', u'RBR', u'JJ', u'IN', u'NN', u'RB', u'IN', u'PRP$', u'NN', u'.', u"''"], u'char_offsets': [[43940, 43942], [43943, 43946], [43947, 43951], [43952, 43956], [43957, 43960], [43961, 43964], [43965, 43969], [43970, 43972], [43973, 43975], [43976, 43981], [43982, 43983], [43984, 43991], [43992, 43995], [43996, 43999], [44000, 44008], [44009, 44012], [44013, 44018], [44021, 44025], [44028, 44031], [44032, 44036], [44037, 44048], [44049, 44053], [44054, 44062], [44063, 44067], [44068, 44071], [44072, 44075], [44076, 44088], [44088, 44089], [44089, 44090]]}) 
answer: set([u'go', u'harvard'])
candidate Sentence: (0.16156463325023651, {u'tokens': [u'He', u'was', u'runner-up', u'in', u'the', u'Harvard', u'boxing', u'championship', u',', u'losing', u'to', u'C.S.', u'Hanks', u'.'], u'lemmas': [u'he', u'be', u'runner-up', u'in', u'the', u'Harvard', u'boxing', u'championship', u',', u'lose', u'to', u'C.S.', u'Hanks', u'.'], u'pos': [u'PRP', u'VBD', u'JJ', u'IN', u'DT', u'NNP', u'NN', u'NN', u',', u'VBG', u'TO', u'NNP', u'NNP', u'.'], u'char_offsets': [[8797, 8799], [8800, 8803], [8804, 8813], [8814, 8816], [8817, 8820], [8821, 8828], [8829, 8835], [8836, 8848], [8848, 8849], [8850, 8856], [8857, 8859], [8860, 8864], [8865, 8870], [8870, 8871]]}) 
answer: set([u'go'])
candidate Sentence: (0.14704760909080505, {u'tokens': [u'``', u'Theodore', u'Roosevelt', u"''", u'.'], u'lemmas': [u'``', u'Theodore', u'Roosevelt', u"''", u'.'], u'pos': [u'``', u'NNP', u'NNP', u"''", u'.'], u'char_offsets': [[65070, 65071], [65071, 65079], [65080, 65089], [65089, 65090], [65090, 65091]]}) 
answer: set([u'go', u'harvard'])
candidate Sentence: (0.13616029918193817, {u'tokens': [u'Roosevelt', u'said', u'to', u'the', u'officers', u'of', u'the', u'Fleet', u',', u'``', u'Other', u'nations', u'may', u'do', u'what', u'you', u'have', u'done', u',', u'but', u'they', u"'ll", u'have', u'to', u'follow', u'you', u'.', u"''"], u'lemmas': [u'Roosevelt', u'say', u'to', u'the', u'officer', u'of', u'the', u'Fleet', u',', u'``', u'other', u'nation', u'may', u'do', u'what', u'you', u'have', u'do', u',', u'but', u'they', u"'ll", u'have', u'to', u'follow', u'you', u'.', u"''"], u'pos': [u'NNP', u'VBD', u'TO', u'DT', u'NNS', u'IN', u'DT', u'NNP', u',', u'``', u'JJ', u'NNS', u'MD', u'VB', u'WP', u'PRP', u'VBP', u'VBN', u',', u'CC', u'PRP', u'MD', u'VB', u'TO', u'VB', u'PRP', u'.', u"''"], u'char_offsets': [[40472, 40481], [40482, 40486], [40487, 40489], [40490, 40493], [40494, 40502], [40503, 40505], [40506, 40509], [40510, 40515], [40515, 40516], [40517, 40518], [40518, 40523], [40524, 40531], [40532, 40535], [40536, 40538], [40539, 40543], [40544, 40547], [40548, 40552], [40553, 40557], [40557, 40558], [40559, 40562], [40563, 40567], [40567, 40570], [40571, 40575], [40576, 40578], [40579, 40585], [40586, 40589], [40589, 40590], [40590, 40591]]}) 
answer: set([u'go', u'harvard'])
candidate Sentence: (0.13479189574718475, {u'tokens': [u'They', u'did', u'not', u'act', u'but', u'Roosevelt', u'did', u',', u'issuing', u'44', u'lawsuits', u'against', u'major', u'corporations', u';', u'he', u'was', u'called', u'the', u'``', u'trust-buster', u'.', u"''"], u'lemmas': [u'they', u'do', u'not', u'act', u'but', u'Roosevelt', u'do', u',', u'issue', u'44', u'lawsuit', u'against', u'major', u'corporation', u';', u'he', u'be', u'call', u'the', u'``', u'trust-buster', u'.', u"''"], u'pos': [u'PRP', u'VBD', u'RB', u'VB', u'CC', u'NNP', u'VBD', u',', u'VBG', u'CD', u'NNS', u'IN', u'JJ', u'NNS', u':', u'PRP', u'VBD', u'VBN', u'DT', u'``', u'NN', u'.', u"''"], u'char_offsets': [[27476, 27480], [27481, 27484], [27485, 27488], [27489, 27492], [27493, 27496], [27497, 27506], [27507, 27510], [27510, 27511], [27512, 27519], [27520, 27522], [27523, 27531], [27532, 27539], [27540, 27545], [27546, 27558], [27558, 27559], [27560, 27562], [27563, 27566], [27567, 27573], [27574, 27577], [27578, 27579], [27579, 27591], [27591, 27592], [27592, 27593]]}) 
answer: set([u'go', u'harvard'])
candidate Sentence: (0.11994302272796631, {u'tokens': [u'Brands', u'T.', u'R.', u'p.', u'4950', u'He', u'matriculated', u'at', u'Harvard', u'College', u'in', u'1876', u',', u'graduating', u'magna', u'cum', u'laude', u'.'], u'lemmas': [u'Brands', u'T.', u'R.', u'p.', u'4950', u'he', u'matriculate', u'at', u'Harvard', u'College', u'in', u'1876', u',', u'graduate', u'magna', u'cum', u'laude', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'NN', u'CD', u'PRP', u'VBD', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u',', u'VBG', u'NN', u'NN', u'NN', u'.'], u'char_offsets': [[7875, 7881], [7882, 7884], [7885, 7887], [7888, 7890], [7891, 7895], [7897, 7899], [7900, 7912], [7913, 7915], [7916, 7923], [7924, 7931], [7932, 7934], [7935, 7939], [7939, 7940], [7941, 7951], [7952, 7957], [7958, 7961], [7962, 7967], [7967, 7968]]}) 
answer: set([u'go'])
candidate Sentence: (0.10973344743251801, {u'tokens': [u'While', u'at', u'Harvard', u',', u'Roosevelt', u'was', u'active', u'in', u'rowing', u',', u'boxing', u'and', u'the', u'Alpha', u'Delta', u'Phi', u'and', u'Delta', u'Kappa', u'Epsilon', u'fraternities', u'.'], u'lemmas': [u'while', u'at', u'Harvard', u',', u'Roosevelt', u'be', u'active', u'in', u'rowing', u',', u'boxing', u'and', u'the', u'Alpha', u'Delta', u'Phi', u'and', u'Delta', u'Kappa', u'Epsilon', u'fraternity', u'.'], u'pos': [u'IN', u'IN', u'NNP', u',', u'NNP', u'VBD', u'JJ', u'IN', u'NN', u',', u'NN', u'CC', u'DT', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'NNS', u'.'], u'char_offsets': [[8642, 8647], [8648, 8650], [8651, 8658], [8658, 8659], [8660, 8669], [8670, 8673], [8674, 8680], [8681, 8683], [8684, 8690], [8690, 8691], [8692, 8698], [8699, 8702], [8703, 8706], [8707, 8712], [8713, 8718], [8719, 8722], [8723, 8726], [8727, 8732], [8733, 8738], [8739, 8746], [8747, 8759], [8759, 8760]]}) 
answer: set([u'go'])
candidate Sentence: (0.10942667722702026, {u'tokens': [u'I', u'can', u'not', u'possibly', u'do', u'both', u'.', u"''"], u'lemmas': [u'I', u'can', u'not', u'possibly', u'do', u'both', u'.', u"''"], u'pos': [u'PRP', u'MD', u'RB', u'RB', u'VB', u'DT', u'.', u"''"], u'char_offsets': [[44510, 44511], [44512, 44515], [44515, 44518], [44519, 44527], [44528, 44530], [44531, 44535], [44535, 44536], [44536, 44537]]}) 
answer: set([u'go', u'harvard'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'theodore', u'roosevelt', u'.'])

Did Theodore Roosevelt go to Harvard?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Theodore_Roosevelt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a7.txt

No
_____________________________ test_yesno[param325] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f2518>, (<src.tfidf.TF_IDF object at 0x11005cd10>, set(['.', 'roosevelt', 'theodore'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156f2518>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.24325934052467346, {u'tokens': [u'Do', u'you', u'know', u'that', u'the', u'one', u'word', u'as', u'to', u'which', u'I', u'thought', u'the', u'new', u'spelling', u'was', u'wrong', u'thru', u'was', u'more', u'responsible', u'than', u'anything', u'else', u'for', u'our', u'discomfiture', u'?', u"''"], u'lemmas': [u'do', u'you', u'know', u'that', u'the', u'one', u'word', u'as', u'to', u'which', u'I', u'think', u'the', u'new', u'spelling', u'be', u'wrong', u'thru', u'be', u'more', u'responsible', u'than', u'anything', u'else', u'for', u'we', u'discomfiture', u'?', u"''"], u'pos': [u'VBP', u'PRP', u'VB', u'IN', u'DT', u'CD', u'NN', u'IN', u'TO', u'WDT', u'PRP', u'VBD', u'DT', u'JJ', u'NN', u'VBD', u'JJ', u'IN', u'VBD', u'RBR', u'JJ', u'IN', u'NN', u'RB', u'IN', u'PRP$', u'NN', u'.', u"''"], u'char_offsets': [[43940, 43942], [43943, 43946], [43947, 43951], [43952, 43956], [43957, 43960], [43961, 43964], [43965, 43969], [43970, 43972], [43973, 43975], [43976, 43981], [43982, 43983], [43984, 43991], [43992, 43995], [43996, 43999], [44000, 44008], [44009, 44012], [44013, 44018], [44021, 44025], [44028, 44031], [44032, 44036], [44037, 44048], [44049, 44053], [44054, 44062], [44063, 44067], [44068, 44071], [44072, 44075], [44076, 44088], [44088, 44089], [44089, 44090]]}) 
answer: set([u'go', u'harvard'])
candidate Sentence: (0.16156463325023651, {u'tokens': [u'He', u'was', u'runner-up', u'in', u'the', u'Harvard', u'boxing', u'championship', u',', u'losing', u'to', u'C.S.', u'Hanks', u'.'], u'lemmas': [u'he', u'be', u'runner-up', u'in', u'the', u'Harvard', u'boxing', u'championship', u',', u'lose', u'to', u'C.S.', u'Hanks', u'.'], u'pos': [u'PRP', u'VBD', u'JJ', u'IN', u'DT', u'NNP', u'NN', u'NN', u',', u'VBG', u'TO', u'NNP', u'NNP', u'.'], u'char_offsets': [[8797, 8799], [8800, 8803], [8804, 8813], [8814, 8816], [8817, 8820], [8821, 8828], [8829, 8835], [8836, 8848], [8848, 8849], [8850, 8856], [8857, 8859], [8860, 8864], [8865, 8870], [8870, 8871]]}) 
answer: set([u'go'])
candidate Sentence: (0.14704760909080505, {u'tokens': [u'``', u'Theodore', u'Roosevelt', u"''", u'.'], u'lemmas': [u'``', u'Theodore', u'Roosevelt', u"''", u'.'], u'pos': [u'``', u'NNP', u'NNP', u"''", u'.'], u'char_offsets': [[65070, 65071], [65071, 65079], [65080, 65089], [65089, 65090], [65090, 65091]]}) 
answer: set([u'go', u'harvard'])
candidate Sentence: (0.13616029918193817, {u'tokens': [u'Roosevelt', u'said', u'to', u'the', u'officers', u'of', u'the', u'Fleet', u',', u'``', u'Other', u'nations', u'may', u'do', u'what', u'you', u'have', u'done', u',', u'but', u'they', u"'ll", u'have', u'to', u'follow', u'you', u'.', u"''"], u'lemmas': [u'Roosevelt', u'say', u'to', u'the', u'officer', u'of', u'the', u'Fleet', u',', u'``', u'other', u'nation', u'may', u'do', u'what', u'you', u'have', u'do', u',', u'but', u'they', u"'ll", u'have', u'to', u'follow', u'you', u'.', u"''"], u'pos': [u'NNP', u'VBD', u'TO', u'DT', u'NNS', u'IN', u'DT', u'NNP', u',', u'``', u'JJ', u'NNS', u'MD', u'VB', u'WP', u'PRP', u'VBP', u'VBN', u',', u'CC', u'PRP', u'MD', u'VB', u'TO', u'VB', u'PRP', u'.', u"''"], u'char_offsets': [[40472, 40481], [40482, 40486], [40487, 40489], [40490, 40493], [40494, 40502], [40503, 40505], [40506, 40509], [40510, 40515], [40515, 40516], [40517, 40518], [40518, 40523], [40524, 40531], [40532, 40535], [40536, 40538], [40539, 40543], [40544, 40547], [40548, 40552], [40553, 40557], [40557, 40558], [40559, 40562], [40563, 40567], [40567, 40570], [40571, 40575], [40576, 40578], [40579, 40585], [40586, 40589], [40589, 40590], [40590, 40591]]}) 
answer: set([u'go', u'harvard'])
candidate Sentence: (0.13479189574718475, {u'tokens': [u'They', u'did', u'not', u'act', u'but', u'Roosevelt', u'did', u',', u'issuing', u'44', u'lawsuits', u'against', u'major', u'corporations', u';', u'he', u'was', u'called', u'the', u'``', u'trust-buster', u'.', u"''"], u'lemmas': [u'they', u'do', u'not', u'act', u'but', u'Roosevelt', u'do', u',', u'issue', u'44', u'lawsuit', u'against', u'major', u'corporation', u';', u'he', u'be', u'call', u'the', u'``', u'trust-buster', u'.', u"''"], u'pos': [u'PRP', u'VBD', u'RB', u'VB', u'CC', u'NNP', u'VBD', u',', u'VBG', u'CD', u'NNS', u'IN', u'JJ', u'NNS', u':', u'PRP', u'VBD', u'VBN', u'DT', u'``', u'NN', u'.', u"''"], u'char_offsets': [[27476, 27480], [27481, 27484], [27485, 27488], [27489, 27492], [27493, 27496], [27497, 27506], [27507, 27510], [27510, 27511], [27512, 27519], [27520, 27522], [27523, 27531], [27532, 27539], [27540, 27545], [27546, 27558], [27558, 27559], [27560, 27562], [27563, 27566], [27567, 27573], [27574, 27577], [27578, 27579], [27579, 27591], [27591, 27592], [27592, 27593]]}) 
answer: set([u'go', u'harvard'])
candidate Sentence: (0.11994302272796631, {u'tokens': [u'Brands', u'T.', u'R.', u'p.', u'4950', u'He', u'matriculated', u'at', u'Harvard', u'College', u'in', u'1876', u',', u'graduating', u'magna', u'cum', u'laude', u'.'], u'lemmas': [u'Brands', u'T.', u'R.', u'p.', u'4950', u'he', u'matriculate', u'at', u'Harvard', u'College', u'in', u'1876', u',', u'graduate', u'magna', u'cum', u'laude', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'NN', u'CD', u'PRP', u'VBD', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u',', u'VBG', u'NN', u'NN', u'NN', u'.'], u'char_offsets': [[7875, 7881], [7882, 7884], [7885, 7887], [7888, 7890], [7891, 7895], [7897, 7899], [7900, 7912], [7913, 7915], [7916, 7923], [7924, 7931], [7932, 7934], [7935, 7939], [7939, 7940], [7941, 7951], [7952, 7957], [7958, 7961], [7962, 7967], [7967, 7968]]}) 
answer: set([u'go'])
candidate Sentence: (0.10973344743251801, {u'tokens': [u'While', u'at', u'Harvard', u',', u'Roosevelt', u'was', u'active', u'in', u'rowing', u',', u'boxing', u'and', u'the', u'Alpha', u'Delta', u'Phi', u'and', u'Delta', u'Kappa', u'Epsilon', u'fraternities', u'.'], u'lemmas': [u'while', u'at', u'Harvard', u',', u'Roosevelt', u'be', u'active', u'in', u'rowing', u',', u'boxing', u'and', u'the', u'Alpha', u'Delta', u'Phi', u'and', u'Delta', u'Kappa', u'Epsilon', u'fraternity', u'.'], u'pos': [u'IN', u'IN', u'NNP', u',', u'NNP', u'VBD', u'JJ', u'IN', u'NN', u',', u'NN', u'CC', u'DT', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'NNP', u'NNS', u'.'], u'char_offsets': [[8642, 8647], [8648, 8650], [8651, 8658], [8658, 8659], [8660, 8669], [8670, 8673], [8674, 8680], [8681, 8683], [8684, 8690], [8690, 8691], [8692, 8698], [8699, 8702], [8703, 8706], [8707, 8712], [8713, 8718], [8719, 8722], [8723, 8726], [8727, 8732], [8733, 8738], [8739, 8746], [8747, 8759], [8759, 8760]]}) 
answer: set([u'go'])
candidate Sentence: (0.10942667722702026, {u'tokens': [u'I', u'can', u'not', u'possibly', u'do', u'both', u'.', u"''"], u'lemmas': [u'I', u'can', u'not', u'possibly', u'do', u'both', u'.', u"''"], u'pos': [u'PRP', u'MD', u'RB', u'RB', u'VB', u'DT', u'.', u"''"], u'char_offsets': [[44510, 44511], [44512, 44515], [44515, 44518], [44519, 44527], [44528, 44530], [44531, 44535], [44535, 44536], [44536, 44537]]}) 
answer: set([u'go', u'harvard'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'theodore', u'roosevelt', u'.'])

Did Theodore Roosevelt go to Harvard?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Theodore_Roosevelt
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a7.txt

No
_____________________________ test_yesno[param332] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f2710>, (<src.tfidf.TF_IDF object at 0x11005cf90>, set(['.', 'turtle'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156f2710>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.24589851498603821, {u'tokens': [u'Like', u'other', u'reptiles', u',', u'turtles', u'are', u'ectothermic', u'-LRB-', u'or', u'``', u'cold-blooded', u"''", u'Reptile', u'blood', u'is', u"n't", u'necessarily', u'cold', u',', u'as', u'reptiles', u'sun', u'themselves', u'and', u'take', u'other', u'measures', u'to', u'stay', u'warm', u'.', u'-RRB-'], u'lemmas': [u'like', u'other', u'reptile', u',', u'turtle', u'be', u'ectothermic', u'-lrb-', u'or', u'``', u'cold-blooded', u"''", u'reptile', u'blood', u'be', u'not', u'necessarily', u'cold', u',', u'as', u'reptile', u'sun', u'themselves', u'and', u'take', u'other', u'measure', u'to', u'stay', u'warm', u'.', u'-rrb-'], u'pos': [u'IN', u'JJ', u'NNS', u',', u'NNS', u'VBP', u'JJ', u'-LRB-', u'CC', u'``', u'JJ', u"''", u'JJ', u'NN', u'VBZ', u'RB', u'RB', u'JJ', u',', u'IN', u'NNS', u'NN', u'PRP', u'CC', u'VB', u'JJ', u'NNS', u'TO', u'VB', u'JJ', u'.', u'-RRB-'], u'char_offsets': [[518, 522], [523, 528], [529, 537], [537, 538], [539, 546], [547, 550], [551, 562], [563, 564], [564, 566], [567, 568], [568, 580], [580, 581], [582, 589], [590, 595], [596, 598], [598, 601], [602, 613], [614, 618], [618, 619], [620, 622], [623, 631], [632, 635], [636, 646], [647, 650], [651, 655], [656, 661], [662, 670], [671, 673], [674, 678], [679, 683], [683, 684], [685, 686]]}) 
answer: set([])
candidate Sentence: (0.053201813250780106, {u'tokens': [u'The', u'largest', u'turtles', u'are', u'aquatic', u'.'], u'lemmas': [u'the', u'largest', u'turtle', u'be', u'aquatic', u'.'], u'pos': [u'DT', u'JJS', u'NNS', u'VBP', u'JJ', u'.'], u'char_offsets': [[844, 847], [848, 855], [856, 863], [864, 867], [868, 875], [875, 876]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.044489249587059021, {u'tokens': [u'Aquatic', u'respiration', u'in', u'Australian', u'freshwater', u'turtles', u'is', u'currently', u'being', u'studied', u'.'], u'lemmas': [u'aquatic', u'respiration', u'in', u'australian', u'freshwater', u'turtle', u'be', u'currently', u'be', u'study', u'.'], u'pos': [u'JJ', u'NN', u'IN', u'JJ', u'NN', u'NNS', u'VBZ', u'RB', u'VBG', u'VBN', u'.'], u'char_offsets': [[1136, 1143], [1144, 1155], [1156, 1158], [1159, 1169], [1170, 1180], [1181, 1188], [1189, 1191], [1192, 1201], [1202, 1207], [1208, 1215], [1215, 1216]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.034065179526805878, {u'tokens': [u'Different', u'animals', u'are', u'called', u'turtles', u',', u'tortoises', u',', u'or', u'terrapins', u'in', u'different', u'varieties', u'of', u'English', u'Turtles', u',', u'particularly', u'small', u'terrestrial', u'and', u'freshwater', u'turtles', u',', u'are', u'commonly', u'kept', u'as', u'pets', u'.'], u'lemmas': [u'different', u'animal', u'be', u'call', u'turtle', u',', u'tortoise', u',', u'or', u'terrapin', u'in', u'different', u'variety', u'of', u'English', u'Turtles', u',', u'particularly', u'small', u'terrestrial', u'and', u'freshwater', u'turtle', u',', u'be', u'commonly', u'keep', u'as', u'pet', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'VBN', u'NNS', u',', u'NNS', u',', u'CC', u'NNS', u'IN', u'JJ', u'NNS', u'IN', u'NNP', u'NNPS', u',', u'RB', u'JJ', u'NN', u'CC', u'NN', u'NNS', u',', u'VBP', u'RB', u'VBN', u'IN', u'NNS', u'.'], u'char_offsets': [[3557, 3566], [3567, 3574], [3575, 3578], [3579, 3585], [3586, 3593], [3593, 3594], [3595, 3604], [3604, 3605], [3606, 3608], [3609, 3618], [3619, 3621], [3622, 3631], [3632, 3641], [3642, 3644], [3645, 3652], [3653, 3660], [3660, 3661], [3662, 3674], [3675, 3680], [3681, 3692], [3693, 3696], [3697, 3707], [3708, 3715], [3715, 3716], [3717, 3720], [3721, 3729], [3730, 3734], [3735, 3737], [3738, 3742], [3742, 3743]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.030482113361358643, {u'tokens': [u'Immature', u'sea', u'turtles', u'are', u'not', u'cared', u'for', u'by', u'the', u'adults', u'.'], u'lemmas': [u'immature', u'sea', u'turtle', u'be', u'not', u'care', u'for', u'by', u'the', u'adult', u'.'], u'pos': [u'JJ', u'NN', u'NNS', u'VBP', u'RB', u'VBN', u'IN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[2380, 2388], [2389, 2392], [2393, 2400], [2401, 2404], [2405, 2408], [2409, 2414], [2415, 2418], [2419, 2421], [2422, 2425], [2426, 2432], [2432, 2433]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.030303478240966797, {u'tokens': [u'Turtles', u'are', u'reptilians', u'of', u'the', u'Order', u'Testudines', u'-LRB-', u'all', u'living', u'turtles', u'belong', u'to', u'the', u'crown', u'group', u'Chelonia', u'-RRB-', u',', u'most', u'of', u'whose', u'body', u'is', u'shielded', u'by', u'a', u'special', u'bony', u'or', u'cartilaginous', u'shell', u'developed', u'from', u'their', u'ribs', u'.'], u'lemmas': [u'turtle', u'be', u'reptilian', u'of', u'the', u'order', u'testudine', u'-lrb-', u'all', u'live', u'turtle', u'belong', u'to', u'the', u'crown', u'group', u'Chelonia', u'-rrb-', u',', u'most', u'of', u'whose', u'body', u'be', u'shield', u'by', u'a', u'special', u'bony', u'or', u'cartilaginous', u'shell', u'develop', u'from', u'they', u'rib', u'.'], u'pos': [u'NNS', u'VBP', u'NNS', u'IN', u'DT', u'NN', u'NNS', u'-LRB-', u'DT', u'VBG', u'NNS', u'VBP', u'TO', u'DT', u'NN', u'NN', u'NNP', u'-RRB-', u',', u'JJS', u'IN', u'WP$', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'CC', u'JJ', u'NN', u'VBN', u'IN', u'PRP$', u'NNS', u'.'], u'char_offsets': [[0, 7], [8, 11], [12, 22], [23, 25], [26, 29], [30, 35], [36, 46], [47, 48], [48, 51], [52, 58], [59, 66], [67, 73], [74, 76], [77, 80], [81, 86], [87, 92], [93, 101], [101, 102], [102, 103], [104, 108], [109, 111], [112, 117], [118, 122], [123, 125], [126, 134], [135, 137], [138, 139], [140, 147], [148, 152], [153, 155], [156, 169], [170, 175], [176, 185], [186, 190], [191, 196], [197, 201], [201, 202]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.030135730281472206, {u'tokens': [u'It', u'was', u'found', u'that', u'the', u'liver', u',', u'lungs', u'and', u'kidneys', u'of', u'a', u'centenarian', u'turtle', u'are', u'virtually', u'indistinguishable', u'from', u'those', u'of', u'its', u'immature', u'counterpart', u'.'], u'lemmas': [u'it', u'be', u'find', u'that', u'the', u'liver', u',', u'lung', u'and', u'kidney', u'of', u'a', u'centenarian', u'turtle', u'be', u'virtually', u'indistinguishable', u'from', u'those', u'of', u'its', u'immature', u'counterpart', u'.'], u'pos': [u'PRP', u'VBD', u'VBN', u'IN', u'DT', u'NN', u',', u'NNS', u'CC', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'VBP', u'RB', u'JJ', u'IN', u'DT', u'IN', u'PRP$', u'JJ', u'NN', u'.'], u'char_offsets': [[2759, 2761], [2762, 2765], [2766, 2771], [2772, 2776], [2777, 2780], [2781, 2786], [2786, 2787], [2788, 2793], [2794, 2797], [2798, 2805], [2806, 2808], [2809, 2810], [2811, 2822], [2823, 2829], [2830, 2833], [2834, 2843], [2844, 2861], [2862, 2866], [2867, 2872], [2873, 2875], [2876, 2879], [2880, 2888], [2889, 2900], [2900, 2901]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.029423177242279053, {u'tokens': [u'The', u'Cryptodira', u'is', u'the', u'larger', u'of', u'the', u'two', u'groups', u'and', u'includes', u'all', u'the', u'marine', u'turtles', u',', u'the', u'terrestrial', u'tortoises', u',', u'and', u'many', u'of', u'the', u'freshwater', u'turtles', u'.'], u'lemmas': [u'the', u'Cryptodira', u'be', u'the', u'larger', u'of', u'the', u'two', u'group', u'and', u'include', u'all', u'the', u'marine', u'turtle', u',', u'the', u'terrestrial', u'tortoise', u',', u'and', u'many', u'of', u'the', u'freshwater', u'turtle', u'.'], u'pos': [u'DT', u'NNP', u'VBZ', u'DT', u'JJR', u'IN', u'DT', u'CD', u'NNS', u'CC', u'VBZ', u'PDT', u'DT', u'JJ', u'NNS', u',', u'DT', u'JJ', u'NNS', u',', u'CC', u'JJ', u'IN', u'DT', u'NN', u'NNS', u'.'], u'char_offsets': [[3210, 3213], [3214, 3224], [3225, 3227], [3228, 3231], [3232, 3238], [3239, 3241], [3242, 3245], [3246, 3249], [3250, 3256], [3257, 3260], [3261, 3269], [3270, 3273], [3274, 3277], [3278, 3284], [3285, 3292], [3292, 3293], [3294, 3297], [3298, 3309], [3310, 3319], [3319, 3320], [3321, 3324], [3325, 3329], [3330, 3332], [3333, 3336], [3337, 3347], [3348, 3355], [3355, 3356]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.029330996796488762, {u'tokens': [u'The', u'eggs', u'of', u'the', u'largest', u'species', u'are', u'spherical', u',', u'while', u'the', u'eggs', u'of', u'the', u'rest', u'are', u'elongated', u'.'], u'lemmas': [u'the', u'egg', u'of', u'the', u'largest', u'species', u'be', u'spherical', u',', u'while', u'the', u'egg', u'of', u'the', u'rest', u'be', u'elongate', u'.'], u'pos': [u'DT', u'NNS', u'IN', u'DT', u'JJS', u'NNS', u'VBP', u'JJ', u',', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NN', u'VBP', u'VBN', u'.'], u'char_offsets': [[1634, 1637], [1638, 1642], [1643, 1645], [1646, 1649], [1650, 1657], [1658, 1665], [1666, 1669], [1670, 1679], [1679, 1680], [1681, 1686], [1687, 1690], [1691, 1695], [1696, 1698], [1699, 1702], [1703, 1707], [1708, 1711], [1712, 1721], [1721, 1722]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.02883809432387352, {u'tokens': [u'About', u'300', u'species', u'are', u'alive', u'today', u';', u'some', u'are', u'highly', u'endangered', u'.'], u'lemmas': [u'about', u'300', u'species', u'be', u'alive', u'today', u';', u'some', u'be', u'highly', u'endanger', u'.'], u'pos': [u'IN', u'CD', u'NNS', u'VBP', u'JJ', u'NN', u':', u'DT', u'VBP', u'RB', u'VBN', u'.'], u'char_offsets': [[455, 460], [461, 464], [465, 472], [473, 476], [477, 482], [483, 488], [488, 489], [490, 494], [495, 498], [499, 505], [506, 516], [516, 517]]}) 
answer: set([u'ectotherm'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'turtle', u'.'])

Are turtles ectothermic?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = turtle
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a9.txt

No
_____________________________ test_yesno[param333] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f2758>, (<src.tfidf.TF_IDF object at 0x11005cf90>, set(['.', 'turtle'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('yes')
E            +    where 'yes' = <src.question_processing.Question_parser instance at 0x1156f2758>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.24589851498603821, {u'tokens': [u'Like', u'other', u'reptiles', u',', u'turtles', u'are', u'ectothermic', u'-LRB-', u'or', u'``', u'cold-blooded', u"''", u'Reptile', u'blood', u'is', u"n't", u'necessarily', u'cold', u',', u'as', u'reptiles', u'sun', u'themselves', u'and', u'take', u'other', u'measures', u'to', u'stay', u'warm', u'.', u'-RRB-'], u'lemmas': [u'like', u'other', u'reptile', u',', u'turtle', u'be', u'ectothermic', u'-lrb-', u'or', u'``', u'cold-blooded', u"''", u'reptile', u'blood', u'be', u'not', u'necessarily', u'cold', u',', u'as', u'reptile', u'sun', u'themselves', u'and', u'take', u'other', u'measure', u'to', u'stay', u'warm', u'.', u'-rrb-'], u'pos': [u'IN', u'JJ', u'NNS', u',', u'NNS', u'VBP', u'JJ', u'-LRB-', u'CC', u'``', u'JJ', u"''", u'JJ', u'NN', u'VBZ', u'RB', u'RB', u'JJ', u',', u'IN', u'NNS', u'NN', u'PRP', u'CC', u'VB', u'JJ', u'NNS', u'TO', u'VB', u'JJ', u'.', u'-RRB-'], u'char_offsets': [[518, 522], [523, 528], [529, 537], [537, 538], [539, 546], [547, 550], [551, 562], [563, 564], [564, 566], [567, 568], [568, 580], [580, 581], [582, 589], [590, 595], [596, 598], [598, 601], [602, 613], [614, 618], [618, 619], [620, 622], [623, 631], [632, 635], [636, 646], [647, 650], [651, 655], [656, 661], [662, 670], [671, 673], [674, 678], [679, 683], [683, 684], [685, 686]]}) 
answer: set([])
candidate Sentence: (0.053201813250780106, {u'tokens': [u'The', u'largest', u'turtles', u'are', u'aquatic', u'.'], u'lemmas': [u'the', u'largest', u'turtle', u'be', u'aquatic', u'.'], u'pos': [u'DT', u'JJS', u'NNS', u'VBP', u'JJ', u'.'], u'char_offsets': [[844, 847], [848, 855], [856, 863], [864, 867], [868, 875], [875, 876]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.044489249587059021, {u'tokens': [u'Aquatic', u'respiration', u'in', u'Australian', u'freshwater', u'turtles', u'is', u'currently', u'being', u'studied', u'.'], u'lemmas': [u'aquatic', u'respiration', u'in', u'australian', u'freshwater', u'turtle', u'be', u'currently', u'be', u'study', u'.'], u'pos': [u'JJ', u'NN', u'IN', u'JJ', u'NN', u'NNS', u'VBZ', u'RB', u'VBG', u'VBN', u'.'], u'char_offsets': [[1136, 1143], [1144, 1155], [1156, 1158], [1159, 1169], [1170, 1180], [1181, 1188], [1189, 1191], [1192, 1201], [1202, 1207], [1208, 1215], [1215, 1216]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.034065179526805878, {u'tokens': [u'Different', u'animals', u'are', u'called', u'turtles', u',', u'tortoises', u',', u'or', u'terrapins', u'in', u'different', u'varieties', u'of', u'English', u'Turtles', u',', u'particularly', u'small', u'terrestrial', u'and', u'freshwater', u'turtles', u',', u'are', u'commonly', u'kept', u'as', u'pets', u'.'], u'lemmas': [u'different', u'animal', u'be', u'call', u'turtle', u',', u'tortoise', u',', u'or', u'terrapin', u'in', u'different', u'variety', u'of', u'English', u'Turtles', u',', u'particularly', u'small', u'terrestrial', u'and', u'freshwater', u'turtle', u',', u'be', u'commonly', u'keep', u'as', u'pet', u'.'], u'pos': [u'JJ', u'NNS', u'VBP', u'VBN', u'NNS', u',', u'NNS', u',', u'CC', u'NNS', u'IN', u'JJ', u'NNS', u'IN', u'NNP', u'NNPS', u',', u'RB', u'JJ', u'NN', u'CC', u'NN', u'NNS', u',', u'VBP', u'RB', u'VBN', u'IN', u'NNS', u'.'], u'char_offsets': [[3557, 3566], [3567, 3574], [3575, 3578], [3579, 3585], [3586, 3593], [3593, 3594], [3595, 3604], [3604, 3605], [3606, 3608], [3609, 3618], [3619, 3621], [3622, 3631], [3632, 3641], [3642, 3644], [3645, 3652], [3653, 3660], [3660, 3661], [3662, 3674], [3675, 3680], [3681, 3692], [3693, 3696], [3697, 3707], [3708, 3715], [3715, 3716], [3717, 3720], [3721, 3729], [3730, 3734], [3735, 3737], [3738, 3742], [3742, 3743]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.030482113361358643, {u'tokens': [u'Immature', u'sea', u'turtles', u'are', u'not', u'cared', u'for', u'by', u'the', u'adults', u'.'], u'lemmas': [u'immature', u'sea', u'turtle', u'be', u'not', u'care', u'for', u'by', u'the', u'adult', u'.'], u'pos': [u'JJ', u'NN', u'NNS', u'VBP', u'RB', u'VBN', u'IN', u'IN', u'DT', u'NNS', u'.'], u'char_offsets': [[2380, 2388], [2389, 2392], [2393, 2400], [2401, 2404], [2405, 2408], [2409, 2414], [2415, 2418], [2419, 2421], [2422, 2425], [2426, 2432], [2432, 2433]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.030303478240966797, {u'tokens': [u'Turtles', u'are', u'reptilians', u'of', u'the', u'Order', u'Testudines', u'-LRB-', u'all', u'living', u'turtles', u'belong', u'to', u'the', u'crown', u'group', u'Chelonia', u'-RRB-', u',', u'most', u'of', u'whose', u'body', u'is', u'shielded', u'by', u'a', u'special', u'bony', u'or', u'cartilaginous', u'shell', u'developed', u'from', u'their', u'ribs', u'.'], u'lemmas': [u'turtle', u'be', u'reptilian', u'of', u'the', u'order', u'testudine', u'-lrb-', u'all', u'live', u'turtle', u'belong', u'to', u'the', u'crown', u'group', u'Chelonia', u'-rrb-', u',', u'most', u'of', u'whose', u'body', u'be', u'shield', u'by', u'a', u'special', u'bony', u'or', u'cartilaginous', u'shell', u'develop', u'from', u'they', u'rib', u'.'], u'pos': [u'NNS', u'VBP', u'NNS', u'IN', u'DT', u'NN', u'NNS', u'-LRB-', u'DT', u'VBG', u'NNS', u'VBP', u'TO', u'DT', u'NN', u'NN', u'NNP', u'-RRB-', u',', u'JJS', u'IN', u'WP$', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'CC', u'JJ', u'NN', u'VBN', u'IN', u'PRP$', u'NNS', u'.'], u'char_offsets': [[0, 7], [8, 11], [12, 22], [23, 25], [26, 29], [30, 35], [36, 46], [47, 48], [48, 51], [52, 58], [59, 66], [67, 73], [74, 76], [77, 80], [81, 86], [87, 92], [93, 101], [101, 102], [102, 103], [104, 108], [109, 111], [112, 117], [118, 122], [123, 125], [126, 134], [135, 137], [138, 139], [140, 147], [148, 152], [153, 155], [156, 169], [170, 175], [176, 185], [186, 190], [191, 196], [197, 201], [201, 202]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.030135730281472206, {u'tokens': [u'It', u'was', u'found', u'that', u'the', u'liver', u',', u'lungs', u'and', u'kidneys', u'of', u'a', u'centenarian', u'turtle', u'are', u'virtually', u'indistinguishable', u'from', u'those', u'of', u'its', u'immature', u'counterpart', u'.'], u'lemmas': [u'it', u'be', u'find', u'that', u'the', u'liver', u',', u'lung', u'and', u'kidney', u'of', u'a', u'centenarian', u'turtle', u'be', u'virtually', u'indistinguishable', u'from', u'those', u'of', u'its', u'immature', u'counterpart', u'.'], u'pos': [u'PRP', u'VBD', u'VBN', u'IN', u'DT', u'NN', u',', u'NNS', u'CC', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'VBP', u'RB', u'JJ', u'IN', u'DT', u'IN', u'PRP$', u'JJ', u'NN', u'.'], u'char_offsets': [[2759, 2761], [2762, 2765], [2766, 2771], [2772, 2776], [2777, 2780], [2781, 2786], [2786, 2787], [2788, 2793], [2794, 2797], [2798, 2805], [2806, 2808], [2809, 2810], [2811, 2822], [2823, 2829], [2830, 2833], [2834, 2843], [2844, 2861], [2862, 2866], [2867, 2872], [2873, 2875], [2876, 2879], [2880, 2888], [2889, 2900], [2900, 2901]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.029423177242279053, {u'tokens': [u'The', u'Cryptodira', u'is', u'the', u'larger', u'of', u'the', u'two', u'groups', u'and', u'includes', u'all', u'the', u'marine', u'turtles', u',', u'the', u'terrestrial', u'tortoises', u',', u'and', u'many', u'of', u'the', u'freshwater', u'turtles', u'.'], u'lemmas': [u'the', u'Cryptodira', u'be', u'the', u'larger', u'of', u'the', u'two', u'group', u'and', u'include', u'all', u'the', u'marine', u'turtle', u',', u'the', u'terrestrial', u'tortoise', u',', u'and', u'many', u'of', u'the', u'freshwater', u'turtle', u'.'], u'pos': [u'DT', u'NNP', u'VBZ', u'DT', u'JJR', u'IN', u'DT', u'CD', u'NNS', u'CC', u'VBZ', u'PDT', u'DT', u'JJ', u'NNS', u',', u'DT', u'JJ', u'NNS', u',', u'CC', u'JJ', u'IN', u'DT', u'NN', u'NNS', u'.'], u'char_offsets': [[3210, 3213], [3214, 3224], [3225, 3227], [3228, 3231], [3232, 3238], [3239, 3241], [3242, 3245], [3246, 3249], [3250, 3256], [3257, 3260], [3261, 3269], [3270, 3273], [3274, 3277], [3278, 3284], [3285, 3292], [3292, 3293], [3294, 3297], [3298, 3309], [3310, 3319], [3319, 3320], [3321, 3324], [3325, 3329], [3330, 3332], [3333, 3336], [3337, 3347], [3348, 3355], [3355, 3356]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.029330996796488762, {u'tokens': [u'The', u'eggs', u'of', u'the', u'largest', u'species', u'are', u'spherical', u',', u'while', u'the', u'eggs', u'of', u'the', u'rest', u'are', u'elongated', u'.'], u'lemmas': [u'the', u'egg', u'of', u'the', u'largest', u'species', u'be', u'spherical', u',', u'while', u'the', u'egg', u'of', u'the', u'rest', u'be', u'elongate', u'.'], u'pos': [u'DT', u'NNS', u'IN', u'DT', u'JJS', u'NNS', u'VBP', u'JJ', u',', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NN', u'VBP', u'VBN', u'.'], u'char_offsets': [[1634, 1637], [1638, 1642], [1643, 1645], [1646, 1649], [1650, 1657], [1658, 1665], [1666, 1669], [1670, 1679], [1679, 1680], [1681, 1686], [1687, 1690], [1691, 1695], [1696, 1698], [1699, 1702], [1703, 1707], [1708, 1711], [1712, 1721], [1721, 1722]]}) 
answer: set([u'ectotherm'])
candidate Sentence: (0.02883809432387352, {u'tokens': [u'About', u'300', u'species', u'are', u'alive', u'today', u';', u'some', u'are', u'highly', u'endangered', u'.'], u'lemmas': [u'about', u'300', u'species', u'be', u'alive', u'today', u';', u'some', u'be', u'highly', u'endanger', u'.'], u'pos': [u'IN', u'CD', u'NNS', u'VBP', u'JJ', u'NN', u':', u'DT', u'VBP', u'RB', u'VBN', u'.'], u'char_offsets': [[455, 460], [461, 464], [465, 472], [473, 476], [477, 482], [483, 488], [488, 489], [490, 494], [495, 498], [499, 505], [506, 516], [516, 517]]}) 
answer: set([u'ectotherm'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'turtle', u'.'])

Are turtles ectothermic?
Validity= False
Question Type = NA
Answer Type = NA
Answer = yes
Difficulty = easy
Article_Title = turtle
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a9.txt

No
_____________________________ test_yesno[param342] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f29e0>, (<src.tfidf.TF_IDF object at 0x11005cf90>, set(['.', 'turtle'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('*shrug*')
E            +    where '*shrug*' = <src.question_processing.Question_parser instance at 0x1156f29e0>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.3718218207359314, {u'tokens': [u'The', u'Cryptodira', u'is', u'the', u'larger', u'of', u'the', u'two', u'groups', u'and', u'includes', u'all', u'the', u'marine', u'turtles', u',', u'the', u'terrestrial', u'tortoises', u',', u'and', u'many', u'of', u'the', u'freshwater', u'turtles', u'.'], u'lemmas': [u'the', u'Cryptodira', u'be', u'the', u'larger', u'of', u'the', u'two', u'group', u'and', u'include', u'all', u'the', u'marine', u'turtle', u',', u'the', u'terrestrial', u'tortoise', u',', u'and', u'many', u'of', u'the', u'freshwater', u'turtle', u'.'], u'pos': [u'DT', u'NNP', u'VBZ', u'DT', u'JJR', u'IN', u'DT', u'CD', u'NNS', u'CC', u'VBZ', u'PDT', u'DT', u'JJ', u'NNS', u',', u'DT', u'JJ', u'NNS', u',', u'CC', u'JJ', u'IN', u'DT', u'NN', u'NNS', u'.'], u'char_offsets': [[3210, 3213], [3214, 3224], [3225, 3227], [3228, 3231], [3232, 3238], [3239, 3241], [3242, 3245], [3246, 3249], [3250, 3256], [3257, 3260], [3261, 3269], [3270, 3273], [3274, 3277], [3278, 3284], [3285, 3292], [3292, 3293], [3294, 3297], [3298, 3309], [3310, 3319], [3319, 3320], [3321, 3324], [3325, 3329], [3330, 3332], [3333, 3336], [3337, 3347], [3348, 3355], [3355, 3356]]}) 
answer: set([u'fli', u'part', u'spaghetti', u'monster'])
candidate Sentence: (0.31986546516418457, {u'tokens': [u'The', u'eggs', u'of', u'the', u'largest', u'species', u'are', u'spherical', u',', u'while', u'the', u'eggs', u'of', u'the', u'rest', u'are', u'elongated', u'.'], u'lemmas': [u'the', u'egg', u'of', u'the', u'largest', u'species', u'be', u'spherical', u',', u'while', u'the', u'egg', u'of', u'the', u'rest', u'be', u'elongate', u'.'], u'pos': [u'DT', u'NNS', u'IN', u'DT', u'JJS', u'NNS', u'VBP', u'JJ', u',', u'IN', u'DT', u'NNS', u'IN', u'DT', u'NN', u'VBP', u'VBN', u'.'], u'char_offsets': [[1634, 1637], [1638, 1642], [1643, 1645], [1646, 1649], [1650, 1657], [1658, 1665], [1666, 1669], [1670, 1679], [1679, 1680], [1681, 1686], [1687, 1690], [1691, 1695], [1696, 1698], [1699, 1702], [1703, 1707], [1708, 1711], [1712, 1721], [1721, 1722]]}) 
answer: set([u'fli', u'part', u'spaghetti', u'monster'])
candidate Sentence: (0.23866987228393555, {u'tokens': [u'In', u'some', u'species', u',', u'temperature', u'determines', u'whether', u'an', u'egg', u'develops', u'into', u'a', u'male', u'or', u'a', u'female', u':', u'a', u'higher', u'temperature', u'causes', u'a', u'female', u',', u'a', u'lower', u'temperature', u'causes', u'a', u'male', u'.'], u'lemmas': [u'in', u'some', u'species', u',', u'temperature', u'determine', u'whether', u'a', u'egg', u'develop', u'into', u'a', u'male', u'or', u'a', u'female', u':', u'a', u'higher', u'temperature', u'cause', u'a', u'female', u',', u'a', u'lower', u'temperature', u'cause', u'a', u'male', u'.'], u'pos': [u'IN', u'DT', u'NNS', u',', u'NN', u'VBZ', u'IN', u'DT', u'NN', u'VBZ', u'IN', u'DT', u'NN', u'CC', u'DT', u'NN', u':', u'DT', u'JJR', u'NN', u'VBZ', u'DT', u'NN', u',', u'DT', u'JJR', u'NN', u'VBZ', u'DT', u'NN', u'.'], u'char_offsets': [[1892, 1894], [1895, 1899], [1900, 1907], [1907, 1908], [1909, 1920], [1921, 1931], [1932, 1939], [1940, 1942], [1943, 1946], [1947, 1955], [1956, 1960], [1961, 1962], [1963, 1967], [1968, 1970], [1971, 1972], [1973, 1979], [1979, 1980], [1981, 1982], [1983, 1989], [1990, 2001], [2002, 2008], [2009, 2010], [2011, 2017], [2017, 2018], [2019, 2020], [2021, 2026], [2027, 2038], [2039, 2045], [2046, 2047], [2048, 2052], [2052, 2053]]}) 
answer: set([u'fli', u'part', u'spaghetti', u'monster'])
candidate Sentence: (0.22520081698894501, {u'tokens': [u'The', u'two', u'extant', u'suborders', u'are', u'the', u'Cryptodira', u'and', u'the', u'Pleurodira', u'.'], u'lemmas': [u'the', u'two', u'extant', u'suborder', u'be', u'the', u'Cryptodira', u'and', u'the', u'Pleurodira', u'.'], u'pos': [u'DT', u'CD', u'JJ', u'NNS', u'VBP', u'DT', u'NNP', u'CC', u'DT', u'NNP', u'.'], u'char_offsets': [[3146, 3149], [3150, 3153], [3154, 3160], [3161, 3170], [3171, 3174], [3175, 3178], [3179, 3189], [3190, 3193], [3194, 3197], [3198, 3208], [3208, 3209]]}) 
answer: set([u'fli', u'part', u'spaghetti', u'monster'])
candidate Sentence: (0.21274793148040771, {u'tokens': [u'The', u'Pleurodira', u'are', u'sometimes', u'known', u'as', u'the', u'side-necked', u'turtles', u',', u'a', u'reference', u'to', u'the', u'way', u'they', u'withdraw', u'their', u'heads', u'into', u'their', u'shells', u'.'], u'lemmas': [u'the', u'Pleurodira', u'be', u'sometimes', u'know', u'as', u'the', u'side-necked', u'turtle', u',', u'a', u'reference', u'to', u'the', u'way', u'they', u'withdraw', u'they', u'head', u'into', u'they', u'shell', u'.'], u'pos': [u'DT', u'NNP', u'VBP', u'RB', u'VBN', u'IN', u'DT', u'JJ', u'NNS', u',', u'DT', u'NN', u'TO', u'DT', u'NN', u'PRP', u'VBP', u'PRP$', u'NNS', u'IN', u'PRP$', u'NNS', u'.'], u'char_offsets': [[3357, 3360], [3361, 3371], [3372, 3375], [3376, 3385], [3386, 3391], [3392, 3394], [3395, 3398], [3399, 3410], [3411, 3418], [3418, 3419], [3420, 3421], [3422, 3431], [3432, 3434], [3435, 3438], [3439, 3442], [3443, 3447], [3448, 3456], [3457, 3462], [3463, 3468], [3469, 3473], [3474, 3479], [3480, 3486], [3486, 3487]]}) 
answer: set([u'fli', u'part', u'spaghetti', u'monster'])
candidate Sentence: (0.21029806137084961, {u'tokens': [u'Turtles', u'are', u'reptilians', u'of', u'the', u'Order', u'Testudines', u'-LRB-', u'all', u'living', u'turtles', u'belong', u'to', u'the', u'crown', u'group', u'Chelonia', u'-RRB-', u',', u'most', u'of', u'whose', u'body', u'is', u'shielded', u'by', u'a', u'special', u'bony', u'or', u'cartilaginous', u'shell', u'developed', u'from', u'their', u'ribs', u'.'], u'lemmas': [u'turtle', u'be', u'reptilian', u'of', u'the', u'order', u'testudine', u'-lrb-', u'all', u'live', u'turtle', u'belong', u'to', u'the', u'crown', u'group', u'Chelonia', u'-rrb-', u',', u'most', u'of', u'whose', u'body', u'be', u'shield', u'by', u'a', u'special', u'bony', u'or', u'cartilaginous', u'shell', u'develop', u'from', u'they', u'rib', u'.'], u'pos': [u'NNS', u'VBP', u'NNS', u'IN', u'DT', u'NN', u'NNS', u'-LRB-', u'DT', u'VBG', u'NNS', u'VBP', u'TO', u'DT', u'NN', u'NN', u'NNP', u'-RRB-', u',', u'JJS', u'IN', u'WP$', u'NN', u'VBZ', u'VBN', u'IN', u'DT', u'JJ', u'NN', u'CC', u'JJ', u'NN', u'VBN', u'IN', u'PRP$', u'NNS', u'.'], u'char_offsets': [[0, 7], [8, 11], [12, 22], [23, 25], [26, 29], [30, 35], [36, 46], [47, 48], [48, 51], [52, 58], [59, 66], [67, 73], [74, 76], [77, 80], [81, 86], [87, 92], [93, 101], [101, 102], [102, 103], [104, 108], [109, 111], [112, 117], [118, 122], [123, 125], [126, 134], [135, 137], [138, 139], [140, 147], [148, 152], [153, 155], [156, 169], [170, 175], [176, 185], [186, 190], [191, 196], [197, 201], [201, 202]]}) 
answer: set([u'fli', u'part', u'spaghetti', u'monster'])
candidate Sentence: (0.20928460359573364, {u'tokens': [u'It', u'was', u'found', u'that', u'the', u'liver', u',', u'lungs', u'and', u'kidneys', u'of', u'a', u'centenarian', u'turtle', u'are', u'virtually', u'indistinguishable', u'from', u'those', u'of', u'its', u'immature', u'counterpart', u'.'], u'lemmas': [u'it', u'be', u'find', u'that', u'the', u'liver', u',', u'lung', u'and', u'kidney', u'of', u'a', u'centenarian', u'turtle', u'be', u'virtually', u'indistinguishable', u'from', u'those', u'of', u'its', u'immature', u'counterpart', u'.'], u'pos': [u'PRP', u'VBD', u'VBN', u'IN', u'DT', u'NN', u',', u'NNS', u'CC', u'NNS', u'IN', u'DT', u'JJ', u'NN', u'VBP', u'RB', u'JJ', u'IN', u'DT', u'IN', u'PRP$', u'JJ', u'NN', u'.'], u'char_offsets': [[2759, 2761], [2762, 2765], [2766, 2771], [2772, 2776], [2777, 2780], [2781, 2786], [2786, 2787], [2788, 2793], [2794, 2797], [2798, 2805], [2806, 2808], [2809, 2810], [2811, 2822], [2823, 2829], [2830, 2833], [2834, 2843], [2844, 2861], [2862, 2866], [2867, 2872], [2873, 2875], [2876, 2879], [2880, 2888], [2889, 2900], [2900, 2901]]}) 
answer: set([u'fli', u'part', u'spaghetti', u'monster'])
candidate Sentence: (0.20889991521835327, {u'tokens': [u'*', u'Chelonian', u'studbook', u'Collection', u'and', u'display', u'of', u'the', u'weights/sizes', u'of', u'captive', u'turtles', u'*', u'John', u'M.', u'Legler', u'&', u'Arthur', u'Georges', u',', u'Biogeography', u'and', u'Phylogeny', u'of', u'the', u'Chelonia', u'-LRB-', u'taxonomy', u',', u'maps', u'-RRB-', u'*', u'Lake', u'Jackson', u'Ecopassage', u'-', u'Building', u'an', u'ecopassage', u'on', u'the', u'world', u"'s", u'worst', u'turtle-killing', u'highway', u'*', u'Biology', u'of', u'the', u'North', u'American', u'Wood', u'Turtle', u'Anatomy', u'to', u'Zoology', u'*', u'Cantor', u"'s", u'giant', u'soft-shell', u'turtle', u'found', u'in', u'Mekong', u'Delta', u'*', u'-', u'A', u'website', u'on', u'all', u'pet', u'turtle', u'species', u'including', u'a', u'guide', u'on', u'caring', u'for', u'your', u'turtles', u'.'], u'lemmas': [u'*', u'chelonian', u'studbook', u'collection', u'and', u'display', u'of', u'the', u'weights/sizes', u'of', u'captive', u'turtle', u'*', u'John', u'M.', u'Legler', u'&', u'Arthur', u'Georges', u',', u'Biogeography', u'and', u'Phylogeny', u'of', u'the', u'Chelonia', u'-lrb-', u'taxonomy', u',', u'map', u'-rrb-', u'*', u'Lake', u'Jackson', u'Ecopassage', u'-', u'build', u'a', u'ecopassage', u'on', u'the', u'world', u"'s", u'worst', u'turtle-killing', u'highway', u'*', u'Biology', u'of', u'the', u'North', u'American', u'Wood', u'Turtle', u'Anatomy', u'to', u'Zoology', u'*', u'Cantor', u"'s", u'giant', u'soft-shell', u'turtle', u'find', u'in', u'Mekong', u'Delta', u'*', u'-', u'a', u'website', u'on', u'all', u'pet', u'turtle', u'species', u'include', u'a', u'guide', u'on', u'care', u'for', u'you', u'turtle', u'.'], u'pos': [u'SYM', u'JJ', u'NN', u'NN', u'CC', u'NN', u'IN', u'DT', u'NNS', u'IN', u'JJ', u'NNS', u'SYM', u'NNP', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u',', u'NNP', u'CC', u'NNP', u'IN', u'DT', u'NNP', u'-LRB-', u'NN', u',', u'NNS', u'-RRB-', u'SYM', u'NNP', u'NNP', u'NNP', u':', u'VBG', u'DT', u'NN', u'IN', u'DT', u'NN', u'POS', u'JJS', u'NN', u'NN', u'SYM', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'TO', u'NNP', u'SYM', u'NNP', u'POS', u'JJ', u'JJ', u'NN', u'VBN', u'IN', u'NNP', u'NNP', u'SYM', u':', u'NN', u'NN', u'IN', u'DT', u'NN', u'NN', u'NNS', u'VBG', u'DT', u'NN', u'IN', u'VBG', u'IN', u'PRP$', u'NNS', u'.'], u'char_offsets': [[4458, 4459], [4461, 4470], [4471, 4479], [4480, 4490], [4491, 4494], [4495, 4502], [4503, 4505], [4506, 4509], [4510, 4523], [4524, 4526], [4527, 4534], [4535, 4542], [4543, 4544], [4545, 4549], [4550, 4552], [4553, 4559], [4560, 4561], [4562, 4568], [4569, 4576], [4576, 4577], [4579, 4591], [4592, 4595], [4596, 4605], [4606, 4608], [4609, 4612], [4613, 4621], [4622, 4623], [4623, 4631], [4631, 4632], [4633, 4637], [4637, 4638], [4639, 4640], [4642, 4646], [4647, 4654], [4655, 4665], [4666, 4667], [4668, 4676], [4677, 4679], [4680, 4690], [4691, 4693], [4694, 4697], [4698, 4703], [4703, 4705], [4706, 4711], [4712, 4726], [4727, 4734], [4735, 4736], [4738, 4745], [4746, 4748], [4749, 4752], [4753, 4758], [4759, 4767], [4768, 4772], [4773, 4779], [4780, 4787], [4788, 4790], [4791, 4798], [4799, 4800], [4802, 4808], [4808, 4810], [4811, 4816], [4817, 4827], [4828, 4834], [4835, 4840], [4841, 4843], [4844, 4850], [4851, 4856], [4857, 4858], [4860, 4861], [4862, 4863], [4864, 4871], [4872, 4874], [4875, 4878], [4879, 4882], [4883, 4889], [4890, 4897], [4898, 4907], [4908, 4909], [4910, 4915], [4916, 4918], [4919, 4925], [4926, 4929], [4930, 4934], [4935, 4942], [4942, 4943]]}) 
answer: set([u'fli', u'part', u'spaghetti', u'monster'])
candidate Sentence: (0.20440363883972168, {u'tokens': [u'The', u'largest', u'turtles', u'are', u'aquatic', u'.'], u'lemmas': [u'the', u'largest', u'turtle', u'be', u'aquatic', u'.'], u'pos': [u'DT', u'JJS', u'NNS', u'VBP', u'JJ', u'.'], u'char_offsets': [[844, 847], [848, 855], [856, 863], [864, 867], [868, 875], [875, 876]]}) 
answer: set([u'fli', u'part', u'spaghetti', u'monster'])
candidate Sentence: (0.18530659377574921, {u'tokens': [u'*', u'Addyaita', u':', u'a', u'giant', u'turtle', u'of', u'Aldabra', u'.'], u'lemmas': [u'*', u'addyaita', u':', u'a', u'giant', u'turtle', u'of', u'Aldabra', u'.'], u'pos': [u'SYM', u'NN', u':', u'DT', u'JJ', u'NN', u'IN', u'NNP', u'.'], u'char_offsets': [[3963, 3964], [3964, 3972], [3972, 3973], [3974, 3975], [3976, 3981], [3982, 3988], [3989, 3991], [3992, 3999], [3999, 4000]]}) 
answer: set([u'fli', u'part', u'spaghetti', u'monster'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'turtle', u'.'])

Are turtles a part of the Flying Spaghetti Monster?
Validity= False
Question Type = NA
Answer Type = NA
Answer = *shrug*
Difficulty = easy
Article_Title = turtle
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set1/a9.txt

No
_____________________________ test_yesno[param353] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f2cf8>, (<src.tfidf.TF_IDF object at 0x110787550>, set(['.', 'grant', 's.', 'ulysses'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('Yes')
E            +    where 'Yes' = <src.question_processing.Question_parser instance at 0x1156f2cf8>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.401446133852005, {u'tokens': [u'Lt.', u'Gen.', u'Ulysses', u'S.', u'Grant', u'Knowing', u'that', u'the', u'Confederates', u'could', u'no', u'longer', u'send', u'reinforcements', u'to', u'the', u'Vicksburg', u'garrison', u',', u'Grant', u'turned', u'west', u'and', u'won', u'the', u'Battle', u'of', u'Champion', u'Hill', u'.'], u'lemmas': [u'Lt.', u'Gen.', u'Ulysses', u'S.', u'Grant', u'know', u'that', u'the', u'confederate', u'could', u'no', u'longer', u'send', u'reinforcement', u'to', u'the', u'Vicksburg', u'garrison', u',', u'Grant', u'turn', u'west', u'and', u'win', u'the', u'battle', u'of', u'Champion', u'Hill', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'VBG', u'IN', u'DT', u'NNS', u'MD', u'RB', u'RB', u'VB', u'NNS', u'TO', u'DT', u'NNP', u'NN', u',', u'NNP', u'VBD', u'NN', u'CC', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[16244, 16247], [16248, 16252], [16253, 16260], [16261, 16263], [16264, 16269], [16270, 16277], [16278, 16282], [16283, 16286], [16287, 16299], [16300, 16305], [16306, 16308], [16309, 16315], [16316, 16320], [16321, 16335], [16336, 16338], [16339, 16342], [16343, 16352], [16353, 16361], [16361, 16362], [16363, 16368], [16369, 16375], [16376, 16380], [16381, 16384], [16385, 16388], [16389, 16392], [16393, 16399], [16400, 16402], [16403, 16411], [16412, 16416], [16416, 16417]]}) 
answer: set([])
candidate Sentence: (0.36564525961875916, {u'tokens': [u'This', u'supply', u'train', u'was', u'a', u'target', u'of', u'Pemberton', u'until', u'Champion', u'Hill', u'.'], u'lemmas': [u'this', u'supply', u'train', u'be', u'a', u'target', u'of', u'Pemberton', u'until', u'Champion', u'Hill', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[15889, 15893], [15894, 15900], [15901, 15906], [15907, 15910], [15911, 15912], [15913, 15919], [15920, 15922], [15923, 15932], [15933, 15938], [15939, 15947], [15948, 15952], [15952, 15953]]}) 
answer: set([u'win', u'battl'])
candidate Sentence: (0.2031950056552887, {u'tokens': [u'*', u'The', u'Ulysses', u'S.', u'Grant', u'Memorial', u',', u'located', u'on', u'Capitol', u'Hill', u'in', u'Washington', u',', u'D.C.', u',', u'honors', u'Grant', u'.'], u'lemmas': [u'*', u'the', u'Ulysses', u'S.', u'Grant', u'Memorial', u',', u'located', u'on', u'Capitol', u'Hill', u'in', u'Washington', u',', u'D.C.', u',', u'honor', u'Grant', u'.'], u'pos': [u'SYM', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'JJ', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u',', u'NNP', u',', u'NNS', u'NNP', u'.'], u'char_offsets': [[46100, 46101], [46101, 46104], [46105, 46112], [46113, 46115], [46116, 46121], [46122, 46130], [46130, 46131], [46132, 46139], [46140, 46142], [46143, 46150], [46151, 46155], [46156, 46158], [46159, 46169], [46169, 46170], [46171, 46175], [46175, 46176], [46177, 46183], [46184, 46189], [46189, 46190]]}) 
answer: set([u'win', u'battl', u'champion'])
candidate Sentence: (0.20168256759643555, {u'tokens': [u'Although', u'Grant', u'lost', u'battles', u'in', u'1864', u',', u'he', u'won', u'all', u'his', u'campaigns', u'.'], u'lemmas': [u'although', u'Grant', u'lose', u'battle', u'in', u'1864', u',', u'he', u'win', u'all', u'he', u'campaign', u'.'], u'pos': [u'IN', u'NNP', u'VBD', u'NNS', u'IN', u'CD', u',', u'PRP', u'VBD', u'PDT', u'PRP$', u'NNS', u'.'], u'char_offsets': [[27724, 27732], [27733, 27738], [27739, 27743], [27744, 27751], [27752, 27754], [27755, 27759], [27759, 27760], [27761, 27763], [27764, 27767], [27768, 27771], [27772, 27775], [27776, 27785], [27785, 27786]]}) 
answer: set([u'champion', u'hill'])
candidate Sentence: (0.17588508129119873, {u'tokens': [u'*', u'The', u'question', u'``', u'Who', u"'s", u'buried', u'in', u'Grant', u"'s", u'Tomb', u'?', u"''"], u'lemmas': [u'*', u'the', u'question', u'``', u'who', u'be', u'bury', u'in', u'Grant', u"'s", u'Tomb', u'?', u"''"], u'pos': [u'SYM', u'DT', u'NN', u'``', u'WP', u'VBZ', u'VBN', u'IN', u'NNP', u'POS', u'NNP', u'.', u"''"], u'char_offsets': [[50777, 50778], [50779, 50782], [50783, 50791], [50792, 50793], [50793, 50796], [50796, 50798], [50799, 50805], [50806, 50808], [50809, 50814], [50814, 50816], [50817, 50821], [50821, 50822], [50822, 50823]]}) 
answer: set([u'win', u'battl', u'champion', u'hill'])
candidate Sentence: (0.15443089604377747, {u'tokens': [u'Grant', u"'s", u'strategy', u'was', u'not', u'just', u'to', u'win', u'individual', u'battles', u',', u'it', u'was', u'to', u'fight', u'constant', u'battles', u'in', u'order', u'to', u'wear', u'down', u'and', u'destroy', u'Lee', u"'s", u'army', u'.'], u'lemmas': [u'Grant', u"'s", u'strategy', u'be', u'not', u'just', u'to', u'win', u'individual', u'battle', u',', u'it', u'be', u'to', u'fight', u'constant', u'battle', u'in', u'order', u'to', u'wear', u'down', u'and', u'destroy', u'Lee', u"'s", u'army', u'.'], u'pos': [u'NNP', u'POS', u'NN', u'VBD', u'RB', u'RB', u'TO', u'VB', u'JJ', u'NNS', u',', u'PRP', u'VBD', u'TO', u'VB', u'JJ', u'NNS', u'IN', u'NN', u'TO', u'VB', u'RB', u'CC', u'VB', u'NNP', u'POS', u'NN', u'.'], u'char_offsets': [[21613, 21618], [21618, 21620], [21621, 21629], [21630, 21633], [21634, 21637], [21638, 21642], [21643, 21645], [21646, 21649], [21650, 21660], [21661, 21668], [21668, 21669], [21670, 21672], [21673, 21676], [21677, 21679], [21680, 21685], [21686, 21694], [21695, 21702], [21703, 21705], [21706, 21711], [21712, 21714], [21715, 21719], [21720, 21724], [21725, 21728], [21729, 21736], [21737, 21740], [21740, 21742], [21743, 21747], [21747, 21748]]}) 
answer: set([u'champion', u'hill'])
candidate Sentence: (0.14307774603366852, {u'tokens': [u'In', u'a', u'letter', u'to', u'his', u'wife', u'Julia', u'dated', u'March', u'31', u',', u'1853', u',', u'Grant', u'wrote', u',', u'``', u'Why', u'did', u'you', u'not', u'tell', u'me', u'more', u'about', u'our', u'dear', u'little', u'boys', u'?'], u'lemmas': [u'in', u'a', u'letter', u'to', u'he', u'wife', u'Julia', u'date', u'March', u'31', u',', u'1853', u',', u'Grant', u'write', u',', u'``', u'why', u'do', u'you', u'not', u'tell', u'I', u'more', u'about', u'we', u'dear', u'little', u'boy', u'?'], u'pos': [u'IN', u'DT', u'NN', u'TO', u'PRP$', u'NN', u'NNP', u'VBN', u'NNP', u'CD', u',', u'CD', u',', u'NNP', u'VBD', u',', u'``', u'WRB', u'VBD', u'PRP', u'RB', u'VB', u'PRP', u'RBR', u'IN', u'PRP$', u'RB', u'JJ', u'NNS', u'.'], u'char_offsets': [[3849, 3851], [3852, 3853], [3854, 3860], [3861, 3863], [3864, 3867], [3868, 3872], [3873, 3878], [3879, 3884], [3885, 3890], [3891, 3893], [3893, 3894], [3895, 3899], [3899, 3900], [3901, 3906], [3907, 3912], [3912, 3913], [3914, 3915], [3915, 3918], [3919, 3922], [3923, 3926], [3927, 3930], [3931, 3935], [3936, 3938], [3939, 3943], [3944, 3949], [3950, 3953], [3954, 3958], [3959, 3965], [3966, 3970], [3971, 3972]]}) 
answer: set([u'win', u'battl', u'champion', u'hill'])
candidate Sentence: (0.11160159856081009, {u'tokens': [u'...', u'What', u'does', u'Fred', u'.'], u'lemmas': [u'...', u'what', u'do', u'Fred', u'.'], u'pos': [u':', u'WP', u'VBZ', u'NNP', u'.'], u'char_offsets': [[3973, 3976], [3977, 3981], [3982, 3986], [3987, 3991], [3991, 3992]]}) 
answer: set([u'win', u'battl', u'champion', u'hill'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'grant', u'ulysses', u's.'])

Did Ulysses win the Battle of Champion Hill?
Validity= False
Question Type = NA
Answer Type = NA
Answer = Yes
Difficulty = easy
Article_Title = Ulysses_S._Grant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a5.txt

No
_____________________________ test_yesno[param354] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f2d40>, (<src.tfidf.TF_IDF object at 0x110787550>, set(['.', 'grant', 's.', 'ulysses'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert True == str2bool('No')
E            +  where True = str2bool('you betcha')
E            +    where 'you betcha' = <src.question_processing.Question_parser instance at 0x1156f2d40>.answer

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.401446133852005, {u'tokens': [u'Lt.', u'Gen.', u'Ulysses', u'S.', u'Grant', u'Knowing', u'that', u'the', u'Confederates', u'could', u'no', u'longer', u'send', u'reinforcements', u'to', u'the', u'Vicksburg', u'garrison', u',', u'Grant', u'turned', u'west', u'and', u'won', u'the', u'Battle', u'of', u'Champion', u'Hill', u'.'], u'lemmas': [u'Lt.', u'Gen.', u'Ulysses', u'S.', u'Grant', u'know', u'that', u'the', u'confederate', u'could', u'no', u'longer', u'send', u'reinforcement', u'to', u'the', u'Vicksburg', u'garrison', u',', u'Grant', u'turn', u'west', u'and', u'win', u'the', u'battle', u'of', u'Champion', u'Hill', u'.'], u'pos': [u'NNP', u'NNP', u'NNP', u'NNP', u'NNP', u'VBG', u'IN', u'DT', u'NNS', u'MD', u'RB', u'RB', u'VB', u'NNS', u'TO', u'DT', u'NNP', u'NN', u',', u'NNP', u'VBD', u'NN', u'CC', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[16244, 16247], [16248, 16252], [16253, 16260], [16261, 16263], [16264, 16269], [16270, 16277], [16278, 16282], [16283, 16286], [16287, 16299], [16300, 16305], [16306, 16308], [16309, 16315], [16316, 16320], [16321, 16335], [16336, 16338], [16339, 16342], [16343, 16352], [16353, 16361], [16361, 16362], [16363, 16368], [16369, 16375], [16376, 16380], [16381, 16384], [16385, 16388], [16389, 16392], [16393, 16399], [16400, 16402], [16403, 16411], [16412, 16416], [16416, 16417]]}) 
answer: set([])
candidate Sentence: (0.36564525961875916, {u'tokens': [u'This', u'supply', u'train', u'was', u'a', u'target', u'of', u'Pemberton', u'until', u'Champion', u'Hill', u'.'], u'lemmas': [u'this', u'supply', u'train', u'be', u'a', u'target', u'of', u'Pemberton', u'until', u'Champion', u'Hill', u'.'], u'pos': [u'DT', u'NN', u'NN', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[15889, 15893], [15894, 15900], [15901, 15906], [15907, 15910], [15911, 15912], [15913, 15919], [15920, 15922], [15923, 15932], [15933, 15938], [15939, 15947], [15948, 15952], [15952, 15953]]}) 
answer: set([u'win', u'battl'])
candidate Sentence: (0.2031950056552887, {u'tokens': [u'*', u'The', u'Ulysses', u'S.', u'Grant', u'Memorial', u',', u'located', u'on', u'Capitol', u'Hill', u'in', u'Washington', u',', u'D.C.', u',', u'honors', u'Grant', u'.'], u'lemmas': [u'*', u'the', u'Ulysses', u'S.', u'Grant', u'Memorial', u',', u'located', u'on', u'Capitol', u'Hill', u'in', u'Washington', u',', u'D.C.', u',', u'honor', u'Grant', u'.'], u'pos': [u'SYM', u'DT', u'NNP', u'NNP', u'NNP', u'NNP', u',', u'JJ', u'IN', u'NNP', u'NNP', u'IN', u'NNP', u',', u'NNP', u',', u'NNS', u'NNP', u'.'], u'char_offsets': [[46100, 46101], [46101, 46104], [46105, 46112], [46113, 46115], [46116, 46121], [46122, 46130], [46130, 46131], [46132, 46139], [46140, 46142], [46143, 46150], [46151, 46155], [46156, 46158], [46159, 46169], [46169, 46170], [46171, 46175], [46175, 46176], [46177, 46183], [46184, 46189], [46189, 46190]]}) 
answer: set([u'win', u'battl', u'champion'])
candidate Sentence: (0.20168256759643555, {u'tokens': [u'Although', u'Grant', u'lost', u'battles', u'in', u'1864', u',', u'he', u'won', u'all', u'his', u'campaigns', u'.'], u'lemmas': [u'although', u'Grant', u'lose', u'battle', u'in', u'1864', u',', u'he', u'win', u'all', u'he', u'campaign', u'.'], u'pos': [u'IN', u'NNP', u'VBD', u'NNS', u'IN', u'CD', u',', u'PRP', u'VBD', u'PDT', u'PRP$', u'NNS', u'.'], u'char_offsets': [[27724, 27732], [27733, 27738], [27739, 27743], [27744, 27751], [27752, 27754], [27755, 27759], [27759, 27760], [27761, 27763], [27764, 27767], [27768, 27771], [27772, 27775], [27776, 27785], [27785, 27786]]}) 
answer: set([u'champion', u'hill'])
candidate Sentence: (0.17588508129119873, {u'tokens': [u'*', u'The', u'question', u'``', u'Who', u"'s", u'buried', u'in', u'Grant', u"'s", u'Tomb', u'?', u"''"], u'lemmas': [u'*', u'the', u'question', u'``', u'who', u'be', u'bury', u'in', u'Grant', u"'s", u'Tomb', u'?', u"''"], u'pos': [u'SYM', u'DT', u'NN', u'``', u'WP', u'VBZ', u'VBN', u'IN', u'NNP', u'POS', u'NNP', u'.', u"''"], u'char_offsets': [[50777, 50778], [50779, 50782], [50783, 50791], [50792, 50793], [50793, 50796], [50796, 50798], [50799, 50805], [50806, 50808], [50809, 50814], [50814, 50816], [50817, 50821], [50821, 50822], [50822, 50823]]}) 
answer: set([u'win', u'battl', u'champion', u'hill'])
candidate Sentence: (0.15443089604377747, {u'tokens': [u'Grant', u"'s", u'strategy', u'was', u'not', u'just', u'to', u'win', u'individual', u'battles', u',', u'it', u'was', u'to', u'fight', u'constant', u'battles', u'in', u'order', u'to', u'wear', u'down', u'and', u'destroy', u'Lee', u"'s", u'army', u'.'], u'lemmas': [u'Grant', u"'s", u'strategy', u'be', u'not', u'just', u'to', u'win', u'individual', u'battle', u',', u'it', u'be', u'to', u'fight', u'constant', u'battle', u'in', u'order', u'to', u'wear', u'down', u'and', u'destroy', u'Lee', u"'s", u'army', u'.'], u'pos': [u'NNP', u'POS', u'NN', u'VBD', u'RB', u'RB', u'TO', u'VB', u'JJ', u'NNS', u',', u'PRP', u'VBD', u'TO', u'VB', u'JJ', u'NNS', u'IN', u'NN', u'TO', u'VB', u'RB', u'CC', u'VB', u'NNP', u'POS', u'NN', u'.'], u'char_offsets': [[21613, 21618], [21618, 21620], [21621, 21629], [21630, 21633], [21634, 21637], [21638, 21642], [21643, 21645], [21646, 21649], [21650, 21660], [21661, 21668], [21668, 21669], [21670, 21672], [21673, 21676], [21677, 21679], [21680, 21685], [21686, 21694], [21695, 21702], [21703, 21705], [21706, 21711], [21712, 21714], [21715, 21719], [21720, 21724], [21725, 21728], [21729, 21736], [21737, 21740], [21740, 21742], [21743, 21747], [21747, 21748]]}) 
answer: set([u'champion', u'hill'])
candidate Sentence: (0.14307774603366852, {u'tokens': [u'In', u'a', u'letter', u'to', u'his', u'wife', u'Julia', u'dated', u'March', u'31', u',', u'1853', u',', u'Grant', u'wrote', u',', u'``', u'Why', u'did', u'you', u'not', u'tell', u'me', u'more', u'about', u'our', u'dear', u'little', u'boys', u'?'], u'lemmas': [u'in', u'a', u'letter', u'to', u'he', u'wife', u'Julia', u'date', u'March', u'31', u',', u'1853', u',', u'Grant', u'write', u',', u'``', u'why', u'do', u'you', u'not', u'tell', u'I', u'more', u'about', u'we', u'dear', u'little', u'boy', u'?'], u'pos': [u'IN', u'DT', u'NN', u'TO', u'PRP$', u'NN', u'NNP', u'VBN', u'NNP', u'CD', u',', u'CD', u',', u'NNP', u'VBD', u',', u'``', u'WRB', u'VBD', u'PRP', u'RB', u'VB', u'PRP', u'RBR', u'IN', u'PRP$', u'RB', u'JJ', u'NNS', u'.'], u'char_offsets': [[3849, 3851], [3852, 3853], [3854, 3860], [3861, 3863], [3864, 3867], [3868, 3872], [3873, 3878], [3879, 3884], [3885, 3890], [3891, 3893], [3893, 3894], [3895, 3899], [3899, 3900], [3901, 3906], [3907, 3912], [3912, 3913], [3914, 3915], [3915, 3918], [3919, 3922], [3923, 3926], [3927, 3930], [3931, 3935], [3936, 3938], [3939, 3943], [3944, 3949], [3950, 3953], [3954, 3958], [3959, 3965], [3966, 3970], [3971, 3972]]}) 
answer: set([u'win', u'battl', u'champion', u'hill'])
candidate Sentence: (0.11160159856081009, {u'tokens': [u'...', u'What', u'does', u'Fred', u'.'], u'lemmas': [u'...', u'what', u'do', u'Fred', u'.'], u'pos': [u':', u'WP', u'VBZ', u'NNP', u'.'], u'char_offsets': [[3973, 3976], [3977, 3981], [3982, 3986], [3987, 3991], [3991, 3992]]}) 
answer: set([u'win', u'battl', u'champion', u'hill'])
['No Sure', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'grant', u'ulysses', u's.'])

Did Ulysses win the Battle of Champion Hill?
Validity= False
Question Type = NA
Answer Type = NA
Answer = you betcha
Difficulty = easy
Article_Title = Ulysses_S._Grant
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a5.txt

No
_____________________________ test_yesno[param359] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f2ea8>, (<src.tfidf.TF_IDF object at 0x1144af5d0>, set(['.', 'uruguay'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('No.') == True
E            +  where 'No.' = <src.question_processing.Question_parser instance at 0x1156f2ea8>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.20097774267196655, {u'tokens': [u'There', u'can', u'be', u'frequent', u'thunderstorms', u'in', u'the', u'summer', u'.'], u'lemmas': [u'there', u'can', u'be', u'frequent', u'thunderstorm', u'in', u'the', u'summer', u'.'], u'pos': [u'EX', u'MD', u'VB', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[12123, 12128], [12129, 12132], [12133, 12135], [12136, 12144], [12145, 12158], [12159, 12161], [12162, 12165], [12166, 12172], [12172, 12173]]}) 
answer: set([u'cold'])
candidate Sentence: (0.14273937046527863, {u'tokens': [u'To', u'the', u'southwest', u'is', u'the', u'Ro', u'de', u'la', u'Plata', u',', u'the', u'estuary', u'of', u'the', u'Uruguay', u'River', u',', u'which', u'forms', u'the', u'western', u'border', u',', u'and', u'the', u'Paran', u'River', u',', u'that', u'does', u'not', u'run', u'through', u'Uruguay', u'itself', u'.'], u'lemmas': [u'to', u'the', u'southwest', u'be', u'the', u'ro', u'de', u'la', u'Plata', u',', u'the', u'estuary', u'of', u'the', u'Uruguay', u'River', u',', u'which', u'form', u'the', u'western', u'border', u',', u'and', u'the', u'Paran', u'River', u',', u'that', u'do', u'not', u'run', u'through', u'Uruguay', u'itself', u'.'], u'pos': [u'TO', u'DT', u'NN', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NNP', u',', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u',', u'WDT', u'VBZ', u'DT', u'JJ', u'NN', u',', u'CC', u'DT', u'NNP', u'NNP', u',', u'WDT', u'VBZ', u'RB', u'VB', u'IN', u'NNP', u'PRP', u'.'], u'char_offsets': [[10144, 10146], [10147, 10150], [10151, 10160], [10161, 10163], [10164, 10167], [10168, 10170], [10171, 10173], [10174, 10176], [10177, 10182], [10182, 10183], [10184, 10187], [10188, 10195], [10196, 10198], [10199, 10202], [10203, 10210], [10211, 10216], [10216, 10217], [10218, 10223], [10224, 10229], [10230, 10233], [10234, 10241], [10242, 10248], [10248, 10249], [10250, 10253], [10254, 10257], [10258, 10263], [10264, 10269], [10269, 10270], [10271, 10275], [10276, 10280], [10281, 10284], [10285, 10288], [10289, 10296], [10297, 10304], [10305, 10311], [10311, 10312]]}) 
answer: set([u'summer', u'cold'])
candidate Sentence: (0.14079119265079498, {u'tokens': [u'Although', u'the', u'majority', u'of', u'Uruguayans', u'do', u'not', u'actively', u'practice', u'a', u'religion', u',', u'they', u'are', u'nominally', u'church', u'members', u'in', u'the', u'Catholic', u',', u'Protestant', u'and', u'Jewish', u'communities', u'.'], u'lemmas': [u'although', u'the', u'majority', u'of', u'Uruguayans', u'do', u'not', u'actively', u'practice', u'a', u'religion', u',', u'they', u'be', u'nominally', u'church', u'member', u'in', u'the', u'Catholic', u',', u'Protestant', u'and', u'jewish', u'community', u'.'], u'pos': [u'IN', u'DT', u'NN', u'IN', u'NNPS', u'VBP', u'RB', u'RB', u'VB', u'DT', u'NN', u',', u'PRP', u'VBP', u'RB', u'NN', u'NNS', u'IN', u'DT', u'NNP', u',', u'NNP', u'CC', u'JJ', u'NNS', u'.'], u'char_offsets': [[18083, 18091], [18092, 18095], [18096, 18104], [18105, 18107], [18108, 18118], [18119, 18121], [18122, 18125], [18126, 18134], [18135, 18143], [18144, 18145], [18146, 18154], [18154, 18155], [18156, 18160], [18161, 18164], [18165, 18174], [18175, 18181], [18182, 18189], [18190, 18192], [18193, 18196], [18197, 18205], [18205, 18206], [18207, 18217], [18218, 18221], [18222, 18228], [18229, 18240], [18240, 18241]]}) 
answer: set([u'summer', u'cold'])
candidate Sentence: (0.12263534963130951, {u'tokens': [u'It', u'receives', u'the', u'periodic', u'influence', u'of', u'the', u'polar', u'air', u'in', u'winter', u',', u'and', u'tropical', u'air', u'from', u'Brazil', u'in', u'summer', u'.'], u'lemmas': [u'it', u'receive', u'the', u'periodic', u'influence', u'of', u'the', u'polar', u'air', u'in', u'winter', u',', u'and', u'tropical', u'air', u'from', u'Brazil', u'in', u'summer', u'.'], u'pos': [u'PRP', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u',', u'CC', u'JJ', u'NN', u'IN', u'NNP', u'IN', u'NN', u'.'], u'char_offsets': [[11721, 11723], [11724, 11732], [11733, 11736], [11737, 11745], [11746, 11755], [11756, 11758], [11759, 11762], [11763, 11768], [11769, 11772], [11773, 11775], [11776, 11782], [11782, 11783], [11784, 11787], [11788, 11796], [11797, 11800], [11801, 11805], [11806, 11812], [11813, 11815], [11816, 11822], [11822, 11823]]}) 
answer: set([u'cold'])
candidate Sentence: (0.058441989123821259, {u'tokens': [u'In', u'recent', u'years', u'Uruguay', u'has', u'shifted', u'some', u'of', u'its', u'energy', u'into', u'developing', u'the', u'commercial', u'use', u'of', u'IT', u'technologies', u'and', u'has', u'become', u'the', u'first', u'exporter', u'of', u'software', u'in', u'Latin', u'America', u'.'], u'lemmas': [u'in', u'recent', u'year', u'Uruguay', u'have', u'shift', u'some', u'of', u'its', u'energy', u'into', u'develop', u'the', u'commercial', u'use', u'of', u'it', u'technology', u'and', u'have', u'become', u'the', u'first', u'exporter', u'of', u'software', u'in', u'Latin', u'America', u'.'], u'pos': [u'IN', u'JJ', u'NNS', u'NNP', u'VBZ', u'VBN', u'DT', u'IN', u'PRP$', u'NN', u'IN', u'VBG', u'DT', u'JJ', u'NN', u'IN', u'PRP', u'NNS', u'CC', u'VBZ', u'VBN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[13363, 13365], [13366, 13372], [13373, 13378], [13379, 13386], [13387, 13390], [13391, 13398], [13399, 13403], [13404, 13406], [13407, 13410], [13411, 13417], [13418, 13422], [13423, 13433], [13434, 13437], [13438, 13448], [13449, 13452], [13453, 13455], [13456, 13458], [13459, 13471], [13472, 13475], [13476, 13479], [13480, 13486], [13487, 13490], [13491, 13496], [13497, 13505], [13506, 13508], [13509, 13517], [13518, 13520], [13521, 13526], [13527, 13534], [13534, 13535]]}) 
answer: set([u'summer', u'cold'])
candidate Sentence: (0.05486028641462326, {u'tokens': [u'It', u'has', u'many', u'possible', u'meanings', u'.'], u'lemmas': [u'it', u'have', u'many', u'possible', u'meaning', u'.'], u'pos': [u'PRP', u'VBZ', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[1976, 1978], [1979, 1982], [1983, 1987], [1988, 1996], [1997, 2005], [2005, 2006]]}) 
answer: set([u'summer', u'cold'])
candidate Sentence: (0.047284241765737534, {u'tokens': [u'Many', u'relocated', u'to', u'Montevideo', u',', u'which', u'had', u'a', u'larger', u'black', u'community', u',', u'seemed', u'lest', u'hostile', u'politically', u'than', u'Buenos', u'Aires', u',', u'and', u'had', u'a', u'more', u'favorable', u'climate', u'with', u'lower', u'humidity', u'.'], u'lemmas': [u'many', u'relocate', u'to', u'Montevideo', u',', u'which', u'have', u'a', u'larger', u'black', u'community', u',', u'seem', u'lest', u'hostile', u'politically', u'than', u'Buenos', u'Aires', u',', u'and', u'have', u'a', u'more', u'favorable', u'climate', u'with', u'lower', u'humidity', u'.'], u'pos': [u'JJ', u'VBN', u'TO', u'NNP', u',', u'WDT', u'VBD', u'DT', u'JJR', u'JJ', u'NN', u',', u'VBD', u'IN', u'JJ', u'RB', u'IN', u'NNP', u'NNP', u',', u'CC', u'VBD', u'DT', u'RBR', u'JJ', u'NN', u'IN', u'JJR', u'NN', u'.'], u'char_offsets': [[4195, 4199], [4200, 4209], [4210, 4212], [4213, 4223], [4223, 4224], [4225, 4230], [4231, 4234], [4235, 4236], [4237, 4243], [4244, 4249], [4250, 4259], [4259, 4260], [4261, 4267], [4268, 4272], [4273, 4280], [4281, 4292], [4293, 4297], [4298, 4304], [4305, 4310], [4310, 4311], [4312, 4315], [4316, 4319], [4320, 4321], [4322, 4326], [4327, 4336], [4337, 4344], [4345, 4349], [4350, 4355], [4356, 4364], [4364, 4365]]}) 
answer: set([u'summer', u'cold'])
candidate Sentence: (0.042372260242700577, {u'tokens': [u'For', u'most', u'of', u'Uruguay', u"'s", u'history', u',', u'the', u'Partido', u'Colorado', u'and', u'Partido', u'Blanco', u'have', u'alternated', u'in', u'power', u'.'], u'lemmas': [u'for', u'most', u'of', u'Uruguay', u"'s", u'history', u',', u'the', u'Partido', u'Colorado', u'and', u'Partido', u'Blanco', u'have', u'alternate', u'in', u'power', u'.'], u'pos': [u'IN', u'JJS', u'IN', u'NNP', u'POS', u'NN', u',', u'DT', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'VBP', u'VBN', u'IN', u'NN', u'.'], u'char_offsets': [[6909, 6912], [6913, 6917], [6918, 6920], [6921, 6928], [6928, 6930], [6931, 6938], [6938, 6939], [6940, 6943], [6944, 6951], [6952, 6960], [6961, 6964], [6965, 6972], [6973, 6979], [6980, 6984], [6985, 6995], [6996, 6998], [6999, 7004], [7004, 7005]]}) 
answer: set([u'summer', u'cold'])
candidate Sentence: (0.041029863059520721, {u'tokens': [u':', u'Chuy', u'Stream', u'13', u'kilometres', u'-LRB-', u'8.1', u'mi', u'-RRB-', u',', u'straight', u'line', u'-LRB-', u'Chuy', u'-RRB-', u'8.7', u'kilometres', u'-LRB-', u'5.4', u'mi', u'-RRB-', u',', u'San', u'Miguel', u'Stream', u'13', u'km', u'-LRB-', u'8.1', u'mi', u'-RRB-', u',', u'Mern', u'Lagoon', u',', u'280.1', u'km', u'-LRB-', u'174', u'mi', u'-RRB-', u'Yaguarn', u'River', u',', u'142.4', u'km', u'-LRB-', u'88.5', u'mi', u'-RRB-', u',', u'Yaguarn', u'`', u'Chico', u"'", u'River', u'18.5', u'km', u'-LRB-', u'11.5', u'mi', u'-RRB-', u',', u'`', u'Arrollo', u'de', u'la', u'Mina', u"'", u'Stream', u'20.4', u'km', u'-LRB-', u'12.7', u'mi', u'-RRB-', u',', u'Acegu', u'straight', u'line', u'37.2', u'km', u'-LRB-', u'23.1', u'mi', u'-RRB-', u',', u'San', u'Luis', u'Stream', u'31.3', u'km', u'-LRB-', u'19.4', u'mi', u'-RRB-', u',', u'North', u'Branch', u'of', u'the', u'San', u'Luis', u'Stream', u'3.6', u'km', u'-LRB-', u'2.2', u'mi', u'-RRB-', u',', u'Straight', u'line', u'8', u'km', u'-LRB-', u'5', u'mi', u'-RRB-', u',', u'`', u'Caada', u'del', u'Cementerio', u"'", u'4', u'km', u'-LRB-', u'2.5', u'mi', u'-RRB-', u',', u'Straight', u'lines', u'0.6', u'km', u'-LRB-', u'0.4', u'mi', u'-RRB-', u',', u'`', u'Cuchilla', u'de', u'Santa', u'Ana', u"'", u'SE', u'168.5', u'km', u'-LRB-', u'104.7', u'mi', u'-RRB-', u',', u'Rivera-Livramento', u'4.8', u'km', u'-LRB-', u'3', u'mi', u'-RRB-', u',', u'`', u'Cuchilla', u'de', u'Santa', u'Ana', u"'", u'20.8', u'km', u'-LRB-', u'12.9', u'mi', u'-RRB-', u',', u'`', u'Cuchilla', u'Negra', u"'", u'4189.3', u'km', u'-LRB-', u'2603.1', u'mi', u'-RRB-', u',', u'`', u'Arrollo', u'de', u'la', u'Invernada', u"'", u'Stream', u'37.8', u'km', u'-LRB-', u'23.5', u'mi', u'-RRB-', u',', u'Cuareim', u'River', u'313.4', u'km', u'-LRB-', u'194.7', u'mi', u'-RRB-', u'Servicio', u'Geografico', u'Militar', u'The', u'climate', u'in', u'Uruguay', u'is', u'temperate', u':', u'it', u'has', u'warm', u'summers', u'and', u'cold', u'winters', u'.'], u'lemmas': [u':', u'Chuy', u'Stream', u'13', u'kilometre', u'-lrb-', u'8.1', u'mi', u'-rrb-', u',', u'straight', u'line', u'-lrb-', u'chuy', u'-rrb-', u'8.7', u'kilometre', u'-lrb-', u'5.4', u'mi', u'-rrb-', u',', u'San', u'Miguel', u'Stream', u'13', u'km', u'-lrb-', u'8.1', u'mi', u'-rrb-', u',', u'Mern', u'lagoon', u',', u'280.1', u'km', u'-lrb-', u'174', u'mi', u'-rrb-', u'Yaguarn', u'River', u',', u'142.4', u'km', u'-lrb-', u'88.5', u'mi', u'-rrb-', u',', u'Yaguarn', u'`', u'Chico', u"'", u'River', u'18.5', u'km', u'-lrb-', u'11.5', u'mi', u'-rrb-', u',', u'`', u'arrollo', u'de', u'la', u'Mina', u"'", u'Stream', u'20.4', u'km', u'-lrb-', u'12.7', u'mi', u'-rrb-', u',', u'Acegu', u'straight', u'line', u'37.2', u'km', u'-lrb-', u'23.1', u'mi', u'-rrb-', u',', u'San', u'Luis', u'Stream', u'31.3', u'km', u'-lrb-', u'19.4', u'mi', u'-rrb-', u',', u'North', u'Branch', u'of', u'the', u'San', u'Luis', u'Stream', u'3.6', u'km', u'-lrb-', u'2.2', u'mi', u'-rrb-', u',', u'straight', u'line', u'8', u'km', u'-lrb-', u'5', u'mi', u'-rrb-', u',', u'`', u'caada', u'del', u'cementerio', u"'", u'4', u'km', u'-lrb-', u'2.5', u'mi', u'-rrb-', u',', u'straight', u'line', u'0.6', u'km', u'-lrb-', u'0.4', u'mi', u'-rrb-', u',', u'`', u'Cuchilla', u'de', u'Santa', u'Ana', u"'", u'se', u'168.5', u'km', u'-lrb-', u'104.7', u'mi', u'-rrb-', u',', u'Rivera-Livramento', u'4.8', u'km', u'-lrb-', u'3', u'mi', u'-rrb-', u',', u'`', u'Cuchilla', u'de', u'Santa', u'Ana', u"'", u'20.8', u'km', u'-lrb-', u'12.9', u'mi', u'-rrb-', u',', u'`', u'Cuchilla', u'Negra', u"'", u'4189.3', u'km', u'-lrb-', u'2603.1', u'mi', u'-rrb-', u',', u'`', u'arrollo', u'de', u'la', u'invernada', u"'", u'Stream', u'37.8', u'km', u'-lrb-', u'23.5', u'mi', u'-rrb-', u',', u'Cuareim', u'River', u'313.4', u'km', u'-lrb-', u'194.7', u'mi', u'-rrb-', u'Servicio', u'Geografico', u'Militar', u'The', u'climate', u'in', u'Uruguay', u'be', u'temperate', u':', u'it', u'have', u'warm', u'summer', u'and', u'cold', u'winter', u'.'], u'pos': [u':', u'NNP', u'NNP', u'CD', u'NNS', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'JJ', u'NN', u'-LRB-', u'NN', u'-RRB-', u'CD', u'NNS', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'NNP', u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'NN', u',', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u'NNP', u'NNP', u',', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'``', u'NNP', u"''", u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'``', u'FW', u'FW', u'FW', u'NNP', u'POS', u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'JJ', u'NN', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'NNP', u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'JJ', u'NN', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'``', u'FW', u'FW', u'FW', u"''", u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NN', u'NNS', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'``', u'NNP', u'IN', u'NNP', u'NNP', u'POS', u'NN', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'``', u'NNP', u'IN', u'NNP', u'NNP', u'POS', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'``', u'NNP', u'NNP', u'POS', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'``', u'FW', u'FW', u'FW', u'FW', u"''", u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u'NNP', u'NNP', u'NNP', u'NNP', u'NN', u'IN', u'NNP', u'VBZ', u'JJ', u':', u'PRP', u'VBZ', u'JJ', u'NNS', u'CC', u'JJ', u'NNS', u'.'], u'char_offsets': [[10760, 10761], [10761, 10765], [10766, 10772], [10773, 10775], [10776, 10786], [10787, 10788], [10788, 10791], [10792, 10794], [10794, 10795], [10795, 10796], [10797, 10805], [10806, 10810], [10811, 10812], [10812, 10816], [10816, 10817], [10818, 10821], [10822, 10832], [10833, 10834], [10834, 10837], [10838, 10840], [10840, 10841], [10841, 10842], [10843, 10846], [10847, 10853], [10854, 10860], [10861, 10863], [10864, 10866], [10867, 10868], [10868, 10871], [10872, 10874], [10874, 10875], [10875, 10876], [10877, 10881], [10882, 10888], [10888, 10889], [10890, 10895], [10896, 10898], [10899, 10900], [10900, 10903], [10904, 10906], [10906, 10907], [10908, 10915], [10916, 10921], [10921, 10922], [10923, 10928], [10929, 10931], [10932, 10933], [10933, 10937], [10938, 10940], [10940, 10941], [10941, 10942], [10943, 10950], [10951, 10952], [10952, 10957], [10957, 10958], [10959, 10964], [10965, 10969], [10970, 10972], [10973, 10974], [10974, 10978], [10979, 10981], [10981, 10982], [10982, 10983], [10984, 10985], [10985, 10992], [10993, 10995], [10996, 10998], [10999, 11003], [11003, 11004], [11005, 11011], [11012, 11016], [11017, 11019], [11020, 11021], [11021, 11025], [11026, 11028], [11028, 11029], [11029, 11030], [11031, 11036], [11037, 11045], [11046, 11050], [11051, 11055], [11056, 11058], [11059, 11060], [11060, 11064], [11065, 11067], [11067, 11068], [11068, 11069], [11070, 11073], [11074, 11078], [11079, 11085], [11086, 11090], [11091, 11093], [11094, 11095], [11095, 11099], [11100, 11102], [11102, 11103], [11103, 11104], [11105, 11110], [11111, 11117], [11118, 11120], [11121, 11124], [11125, 11128], [11129, 11133], [11134, 11140], [11141, 11144], [11145, 11147], [11148, 11149], [11149, 11152], [11153, 11155], [11155, 11156], [11156, 11157], [11158, 11166], [11167, 11171], [11172, 11173], [11174, 11176], [11177, 11178], [11178, 11179], [11180, 11182], [11182, 11183], [11183, 11184], [11185, 11186], [11186, 11191], [11192, 11195], [11196, 11206], [11206, 11207], [11208, 11209], [11210, 11212], [11213, 11214], [11214, 11217], [11218, 11220], [11220, 11221], [11221, 11222], [11223, 11231], [11232, 11237], [11238, 11241], [11242, 11244], [11245, 11246], [11246, 11249], [11250, 11252], [11252, 11253], [11253, 11254], [11255, 11256], [11256, 11264], [11265, 11267], [11268, 11273], [11274, 11277], [11277, 11278], [11279, 11281], [11282, 11287], [11288, 11290], [11291, 11292], [11292, 11297], [11298, 11300], [11300, 11301], [11301, 11302], [11303, 11320], [11321, 11324], [11325, 11327], [11328, 11329], [11329, 11330], [11331, 11333], [11333, 11334], [11334, 11335], [11336, 11337], [11337, 11345], [11346, 11348], [11349, 11354], [11355, 11358], [11358, 11359], [11360, 11364], [11365, 11367], [11368, 11369], [11369, 11373], [11374, 11376], [11376, 11377], [11377, 11378], [11379, 11380], [11380, 11388], [11389, 11394], [11394, 11395], [11396, 11402], [11403, 11405], [11406, 11407], [11407, 11413], [11414, 11416], [11416, 11417], [11417, 11418], [11419, 11420], [11420, 11427], [11428, 11430], [11431, 11433], [11434, 11443], [11443, 11444], [11445, 11451], [11452, 11456], [11457, 11459], [11460, 11461], [11461, 11465], [11466, 11468], [11468, 11469], [11469, 11470], [11471, 11478], [11479, 11484], [11485, 11490], [11491, 11493], [11494, 11495], [11495, 11500], [11501, 11503], [11503, 11504], [11506, 11514], [11515, 11525], [11526, 11533], [11534, 11537], [11538, 11545], [11546, 11548], [11549, 11556], [11557, 11559], [11560, 11569], [11569, 11570], [11571, 11573], [11574, 11577], [11578, 11582], [11583, 11590], [11591, 11594], [11595, 11599], [11600, 11607], [11607, 11608]]}) 
answer: set([])
candidate Sentence: (0.039302662014961243, {u'tokens': [u'Out', u'of', u'the', u'World', u'Cup', u'winners', u',', u'the', u'nation', u'with', u'the', u'second', u'smallest', u'population', u'is', u'Argentina', u'-LRB-', u'winners', u'of', u'the', u'1978', u'and', u'1986', u'editions', u'-RRB-', u'who', u'currently', u'have', u'just', u'over', u'40,000,000', u'people', u'according', u'to', u'the', u'latest', u'estimate', u';', u'the', u'2002', u'census', u'has', u'Uruguay', u"'s", u'current', u'population', u'slightly', u'under', u'3,400,000', u'.'], u'lemmas': [u'out', u'of', u'the', u'World', u'Cup', u'winner', u',', u'the', u'nation', u'with', u'the', u'second', u'smallest', u'population', u'be', u'Argentina', u'-lrb-', u'winner', u'of', u'the', u'1978', u'and', u'1986', u'edition', u'-rrb-', u'who', u'currently', u'have', u'just', u'over', u'40,000,000', u'people', u'accord', u'to', u'the', u'latest', u'estimate', u';', u'the', u'2002', u'census', u'have', u'Uruguay', u"'s", u'current', u'population', u'slightly', u'under', u'3,400,000', u'.'], u'pos': [u'IN', u'IN', u'DT', u'NNP', u'NNP', u'NNS', u',', u'DT', u'NN', u'IN', u'DT', u'JJ', u'JJS', u'NN', u'VBZ', u'NNP', u'-LRB-', u'NNS', u'IN', u'DT', u'CD', u'CC', u'CD', u'NNS', u'-RRB-', u'WP', u'RB', u'VBP', u'RB', u'IN', u'CD', u'NNS', u'VBG', u'TO', u'DT', u'JJS', u'NN', u':', u'DT', u'CD', u'NN', u'VBZ', u'NNP', u'POS', u'JJ', u'NN', u'RB', u'IN', u'CD', u'.'], u'char_offsets': [[21384, 21387], [21388, 21390], [21391, 21394], [21395, 21400], [21401, 21404], [21405, 21412], [21412, 21413], [21414, 21417], [21418, 21424], [21425, 21429], [21430, 21433], [21434, 21440], [21441, 21449], [21450, 21460], [21461, 21463], [21464, 21473], [21474, 21475], [21475, 21482], [21483, 21485], [21486, 21489], [21490, 21494], [21495, 21498], [21499, 21503], [21504, 21512], [21512, 21513], [21514, 21517], [21518, 21527], [21528, 21532], [21533, 21537], [21538, 21542], [21543, 21553], [21554, 21560], [21561, 21570], [21571, 21573], [21574, 21577], [21578, 21584], [21585, 21593], [21593, 21594], [21595, 21598], [21599, 21603], [21604, 21610], [21611, 21614], [21615, 21622], [21622, 21624], [21625, 21632], [21633, 21643], [21644, 21652], [21653, 21658], [21659, 21668], [21668, 21669]]}) 
answer: set([u'summer', u'cold'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No']
set([u'.', u'uruguay'])

Does Uruguay have cold summers?
Validity= False
Question Type = NA
Answer Type = NA
Answer = No.
Difficulty = easy
Article_Title = Uruguay
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a9.txt

Yes
_____________________________ test_yesno[param360] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f2ef0>, (<src.tfidf.TF_IDF object at 0x1144af5d0>, set(['.', 'uruguay'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('no') == True
E            +  where 'no' = <src.question_processing.Question_parser instance at 0x1156f2ef0>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.20097774267196655, {u'tokens': [u'There', u'can', u'be', u'frequent', u'thunderstorms', u'in', u'the', u'summer', u'.'], u'lemmas': [u'there', u'can', u'be', u'frequent', u'thunderstorm', u'in', u'the', u'summer', u'.'], u'pos': [u'EX', u'MD', u'VB', u'JJ', u'NNS', u'IN', u'DT', u'NN', u'.'], u'char_offsets': [[12123, 12128], [12129, 12132], [12133, 12135], [12136, 12144], [12145, 12158], [12159, 12161], [12162, 12165], [12166, 12172], [12172, 12173]]}) 
answer: set([u'cold'])
candidate Sentence: (0.14273937046527863, {u'tokens': [u'To', u'the', u'southwest', u'is', u'the', u'Ro', u'de', u'la', u'Plata', u',', u'the', u'estuary', u'of', u'the', u'Uruguay', u'River', u',', u'which', u'forms', u'the', u'western', u'border', u',', u'and', u'the', u'Paran', u'River', u',', u'that', u'does', u'not', u'run', u'through', u'Uruguay', u'itself', u'.'], u'lemmas': [u'to', u'the', u'southwest', u'be', u'the', u'ro', u'de', u'la', u'Plata', u',', u'the', u'estuary', u'of', u'the', u'Uruguay', u'River', u',', u'which', u'form', u'the', u'western', u'border', u',', u'and', u'the', u'Paran', u'River', u',', u'that', u'do', u'not', u'run', u'through', u'Uruguay', u'itself', u'.'], u'pos': [u'TO', u'DT', u'NN', u'VBZ', u'DT', u'NN', u'IN', u'DT', u'NNP', u',', u'DT', u'NN', u'IN', u'DT', u'NNP', u'NNP', u',', u'WDT', u'VBZ', u'DT', u'JJ', u'NN', u',', u'CC', u'DT', u'NNP', u'NNP', u',', u'WDT', u'VBZ', u'RB', u'VB', u'IN', u'NNP', u'PRP', u'.'], u'char_offsets': [[10144, 10146], [10147, 10150], [10151, 10160], [10161, 10163], [10164, 10167], [10168, 10170], [10171, 10173], [10174, 10176], [10177, 10182], [10182, 10183], [10184, 10187], [10188, 10195], [10196, 10198], [10199, 10202], [10203, 10210], [10211, 10216], [10216, 10217], [10218, 10223], [10224, 10229], [10230, 10233], [10234, 10241], [10242, 10248], [10248, 10249], [10250, 10253], [10254, 10257], [10258, 10263], [10264, 10269], [10269, 10270], [10271, 10275], [10276, 10280], [10281, 10284], [10285, 10288], [10289, 10296], [10297, 10304], [10305, 10311], [10311, 10312]]}) 
answer: set([u'summer', u'cold'])
candidate Sentence: (0.14079119265079498, {u'tokens': [u'Although', u'the', u'majority', u'of', u'Uruguayans', u'do', u'not', u'actively', u'practice', u'a', u'religion', u',', u'they', u'are', u'nominally', u'church', u'members', u'in', u'the', u'Catholic', u',', u'Protestant', u'and', u'Jewish', u'communities', u'.'], u'lemmas': [u'although', u'the', u'majority', u'of', u'Uruguayans', u'do', u'not', u'actively', u'practice', u'a', u'religion', u',', u'they', u'be', u'nominally', u'church', u'member', u'in', u'the', u'Catholic', u',', u'Protestant', u'and', u'jewish', u'community', u'.'], u'pos': [u'IN', u'DT', u'NN', u'IN', u'NNPS', u'VBP', u'RB', u'RB', u'VB', u'DT', u'NN', u',', u'PRP', u'VBP', u'RB', u'NN', u'NNS', u'IN', u'DT', u'NNP', u',', u'NNP', u'CC', u'JJ', u'NNS', u'.'], u'char_offsets': [[18083, 18091], [18092, 18095], [18096, 18104], [18105, 18107], [18108, 18118], [18119, 18121], [18122, 18125], [18126, 18134], [18135, 18143], [18144, 18145], [18146, 18154], [18154, 18155], [18156, 18160], [18161, 18164], [18165, 18174], [18175, 18181], [18182, 18189], [18190, 18192], [18193, 18196], [18197, 18205], [18205, 18206], [18207, 18217], [18218, 18221], [18222, 18228], [18229, 18240], [18240, 18241]]}) 
answer: set([u'summer', u'cold'])
candidate Sentence: (0.12263534963130951, {u'tokens': [u'It', u'receives', u'the', u'periodic', u'influence', u'of', u'the', u'polar', u'air', u'in', u'winter', u',', u'and', u'tropical', u'air', u'from', u'Brazil', u'in', u'summer', u'.'], u'lemmas': [u'it', u'receive', u'the', u'periodic', u'influence', u'of', u'the', u'polar', u'air', u'in', u'winter', u',', u'and', u'tropical', u'air', u'from', u'Brazil', u'in', u'summer', u'.'], u'pos': [u'PRP', u'VBZ', u'DT', u'JJ', u'NN', u'IN', u'DT', u'JJ', u'NN', u'IN', u'NN', u',', u'CC', u'JJ', u'NN', u'IN', u'NNP', u'IN', u'NN', u'.'], u'char_offsets': [[11721, 11723], [11724, 11732], [11733, 11736], [11737, 11745], [11746, 11755], [11756, 11758], [11759, 11762], [11763, 11768], [11769, 11772], [11773, 11775], [11776, 11782], [11782, 11783], [11784, 11787], [11788, 11796], [11797, 11800], [11801, 11805], [11806, 11812], [11813, 11815], [11816, 11822], [11822, 11823]]}) 
answer: set([u'cold'])
candidate Sentence: (0.058441989123821259, {u'tokens': [u'In', u'recent', u'years', u'Uruguay', u'has', u'shifted', u'some', u'of', u'its', u'energy', u'into', u'developing', u'the', u'commercial', u'use', u'of', u'IT', u'technologies', u'and', u'has', u'become', u'the', u'first', u'exporter', u'of', u'software', u'in', u'Latin', u'America', u'.'], u'lemmas': [u'in', u'recent', u'year', u'Uruguay', u'have', u'shift', u'some', u'of', u'its', u'energy', u'into', u'develop', u'the', u'commercial', u'use', u'of', u'it', u'technology', u'and', u'have', u'become', u'the', u'first', u'exporter', u'of', u'software', u'in', u'Latin', u'America', u'.'], u'pos': [u'IN', u'JJ', u'NNS', u'NNP', u'VBZ', u'VBN', u'DT', u'IN', u'PRP$', u'NN', u'IN', u'VBG', u'DT', u'JJ', u'NN', u'IN', u'PRP', u'NNS', u'CC', u'VBZ', u'VBN', u'DT', u'JJ', u'NN', u'IN', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[13363, 13365], [13366, 13372], [13373, 13378], [13379, 13386], [13387, 13390], [13391, 13398], [13399, 13403], [13404, 13406], [13407, 13410], [13411, 13417], [13418, 13422], [13423, 13433], [13434, 13437], [13438, 13448], [13449, 13452], [13453, 13455], [13456, 13458], [13459, 13471], [13472, 13475], [13476, 13479], [13480, 13486], [13487, 13490], [13491, 13496], [13497, 13505], [13506, 13508], [13509, 13517], [13518, 13520], [13521, 13526], [13527, 13534], [13534, 13535]]}) 
answer: set([u'summer', u'cold'])
candidate Sentence: (0.05486028641462326, {u'tokens': [u'It', u'has', u'many', u'possible', u'meanings', u'.'], u'lemmas': [u'it', u'have', u'many', u'possible', u'meaning', u'.'], u'pos': [u'PRP', u'VBZ', u'JJ', u'JJ', u'NNS', u'.'], u'char_offsets': [[1976, 1978], [1979, 1982], [1983, 1987], [1988, 1996], [1997, 2005], [2005, 2006]]}) 
answer: set([u'summer', u'cold'])
candidate Sentence: (0.047284241765737534, {u'tokens': [u'Many', u'relocated', u'to', u'Montevideo', u',', u'which', u'had', u'a', u'larger', u'black', u'community', u',', u'seemed', u'lest', u'hostile', u'politically', u'than', u'Buenos', u'Aires', u',', u'and', u'had', u'a', u'more', u'favorable', u'climate', u'with', u'lower', u'humidity', u'.'], u'lemmas': [u'many', u'relocate', u'to', u'Montevideo', u',', u'which', u'have', u'a', u'larger', u'black', u'community', u',', u'seem', u'lest', u'hostile', u'politically', u'than', u'Buenos', u'Aires', u',', u'and', u'have', u'a', u'more', u'favorable', u'climate', u'with', u'lower', u'humidity', u'.'], u'pos': [u'JJ', u'VBN', u'TO', u'NNP', u',', u'WDT', u'VBD', u'DT', u'JJR', u'JJ', u'NN', u',', u'VBD', u'IN', u'JJ', u'RB', u'IN', u'NNP', u'NNP', u',', u'CC', u'VBD', u'DT', u'RBR', u'JJ', u'NN', u'IN', u'JJR', u'NN', u'.'], u'char_offsets': [[4195, 4199], [4200, 4209], [4210, 4212], [4213, 4223], [4223, 4224], [4225, 4230], [4231, 4234], [4235, 4236], [4237, 4243], [4244, 4249], [4250, 4259], [4259, 4260], [4261, 4267], [4268, 4272], [4273, 4280], [4281, 4292], [4293, 4297], [4298, 4304], [4305, 4310], [4310, 4311], [4312, 4315], [4316, 4319], [4320, 4321], [4322, 4326], [4327, 4336], [4337, 4344], [4345, 4349], [4350, 4355], [4356, 4364], [4364, 4365]]}) 
answer: set([u'summer', u'cold'])
candidate Sentence: (0.042372260242700577, {u'tokens': [u'For', u'most', u'of', u'Uruguay', u"'s", u'history', u',', u'the', u'Partido', u'Colorado', u'and', u'Partido', u'Blanco', u'have', u'alternated', u'in', u'power', u'.'], u'lemmas': [u'for', u'most', u'of', u'Uruguay', u"'s", u'history', u',', u'the', u'Partido', u'Colorado', u'and', u'Partido', u'Blanco', u'have', u'alternate', u'in', u'power', u'.'], u'pos': [u'IN', u'JJS', u'IN', u'NNP', u'POS', u'NN', u',', u'DT', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'VBP', u'VBN', u'IN', u'NN', u'.'], u'char_offsets': [[6909, 6912], [6913, 6917], [6918, 6920], [6921, 6928], [6928, 6930], [6931, 6938], [6938, 6939], [6940, 6943], [6944, 6951], [6952, 6960], [6961, 6964], [6965, 6972], [6973, 6979], [6980, 6984], [6985, 6995], [6996, 6998], [6999, 7004], [7004, 7005]]}) 
answer: set([u'summer', u'cold'])
candidate Sentence: (0.041029863059520721, {u'tokens': [u':', u'Chuy', u'Stream', u'13', u'kilometres', u'-LRB-', u'8.1', u'mi', u'-RRB-', u',', u'straight', u'line', u'-LRB-', u'Chuy', u'-RRB-', u'8.7', u'kilometres', u'-LRB-', u'5.4', u'mi', u'-RRB-', u',', u'San', u'Miguel', u'Stream', u'13', u'km', u'-LRB-', u'8.1', u'mi', u'-RRB-', u',', u'Mern', u'Lagoon', u',', u'280.1', u'km', u'-LRB-', u'174', u'mi', u'-RRB-', u'Yaguarn', u'River', u',', u'142.4', u'km', u'-LRB-', u'88.5', u'mi', u'-RRB-', u',', u'Yaguarn', u'`', u'Chico', u"'", u'River', u'18.5', u'km', u'-LRB-', u'11.5', u'mi', u'-RRB-', u',', u'`', u'Arrollo', u'de', u'la', u'Mina', u"'", u'Stream', u'20.4', u'km', u'-LRB-', u'12.7', u'mi', u'-RRB-', u',', u'Acegu', u'straight', u'line', u'37.2', u'km', u'-LRB-', u'23.1', u'mi', u'-RRB-', u',', u'San', u'Luis', u'Stream', u'31.3', u'km', u'-LRB-', u'19.4', u'mi', u'-RRB-', u',', u'North', u'Branch', u'of', u'the', u'San', u'Luis', u'Stream', u'3.6', u'km', u'-LRB-', u'2.2', u'mi', u'-RRB-', u',', u'Straight', u'line', u'8', u'km', u'-LRB-', u'5', u'mi', u'-RRB-', u',', u'`', u'Caada', u'del', u'Cementerio', u"'", u'4', u'km', u'-LRB-', u'2.5', u'mi', u'-RRB-', u',', u'Straight', u'lines', u'0.6', u'km', u'-LRB-', u'0.4', u'mi', u'-RRB-', u',', u'`', u'Cuchilla', u'de', u'Santa', u'Ana', u"'", u'SE', u'168.5', u'km', u'-LRB-', u'104.7', u'mi', u'-RRB-', u',', u'Rivera-Livramento', u'4.8', u'km', u'-LRB-', u'3', u'mi', u'-RRB-', u',', u'`', u'Cuchilla', u'de', u'Santa', u'Ana', u"'", u'20.8', u'km', u'-LRB-', u'12.9', u'mi', u'-RRB-', u',', u'`', u'Cuchilla', u'Negra', u"'", u'4189.3', u'km', u'-LRB-', u'2603.1', u'mi', u'-RRB-', u',', u'`', u'Arrollo', u'de', u'la', u'Invernada', u"'", u'Stream', u'37.8', u'km', u'-LRB-', u'23.5', u'mi', u'-RRB-', u',', u'Cuareim', u'River', u'313.4', u'km', u'-LRB-', u'194.7', u'mi', u'-RRB-', u'Servicio', u'Geografico', u'Militar', u'The', u'climate', u'in', u'Uruguay', u'is', u'temperate', u':', u'it', u'has', u'warm', u'summers', u'and', u'cold', u'winters', u'.'], u'lemmas': [u':', u'Chuy', u'Stream', u'13', u'kilometre', u'-lrb-', u'8.1', u'mi', u'-rrb-', u',', u'straight', u'line', u'-lrb-', u'chuy', u'-rrb-', u'8.7', u'kilometre', u'-lrb-', u'5.4', u'mi', u'-rrb-', u',', u'San', u'Miguel', u'Stream', u'13', u'km', u'-lrb-', u'8.1', u'mi', u'-rrb-', u',', u'Mern', u'lagoon', u',', u'280.1', u'km', u'-lrb-', u'174', u'mi', u'-rrb-', u'Yaguarn', u'River', u',', u'142.4', u'km', u'-lrb-', u'88.5', u'mi', u'-rrb-', u',', u'Yaguarn', u'`', u'Chico', u"'", u'River', u'18.5', u'km', u'-lrb-', u'11.5', u'mi', u'-rrb-', u',', u'`', u'arrollo', u'de', u'la', u'Mina', u"'", u'Stream', u'20.4', u'km', u'-lrb-', u'12.7', u'mi', u'-rrb-', u',', u'Acegu', u'straight', u'line', u'37.2', u'km', u'-lrb-', u'23.1', u'mi', u'-rrb-', u',', u'San', u'Luis', u'Stream', u'31.3', u'km', u'-lrb-', u'19.4', u'mi', u'-rrb-', u',', u'North', u'Branch', u'of', u'the', u'San', u'Luis', u'Stream', u'3.6', u'km', u'-lrb-', u'2.2', u'mi', u'-rrb-', u',', u'straight', u'line', u'8', u'km', u'-lrb-', u'5', u'mi', u'-rrb-', u',', u'`', u'caada', u'del', u'cementerio', u"'", u'4', u'km', u'-lrb-', u'2.5', u'mi', u'-rrb-', u',', u'straight', u'line', u'0.6', u'km', u'-lrb-', u'0.4', u'mi', u'-rrb-', u',', u'`', u'Cuchilla', u'de', u'Santa', u'Ana', u"'", u'se', u'168.5', u'km', u'-lrb-', u'104.7', u'mi', u'-rrb-', u',', u'Rivera-Livramento', u'4.8', u'km', u'-lrb-', u'3', u'mi', u'-rrb-', u',', u'`', u'Cuchilla', u'de', u'Santa', u'Ana', u"'", u'20.8', u'km', u'-lrb-', u'12.9', u'mi', u'-rrb-', u',', u'`', u'Cuchilla', u'Negra', u"'", u'4189.3', u'km', u'-lrb-', u'2603.1', u'mi', u'-rrb-', u',', u'`', u'arrollo', u'de', u'la', u'invernada', u"'", u'Stream', u'37.8', u'km', u'-lrb-', u'23.5', u'mi', u'-rrb-', u',', u'Cuareim', u'River', u'313.4', u'km', u'-lrb-', u'194.7', u'mi', u'-rrb-', u'Servicio', u'Geografico', u'Militar', u'The', u'climate', u'in', u'Uruguay', u'be', u'temperate', u':', u'it', u'have', u'warm', u'summer', u'and', u'cold', u'winter', u'.'], u'pos': [u':', u'NNP', u'NNP', u'CD', u'NNS', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'JJ', u'NN', u'-LRB-', u'NN', u'-RRB-', u'CD', u'NNS', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'NNP', u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'NN', u',', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u'NNP', u'NNP', u',', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'``', u'NNP', u"''", u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'``', u'FW', u'FW', u'FW', u'NNP', u'POS', u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'JJ', u'NN', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'NNP', u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'NNP', u'IN', u'DT', u'NNP', u'NNP', u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'JJ', u'NN', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'``', u'FW', u'FW', u'FW', u"''", u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NN', u'NNS', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'``', u'NNP', u'IN', u'NNP', u'NNP', u'POS', u'NN', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'``', u'NNP', u'IN', u'NNP', u'NNP', u'POS', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'``', u'NNP', u'NNP', u'POS', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'``', u'FW', u'FW', u'FW', u'FW', u"''", u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u',', u'NNP', u'NNP', u'CD', u'NN', u'-LRB-', u'CD', u'NN', u'-RRB-', u'NNP', u'NNP', u'NNP', u'NNP', u'NN', u'IN', u'NNP', u'VBZ', u'JJ', u':', u'PRP', u'VBZ', u'JJ', u'NNS', u'CC', u'JJ', u'NNS', u'.'], u'char_offsets': [[10760, 10761], [10761, 10765], [10766, 10772], [10773, 10775], [10776, 10786], [10787, 10788], [10788, 10791], [10792, 10794], [10794, 10795], [10795, 10796], [10797, 10805], [10806, 10810], [10811, 10812], [10812, 10816], [10816, 10817], [10818, 10821], [10822, 10832], [10833, 10834], [10834, 10837], [10838, 10840], [10840, 10841], [10841, 10842], [10843, 10846], [10847, 10853], [10854, 10860], [10861, 10863], [10864, 10866], [10867, 10868], [10868, 10871], [10872, 10874], [10874, 10875], [10875, 10876], [10877, 10881], [10882, 10888], [10888, 10889], [10890, 10895], [10896, 10898], [10899, 10900], [10900, 10903], [10904, 10906], [10906, 10907], [10908, 10915], [10916, 10921], [10921, 10922], [10923, 10928], [10929, 10931], [10932, 10933], [10933, 10937], [10938, 10940], [10940, 10941], [10941, 10942], [10943, 10950], [10951, 10952], [10952, 10957], [10957, 10958], [10959, 10964], [10965, 10969], [10970, 10972], [10973, 10974], [10974, 10978], [10979, 10981], [10981, 10982], [10982, 10983], [10984, 10985], [10985, 10992], [10993, 10995], [10996, 10998], [10999, 11003], [11003, 11004], [11005, 11011], [11012, 11016], [11017, 11019], [11020, 11021], [11021, 11025], [11026, 11028], [11028, 11029], [11029, 11030], [11031, 11036], [11037, 11045], [11046, 11050], [11051, 11055], [11056, 11058], [11059, 11060], [11060, 11064], [11065, 11067], [11067, 11068], [11068, 11069], [11070, 11073], [11074, 11078], [11079, 11085], [11086, 11090], [11091, 11093], [11094, 11095], [11095, 11099], [11100, 11102], [11102, 11103], [11103, 11104], [11105, 11110], [11111, 11117], [11118, 11120], [11121, 11124], [11125, 11128], [11129, 11133], [11134, 11140], [11141, 11144], [11145, 11147], [11148, 11149], [11149, 11152], [11153, 11155], [11155, 11156], [11156, 11157], [11158, 11166], [11167, 11171], [11172, 11173], [11174, 11176], [11177, 11178], [11178, 11179], [11180, 11182], [11182, 11183], [11183, 11184], [11185, 11186], [11186, 11191], [11192, 11195], [11196, 11206], [11206, 11207], [11208, 11209], [11210, 11212], [11213, 11214], [11214, 11217], [11218, 11220], [11220, 11221], [11221, 11222], [11223, 11231], [11232, 11237], [11238, 11241], [11242, 11244], [11245, 11246], [11246, 11249], [11250, 11252], [11252, 11253], [11253, 11254], [11255, 11256], [11256, 11264], [11265, 11267], [11268, 11273], [11274, 11277], [11277, 11278], [11279, 11281], [11282, 11287], [11288, 11290], [11291, 11292], [11292, 11297], [11298, 11300], [11300, 11301], [11301, 11302], [11303, 11320], [11321, 11324], [11325, 11327], [11328, 11329], [11329, 11330], [11331, 11333], [11333, 11334], [11334, 11335], [11336, 11337], [11337, 11345], [11346, 11348], [11349, 11354], [11355, 11358], [11358, 11359], [11360, 11364], [11365, 11367], [11368, 11369], [11369, 11373], [11374, 11376], [11376, 11377], [11377, 11378], [11379, 11380], [11380, 11388], [11389, 11394], [11394, 11395], [11396, 11402], [11403, 11405], [11406, 11407], [11407, 11413], [11414, 11416], [11416, 11417], [11417, 11418], [11419, 11420], [11420, 11427], [11428, 11430], [11431, 11433], [11434, 11443], [11443, 11444], [11445, 11451], [11452, 11456], [11457, 11459], [11460, 11461], [11461, 11465], [11466, 11468], [11468, 11469], [11469, 11470], [11471, 11478], [11479, 11484], [11485, 11490], [11491, 11493], [11494, 11495], [11495, 11500], [11501, 11503], [11503, 11504], [11506, 11514], [11515, 11525], [11526, 11533], [11534, 11537], [11538, 11545], [11546, 11548], [11549, 11556], [11557, 11559], [11560, 11569], [11569, 11570], [11571, 11573], [11574, 11577], [11578, 11582], [11583, 11590], [11591, 11594], [11595, 11599], [11600, 11607], [11607, 11608]]}) 
answer: set([])
candidate Sentence: (0.039302662014961243, {u'tokens': [u'Out', u'of', u'the', u'World', u'Cup', u'winners', u',', u'the', u'nation', u'with', u'the', u'second', u'smallest', u'population', u'is', u'Argentina', u'-LRB-', u'winners', u'of', u'the', u'1978', u'and', u'1986', u'editions', u'-RRB-', u'who', u'currently', u'have', u'just', u'over', u'40,000,000', u'people', u'according', u'to', u'the', u'latest', u'estimate', u';', u'the', u'2002', u'census', u'has', u'Uruguay', u"'s", u'current', u'population', u'slightly', u'under', u'3,400,000', u'.'], u'lemmas': [u'out', u'of', u'the', u'World', u'Cup', u'winner', u',', u'the', u'nation', u'with', u'the', u'second', u'smallest', u'population', u'be', u'Argentina', u'-lrb-', u'winner', u'of', u'the', u'1978', u'and', u'1986', u'edition', u'-rrb-', u'who', u'currently', u'have', u'just', u'over', u'40,000,000', u'people', u'accord', u'to', u'the', u'latest', u'estimate', u';', u'the', u'2002', u'census', u'have', u'Uruguay', u"'s", u'current', u'population', u'slightly', u'under', u'3,400,000', u'.'], u'pos': [u'IN', u'IN', u'DT', u'NNP', u'NNP', u'NNS', u',', u'DT', u'NN', u'IN', u'DT', u'JJ', u'JJS', u'NN', u'VBZ', u'NNP', u'-LRB-', u'NNS', u'IN', u'DT', u'CD', u'CC', u'CD', u'NNS', u'-RRB-', u'WP', u'RB', u'VBP', u'RB', u'IN', u'CD', u'NNS', u'VBG', u'TO', u'DT', u'JJS', u'NN', u':', u'DT', u'CD', u'NN', u'VBZ', u'NNP', u'POS', u'JJ', u'NN', u'RB', u'IN', u'CD', u'.'], u'char_offsets': [[21384, 21387], [21388, 21390], [21391, 21394], [21395, 21400], [21401, 21404], [21405, 21412], [21412, 21413], [21414, 21417], [21418, 21424], [21425, 21429], [21430, 21433], [21434, 21440], [21441, 21449], [21450, 21460], [21461, 21463], [21464, 21473], [21474, 21475], [21475, 21482], [21483, 21485], [21486, 21489], [21490, 21494], [21495, 21498], [21499, 21503], [21504, 21512], [21512, 21513], [21514, 21517], [21518, 21527], [21528, 21532], [21533, 21537], [21538, 21542], [21543, 21553], [21554, 21560], [21561, 21570], [21571, 21573], [21574, 21577], [21578, 21584], [21585, 21593], [21593, 21594], [21595, 21598], [21599, 21603], [21604, 21610], [21611, 21614], [21615, 21622], [21622, 21624], [21625, 21632], [21633, 21643], [21644, 21652], [21653, 21658], [21659, 21668], [21668, 21669]]}) 
answer: set([u'summer', u'cold'])
['No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No']
set([u'.', u'uruguay'])

Does Uruguay have cold summers?
Validity= False
Question Type = NA
Answer Type = NA
Answer = no
Difficulty = easy
Article_Title = Uruguay
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a9.txt

Yes
_____________________________ test_yesno[param371] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f7248>, (<src.tfidf.TF_IDF object at 0x1144af5d0>, set(['.', 'uruguay'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('No') == True
E            +  where 'No' = <src.question_processing.Question_parser instance at 0x1156f7248>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.66724121570587158, {u'tokens': [u'The', u'coolest', u'month', u'is', u'June', u',', u'while', u'the', u'warmest', u'is', u'January', u'.'], u'lemmas': [u'the', u'coolest', u'month', u'be', u'June', u',', u'while', u'the', u'warmest', u'be', u'January', u'.'], u'pos': [u'DT', u'JJS', u'NN', u'VBZ', u'NNP', u',', u'IN', u'DT', u'JJS', u'VBZ', u'NNP', u'.'], u'char_offsets': [[11951, 11954], [11955, 11962], [11963, 11968], [11969, 11971], [11972, 11976], [11976, 11977], [11978, 11983], [11984, 11987], [11988, 11995], [11996, 11998], [11999, 12006], [12006, 12007]]}) 
answer: set([])
candidate Sentence: (0.16936025023460388, {u'tokens': [u'The', u'newly', u'elected', u'Frente', u'Amplio', u'government', u',', u'while', u'pledging', u'to', u'continue', u'payments', u'on', u'Uruguay', u"'s", u'external', u'debt', u',', u'Michael', u'Fox', u',', u'Uruguay', u"'s", u'Frente', u'Amplio', u':', u'From', u'Revolution', u'to', u'Dilution', u',', u'June', u'19', u',', u'2007', u'.'], u'lemmas': [u'the', u'newly', u'elect', u'Frente', u'Amplio', u'government', u',', u'while', u'pledge', u'to', u'continue', u'payment', u'on', u'Uruguay', u"'s", u'external', u'debt', u',', u'Michael', u'Fox', u',', u'Uruguay', u"'s", u'Frente', u'Amplio', u':', u'from', u'revolution', u'to', u'Dilution', u',', u'June', u'19', u',', u'2007', u'.'], u'pos': [u'DT', u'RB', u'VBN', u'NNP', u'NNP', u'NN', u',', u'IN', u'VBG', u'TO', u'VB', u'NNS', u'IN', u'NNP', u'POS', u'JJ', u'NN', u',', u'NNP', u'NNP', u',', u'NNP', u'POS', u'NNP', u'NNP', u':', u'IN', u'NN', u'TO', u'NNP', u',', u'NNP', u'CD', u',', u'CD', u'.'], u'char_offsets': [[14202, 14205], [14206, 14211], [14212, 14219], [14220, 14226], [14227, 14233], [14234, 14244], [14244, 14245], [14246, 14251], [14252, 14260], [14261, 14263], [14264, 14272], [14273, 14281], [14282, 14284], [14285, 14292], [14292, 14294], [14295, 14303], [14304, 14308], [14308, 14309], [14310, 14317], [14318, 14321], [14321, 14322], [14324, 14331], [14331, 14333], [14334, 14340], [14341, 14347], [14347, 14348], [14349, 14353], [14354, 14364], [14365, 14367], [14368, 14376], [14376, 14377], [14378, 14382], [14383, 14385], [14385, 14386], [14387, 14391], [14391, 14392]]}) 
answer: set([u'warmest', u'month'])
candidate Sentence: (0.14854253828525543, {u'tokens': [u'The', u'rainfall', u'is', u'equally', u'distributed', u'throughout', u'the', u'year', u',', u'but', u'tends', u'to', u'be', u'a', u'bit', u'more', u'frequent', u'in', u'the', u'autumn', u'months', u'.'], u'lemmas': [u'the', u'rainfall', u'be', u'equally', u'distribute', u'throughout', u'the', u'year', u',', u'but', u'tend', u'to', u'be', u'a', u'bit', u'more', u'frequent', u'in', u'the', u'autumn', u'month', u'.'], u'pos': [u'DT', u'NNS', u'VBZ', u'RB', u'VBN', u'IN', u'DT', u'NN', u',', u'CC', u'VBZ', u'TO', u'VB', u'DT', u'NN', u'RBR', u'JJ', u'IN', u'DT', u'NN', u'NNS', u'.'], u'char_offsets': [[12008, 12011], [12012, 12020], [12021, 12023], [12024, 12031], [12032, 12043], [12044, 12054], [12055, 12058], [12059, 12063], [12063, 12064], [12065, 12068], [12069, 12074], [12075, 12077], [12078, 12080], [12081, 12082], [12083, 12086], [12087, 12091], [12092, 12100], [12101, 12103], [12104, 12107], [12108, 12114], [12115, 12121], [12121, 12122]]}) 
answer: set([u'warmest', u'june'])
candidate Sentence: (0.088311746716499329, {u'tokens': [u'/', u'ref', u'>', u'Spanish', u'colonization', u'increased', u'as', u'Spain', u'sought', u'to', u'limit', u'Portugal', u"'s", u'expansion', u'of', u'Brazil', u"'s", u'frontiers', u'.'], u'lemmas': [u'/', u'ref', u'>', u'spanish', u'colonization', u'increase', u'as', u'Spain', u'seek', u'to', u'limit', u'Portugal', u"'s", u'expansion', u'of', u'Brazil', u"'s", u'frontier', u'.'], u'pos': [u':', u'NN', u'JJR', u'JJ', u'NN', u'VBD', u'IN', u'NNP', u'VBD', u'TO', u'VB', u'NNP', u'POS', u'NN', u'IN', u'NNP', u'POS', u'NNS', u'.'], u'char_offsets': [[3891, 3892], [3892, 3895], [3895, 3896], [3897, 3904], [3905, 3917], [3918, 3927], [3928, 3930], [3931, 3936], [3937, 3943], [3944, 3946], [3947, 3952], [3953, 3961], [3961, 3963], [3964, 3973], [3974, 3976], [3977, 3983], [3983, 3985], [3986, 3995], [3995, 3996]]}) 
answer: set([u'warmest', u'june', u'month'])
candidate Sentence: (0.074067205190658569, {u'tokens': [u'Uruguay', u"'s", u'capital', u',', u'Montevideo', u',', u'was', u'founded', u'by', u'the', u'Spanish', u'in', u'the', u'early', u'18th', u'century', u'as', u'a', u'military', u'stronghold', u';', u'its', u'natural', u'harbor', u'soon', u'developed', u'into', u'a', u'commercial', u'center', u'competing', u'with', u'Argentina', u"'s", u'capital', u',', u'Buenos', u'Aires', u'.'], u'lemmas': [u'Uruguay', u"'s", u'capital', u',', u'Montevideo', u',', u'be', u'found', u'by', u'the', u'spanish', u'in', u'the', u'early', u'18th', u'century', u'as', u'a', u'military', u'stronghold', u';', u'its', u'natural', u'harbor', u'soon', u'develop', u'into', u'a', u'commercial', u'center', u'compete', u'with', u'Argentina', u"'s", u'capital', u',', u'Buenos', u'Aires', u'.'], u'pos': [u'NNP', u'POS', u'NN', u',', u'NNP', u',', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'DT', u'JJ', u'NN', u':', u'PRP$', u'JJ', u'NN', u'RB', u'VBD', u'IN', u'DT', u'JJ', u'NN', u'VBG', u'IN', u'NNP', u'POS', u'NN', u',', u'NNP', u'NNP', u'.'], u'char_offsets': [[4650, 4657], [4657, 4659], [4660, 4667], [4667, 4668], [4669, 4679], [4679, 4680], [4681, 4684], [4685, 4692], [4693, 4695], [4696, 4699], [4700, 4707], [4708, 4710], [4711, 4714], [4715, 4720], [4721, 4725], [4726, 4733], [4734, 4736], [4737, 4738], [4739, 4747], [4748, 4758], [4758, 4759], [4760, 4763], [4764, 4771], [4772, 4778], [4779, 4783], [4784, 4793], [4794, 4798], [4799, 4800], [4801, 4811], [4812, 4818], [4819, 4828], [4829, 4833], [4834, 4843], [4843, 4845], [4846, 4853], [4853, 4854], [4855, 4861], [4862, 4867], [4867, 4868]]}) 
answer: set([u'warmest', u'june', u'month'])
candidate Sentence: (0.07130037248134613, {u'tokens': [u'/', u'ref', u'>', u'Uruguay', u"'s", u'oldest', u'church', u'is', u'in', u'San', u'Carlos', u',', u'Maldonado', u'.'], u'lemmas': [u'/', u'ref', u'>', u'Uruguay', u"'s", u'oldest', u'church', u'be', u'in', u'San', u'Carlos', u',', u'Maldonado', u'.'], u'pos': [u':', u'NN', u'JJR', u'NNP', u'POS', u'JJS', u'NN', u'VBZ', u'IN', u'NNP', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[17806, 17807], [17807, 17810], [17810, 17811], [17812, 17819], [17819, 17821], [17822, 17828], [17829, 17835], [17836, 17838], [17839, 17841], [17842, 17845], [17846, 17852], [17852, 17853], [17854, 17863], [17863, 17864]]}) 
answer: set([u'warmest', u'june', u'month'])
candidate Sentence: (0.066672623157501221, {u'tokens': [u'Another', u'segment', u'of', u'colonial', u'Uruguay', u"'s", u'population', u'consisted', u'of', u'people', u'of', u'African', u'descent', u'.'], u'lemmas': [u'another', u'segment', u'of', u'colonial', u'Uruguay', u"'s", u'population', u'consist', u'of', u'people', u'of', u'african', u'descent', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NN', u'NNP', u'POS', u'NN', u'VBD', u'IN', u'NNS', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[3997, 4004], [4005, 4012], [4013, 4015], [4016, 4024], [4025, 4032], [4032, 4034], [4035, 4045], [4046, 4055], [4056, 4058], [4059, 4065], [4066, 4068], [4069, 4076], [4077, 4084], [4084, 4085]]}) 
answer: set([u'warmest', u'june', u'month'])
candidate Sentence: (0.060694195330142975, {u'tokens': [u'For', u'most', u'of', u'Uruguay', u"'s", u'history', u',', u'the', u'Partido', u'Colorado', u'and', u'Partido', u'Blanco', u'have', u'alternated', u'in', u'power', u'.'], u'lemmas': [u'for', u'most', u'of', u'Uruguay', u"'s", u'history', u',', u'the', u'Partido', u'Colorado', u'and', u'Partido', u'Blanco', u'have', u'alternate', u'in', u'power', u'.'], u'pos': [u'IN', u'JJS', u'IN', u'NNP', u'POS', u'NN', u',', u'DT', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'VBP', u'VBN', u'IN', u'NN', u'.'], u'char_offsets': [[6909, 6912], [6913, 6917], [6918, 6920], [6921, 6928], [6928, 6930], [6931, 6938], [6938, 6939], [6940, 6943], [6944, 6951], [6952, 6960], [6961, 6964], [6965, 6972], [6973, 6979], [6980, 6984], [6985, 6995], [6996, 6998], [6999, 7004], [7004, 7005]]}) 
answer: set([u'warmest', u'june', u'month'])
candidate Sentence: (0.051351118832826614, {u'tokens': [u'Colonial', u'Uruguay', u"'s", u'African', u'community', u'grew', u'in', u'number', u'as', u'its', u'members', u'escaped', u'harsh', u'treatment', u'in', u'Buenos', u'Aires', u'.'], u'lemmas': [u'Colonial', u'Uruguay', u"'s", u'african', u'community', u'grow', u'in', u'number', u'as', u'its', u'member', u'escape', u'harsh', u'treatment', u'in', u'Buenos', u'Aires', u'.'], u'pos': [u'NNP', u'NNP', u'POS', u'JJ', u'NN', u'VBD', u'IN', u'NN', u'IN', u'PRP$', u'NNS', u'VBD', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[4087, 4095], [4096, 4103], [4103, 4105], [4106, 4113], [4114, 4123], [4124, 4128], [4129, 4131], [4132, 4138], [4139, 4141], [4142, 4145], [4146, 4153], [4154, 4161], [4162, 4167], [4168, 4177], [4178, 4180], [4181, 4187], [4188, 4193], [4193, 4194]]}) 
answer: set([u'warmest', u'june', u'month'])
candidate Sentence: (0.045193549245595932, {u'tokens': [u'Uruguay', u"'s", u'early', u'19th', u'century', u'history', u'was', u'shaped', u'by', u'ongoing', u'conflicts', u'between', u'the', u'British', u',', u'Spanish', u',', u'Portuguese', u',', u'and', u'colonial', u'forces', u'for', u'dominance', u'in', u'the', u'Argentina-Brazil-Uruguay', u'region', u'.'], u'lemmas': [u'Uruguay', u"'s", u'early', u'19th', u'century', u'history', u'be', u'shape', u'by', u'ongoing', u'conflict', u'between', u'the', u'British', u',', u'Spanish', u',', u'Portuguese', u',', u'and', u'colonial', u'force', u'for', u'dominance', u'in', u'the', u'argentina-brazil-uruguay', u'region', u'.'], u'pos': [u'NNP', u'POS', u'JJ', u'JJ', u'NN', u'NN', u'VBD', u'VBN', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u',', u'NNP', u',', u'NNP', u',', u'CC', u'JJ', u'NNS', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[4869, 4876], [4876, 4878], [4879, 4884], [4885, 4889], [4890, 4897], [4898, 4905], [4906, 4909], [4910, 4916], [4917, 4919], [4920, 4927], [4928, 4937], [4938, 4945], [4946, 4949], [4950, 4957], [4957, 4958], [4959, 4966], [4966, 4967], [4968, 4978], [4978, 4979], [4980, 4983], [4984, 4992], [4993, 4999], [5000, 5003], [5004, 5013], [5014, 5016], [5017, 5020], [5021, 5045], [5046, 5052], [5052, 5053]]}) 
answer: set([u'warmest', u'june', u'month'])
['Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'uruguay'])

Is Uruguay's warmest month June?
Validity= False
Question Type = NA
Answer Type = NA
Answer = No
Difficulty = easy
Article_Title = Uruguay
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a9.txt

Yes
_____________________________ test_yesno[param372] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f7290>, (<src.tfidf.TF_IDF object at 0x1144af5d0>, set(['.', 'uruguay'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('No') == True
E            +  where 'No' = <src.question_processing.Question_parser instance at 0x1156f7290>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.66724121570587158, {u'tokens': [u'The', u'coolest', u'month', u'is', u'June', u',', u'while', u'the', u'warmest', u'is', u'January', u'.'], u'lemmas': [u'the', u'coolest', u'month', u'be', u'June', u',', u'while', u'the', u'warmest', u'be', u'January', u'.'], u'pos': [u'DT', u'JJS', u'NN', u'VBZ', u'NNP', u',', u'IN', u'DT', u'JJS', u'VBZ', u'NNP', u'.'], u'char_offsets': [[11951, 11954], [11955, 11962], [11963, 11968], [11969, 11971], [11972, 11976], [11976, 11977], [11978, 11983], [11984, 11987], [11988, 11995], [11996, 11998], [11999, 12006], [12006, 12007]]}) 
answer: set([])
candidate Sentence: (0.16936025023460388, {u'tokens': [u'The', u'newly', u'elected', u'Frente', u'Amplio', u'government', u',', u'while', u'pledging', u'to', u'continue', u'payments', u'on', u'Uruguay', u"'s", u'external', u'debt', u',', u'Michael', u'Fox', u',', u'Uruguay', u"'s", u'Frente', u'Amplio', u':', u'From', u'Revolution', u'to', u'Dilution', u',', u'June', u'19', u',', u'2007', u'.'], u'lemmas': [u'the', u'newly', u'elect', u'Frente', u'Amplio', u'government', u',', u'while', u'pledge', u'to', u'continue', u'payment', u'on', u'Uruguay', u"'s", u'external', u'debt', u',', u'Michael', u'Fox', u',', u'Uruguay', u"'s", u'Frente', u'Amplio', u':', u'from', u'revolution', u'to', u'Dilution', u',', u'June', u'19', u',', u'2007', u'.'], u'pos': [u'DT', u'RB', u'VBN', u'NNP', u'NNP', u'NN', u',', u'IN', u'VBG', u'TO', u'VB', u'NNS', u'IN', u'NNP', u'POS', u'JJ', u'NN', u',', u'NNP', u'NNP', u',', u'NNP', u'POS', u'NNP', u'NNP', u':', u'IN', u'NN', u'TO', u'NNP', u',', u'NNP', u'CD', u',', u'CD', u'.'], u'char_offsets': [[14202, 14205], [14206, 14211], [14212, 14219], [14220, 14226], [14227, 14233], [14234, 14244], [14244, 14245], [14246, 14251], [14252, 14260], [14261, 14263], [14264, 14272], [14273, 14281], [14282, 14284], [14285, 14292], [14292, 14294], [14295, 14303], [14304, 14308], [14308, 14309], [14310, 14317], [14318, 14321], [14321, 14322], [14324, 14331], [14331, 14333], [14334, 14340], [14341, 14347], [14347, 14348], [14349, 14353], [14354, 14364], [14365, 14367], [14368, 14376], [14376, 14377], [14378, 14382], [14383, 14385], [14385, 14386], [14387, 14391], [14391, 14392]]}) 
answer: set([u'warmest', u'month'])
candidate Sentence: (0.14854253828525543, {u'tokens': [u'The', u'rainfall', u'is', u'equally', u'distributed', u'throughout', u'the', u'year', u',', u'but', u'tends', u'to', u'be', u'a', u'bit', u'more', u'frequent', u'in', u'the', u'autumn', u'months', u'.'], u'lemmas': [u'the', u'rainfall', u'be', u'equally', u'distribute', u'throughout', u'the', u'year', u',', u'but', u'tend', u'to', u'be', u'a', u'bit', u'more', u'frequent', u'in', u'the', u'autumn', u'month', u'.'], u'pos': [u'DT', u'NNS', u'VBZ', u'RB', u'VBN', u'IN', u'DT', u'NN', u',', u'CC', u'VBZ', u'TO', u'VB', u'DT', u'NN', u'RBR', u'JJ', u'IN', u'DT', u'NN', u'NNS', u'.'], u'char_offsets': [[12008, 12011], [12012, 12020], [12021, 12023], [12024, 12031], [12032, 12043], [12044, 12054], [12055, 12058], [12059, 12063], [12063, 12064], [12065, 12068], [12069, 12074], [12075, 12077], [12078, 12080], [12081, 12082], [12083, 12086], [12087, 12091], [12092, 12100], [12101, 12103], [12104, 12107], [12108, 12114], [12115, 12121], [12121, 12122]]}) 
answer: set([u'warmest', u'june'])
candidate Sentence: (0.088311746716499329, {u'tokens': [u'/', u'ref', u'>', u'Spanish', u'colonization', u'increased', u'as', u'Spain', u'sought', u'to', u'limit', u'Portugal', u"'s", u'expansion', u'of', u'Brazil', u"'s", u'frontiers', u'.'], u'lemmas': [u'/', u'ref', u'>', u'spanish', u'colonization', u'increase', u'as', u'Spain', u'seek', u'to', u'limit', u'Portugal', u"'s", u'expansion', u'of', u'Brazil', u"'s", u'frontier', u'.'], u'pos': [u':', u'NN', u'JJR', u'JJ', u'NN', u'VBD', u'IN', u'NNP', u'VBD', u'TO', u'VB', u'NNP', u'POS', u'NN', u'IN', u'NNP', u'POS', u'NNS', u'.'], u'char_offsets': [[3891, 3892], [3892, 3895], [3895, 3896], [3897, 3904], [3905, 3917], [3918, 3927], [3928, 3930], [3931, 3936], [3937, 3943], [3944, 3946], [3947, 3952], [3953, 3961], [3961, 3963], [3964, 3973], [3974, 3976], [3977, 3983], [3983, 3985], [3986, 3995], [3995, 3996]]}) 
answer: set([u'warmest', u'june', u'month'])
candidate Sentence: (0.074067205190658569, {u'tokens': [u'Uruguay', u"'s", u'capital', u',', u'Montevideo', u',', u'was', u'founded', u'by', u'the', u'Spanish', u'in', u'the', u'early', u'18th', u'century', u'as', u'a', u'military', u'stronghold', u';', u'its', u'natural', u'harbor', u'soon', u'developed', u'into', u'a', u'commercial', u'center', u'competing', u'with', u'Argentina', u"'s", u'capital', u',', u'Buenos', u'Aires', u'.'], u'lemmas': [u'Uruguay', u"'s", u'capital', u',', u'Montevideo', u',', u'be', u'found', u'by', u'the', u'spanish', u'in', u'the', u'early', u'18th', u'century', u'as', u'a', u'military', u'stronghold', u';', u'its', u'natural', u'harbor', u'soon', u'develop', u'into', u'a', u'commercial', u'center', u'compete', u'with', u'Argentina', u"'s", u'capital', u',', u'Buenos', u'Aires', u'.'], u'pos': [u'NNP', u'POS', u'NN', u',', u'NNP', u',', u'VBD', u'VBN', u'IN', u'DT', u'JJ', u'IN', u'DT', u'JJ', u'JJ', u'NN', u'IN', u'DT', u'JJ', u'NN', u':', u'PRP$', u'JJ', u'NN', u'RB', u'VBD', u'IN', u'DT', u'JJ', u'NN', u'VBG', u'IN', u'NNP', u'POS', u'NN', u',', u'NNP', u'NNP', u'.'], u'char_offsets': [[4650, 4657], [4657, 4659], [4660, 4667], [4667, 4668], [4669, 4679], [4679, 4680], [4681, 4684], [4685, 4692], [4693, 4695], [4696, 4699], [4700, 4707], [4708, 4710], [4711, 4714], [4715, 4720], [4721, 4725], [4726, 4733], [4734, 4736], [4737, 4738], [4739, 4747], [4748, 4758], [4758, 4759], [4760, 4763], [4764, 4771], [4772, 4778], [4779, 4783], [4784, 4793], [4794, 4798], [4799, 4800], [4801, 4811], [4812, 4818], [4819, 4828], [4829, 4833], [4834, 4843], [4843, 4845], [4846, 4853], [4853, 4854], [4855, 4861], [4862, 4867], [4867, 4868]]}) 
answer: set([u'warmest', u'june', u'month'])
candidate Sentence: (0.07130037248134613, {u'tokens': [u'/', u'ref', u'>', u'Uruguay', u"'s", u'oldest', u'church', u'is', u'in', u'San', u'Carlos', u',', u'Maldonado', u'.'], u'lemmas': [u'/', u'ref', u'>', u'Uruguay', u"'s", u'oldest', u'church', u'be', u'in', u'San', u'Carlos', u',', u'Maldonado', u'.'], u'pos': [u':', u'NN', u'JJR', u'NNP', u'POS', u'JJS', u'NN', u'VBZ', u'IN', u'NNP', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[17806, 17807], [17807, 17810], [17810, 17811], [17812, 17819], [17819, 17821], [17822, 17828], [17829, 17835], [17836, 17838], [17839, 17841], [17842, 17845], [17846, 17852], [17852, 17853], [17854, 17863], [17863, 17864]]}) 
answer: set([u'warmest', u'june', u'month'])
candidate Sentence: (0.066672623157501221, {u'tokens': [u'Another', u'segment', u'of', u'colonial', u'Uruguay', u"'s", u'population', u'consisted', u'of', u'people', u'of', u'African', u'descent', u'.'], u'lemmas': [u'another', u'segment', u'of', u'colonial', u'Uruguay', u"'s", u'population', u'consist', u'of', u'people', u'of', u'african', u'descent', u'.'], u'pos': [u'DT', u'NN', u'IN', u'NN', u'NNP', u'POS', u'NN', u'VBD', u'IN', u'NNS', u'IN', u'JJ', u'NN', u'.'], u'char_offsets': [[3997, 4004], [4005, 4012], [4013, 4015], [4016, 4024], [4025, 4032], [4032, 4034], [4035, 4045], [4046, 4055], [4056, 4058], [4059, 4065], [4066, 4068], [4069, 4076], [4077, 4084], [4084, 4085]]}) 
answer: set([u'warmest', u'june', u'month'])
candidate Sentence: (0.060694195330142975, {u'tokens': [u'For', u'most', u'of', u'Uruguay', u"'s", u'history', u',', u'the', u'Partido', u'Colorado', u'and', u'Partido', u'Blanco', u'have', u'alternated', u'in', u'power', u'.'], u'lemmas': [u'for', u'most', u'of', u'Uruguay', u"'s", u'history', u',', u'the', u'Partido', u'Colorado', u'and', u'Partido', u'Blanco', u'have', u'alternate', u'in', u'power', u'.'], u'pos': [u'IN', u'JJS', u'IN', u'NNP', u'POS', u'NN', u',', u'DT', u'NNP', u'NNP', u'CC', u'NNP', u'NNP', u'VBP', u'VBN', u'IN', u'NN', u'.'], u'char_offsets': [[6909, 6912], [6913, 6917], [6918, 6920], [6921, 6928], [6928, 6930], [6931, 6938], [6938, 6939], [6940, 6943], [6944, 6951], [6952, 6960], [6961, 6964], [6965, 6972], [6973, 6979], [6980, 6984], [6985, 6995], [6996, 6998], [6999, 7004], [7004, 7005]]}) 
answer: set([u'warmest', u'june', u'month'])
candidate Sentence: (0.051351118832826614, {u'tokens': [u'Colonial', u'Uruguay', u"'s", u'African', u'community', u'grew', u'in', u'number', u'as', u'its', u'members', u'escaped', u'harsh', u'treatment', u'in', u'Buenos', u'Aires', u'.'], u'lemmas': [u'Colonial', u'Uruguay', u"'s", u'african', u'community', u'grow', u'in', u'number', u'as', u'its', u'member', u'escape', u'harsh', u'treatment', u'in', u'Buenos', u'Aires', u'.'], u'pos': [u'NNP', u'NNP', u'POS', u'JJ', u'NN', u'VBD', u'IN', u'NN', u'IN', u'PRP$', u'NNS', u'VBD', u'JJ', u'NN', u'IN', u'NNP', u'NNP', u'.'], u'char_offsets': [[4087, 4095], [4096, 4103], [4103, 4105], [4106, 4113], [4114, 4123], [4124, 4128], [4129, 4131], [4132, 4138], [4139, 4141], [4142, 4145], [4146, 4153], [4154, 4161], [4162, 4167], [4168, 4177], [4178, 4180], [4181, 4187], [4188, 4193], [4193, 4194]]}) 
answer: set([u'warmest', u'june', u'month'])
candidate Sentence: (0.045193549245595932, {u'tokens': [u'Uruguay', u"'s", u'early', u'19th', u'century', u'history', u'was', u'shaped', u'by', u'ongoing', u'conflicts', u'between', u'the', u'British', u',', u'Spanish', u',', u'Portuguese', u',', u'and', u'colonial', u'forces', u'for', u'dominance', u'in', u'the', u'Argentina-Brazil-Uruguay', u'region', u'.'], u'lemmas': [u'Uruguay', u"'s", u'early', u'19th', u'century', u'history', u'be', u'shape', u'by', u'ongoing', u'conflict', u'between', u'the', u'British', u',', u'Spanish', u',', u'Portuguese', u',', u'and', u'colonial', u'force', u'for', u'dominance', u'in', u'the', u'argentina-brazil-uruguay', u'region', u'.'], u'pos': [u'NNP', u'POS', u'JJ', u'JJ', u'NN', u'NN', u'VBD', u'VBN', u'IN', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u',', u'NNP', u',', u'NNP', u',', u'CC', u'JJ', u'NNS', u'IN', u'NN', u'IN', u'DT', u'JJ', u'NN', u'.'], u'char_offsets': [[4869, 4876], [4876, 4878], [4879, 4884], [4885, 4889], [4890, 4897], [4898, 4905], [4906, 4909], [4910, 4916], [4917, 4919], [4920, 4927], [4928, 4937], [4938, 4945], [4946, 4949], [4950, 4957], [4957, 4958], [4959, 4966], [4966, 4967], [4968, 4978], [4978, 4979], [4980, 4983], [4984, 4992], [4993, 4999], [5000, 5003], [5004, 5013], [5014, 5016], [5017, 5020], [5021, 5045], [5046, 5052], [5052, 5053]]}) 
answer: set([u'warmest', u'june', u'month'])
['Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'.', u'uruguay'])

Is Uruguay's warmest month June?
Validity= False
Question Type = NA
Answer Type = NA
Answer = No
Difficulty = easy
Article_Title = Uruguay
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set2/a9.txt

Yes
_____________________________ test_yesno[param377] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f73f8>, (<src.tfidf.TF_IDF object at 0x110787490>, set(['.', 'wilson', 'woodrow'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('no') == True
E            +  where 'no' = <src.question_processing.Question_parser instance at 0x1156f73f8>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.46295657753944397, {u'tokens': [u'The', u'League', u'of', u'Nations', u'went', u'into', u'operation', u'anyway', u',', u'but', u'the', u'U.S.', u'never', u'joined', u'.'], u'lemmas': [u'the', u'League', u'of', u'Nations', u'go', u'into', u'operation', u'anyway', u',', u'but', u'the', u'U.S.', u'never', u'join', u'.'], u'pos': [u'DT', u'NNP', u'IN', u'NNP', u'VBD', u'IN', u'NN', u'RB', u',', u'CC', u'DT', u'NNP', u'RB', u'VBD', u'.'], u'char_offsets': [[2203, 2206], [2207, 2213], [2214, 2216], [2217, 2224], [2225, 2229], [2230, 2234], [2235, 2244], [2245, 2251], [2251, 2252], [2253, 2256], [2257, 2260], [2261, 2265], [2266, 2271], [2272, 2278], [2278, 2279]]}) 
answer: set([])
candidate Sentence: (0.24716943502426147, {u'tokens': [u'Because', u'his', u'plan', u'for', u'the', u'League', u'of', u'Nations', u'ultimately', u'failed', u',', u'he', u'died', u'feeling', u'that', u'he', u'had', u'lied', u'to', u'the', u'American', u'people', u'and', u'that', u'his', u'motives', u'for', u'joining', u'the', u'war', u'had', u'been', u'in', u'vain', u'.'], u'lemmas': [u'because', u'he', u'plan', u'for', u'the', u'League', u'of', u'Nations', u'ultimately', u'fail', u',', u'he', u'die', u'feeling', u'that', u'he', u'have', u'lie', u'to', u'the', u'american', u'people', u'and', u'that', u'he', u'motive', u'for', u'join', u'the', u'war', u'have', u'be', u'in', u'vain', u'.'], u'pos': [u'IN', u'PRP$', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNPS', u'RB', u'VBD', u',', u'PRP', u'VBD', u'NN', u'IN', u'PRP', u'VBD', u'VBN', u'TO', u'DT', u'JJ', u'NNS', u'CC', u'IN', u'PRP$', u'NNS', u'IN', u'VBG', u'DT', u'NN', u'VBD', u'VBN', u'IN', u'JJ', u'.'], u'char_offsets': [[49012, 49019], [49020, 49023], [49024, 49028], [49029, 49032], [49033, 49036], [49037, 49043], [49044, 49046], [49047, 49054], [49055, 49065], [49066, 49072], [49072, 49073], [49074, 49076], [49077, 49081], [49082, 49089], [49090, 49094], [49095, 49097], [49098, 49101], [49102, 49106], [49107, 49109], [49110, 49113], [49114, 49122], [49123, 49129], [49130, 49133], [49134, 49138], [49139, 49142], [49143, 49150], [49151, 49154], [49155, 49162], [49163, 49166], [49167, 49170], [49171, 49174], [49175, 49179], [49180, 49182], [49183, 49187], [49187, 49188]]}) 
answer: set([u'u.s.'])
candidate Sentence: (0.2469765841960907, {u'tokens': [u'However', u',', u'Wilson', u'failed', u'to', u'win', u'Senate', u'support', u'for', u'ratification', u'and', u'the', u'United', u'States', u'never', u'joined', u'the', u'League', u'.'], u'lemmas': [u'however', u',', u'Wilson', u'fail', u'to', u'win', u'Senate', u'support', u'for', u'ratification', u'and', u'the', u'United', u'States', u'never', u'join', u'the', u'League', u'.'], u'pos': [u'RB', u',', u'NNP', u'VBD', u'TO', u'VB', u'NNP', u'NN', u'IN', u'NN', u'CC', u'DT', u'NNP', u'NNPS', u'RB', u'VBD', u'DT', u'NNP', u'.'], u'char_offsets': [[35514, 35521], [35521, 35522], [35523, 35529], [35530, 35536], [35537, 35539], [35540, 35543], [35544, 35550], [35551, 35558], [35559, 35562], [35563, 35575], [35576, 35579], [35580, 35583], [35584, 35590], [35591, 35597], [35598, 35603], [35604, 35610], [35611, 35614], [35615, 35621], [35621, 35622]]}) 
answer: set([u'u.s.', u'nation'])
candidate Sentence: (0.1978181004524231, {u'tokens': [u'Wilson', u'joined', u'him', u'there', u'in', u'May', u'1882', u'.'], u'lemmas': [u'Wilson', u'join', u'he', u'there', u'in', u'May', u'1882', u'.'], u'pos': [u'NNP', u'VBD', u'PRP', u'EX', u'IN', u'NNP', u'CD', u'.'], u'char_offsets': [[6101, 6107], [6108, 6114], [6115, 6118], [6119, 6124], [6125, 6127], [6128, 6131], [6132, 6136], [6136, 6137]]}) 
answer: set([u'u.s.', u'leagu', u'nation'])
candidate Sentence: (0.17676028609275818, {u'tokens': [u'After', u'one', u'of', u'his', u'final', u'speeches', u'to', u'attempt', u'to', u'promote', u'the', u'League', u'of', u'Nations', u'in', u'Pueblo', u',', u'Colorado', u',', u'on', u'September', u'25', u',', u'1919', u',', u'he', u'collapsed', u'.'], u'lemmas': [u'after', u'one', u'of', u'he', u'final', u'speech', u'to', u'attempt', u'to', u'promote', u'the', u'League', u'of', u'Nations', u'in', u'Pueblo', u',', u'Colorado', u',', u'on', u'September', u'25', u',', u'1919', u',', u'he', u'collapse', u'.'], u'pos': [u'IN', u'CD', u'IN', u'PRP$', u'JJ', u'NNS', u'TO', u'VB', u'TO', u'VB', u'DT', u'NNP', u'IN', u'NNPS', u'IN', u'NNP', u',', u'NNP', u',', u'IN', u'NNP', u'CD', u',', u'CD', u',', u'PRP', u'VBD', u'.'], u'char_offsets': [[39582, 39587], [39588, 39591], [39592, 39594], [39595, 39598], [39599, 39604], [39605, 39613], [39614, 39616], [39617, 39624], [39625, 39627], [39628, 39635], [39636, 39639], [39640, 39646], [39647, 39649], [39650, 39657], [39658, 39660], [39661, 39667], [39667, 39668], [39669, 39677], [39677, 39678], [39679, 39681], [39682, 39691], [39692, 39694], [39694, 39695], [39696, 39700], [39701, 39702], [39703, 39705], [39706, 39715], [39715, 39716]]}) 
answer: set([u'u.s.', u'join'])
candidate Sentence: (0.17138814926147461, {u'tokens': [u'American', u'Rhetoric', u',', u'``', u'Final', u'Address', u'in', u'Support', u'of', u'the', u'League', u'of', u'Nations', u"''", u',', u'Woodrow', u'Wilson', u',', u'delivered', u'25', u'Sept', u'1919', u'in', u'Pueblo', u',', u'CO.', u'.'], u'lemmas': [u'american', u'Rhetoric', u',', u'``', u'final', u'address', u'in', u'support', u'of', u'the', u'League', u'of', u'Nations', u"''", u',', u'Woodrow', u'Wilson', u',', u'deliver', u'25', u'Sept', u'1919', u'in', u'Pueblo', u',', u'CO.', u'.'], u'pos': [u'JJ', u'NNP', u',', u'``', u'JJ', u'NN', u'IN', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNPS', u"''", u',', u'NNP', u'NNP', u',', u'VBN', u'CD', u'NNP', u'CD', u'IN', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[48376, 48384], [48385, 48393], [48393, 48394], [48396, 48397], [48397, 48402], [48403, 48410], [48411, 48413], [48414, 48421], [48422, 48424], [48425, 48428], [48429, 48435], [48436, 48438], [48439, 48446], [48446, 48447], [48447, 48448], [48449, 48456], [48457, 48463], [48463, 48464], [48465, 48474], [48475, 48477], [48478, 48482], [48483, 48487], [48488, 48490], [48491, 48497], [48497, 48498], [48499, 48501], [48501, 48502]]}) 
answer: set([u'u.s.', u'join'])
candidate Sentence: (0.15934471786022186, {u'tokens': [u'He', u'went', u'to', u'Paris', u'in', u'1919', u'to', u'create', u'the', u'League', u'of', u'Nations', u'and', u'shape', u'the', u'Treaty', u'of', u'Versailles', u',', u'with', u'special', u'attention', u'on', u'creating', u'new', u'nations', u'out', u'of', u'defunct', u'empires', u'.'], u'lemmas': [u'he', u'go', u'to', u'Paris', u'in', u'1919', u'to', u'create', u'the', u'League', u'of', u'Nations', u'and', u'shape', u'the', u'Treaty', u'of', u'Versailles', u',', u'with', u'special', u'attention', u'on', u'create', u'new', u'nation', u'out', u'of', u'defunct', u'empire', u'.'], u'pos': [u'PRP', u'VBD', u'TO', u'NNP', u'IN', u'CD', u'TO', u'VB', u'DT', u'NNP', u'IN', u'NNPS', u'CC', u'VB', u'DT', u'NNP', u'IN', u'NNP', u',', u'IN', u'JJ', u'NN', u'IN', u'VBG', u'JJ', u'NNS', u'IN', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[1717, 1719], [1720, 1724], [1725, 1727], [1728, 1733], [1734, 1736], [1737, 1741], [1742, 1744], [1745, 1751], [1752, 1755], [1756, 1762], [1763, 1765], [1766, 1773], [1774, 1777], [1778, 1783], [1784, 1787], [1788, 1794], [1795, 1797], [1798, 1808], [1808, 1809], [1810, 1814], [1815, 1822], [1823, 1832], [1833, 1835], [1836, 1844], [1845, 1848], [1849, 1856], [1857, 1860], [1861, 1863], [1864, 1871], [1872, 1879], [1879, 1880]]}) 
answer: set([u'u.s.', u'join'])
candidate Sentence: (0.15674978494644165, {u'tokens': [u'In', u'the', u'end', u',', u'Wilson', u"'s", u'own', u'Congress', u'did', u'not', u'accept', u'the', u'League', u'and', u'only', u'four', u'of', u'the', u'original', u'Fourteen', u'Points', u'were', u'implemented', u'fully', u'in', u'Europe', u'.'], u'lemmas': [u'in', u'the', u'end', u',', u'Wilson', u"'s", u'own', u'Congress', u'do', u'not', u'accept', u'the', u'League', u'and', u'only', u'four', u'of', u'the', u'original', u'fourteen', u'point', u'be', u'implement', u'fully', u'in', u'Europe', u'.'], u'pos': [u'IN', u'DT', u'NN', u',', u'NNP', u'POS', u'JJ', u'NNP', u'VBD', u'RB', u'VB', u'DT', u'NNP', u'CC', u'RB', u'CD', u'IN', u'DT', u'JJ', u'CD', u'NNS', u'VBD', u'VBN', u'RB', u'IN', u'NNP', u'.'], u'char_offsets': [[32624, 32626], [32627, 32630], [32631, 32634], [32634, 32635], [32636, 32642], [32642, 32644], [32645, 32648], [32649, 32657], [32658, 32661], [32662, 32665], [32666, 32672], [32673, 32676], [32677, 32683], [32684, 32687], [32688, 32692], [32693, 32697], [32698, 32700], [32701, 32704], [32705, 32713], [32714, 32722], [32723, 32729], [32730, 32734], [32735, 32746], [32747, 32752], [32753, 32755], [32756, 32762], [32762, 32763]]}) 
answer: set([u'u.s.', u'join', u'nation'])
candidate Sentence: (0.14963121712207794, {u'tokens': [u'Wilson', u'compromised', u'with', u'Clemenceau', u',', u'Lloyd', u'George', u',', u'and', u'many', u'other', u'European', u'leaders', u'during', u'the', u'Paris', u'Peace', u'talks', u'to', u'ensure', u'that', u'the', u'fourteenth', u'point', u',', u'the', u'League', u'of', u'Nations', u',', u'would', u'be', u'established', u'.'], u'lemmas': [u'Wilson', u'compromise', u'with', u'Clemenceau', u',', u'Lloyd', u'George', u',', u'and', u'many', u'other', u'european', u'leader', u'during', u'the', u'Paris', u'Peace', u'talk', u'to', u'ensure', u'that', u'the', u'fourteenth', u'point', u',', u'the', u'League', u'of', u'Nations', u',', u'would', u'be', u'establish', u'.'], u'pos': [u'NNP', u'VBD', u'IN', u'NNP', u',', u'NNP', u'NNP', u',', u'CC', u'JJ', u'JJ', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'VBZ', u'TO', u'VB', u'IN', u'DT', u'JJ', u'NN', u',', u'DT', u'NNP', u'IN', u'NNPS', u',', u'MD', u'VB', u'VBN', u'.'], u'char_offsets': [[32430, 32436], [32437, 32448], [32449, 32453], [32454, 32464], [32464, 32465], [32466, 32471], [32472, 32478], [32478, 32479], [32480, 32483], [32484, 32488], [32489, 32494], [32495, 32503], [32504, 32511], [32512, 32518], [32519, 32522], [32523, 32528], [32529, 32534], [32535, 32540], [32541, 32543], [32544, 32550], [32551, 32555], [32556, 32559], [32560, 32570], [32571, 32576], [32576, 32577], [32578, 32581], [32582, 32588], [32589, 32591], [32592, 32599], [32599, 32600], [32601, 32606], [32607, 32609], [32610, 32621], [32621, 32622]]}) 
answer: set([u'u.s.', u'join'])
candidate Sentence: (0.13495895266532898, {u'tokens': [u'This', u'provided', u'the', u'basis', u'of', u'Wilson', u"'s", u'Fourteen', u'Points', u',', u'which', u'were', u'intended', u'to', u'resolve', u'territorial', u'disputes', u',', u'ensure', u'free', u'trade', u'and', u'commerce', u',', u'and', u'establish', u'a', u'peacemaking', u'organization', u',', u'which', u'later', u'emerged', u'as', u'the', u'League', u'of', u'Nations', u'.'], u'lemmas': [u'this', u'provide', u'the', u'basis', u'of', u'Wilson', u"'s", u'fourteen', u'point', u',', u'which', u'be', u'intend', u'to', u'resolve', u'territorial', u'dispute', u',', u'ensure', u'free', u'trade', u'and', u'commerce', u',', u'and', u'establish', u'a', u'peacemaking', u'organization', u',', u'which', u'later', u'emerge', u'as', u'the', u'League', u'of', u'Nations', u'.'], u'pos': [u'DT', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'POS', u'CD', u'NNS', u',', u'WDT', u'VBD', u'VBN', u'TO', u'VB', u'JJ', u'NNS', u',', u'VB', u'JJ', u'NN', u'CC', u'NN', u',', u'CC', u'VB', u'DT', u'NN', u'NN', u',', u'WDT', u'RB', u'VBD', u'IN', u'DT', u'NNP', u'IN', u'NNPS', u'.'], u'char_offsets': [[29038, 29042], [29043, 29051], [29052, 29055], [29056, 29061], [29062, 29064], [29065, 29071], [29071, 29073], [29074, 29082], [29083, 29089], [29089, 29090], [29091, 29096], [29097, 29101], [29102, 29110], [29111, 29113], [29114, 29121], [29122, 29133], [29134, 29142], [29142, 29143], [29144, 29150], [29151, 29155], [29156, 29161], [29162, 29165], [29166, 29174], [29174, 29175], [29176, 29179], [29180, 29189], [29190, 29191], [29192, 29203], [29204, 29216], [29216, 29217], [29218, 29223], [29224, 29229], [29230, 29237], [29238, 29240], [29241, 29244], [29245, 29251], [29252, 29254], [29255, 29262], [29262, 29263]]}) 
answer: set([u'u.s.', u'join'])
['Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'wilson', u'woodrow', u'.'])

Did the U.S. join the League of Nations?
Validity= False
Question Type = NA
Answer Type = NA
Answer = no
Difficulty = easy
Article_Title = Woodrow_Wilson
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a8.txt

Yes
_____________________________ test_yesno[param378] _____________________________

param = (<src.question_processing.Question_parser instance at 0x1156f7440>, (<src.tfidf.TF_IDF object at 0x110787490>, set(['.', 'wilson', 'woodrow'])))

    def test_yesno(param):
        x = test_yesno_helper(param)
        if x:
>           raise x[2]
E           assert str2bool('No') == True
E            +  where 'No' = <src.question_processing.Question_parser instance at 0x1156f7440>.answer
E            +  and   True = str2bool('Yes')

test_compute.py:26: AssertionError
----------------------------- Captured stdout call -----------------------------
candidate Sentence: (0.46295657753944397, {u'tokens': [u'The', u'League', u'of', u'Nations', u'went', u'into', u'operation', u'anyway', u',', u'but', u'the', u'U.S.', u'never', u'joined', u'.'], u'lemmas': [u'the', u'League', u'of', u'Nations', u'go', u'into', u'operation', u'anyway', u',', u'but', u'the', u'U.S.', u'never', u'join', u'.'], u'pos': [u'DT', u'NNP', u'IN', u'NNP', u'VBD', u'IN', u'NN', u'RB', u',', u'CC', u'DT', u'NNP', u'RB', u'VBD', u'.'], u'char_offsets': [[2203, 2206], [2207, 2213], [2214, 2216], [2217, 2224], [2225, 2229], [2230, 2234], [2235, 2244], [2245, 2251], [2251, 2252], [2253, 2256], [2257, 2260], [2261, 2265], [2266, 2271], [2272, 2278], [2278, 2279]]}) 
answer: set([])
candidate Sentence: (0.24716943502426147, {u'tokens': [u'Because', u'his', u'plan', u'for', u'the', u'League', u'of', u'Nations', u'ultimately', u'failed', u',', u'he', u'died', u'feeling', u'that', u'he', u'had', u'lied', u'to', u'the', u'American', u'people', u'and', u'that', u'his', u'motives', u'for', u'joining', u'the', u'war', u'had', u'been', u'in', u'vain', u'.'], u'lemmas': [u'because', u'he', u'plan', u'for', u'the', u'League', u'of', u'Nations', u'ultimately', u'fail', u',', u'he', u'die', u'feeling', u'that', u'he', u'have', u'lie', u'to', u'the', u'american', u'people', u'and', u'that', u'he', u'motive', u'for', u'join', u'the', u'war', u'have', u'be', u'in', u'vain', u'.'], u'pos': [u'IN', u'PRP$', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNPS', u'RB', u'VBD', u',', u'PRP', u'VBD', u'NN', u'IN', u'PRP', u'VBD', u'VBN', u'TO', u'DT', u'JJ', u'NNS', u'CC', u'IN', u'PRP$', u'NNS', u'IN', u'VBG', u'DT', u'NN', u'VBD', u'VBN', u'IN', u'JJ', u'.'], u'char_offsets': [[49012, 49019], [49020, 49023], [49024, 49028], [49029, 49032], [49033, 49036], [49037, 49043], [49044, 49046], [49047, 49054], [49055, 49065], [49066, 49072], [49072, 49073], [49074, 49076], [49077, 49081], [49082, 49089], [49090, 49094], [49095, 49097], [49098, 49101], [49102, 49106], [49107, 49109], [49110, 49113], [49114, 49122], [49123, 49129], [49130, 49133], [49134, 49138], [49139, 49142], [49143, 49150], [49151, 49154], [49155, 49162], [49163, 49166], [49167, 49170], [49171, 49174], [49175, 49179], [49180, 49182], [49183, 49187], [49187, 49188]]}) 
answer: set([u'u.s.'])
candidate Sentence: (0.2469765841960907, {u'tokens': [u'However', u',', u'Wilson', u'failed', u'to', u'win', u'Senate', u'support', u'for', u'ratification', u'and', u'the', u'United', u'States', u'never', u'joined', u'the', u'League', u'.'], u'lemmas': [u'however', u',', u'Wilson', u'fail', u'to', u'win', u'Senate', u'support', u'for', u'ratification', u'and', u'the', u'United', u'States', u'never', u'join', u'the', u'League', u'.'], u'pos': [u'RB', u',', u'NNP', u'VBD', u'TO', u'VB', u'NNP', u'NN', u'IN', u'NN', u'CC', u'DT', u'NNP', u'NNPS', u'RB', u'VBD', u'DT', u'NNP', u'.'], u'char_offsets': [[35514, 35521], [35521, 35522], [35523, 35529], [35530, 35536], [35537, 35539], [35540, 35543], [35544, 35550], [35551, 35558], [35559, 35562], [35563, 35575], [35576, 35579], [35580, 35583], [35584, 35590], [35591, 35597], [35598, 35603], [35604, 35610], [35611, 35614], [35615, 35621], [35621, 35622]]}) 
answer: set([u'u.s.', u'nation'])
candidate Sentence: (0.1978181004524231, {u'tokens': [u'Wilson', u'joined', u'him', u'there', u'in', u'May', u'1882', u'.'], u'lemmas': [u'Wilson', u'join', u'he', u'there', u'in', u'May', u'1882', u'.'], u'pos': [u'NNP', u'VBD', u'PRP', u'EX', u'IN', u'NNP', u'CD', u'.'], u'char_offsets': [[6101, 6107], [6108, 6114], [6115, 6118], [6119, 6124], [6125, 6127], [6128, 6131], [6132, 6136], [6136, 6137]]}) 
answer: set([u'u.s.', u'leagu', u'nation'])
candidate Sentence: (0.17676028609275818, {u'tokens': [u'After', u'one', u'of', u'his', u'final', u'speeches', u'to', u'attempt', u'to', u'promote', u'the', u'League', u'of', u'Nations', u'in', u'Pueblo', u',', u'Colorado', u',', u'on', u'September', u'25', u',', u'1919', u',', u'he', u'collapsed', u'.'], u'lemmas': [u'after', u'one', u'of', u'he', u'final', u'speech', u'to', u'attempt', u'to', u'promote', u'the', u'League', u'of', u'Nations', u'in', u'Pueblo', u',', u'Colorado', u',', u'on', u'September', u'25', u',', u'1919', u',', u'he', u'collapse', u'.'], u'pos': [u'IN', u'CD', u'IN', u'PRP$', u'JJ', u'NNS', u'TO', u'VB', u'TO', u'VB', u'DT', u'NNP', u'IN', u'NNPS', u'IN', u'NNP', u',', u'NNP', u',', u'IN', u'NNP', u'CD', u',', u'CD', u',', u'PRP', u'VBD', u'.'], u'char_offsets': [[39582, 39587], [39588, 39591], [39592, 39594], [39595, 39598], [39599, 39604], [39605, 39613], [39614, 39616], [39617, 39624], [39625, 39627], [39628, 39635], [39636, 39639], [39640, 39646], [39647, 39649], [39650, 39657], [39658, 39660], [39661, 39667], [39667, 39668], [39669, 39677], [39677, 39678], [39679, 39681], [39682, 39691], [39692, 39694], [39694, 39695], [39696, 39700], [39701, 39702], [39703, 39705], [39706, 39715], [39715, 39716]]}) 
answer: set([u'u.s.', u'join'])
candidate Sentence: (0.17138814926147461, {u'tokens': [u'American', u'Rhetoric', u',', u'``', u'Final', u'Address', u'in', u'Support', u'of', u'the', u'League', u'of', u'Nations', u"''", u',', u'Woodrow', u'Wilson', u',', u'delivered', u'25', u'Sept', u'1919', u'in', u'Pueblo', u',', u'CO.', u'.'], u'lemmas': [u'american', u'Rhetoric', u',', u'``', u'final', u'address', u'in', u'support', u'of', u'the', u'League', u'of', u'Nations', u"''", u',', u'Woodrow', u'Wilson', u',', u'deliver', u'25', u'Sept', u'1919', u'in', u'Pueblo', u',', u'CO.', u'.'], u'pos': [u'JJ', u'NNP', u',', u'``', u'JJ', u'NN', u'IN', u'NN', u'IN', u'DT', u'NNP', u'IN', u'NNPS', u"''", u',', u'NNP', u'NNP', u',', u'VBN', u'CD', u'NNP', u'CD', u'IN', u'NNP', u',', u'NNP', u'.'], u'char_offsets': [[48376, 48384], [48385, 48393], [48393, 48394], [48396, 48397], [48397, 48402], [48403, 48410], [48411, 48413], [48414, 48421], [48422, 48424], [48425, 48428], [48429, 48435], [48436, 48438], [48439, 48446], [48446, 48447], [48447, 48448], [48449, 48456], [48457, 48463], [48463, 48464], [48465, 48474], [48475, 48477], [48478, 48482], [48483, 48487], [48488, 48490], [48491, 48497], [48497, 48498], [48499, 48501], [48501, 48502]]}) 
answer: set([u'u.s.', u'join'])
candidate Sentence: (0.15934471786022186, {u'tokens': [u'He', u'went', u'to', u'Paris', u'in', u'1919', u'to', u'create', u'the', u'League', u'of', u'Nations', u'and', u'shape', u'the', u'Treaty', u'of', u'Versailles', u',', u'with', u'special', u'attention', u'on', u'creating', u'new', u'nations', u'out', u'of', u'defunct', u'empires', u'.'], u'lemmas': [u'he', u'go', u'to', u'Paris', u'in', u'1919', u'to', u'create', u'the', u'League', u'of', u'Nations', u'and', u'shape', u'the', u'Treaty', u'of', u'Versailles', u',', u'with', u'special', u'attention', u'on', u'create', u'new', u'nation', u'out', u'of', u'defunct', u'empire', u'.'], u'pos': [u'PRP', u'VBD', u'TO', u'NNP', u'IN', u'CD', u'TO', u'VB', u'DT', u'NNP', u'IN', u'NNPS', u'CC', u'VB', u'DT', u'NNP', u'IN', u'NNP', u',', u'IN', u'JJ', u'NN', u'IN', u'VBG', u'JJ', u'NNS', u'IN', u'IN', u'JJ', u'NNS', u'.'], u'char_offsets': [[1717, 1719], [1720, 1724], [1725, 1727], [1728, 1733], [1734, 1736], [1737, 1741], [1742, 1744], [1745, 1751], [1752, 1755], [1756, 1762], [1763, 1765], [1766, 1773], [1774, 1777], [1778, 1783], [1784, 1787], [1788, 1794], [1795, 1797], [1798, 1808], [1808, 1809], [1810, 1814], [1815, 1822], [1823, 1832], [1833, 1835], [1836, 1844], [1845, 1848], [1849, 1856], [1857, 1860], [1861, 1863], [1864, 1871], [1872, 1879], [1879, 1880]]}) 
answer: set([u'u.s.', u'join'])
candidate Sentence: (0.15674978494644165, {u'tokens': [u'In', u'the', u'end', u',', u'Wilson', u"'s", u'own', u'Congress', u'did', u'not', u'accept', u'the', u'League', u'and', u'only', u'four', u'of', u'the', u'original', u'Fourteen', u'Points', u'were', u'implemented', u'fully', u'in', u'Europe', u'.'], u'lemmas': [u'in', u'the', u'end', u',', u'Wilson', u"'s", u'own', u'Congress', u'do', u'not', u'accept', u'the', u'League', u'and', u'only', u'four', u'of', u'the', u'original', u'fourteen', u'point', u'be', u'implement', u'fully', u'in', u'Europe', u'.'], u'pos': [u'IN', u'DT', u'NN', u',', u'NNP', u'POS', u'JJ', u'NNP', u'VBD', u'RB', u'VB', u'DT', u'NNP', u'CC', u'RB', u'CD', u'IN', u'DT', u'JJ', u'CD', u'NNS', u'VBD', u'VBN', u'RB', u'IN', u'NNP', u'.'], u'char_offsets': [[32624, 32626], [32627, 32630], [32631, 32634], [32634, 32635], [32636, 32642], [32642, 32644], [32645, 32648], [32649, 32657], [32658, 32661], [32662, 32665], [32666, 32672], [32673, 32676], [32677, 32683], [32684, 32687], [32688, 32692], [32693, 32697], [32698, 32700], [32701, 32704], [32705, 32713], [32714, 32722], [32723, 32729], [32730, 32734], [32735, 32746], [32747, 32752], [32753, 32755], [32756, 32762], [32762, 32763]]}) 
answer: set([u'u.s.', u'join', u'nation'])
candidate Sentence: (0.14963121712207794, {u'tokens': [u'Wilson', u'compromised', u'with', u'Clemenceau', u',', u'Lloyd', u'George', u',', u'and', u'many', u'other', u'European', u'leaders', u'during', u'the', u'Paris', u'Peace', u'talks', u'to', u'ensure', u'that', u'the', u'fourteenth', u'point', u',', u'the', u'League', u'of', u'Nations', u',', u'would', u'be', u'established', u'.'], u'lemmas': [u'Wilson', u'compromise', u'with', u'Clemenceau', u',', u'Lloyd', u'George', u',', u'and', u'many', u'other', u'european', u'leader', u'during', u'the', u'Paris', u'Peace', u'talk', u'to', u'ensure', u'that', u'the', u'fourteenth', u'point', u',', u'the', u'League', u'of', u'Nations', u',', u'would', u'be', u'establish', u'.'], u'pos': [u'NNP', u'VBD', u'IN', u'NNP', u',', u'NNP', u'NNP', u',', u'CC', u'JJ', u'JJ', u'JJ', u'NNS', u'IN', u'DT', u'NNP', u'NNP', u'VBZ', u'TO', u'VB', u'IN', u'DT', u'JJ', u'NN', u',', u'DT', u'NNP', u'IN', u'NNPS', u',', u'MD', u'VB', u'VBN', u'.'], u'char_offsets': [[32430, 32436], [32437, 32448], [32449, 32453], [32454, 32464], [32464, 32465], [32466, 32471], [32472, 32478], [32478, 32479], [32480, 32483], [32484, 32488], [32489, 32494], [32495, 32503], [32504, 32511], [32512, 32518], [32519, 32522], [32523, 32528], [32529, 32534], [32535, 32540], [32541, 32543], [32544, 32550], [32551, 32555], [32556, 32559], [32560, 32570], [32571, 32576], [32576, 32577], [32578, 32581], [32582, 32588], [32589, 32591], [32592, 32599], [32599, 32600], [32601, 32606], [32607, 32609], [32610, 32621], [32621, 32622]]}) 
answer: set([u'u.s.', u'join'])
candidate Sentence: (0.13495895266532898, {u'tokens': [u'This', u'provided', u'the', u'basis', u'of', u'Wilson', u"'s", u'Fourteen', u'Points', u',', u'which', u'were', u'intended', u'to', u'resolve', u'territorial', u'disputes', u',', u'ensure', u'free', u'trade', u'and', u'commerce', u',', u'and', u'establish', u'a', u'peacemaking', u'organization', u',', u'which', u'later', u'emerged', u'as', u'the', u'League', u'of', u'Nations', u'.'], u'lemmas': [u'this', u'provide', u'the', u'basis', u'of', u'Wilson', u"'s", u'fourteen', u'point', u',', u'which', u'be', u'intend', u'to', u'resolve', u'territorial', u'dispute', u',', u'ensure', u'free', u'trade', u'and', u'commerce', u',', u'and', u'establish', u'a', u'peacemaking', u'organization', u',', u'which', u'later', u'emerge', u'as', u'the', u'League', u'of', u'Nations', u'.'], u'pos': [u'DT', u'VBD', u'DT', u'NN', u'IN', u'NNP', u'POS', u'CD', u'NNS', u',', u'WDT', u'VBD', u'VBN', u'TO', u'VB', u'JJ', u'NNS', u',', u'VB', u'JJ', u'NN', u'CC', u'NN', u',', u'CC', u'VB', u'DT', u'NN', u'NN', u',', u'WDT', u'RB', u'VBD', u'IN', u'DT', u'NNP', u'IN', u'NNPS', u'.'], u'char_offsets': [[29038, 29042], [29043, 29051], [29052, 29055], [29056, 29061], [29062, 29064], [29065, 29071], [29071, 29073], [29074, 29082], [29083, 29089], [29089, 29090], [29091, 29096], [29097, 29101], [29102, 29110], [29111, 29113], [29114, 29121], [29122, 29133], [29134, 29142], [29142, 29143], [29144, 29150], [29151, 29155], [29156, 29161], [29162, 29165], [29166, 29174], [29174, 29175], [29176, 29179], [29180, 29189], [29190, 29191], [29192, 29203], [29204, 29216], [29216, 29217], [29218, 29223], [29224, 29229], [29230, 29237], [29238, 29240], [29241, 29244], [29245, 29251], [29252, 29254], [29255, 29262], [29262, 29263]]}) 
answer: set([u'u.s.', u'join'])
['Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']
set([u'wilson', u'woodrow', u'.'])

Did the U.S. join the League of Nations?
Validity= False
Question Type = NA
Answer Type = NA
Answer = No
Difficulty = easy
Article_Title = Woodrow_Wilson
Dataset = ../Question_Answer_Dataset_v1.2/S08/data/set3/a8.txt

Yes
=============== 87 failed, 298 passed, 2 error in 45.91 seconds ================
